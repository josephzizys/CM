/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2009-07-22 08:17
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: cm
*/

#include "chicken.h"


#include "juce.h"
#include "CmSupport.h"


static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[1083];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,115,104,32,97,48,32,98,49,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,16),40,108,111,103,97,110,100,32,46,32,97,114,103,115,50,41};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,16),40,108,111,103,110,111,116,32,46,32,97,114,103,115,51,41};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,16),40,108,111,103,120,111,114,32,46,32,97,114,103,115,52,41};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,16),40,108,111,103,105,111,114,32,46,32,97,114,103,115,53,41};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,15),40,108,111,103,116,101,115,116,32,97,54,32,98,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,27),40,108,105,115,116,45,115,101,116,33,32,108,105,115,56,32,112,111,115,57,32,118,97,108,49,48,41,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,23),40,109,97,107,101,45,101,113,117,97,108,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,20),40,109,97,107,101,45,101,113,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,22),40,104,97,115,104,45,114,101,102,32,116,97,98,49,50,32,118,97,108,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,24),40,114,101,97,100,45,102,114,111,109,45,115,116,114,105,110,103,32,115,116,114,49,52,41};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,112,114,105,110,116,95,111,117,116,112,117,116,32,97,53,52,53,56,32,97,53,51,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,49),40,102,102,105,95,114,101,115,99,97,108,101,32,97,56,52,56,55,32,97,56,51,56,56,32,97,56,50,56,57,32,97,56,49,57,48,32,97,56,48,57,49,32,97,55,57,57,50,41,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,102,108,111,97,116,95,116,111,95,102,105,120,110,117,109,32,97,49,48,56,49,49,49,41,0,0,0,0,0};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,113,117,97,110,116,105,122,101,32,97,49,49,51,49,49,54,32,97,49,49,50,49,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,47),40,102,102,105,95,114,104,121,116,104,109,95,116,111,95,115,101,99,111,110,100,115,32,97,49,50,49,49,50,52,32,97,49,50,48,49,50,53,32,97,49,49,57,49,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,99,101,110,116,115,95,116,111,95,115,99,97,108,101,114,32,97,49,50,56,49,51,49,41,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,115,99,97,108,101,114,95,116,111,95,99,101,110,116,115,32,97,49,51,51,49,51,54,41,0,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,45),40,102,102,105,95,101,120,112,108,115,101,103,32,97,49,52,54,49,52,57,32,97,49,52,53,49,53,48,32,97,49,52,52,49,53,49,32,97,49,52,51,49,53,50,41,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,44),40,102,102,105,95,103,101,111,115,101,103,32,97,49,53,55,49,54,48,32,97,49,53,54,49,54,49,32,97,49,53,53,49,54,50,32,97,49,53,52,49,54,51,41,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,107,101,121,110,117,109,95,116,111,95,104,101,114,116,122,32,97,49,54,53,49,54,56,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,21),40,102,102,105,95,114,97,110,115,101,101,100,32,97,49,55,57,49,56,50,41,0,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,105,110,116,32,97,49,56,51,49,56,54,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,102,108,111,97,116,32,97,49,56,55,49,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,12),40,102,102,105,95,114,97,110,108,111,119,41,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,104,105,103,104,41,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,114,97,110,103,97,117,115,115,32,97,50,49,53,50,49,56,32,97,50,49,52,50,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,101,120,112,32,97,50,50,49,50,50,52,41,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,103,97,109,109,97,32,97,50,51,51,50,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,114,97,110,112,111,105,115,115,111,110,32,97,50,52,49,50,52,52,41};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,112,105,110,107,41,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,14),40,102,102,105,95,114,97,110,98,114,111,119,110,41,0,0,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,42),40,102,102,105,95,115,99,104,101,100,95,115,112,114,111,117,116,32,97,50,55,51,50,55,54,32,97,50,55,50,50,55,55,32,97,50,55,49,50,55,56,41,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,115,99,104,101,100,95,115,116,111,112,32,97,50,56,53,50,56,56,41};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,115,99,104,101,100,95,115,99,111,114,101,95,109,111,100,101,95,112,41};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,115,99,104,101,100,95,115,99,111,114,101,95,116,105,109,101,41,0,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,27),40,102,102,105,95,112,97,116,104,110,97,109,101,95,116,121,112,101,32,97,51,50,57,51,51,51,41,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,58),40,102,102,105,95,109,112,95,115,101,110,100,95,100,97,116,97,32,97,52,49,56,52,50,49,32,97,52,49,55,52,50,50,32,97,52,49,54,52,50,51,32,97,52,49,53,52,50,52,32,97,52,49,52,52,50,53,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,6),40,113,117,105,116,41,0,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,20),40,112,114,105,110,116,45,101,114,114,111,114,32,109,115,103,54,54,57,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,30),40,112,114,105,110,116,45,111,117,116,112,117,116,32,109,115,103,54,55,48,32,46,32,113,117,111,54,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,14),40,115,104,101,108,108,32,115,116,114,54,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,54,55,54,41,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,54,55,55,41,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,54,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,54,55,57,41,0,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,54,56,48,41,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,54,56,49,41,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,54,56,50,41,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,54,56,51,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,54,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,54,56,53,41,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,12),40,100,111,55,48,51,32,116,55,48,53,41,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,12),40,100,111,54,57,56,32,97,55,48,48,41,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,18),40,99,111,110,99,97,116,32,46,32,97,114,103,115,54,57,53,41,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,55,50,56,32,98,55,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,55,51,48,32,98,55,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,55,50,52,32,46,32,111,98,106,55,50,53,41,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,25),40,100,111,55,51,55,32,116,97,105,108,55,51,57,32,105,55,52,48,32,102,55,52,49,41,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,55,51,53,32,108,55,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,55,54,55,32,112,114,111,112,55,54,56,32,46,32,100,101,102,55,54,57,41,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,32),40,100,111,55,56,51,32,105,55,56,53,32,108,55,56,54,32,101,55,56,55,32,102,55,56,56,32,114,55,56,57,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,53),40,37,109,97,112,115,101,113,32,102,117,110,99,55,55,51,32,115,101,113,55,55,52,32,101,108,101,109,101,110,116,115,63,55,55,53,32,115,116,97,114,116,55,55,54,32,101,110,100,55,55,55,41,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,13),40,102,95,57,48,52,57,32,97,56,48,50,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,13),40,102,95,57,48,53,56,32,97,56,48,51,41,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,28),40,102,105,110,100,32,120,55,57,57,32,115,101,113,56,48,48,32,46,32,97,114,103,115,56,48,49,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,13),40,102,95,57,48,57,51,32,97,56,48,55,41,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,13),40,102,95,57,49,48,50,32,97,56,48,56,41,0,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,32),40,112,111,115,105,116,105,111,110,32,120,56,48,52,32,115,101,113,56,48,53,32,46,32,97,114,103,115,56,48,54,41};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,12),40,97,57,51,51,52,32,105,56,52,49,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,12),40,97,57,51,53,54,32,105,56,52,48,41,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,12),40,97,57,51,54,54,32,105,56,51,57,41,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,57,51,55,50,32,118,56,51,53,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,40),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,56,48,57,32,115,112,101,99,56,49,48,32,98,111,100,121,56,49,49,41};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,30),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,56,56,55,32,120,56,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,56,56,57,41,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,56,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,56,57,53,41,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,56,57,56,41,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,57,48,49,41,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,29),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,57,48,50,32,120,57,48,51,41,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,57,48,52,41,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,57,48,55,41,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,57,49,48,41,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,12),40,100,111,57,49,53,32,97,57,49,55,41,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,26),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,57,49,51,41,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,12),40,100,111,57,50,55,32,108,57,50,57,41,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,38),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,57,50,53,32,97,99,99,101,115,115,111,114,57,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,37),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,57,50,50,32,99,108,97,117,115,101,115,57,50,51,41,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,111,112,63,32,120,57,51,51,32,111,112,115,57,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,57,51,53,41,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,28),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,57,51,54,32,118,97,108,57,51,55,41,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,15),40,100,111,57,53,57,32,116,97,105,108,57,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,15),40,100,111,57,53,52,32,116,97,105,108,57,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,17),40,100,111,57,52,52,32,104,57,52,54,32,108,57,52,55,41,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,36),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,57,51,56,32,102,111,114,109,115,57,51,57,32,97,114,103,115,57,52,48,41,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,38),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,57,55,51,32,99,108,97,117,115,101,115,57,55,52,32,111,112,115,57,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,100,111,57,57,51,32,110,101,120,116,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,48),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,57,55,57,32,99,108,97,117,115,101,115,57,56,48,32,111,112,115,57,56,49,41};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,8),40,97,49,48,52,48,57,41};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,30),40,97,49,48,52,50,55,32,99,108,97,117,115,101,49,48,55,52,32,105,103,110,111,114,101,49,48,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,49,48,55,49,32,99,108,97,117,115,101,115,49,48,55,50,32,111,112,115,49,48,55,51,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,17),40,100,111,49,48,57,50,32,110,101,120,116,49,48,57,52,41,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,48,55,55,32,99,108,97,117,115,101,115,49,48,55,56,32,111,112,115,49,48,55,57,41};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,17),40,100,111,49,49,53,57,32,110,101,120,116,49,49,54,49,41,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,49,52,57,32,99,108,97,117,115,101,115,49,49,53,48,32,111,112,115,49,49,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,26),40,100,111,49,49,57,55,32,110,101,101,100,49,49,57,57,32,110,101,120,116,49,50,48,48,41,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,49,49,56,55,32,99,108,97,117,115,101,115,49,49,56,56,32,111,112,115,49,49,56,57,41,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,8),40,100,111,49,50,52,49,41};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,49,50,51,50,32,99,108,97,117,115,101,115,49,50,51,51,32,111,112,115,49,50,51,52,41};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,49,50,53,49,32,99,108,97,117,115,101,115,49,50,53,50,32,111,112,115,49,50,53,51,41,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,49,50,54,53,32,99,108,97,117,115,101,115,49,50,54,54,32,111,112,115,49,50,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,49,51,51,50,32,116,121,112,101,49,51,51,51,32,97,99,99,49,51,51,52,32,104,101,97,100,49,51,51,53,41,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,49,51,51,54,41};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,49,51,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,14),40,100,111,49,50,56,52,32,97,49,50,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,14),40,100,111,49,50,57,50,32,99,49,50,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,49,51,49,49,32,99,108,97,117,115,101,115,49,51,49,50,32,111,112,115,49,51,49,51,41,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,49,52,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,49,52,49,51,32,99,108,97,117,115,101,115,49,52,49,52,32,111,112,115,49,52,49,53,41,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,49,52,51,52,32,99,108,97,117,115,101,115,49,52,51,53,32,111,112,115,49,52,51,54,41,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,49,52,53,48,32,99,108,97,117,115,101,115,49,52,53,49,32,111,112,115,49,52,53,50,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,8),40,97,49,50,51,48,48,41};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,20),40,97,49,50,51,49,51,32,97,49,52,55,55,32,98,49,52,55,56,41,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,38),40,100,111,49,52,55,48,32,111,112,49,52,55,50,32,99,108,97,117,115,101,49,52,55,51,32,114,101,109,97,105,110,115,49,52,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,49,52,54,52,32,99,108,97,117,115,101,115,49,52,54,53,32,111,112,115,49,52,54,54,41,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,8),40,97,49,50,52,54,52,41};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,20),40,97,49,50,52,55,56,32,97,49,53,48,54,32,98,49,53,48,55,41,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,8),40,97,49,50,53,52,50,41};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,20),40,97,49,50,53,52,56,32,97,49,53,48,51,32,98,49,53,48,52,41,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,49,52,57,48,32,99,108,97,117,115,101,115,49,52,57,49,32,111,112,115,49,52,57,50,41,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,49,53,51,51,32,116,121,112,101,49,53,51,52,41,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,8),40,97,49,50,54,57,48,41};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,20),40,97,49,50,54,57,57,32,97,49,53,52,54,32,98,49,53,52,55,41,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,47),40,100,111,49,53,51,55,32,111,112,49,53,51,57,32,99,108,97,117,115,101,49,53,52,48,32,114,101,109,97,105,110,115,49,53,52,49,32,98,111,100,121,49,53,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,49,53,53,57,32,102,111,114,109,115,49,53,54,48,32,111,112,115,49,53,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,54,50,57,32,108,101,110,103,116,104,49,54,51,48,32,115,116,114,101,97,109,49,54,51,49,32,100,101,102,97,117,108,116,49,54,51,50,32,111,109,105,116,49,54,51,51,32,114,101,112,115,49,54,51,52,41,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,54,51,54,32,118,97,108,49,54,51,55,41,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,54,51,57,41,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,54,52,53,41,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,54,53,49,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,54,54,48,32,118,97,108,49,54,54,49,41};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,54,54,51,41,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,54,54,57,41,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,54,57,52,41};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,54,57,56,41,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,55,48,49,32,118,97,108,49,55,48,50,41,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,55,48,52,41,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,55,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,55,49,51,32,118,97,108,49,55,49,52,41,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,55,49,54,41,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,55,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,55,50,53,32,118,97,108,49,55,50,54,41,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,15),40,102,95,49,51,51,52,54,32,120,49,55,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,55,51,49,32,118,97,108,49,55,51,50,41,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,55,51,52,41,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,55,55,51,32,118,97,108,49,55,55,52,41,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,55,55,54,41,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,14),40,97,49,51,55,50,56,32,120,49,56,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,55,57,53,32,100,97,116,97,49,55,57,54,32,102,111,114,49,55,57,55,32,114,101,112,49,55,57,56,32,102,108,97,103,115,49,55,57,57,32,108,101,110,49,56,48,48,32,100,112,101,114,49,56,48,49,32,103,101,116,114,49,56,48,50,32,109,97,112,114,49,56,48,51,41,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,56,51,48,41,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,56,51,49,41,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,20),40,100,111,49,56,51,54,32,105,49,56,51,56,32,101,49,56,51,57,41,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,52,51,32,110,49,56,52,53,32,101,49,56,52,54,32,102,49,56,52,55,41,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,56,51,50,32,46,32,97,114,103,115,49,56,51,51,41,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,55,49,41};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,54,55,32,100,121,110,63,49,56,54,57,32,115,116,111,112,49,56,55,48,41,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,56,53,51,41};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,56,57,49,41,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,56,57,50,32,111,98,106,49,56,57,51,41,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,14),40,97,49,52,50,57,53,32,120,49,57,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,56,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,23),40,97,49,52,51,56,57,32,102,110,49,57,53,52,32,111,98,106,49,57,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,57,49,49,32,46,32,97,114,103,115,49,57,49,50,41};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,57,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,57,56,49,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,57,56,52,32,118,97,108,49,57,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,23),40,97,49,52,56,49,57,32,102,110,50,48,56,50,32,111,98,106,50,48,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,50,48,49,48,32,46,32,97,114,103,115,50,48,49,49,41,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,50,48,57,49,41,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,23),40,97,49,53,52,56,54,32,102,110,50,49,53,51,32,111,98,106,50,49,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,49,49,48,32,46,32,97,114,103,115,50,49,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,49,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,23),40,97,49,53,55,55,51,32,102,110,50,50,48,56,32,111,98,106,50,50,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,49,54,53,32,46,32,97,114,103,115,50,49,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,26),40,100,111,50,50,49,57,32,105,50,50,50,49,32,106,50,50,50,50,32,118,50,50,50,51,41,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,50,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,23),40,97,49,54,49,49,56,32,102,110,50,51,48,51,32,111,98,106,50,51,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,50,51,49,32,46,32,97,114,103,115,50,50,51,50,41,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,14),40,100,111,50,51,49,57,32,105,50,51,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,51,49,52,32,115,116,97,114,116,50,51,49,53,32,115,116,101,112,50,51,49,54,32,119,105,100,116,104,50,51,49,55,32,101,110,100,50,51,49,56,41,0,0,0,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,51,49,50,41,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,51,52,54,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,51,52,57,32,118,97,108,50,51,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,51,53,50,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,51,53,56,41,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,51,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,51,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,51,55,51,32,118,97,108,50,51,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,51,55,54,41,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,14),40,97,49,55,48,48,51,32,105,50,52,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,23),40,97,49,54,57,57,55,32,102,110,50,52,53,54,32,111,98,106,50,52,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,17),40,97,49,55,50,51,52,32,105,116,101,109,50,52,49,49,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,52,54,57,41,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,52,48,49,32,46,32,97,114,103,115,50,52,48,50,41,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,37),40,100,111,50,53,53,54,32,116,97,105,108,50,53,53,56,32,105,110,100,101,120,50,53,53,57,32,116,111,116,97,108,50,53,54,48,41,0,0,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,53,48,32,116,97,105,108,50,53,53,50,41,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,53,52,54,32,102,105,120,63,50,53,52,55,41,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,27),40,100,111,50,53,55,56,32,116,97,105,108,50,53,56,48,32,105,110,100,101,120,50,53,56,49,41,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,53,55,54,32,114,50,53,55,55,41,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,56,55,32,116,97,105,108,50,53,56,57,41,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,56,51,32,105,116,101,109,50,53,56,53,41,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,53,54,54,41,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,23),40,97,49,56,51,48,53,32,102,110,50,55,49,53,32,111,98,106,50,55,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,14),40,97,49,56,48,53,57,32,115,50,54,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,8),40,100,111,50,54,48,57,41};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,41),40,100,111,50,54,51,49,32,116,97,105,108,50,54,51,51,32,111,114,100,101,114,50,54,51,52,32,108,105,115,50,54,51,53,32,112,50,54,51,54,41,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,54,52,51,32,46,32,97,114,103,115,50,54,52,52,41,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,52,48,32,116,97,105,108,50,55,52,50,41,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,33),40,100,111,50,55,51,48,32,116,97,105,108,50,55,51,50,32,111,117,116,50,55,51,51,32,115,117,109,50,55,51,52,41,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,55,50,56,32,111,117,116,112,117,116,115,50,55,50,57,41,0,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,55,48,32,108,97,115,116,50,55,55,50,41,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,26),40,100,111,50,55,52,54,32,105,50,55,52,56,32,106,50,55,52,57,32,102,50,55,53,48,41,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,35),40,100,111,50,55,54,49,32,116,97,105,108,50,55,54,51,32,112,97,115,116,50,55,54,52,32,105,116,101,109,50,55,54,53,41,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,55,50,53,41};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,55,57,48,41};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,14),40,97,49,57,49,55,55,32,110,50,56,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,23),40,97,49,57,49,55,49,32,102,110,50,56,53,52,32,111,98,106,50,56,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,28),40,97,49,57,52,50,51,32,105,116,101,109,50,56,54,54,32,46,32,97,114,103,115,50,56,54,55,41,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,56,54,53,41,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,56,49,49,32,46,32,97,114,103,115,50,56,49,50,41};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,50,48,32,116,97,105,108,50,57,50,50,41,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,57,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,14),40,97,49,57,56,53,48,32,120,50,57,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,25),40,100,111,55,52,56,32,116,97,105,108,55,53,48,32,120,55,53,49,32,102,55,53,50,41,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,57,56,51,32,110,101,120,116,50,57,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,14),40,97,49,57,56,57,56,32,122,50,57,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,14),40,97,49,57,57,48,56,32,122,50,57,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,57,56,56,32,121,50,57,56,57,32,108,50,57,57,48,41,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,16),40,97,50,48,48,48,54,32,114,111,119,51,49,50,48,41};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,57,51,32,105,51,48,57,53,32,109,51,48,57,54,41,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,56,52,32,108,51,48,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,55,55,32,105,51,48,55,57,32,109,51,48,56,48,41,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,55,49,32,105,51,48,55,51,32,109,51,48,55,52,41,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,57,55,32,120,50,57,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,54,53,32,116,97,105,108,51,48,54,55,41,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,53,53,32,105,51,48,53,55,32,109,51,48,53,56,41,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,53,48,32,108,51,48,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,52,53,32,105,51,48,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,20),40,97,50,48,51,50,55,32,120,51,48,52,49,32,121,51,48,52,50,41,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,51,50,32,101,51,48,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,50,54,32,101,51,48,50,56,32,115,51,48,50,57,41,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,25),40,100,111,51,48,49,56,32,116,97,105,108,51,48,50,48,32,108,101,110,51,48,50,49,41,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,20),40,97,50,48,52,55,54,32,120,51,48,49,54,32,121,51,48,49,55,41,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,29),40,100,111,51,48,48,53,32,112,114,101,118,51,48,48,55,32,106,51,48,48,56,32,120,51,48,48,57,41,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,48,50,32,105,51,48,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,57,50,56,32,46,32,97,114,103,115,50,57,50,57,41,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,49,52,32,122,51,49,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,51),40,114,101,115,99,97,108,101,32,120,51,49,54,52,32,120,49,51,49,54,53,32,120,50,51,49,54,54,32,121,49,51,49,54,55,32,121,50,51,49,54,56,32,46,32,98,51,49,54,57,41,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,53,52,32,122,51,49,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,56,48,32,122,51,49,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,48),40,100,105,115,99,114,101,116,101,32,120,51,49,55,49,32,120,49,51,49,55,50,32,120,50,51,49,55,51,32,105,49,51,49,55,52,32,46,32,97,114,103,115,51,49,55,53,41};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,11),40,105,110,116,32,102,51,49,56,53,41,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,14),40,97,50,48,57,55,52,32,120,51,49,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,13),40,102,108,111,97,116,32,110,51,49,56,54,41,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,13),40,108,111,103,49,48,32,110,51,49,56,56,41,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,12),40,108,111,103,50,32,110,51,49,56,57,41,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,14),40,97,50,49,48,51,57,32,120,51,49,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,17),40,112,108,117,115,32,46,32,97,114,103,115,51,49,57,48,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,14),40,97,50,49,49,48,56,32,120,51,49,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,18),40,116,105,109,101,115,32,46,32,97,114,103,115,51,49,57,50,41,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,50,49,49,54,51,32,120,51,49,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,26),40,109,105,110,117,115,32,97,114,103,51,49,57,52,32,46,32,97,114,103,115,51,49,57,53,41,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,48,54,32,120,51,49,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,27),40,100,105,118,105,100,101,32,97,114,103,51,49,57,55,32,46,32,97,114,103,115,51,49,57,56,41,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,51,49,32,110,51,50,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,28),40,113,117,97,110,116,105,122,101,32,110,117,109,51,50,48,48,32,115,116,101,112,115,51,50,48,49,41,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,53,53,32,118,51,50,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,31),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,51,50,48,51,32,112,108,97,99,101,115,51,50,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,14),40,97,50,49,51,48,49,32,120,51,50,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,38),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,50,48,55,32,46,32,97,114,103,115,51,50,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,22),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,51,50,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,51,50,53,51,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,54,50,32,116,97,105,108,51,50,54,52,41,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,35),40,105,110,116,101,114,112,49,32,120,51,50,53,52,32,99,111,111,114,100,115,51,50,53,53,32,98,97,115,101,51,50,53,54,41,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,25),40,105,110,116,101,114,112,32,120,51,50,55,50,32,46,32,97,114,103,115,51,50,55,51,41,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,44),40,116,101,110,100,101,110,99,121,32,120,51,50,55,53,32,108,111,119,51,50,55,54,32,104,105,103,104,51,50,55,55,32,46,32,97,114,103,115,51,50,55,56,41,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,37),40,102,105,116,49,32,110,117,109,51,50,57,49,32,108,98,51,50,57,50,32,117,98,51,50,57,51,32,109,111,100,101,51,50,57,52,41,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,14),40,97,50,49,56,55,49,32,110,51,50,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,38),40,102,105,116,32,110,117,109,51,50,56,52,32,108,98,51,50,56,53,32,117,98,51,50,56,54,32,46,32,109,111,100,101,51,50,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,32),40,100,111,51,51,49,49,32,105,51,51,49,51,32,107,51,51,49,52,32,108,51,51,49,53,32,116,51,51,49,54,41};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,37),40,115,99,97,108,101,32,108,101,110,51,51,48,51,32,107,101,121,110,117,109,51,51,48,52,32,46,32,97,114,103,115,51,51,48,53,41,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,51,52,32,105,51,51,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,53,48,32,116,97,105,108,51,51,53,50,41,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,20),40,100,111,51,51,52,54,32,105,51,51,52,56,32,110,51,51,52,57,41,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,33),40,115,101,103,115,32,110,117,109,51,51,50,51,32,115,117,109,51,51,50,52,32,46,32,97,114,103,115,51,51,50,53,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,110,117,109,51,51,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,21),40,98,101,116,119,101,101,110,32,97,51,51,54,52,32,98,51,51,54,53,41,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,17),40,112,105,99,107,32,46,32,97,114,103,115,51,51,54,54,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,33),40,118,97,114,121,49,32,118,97,108,51,52,49,52,32,118,97,114,105,51,52,49,53,32,109,111,100,101,51,52,49,54,41,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,14),40,97,50,50,54,48,55,32,118,51,52,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,34),40,118,97,114,121,32,118,97,108,51,52,49,48,32,118,97,114,105,51,52,49,49,32,46,32,109,111,100,101,51,52,49,50,41,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,26),40,100,111,51,52,50,55,32,105,51,52,50,57,32,106,51,52,51,48,32,118,51,52,51,49,41,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,16),40,115,104,117,102,102,108,101,33,32,108,51,52,50,53,41};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,20),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,51,52,51,54,41,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,20),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,52,51,55,41,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,19),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,52,56,48,41,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,52,56,49,41,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,23),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,52,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,52,56,51,41,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,44),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,51,53,50,53,32,111,99,116,51,53,50,54,32,101,114,114,51,53,50,55,41,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,37),40,110,111,116,101,45,97,117,120,32,102,114,101,113,51,53,51,57,32,100,111,99,116,51,53,52,48,32,101,114,114,63,51,53,52,49,41,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,52,52,32,116,97,105,108,51,53,52,54,32,100,101,102,111,51,53,52,55,32,116,104,105,115,51,53,52,56,32,114,101,115,108,51,53,52,57,41,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,15),40,110,111,116,101,32,102,114,101,113,51,53,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,53,56,32,116,97,105,108,51,53,54,48,32,100,101,102,111,51,53,54,49,32,116,104,105,115,51,53,54,50,32,114,101,115,108,51,53,54,51,41,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,14),40,107,101,121,32,102,114,101,113,51,53,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,55,52,32,116,97,105,108,51,53,55,54,32,100,101,102,111,51,53,55,55,32,116,104,105,115,51,53,55,56,32,114,101,115,108,51,53,55,57,41,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,13),40,104,122,32,102,114,101,113,51,53,55,50,41,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,10),40,112,99,32,120,51,53,56,56,41,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,26),40,100,111,51,53,57,52,32,116,97,105,108,51,53,57,54,32,108,97,115,116,51,53,57,55,41,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,18),40,105,110,118,107,101,121,115,32,107,101,121,115,51,53,57,49,41,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,14),40,97,50,51,54,57,56,32,122,51,54,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,14),40,105,110,118,101,114,116,32,120,51,53,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,26),40,100,111,51,54,48,57,32,116,97,105,108,51,54,49,49,32,108,97,115,116,51,54,49,50,41,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,30),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,51,54,48,54,32,111,114,105,103,51,54,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,14),40,97,50,51,56,53,49,32,122,51,54,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,23),40,116,114,97,110,115,112,111,115,101,32,120,51,54,48,50,32,121,51,54,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,20),40,97,50,51,57,51,55,32,97,51,54,50,49,32,98,51,54,50,50,41,0,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,20),40,97,50,51,57,57,53,32,97,51,54,50,51,32,98,51,54,50,52,41,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,51,54,49,57,32,46,32,109,111,100,101,51,54,50,48,41,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,31),40,114,115,121,109,32,112,114,101,51,54,51,48,32,114,97,119,51,54,51,49,32,112,111,115,116,51,54,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,25),40,97,100,100,114,121,116,104,32,115,116,114,51,54,51,51,32,118,97,108,51,54,51,52,41,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,22),40,100,111,51,54,55,50,32,111,112,115,51,54,55,52,32,105,51,54,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,41),40,110,101,120,116,45,116,111,107,101,110,45,115,116,97,114,116,32,115,116,114,51,54,54,57,32,108,98,51,54,55,48,32,108,101,110,51,54,55,49,41,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,45),40,100,111,51,54,56,50,32,110,117,109,51,54,56,52,32,118,97,108,51,54,56,53,32,116,111,107,51,54,56,54,32,111,112,51,54,56,55,32,105,51,54,56,56,41,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,14),40,97,50,52,49,53,49,32,120,51,54,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,27),40,114,104,121,116,104,109,32,118,97,108,51,54,53,52,32,46,32,97,114,103,115,51,54,53,53,41,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,26),40,105,110,45,116,101,109,112,111,32,110,51,55,48,56,32,116,101,109,112,111,51,55,48,57,41,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,115,116,114,51,55,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,24),40,112,97,116,104,110,97,109,101,45,116,121,112,101,32,112,97,116,104,51,56,52,54,41};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,24),40,102,117,108,108,45,112,97,116,104,110,97,109,101,32,112,97,116,104,51,56,53,48,41};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,52),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,51,57,50,54,32,115,105,122,101,51,57,50,55,32,102,114,101,113,115,51,57,50,56,32,97,109,112,115,51,57,50,57,41,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,17),40,115,112,101,99,116,114,117,109,63,32,120,51,57,51,48,41,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,51,57,51,52,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,51,57,51,55,32,118,97,108,51,57,51,56,41,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,51,57,52,48,41,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,35),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,51,57,52,51,32,118,97,108,51,57,52,52,41,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,22),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,51,57,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,51,57,52,57,32,118,97,108,51,57,53,48,41,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,51,57,53,50,41,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,51,57,54,48,41,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,54,55,32,105,51,57,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,51,57,54,49,41,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,51,57,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,51,57,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,14),40,97,50,53,54,50,52,32,97,51,57,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,51,57,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,14),40,97,50,53,54,53,53,32,97,51,57,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,51,57,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,8),40,100,111,52,48,48,53,41};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,8),40,100,111,52,48,49,48,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,14),40,103,101,116,107,101,121,32,104,52,48,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,11),40,97,100,100,32,107,52,48,49,53,41,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,14),40,97,100,100,107,101,121,32,104,52,48,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,20),40,97,100,100,117,110,105,113,117,101,107,101,121,32,104,52,48,49,56,41,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,22),40,100,111,55,49,52,32,105,55,49,54,32,106,55,49,55,32,116,55,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,20),40,97,50,53,56,54,55,32,97,52,48,50,50,32,98,52,48,50,51,41,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,20),40,97,50,53,56,56,50,32,97,52,48,50,52,32,98,52,48,50,53,41,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,52,48,51,51,32,46,32,97,114,103,115,52,48,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,35),40,100,111,52,50,57,50,32,116,97,105,108,52,50,57,52,32,115,105,122,101,52,50,57,53,32,97,109,112,108,52,50,57,54,41,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,55,48,32,105,52,50,55,50,32,102,52,50,55,51,32,120,52,50,55,52,41,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,24),40,100,111,52,50,54,52,32,110,101,103,52,50,54,54,32,112,111,115,52,50,54,55,41};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,53,50,32,107,52,50,53,52,32,102,52,50,53,53,32,97,52,50,53,54,41,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,52,50,52,52,32,109,114,97,116,105,111,52,50,52,53,32,105,110,100,101,120,52,50,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,47),40,100,111,52,51,51,48,32,102,114,101,113,115,52,51,51,50,32,97,109,112,115,52,51,51,51,32,108,97,115,116,102,52,51,51,52,32,108,97,115,116,97,52,51,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,52,51,50,55,32,102,114,101,113,52,51,50,56,32,97,109,112,52,51,50,57,41,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,52,51,53,55,41};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,52,51,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,52,51,53,57,32,102,49,52,51,54,48,32,102,50,52,51,54,50,41,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,55,51,32,108,49,52,51,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,55,48,32,108,50,52,51,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,56,48,32,108,49,52,51,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,56,53,32,115,50,52,51,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,52,51,53,50,32,115,112,101,99,50,52,51,53,51,41,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,44),40,100,111,52,51,57,50,32,109,97,120,102,52,51,57,52,32,109,105,110,102,52,51,57,53,32,116,97,105,108,52,51,57,54,32,102,108,105,112,52,51,57,55,41,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,52,51,57,49,41,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,49,49,32,116,97,105,108,52,52,49,51,41,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,49,54,32,116,97,105,108,52,52,49,56,41,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,26),40,100,111,52,51,49,52,32,116,97,105,108,52,51,49,54,32,97,109,112,108,52,51,49,55,41,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,20),40,97,50,55,55,53,50,32,97,52,51,49,48,32,98,52,51,49,49,41,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,20),40,97,50,55,55,54,54,32,97,52,51,48,56,32,98,52,51,48,57,41,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,51,56,32,116,97,105,108,52,52,52,48,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,52,51,32,116,97,105,108,52,52,52,53,41,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,50,57,32,116,97,105,108,52,52,51,49,41,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,23),40,100,111,55,53,57,32,116,97,105,108,55,54,49,32,102,108,97,103,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,52,52,48,49,32,109,111,100,101,52,52,48,50,32,46,32,97,114,103,115,52,52,48,51,41};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,52,52,56,52,41,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,52,52,54,51,41,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,54,54,32,105,52,52,54,56,32,97,52,52,54,57,32,102,52,52,55,48,41,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,57,55,32,108,105,110,101,52,52,57,57,32,115,112,101,99,52,53,48,48,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,8),40,100,111,52,52,56,55,41};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,8),40,97,50,56,55,52,55,41};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,52,52,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,36),40,100,111,52,53,50,50,32,102,114,101,113,115,52,53,50,52,32,97,109,112,115,52,53,50,53,32,115,105,122,101,52,53,50,54,41,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,27),40,100,111,52,53,49,54,32,116,97,105,108,52,53,49,56,32,99,111,117,110,116,52,53,49,57,41,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,8),40,97,50,56,56,56,50,41};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,17),40,100,111,52,53,49,48,32,116,97,105,108,52,53,49,50,41,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,41),40,101,120,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,114,97,109,101,115,52,53,48,54,32,102,105,108,101,52,53,48,55,41,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,52,53,53,55,32,115,116,114,105,110,103,52,53,53,56,32,112,111,115,105,116,105,111,110,52,53,53,57,41,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,52,53,54,52,41,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,52,53,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,52,53,56,51,41,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,52,53,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,52,53,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,52,53,56,55,32,116,121,112,101,52,53,56,56,32,112,97,116,116,101,114,110,52,53,56,57,32,112,97,114,115,101,114,52,53,57,48,32,101,109,105,116,101,114,52,53,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,18),40,103,101,116,45,114,117,108,101,32,116,121,112,52,54,51,56,41,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,52,54,52,51,41,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,52,54,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,52,54,52,54,41,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,52,54,52,55,41,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,52,54,52,56,32,105,52,54,52,57,41,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,52,54,53,51,41,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,52,54,53,53,32,112,111,115,105,116,105,111,110,52,54,53,54,41,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,52,54,55,51,32,112,97,114,115,101,100,52,54,55,52,32,112,111,115,105,116,105,111,110,52,54,55,53,41,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,52,54,55,54,41,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,52,54,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,52,54,56,54,41,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,52,54,57,50,41,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,52,54,57,57,41,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,52,55,48,48,32,116,121,112,52,55,48,49,41,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,55,48,51,32,105,110,102,111,52,55,48,52,41,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,55,48,54,32,100,97,116,97,52,55,48,55,32,105,110,102,111,52,55,48,56,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,52,55,49,57,32,100,97,116,97,52,55,50,48,32,105,110,102,111,52,55,50,49,41,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,52,55,50,52,32,105,110,102,111,52,55,50,53,32,101,114,114,102,52,55,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,52,55,50,55,32,105,110,102,111,52,55,50,56,32,101,114,114,102,52,55,50,57,41,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,52,55,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,27),40,102,95,50,57,57,50,49,32,97,114,103,115,52,55,52,50,32,101,114,114,102,52,55,52,51,41,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,52,55,52,49,41,0,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,17),40,100,111,52,55,53,49,32,116,97,105,108,52,55,53,51,41,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,36),40,102,95,50,57,57,50,57,32,117,110,105,116,52,55,52,53,32,105,110,102,111,52,55,52,54,32,101,114,114,102,52,55,52,55,41,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,52,55,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,8),40,97,51,48,49,50,55,41};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,26),40,97,51,48,49,51,55,32,97,52,55,56,51,32,98,52,55,56,52,32,99,52,55,56,53,41,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,8),40,97,51,48,50,51,51,41};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,26),40,97,51,48,50,52,55,32,97,52,55,57,57,32,98,52,56,48,48,32,99,52,56,48,49,41,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,14),40,100,111,52,55,57,52,32,105,52,55,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,8),40,97,51,48,51,48,48,41};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,26),40,97,51,48,51,49,52,32,97,52,56,50,49,32,98,52,56,50,50,32,99,52,56,50,51,41,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,14),40,100,111,52,56,49,54,32,105,52,56,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,8),40,97,51,48,51,56,57,41};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,26),40,97,51,48,51,57,53,32,97,52,56,52,48,32,98,52,56,52,49,32,99,52,56,52,50,41,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,8),40,100,111,52,56,51,54,41};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,8),40,97,51,48,52,50,56,41};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,26),40,97,51,48,52,51,52,32,97,52,56,53,56,32,98,52,56,53,57,32,99,52,56,54,48,41,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,52,55,55,48,32,116,111,107,101,110,115,52,55,55,49,32,102,111,114,99,101,45,97,110,100,52,55,55,50,32,108,101,118,101,108,52,55,55,51,32,116,114,97,99,101,52,55,55,52,32,101,114,114,102,52,55,55,53,41,0,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,53,48,51,53,41,0,0,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,53,48,51,57,41,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,53,48,52,56,41,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,53,48,52,57,32,116,121,112,50,53,48,53,48,41,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,57,57,32,116,111,107,115,53,49,48,49,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,53,48,57,53,32,116,121,112,53,48,57,54,41,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,53,49,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,29),40,100,111,53,49,51,53,32,119,50,53,49,51,55,32,111,107,53,49,51,56,32,108,105,53,49,51,57,41,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,8),40,100,111,53,49,51,51,41};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,53,49,50,56,41,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,53,50,57,51,32,101,114,114,102,53,50,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,14),40,100,111,53,53,55,54,32,102,53,53,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,14),40,100,111,53,53,54,57,32,102,53,53,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,8),40,97,50,57,57,57,56,41};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,44),40,97,51,48,48,48,53,32,115,117,99,99,101,115,115,52,55,54,53,32,114,101,115,117,108,116,115,52,55,54,54,32,114,101,109,97,105,110,115,52,55,54,55,41,0,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,17),40,97,50,57,57,57,50,32,101,114,114,102,52,55,54,51,41,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,24),40,115,97,108,32,115,116,114,53,52,56,50,32,46,32,97,114,103,115,53,52,56,51,41};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,105,122,101,32,105,110,112,117,116,53,53,54,48,41,0,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,17),40,100,111,53,53,57,55,32,116,97,105,108,53,53,57,57,41,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,35),40,112,114,105,110,116,101,114,32,116,104,105,110,103,53,53,57,52,32,108,101,118,53,53,57,53,32,113,117,111,53,53,57,54,41,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,17),40,100,111,53,54,48,53,32,116,97,105,108,53,54,48,55,41,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,53,53,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,53,54,49,50,41,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,53,54,49,52,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,53,54,49,56,41,0,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,7),40,112,111,114,116,115,41,0,0,0,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,30),40,111,112,101,110,45,102,105,108,101,32,115,116,114,53,55,51,56,32,46,32,97,114,103,115,53,55,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,20),40,109,112,58,111,112,101,110,32,46,32,97,114,103,115,53,55,53,50,41,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,24),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,32,100,101,118,53,55,57,52,41};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,23),40,109,112,58,111,112,101,110,45,105,110,112,117,116,32,100,101,118,53,55,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,53,55,57,56,32,46,32,97,114,103,115,53,55,57,57,41,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,20),40,109,112,58,109,105,100,105,32,46,32,97,114,103,115,53,56,48,48,41,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,19),40,109,112,58,111,102,102,32,46,32,97,114,103,115,53,57,53,54,41,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,18),40,109,112,58,111,110,32,46,32,97,114,103,115,54,48,50,56,41,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,21),40,109,112,58,116,111,117,99,104,32,46,32,97,114,103,115,54,49,51,56,41,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,20),40,109,112,58,99,116,114,108,32,46,32,97,114,103,115,54,50,52,56,41,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,20),40,109,112,58,112,114,111,103,32,46,32,97,114,103,115,54,51,53,56,41,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,21),40,109,112,58,112,114,101,115,115,32,46,32,97,114,103,115,54,52,51,48,41,0,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,20),40,109,112,58,98,101,110,100,32,46,32,97,114,103,115,54,53,48,50,41,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,53,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,54,48,49,41,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,18),40,97,55,49,56,49,32,36,101,114,114,97,114,103,36,50,52,41,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,7),40,97,55,50,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,15),40,97,55,49,55,53,32,37,99,111,110,116,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,36),40,102,95,55,49,55,48,32,36,111,112,36,49,57,32,36,99,104,36,50,48,32,36,100,49,36,50,49,32,36,100,50,36,50,50,41,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,20),40,109,112,58,105,110,104,111,111,107,32,104,111,111,107,54,54,48,51,41,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,14),40,100,111,54,54,48,54,32,97,54,54,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,99,104,97,110,115,32,46,32,97,114,103,115,54,54,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,14),40,100,111,54,54,49,52,32,97,54,54,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,111,112,115,32,46,32,97,114,103,115,54,54,49,50,41,0,0,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,42),40,115,110,100,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,102,105,108,101,54,54,50,50,32,46,32,97,114,103,115,54,54,50,51,41,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,100,111,54,54,51,57,32,116,97,105,108,54,54,52,49,32,97,114,103,110,54,54,52,50,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,41),40,99,115,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,54,54,51,54,32,46,32,97,114,103,115,54,54,51,55,41,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,26),40,100,111,54,54,53,57,32,116,97,105,108,54,54,54,49,32,100,101,108,109,54,54,54,50,41,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,27),40,99,115,58,115,101,110,100,32,116,121,112,101,54,54,53,50,32,97,114,103,115,54,54,53,51,41,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,54,54,56,41,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,54,54,57,41,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,46),40,101,120,112,97,110,100,45,115,101,110,100,32,112,108,97,99,101,54,54,55,57,32,97,114,103,115,54,54,56,48,32,46,32,101,114,114,99,111,110,116,54,54,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,18),40,100,111,54,55,50,52,32,99,104,101,99,107,54,55,50,54,41,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,8),40,100,111,54,55,49,54,41};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,8),40,100,111,54,55,49,48,41};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,17),40,100,111,54,55,48,50,32,116,97,105,108,54,55,48,52,41,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,19),40,97,51,57,55,52,51,32,114,101,116,117,114,110,54,54,57,57,41,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,18),40,102,95,51,57,55,51,56,32,97,114,103,115,54,54,57,56,41,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,26),40,100,111,54,54,57,49,32,116,97,105,108,54,54,57,51,32,109,111,100,101,54,54,57,52,41,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,109,101,115,115,97,103,101,45,112,97,114,115,101,114,32,116,101,109,112,108,97,116,101,54,54,56,53,41,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,56,54,55,32,99,108,97,117,115,101,115,54,56,54,56,32,111,112,115,54,56,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,56,57,55,32,115,116,111,112,54,56,57,56,41,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,26),40,101,120,112,97,110,100,45,112,114,111,99,101,115,115,32,102,111,114,109,115,54,57,48,49,41,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,14),40,100,111,54,57,54,54,32,112,54,57,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,17),40,100,111,54,57,53,53,32,116,97,105,108,54,57,53,55,41,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,17),40,100,111,54,57,52,52,32,116,97,105,108,54,57,52,54,41,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,26),40,100,111,54,57,51,50,32,116,97,105,108,54,57,51,52,32,97,114,103,110,54,57,51,53,41,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,17),40,100,111,54,57,50,55,32,116,97,105,108,54,57,50,57,41,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,57,49,56,32,46,32,97,114,103,115,54,57,49,57,41,0,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,10),40,99,111,110,116,105,110,117,101,41,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,17),40,100,111,54,57,55,56,32,116,97,105,108,54,57,56,48,41,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,57,55,55,41,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,31),40,97,52,49,48,55,52,32,102,111,114,109,97,108,115,54,57,49,53,32,46,32,98,111,100,121,54,57,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,17),40,97,52,49,49,48,51,32,97,114,103,115,54,57,49,52,41,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,16),40,100,111,54,56,57,48,32,111,112,115,54,56,57,50,41};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,25),40,97,52,49,51,53,54,32,109,115,103,54,54,55,54,32,112,97,114,115,54,54,55,55,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,29),40,97,52,49,51,56,53,32,112,108,97,99,101,54,54,55,52,32,46,32,97,114,103,115,54,54,55,53,41,0,0,0,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,26),40,97,52,49,51,57,57,32,97,114,103,115,53,52,55,55,32,101,114,114,102,53,52,55,56,41,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,35),40,97,52,49,52,49,51,32,117,110,105,116,53,52,55,57,32,105,110,102,111,53,52,56,48,32,101,114,114,102,53,52,56,49,41,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,26),40,97,52,49,53,49,57,32,97,114,103,115,53,52,50,54,32,101,114,114,102,53,52,50,55,41,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,17),40,100,111,53,52,51,56,32,114,101,115,116,53,52,52,48,41,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,26),40,100,111,53,52,54,52,32,97,114,103,115,53,52,54,54,32,116,97,105,108,53,52,54,55,41,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,35),40,97,52,49,53,53,56,32,117,110,105,116,53,52,51,49,32,105,110,102,111,53,52,51,50,32,101,114,114,102,53,52,51,51,41,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,26),40,97,52,49,57,55,54,32,97,114,103,115,53,52,49,57,32,101,114,114,102,53,52,50,48,41,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,26),40,97,52,50,49,50,49,32,97,114,103,115,53,52,48,53,32,101,114,114,102,53,52,48,54,41,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,56,52,32,116,97,105,108,53,51,56,54,41,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,55,55,32,116,97,105,108,53,51,55,57,41,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,20),40,100,111,53,51,54,54,32,99,108,97,117,115,101,115,53,51,54,56,41,0,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,54,51,32,116,97,105,108,53,51,54,53,41,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,35),40,97,52,50,49,54,55,32,117,110,105,116,53,52,49,53,32,105,110,102,111,53,52,49,54,32,101,114,114,102,53,52,49,55,41,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,26),40,97,52,50,54,50,49,32,97,114,103,115,53,50,55,55,32,101,114,114,102,53,50,55,56,41,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,35),40,97,52,50,54,56,57,32,117,110,105,116,53,50,56,57,32,105,110,102,111,53,50,57,48,32,101,114,114,102,53,50,57,49,41,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,26),40,97,52,50,56,56,48,32,97,114,103,115,53,50,54,53,32,101,114,114,102,53,50,54,54,41,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,35),40,97,52,50,57,48,54,32,117,110,105,116,53,50,55,48,32,105,110,102,111,53,50,55,49,32,101,114,114,102,53,50,55,50,41,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,26),40,97,52,50,57,57,52,32,97,114,103,115,53,50,52,51,32,101,114,114,102,53,50,52,52,41,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,53,49,32,105,116,101,114,53,50,53,51,41,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,35),40,97,52,51,48,51,55,32,117,110,105,116,53,50,52,53,32,105,110,102,111,53,50,52,54,32,101,114,114,102,53,50,52,55,41,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,26),40,97,52,51,50,55,52,32,97,114,103,115,53,50,52,48,32,101,114,114,102,53,50,52,49,41,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,26),40,97,52,51,51,54,48,32,97,114,103,115,53,50,51,50,32,101,114,114,102,53,50,51,51,41,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,14),40,97,52,51,52,49,50,32,101,53,50,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,35),40,97,52,51,52,48,51,32,117,110,105,116,53,50,51,52,32,105,110,102,111,53,50,51,53,32,101,114,114,102,53,50,51,54,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,26),40,97,52,51,52,54,50,32,97,114,103,115,53,50,50,53,32,101,114,114,102,53,50,50,54,41,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,14),40,97,52,51,53,48,51,32,101,53,50,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,35),40,97,52,51,52,57,55,32,117,110,105,116,53,50,50,55,32,105,110,102,111,53,50,50,56,32,101,114,114,102,53,50,50,57,41,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,35),40,97,52,51,53,53,55,32,117,110,105,116,53,50,49,56,32,105,110,102,111,53,50,49,57,32,101,114,114,102,53,50,50,48,41,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,35),40,97,52,51,54,49,56,32,117,110,105,116,53,50,49,50,32,105,110,102,111,53,50,49,51,32,101,114,114,102,53,50,49,52,41,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,26),40,97,52,51,54,55,50,32,97,114,103,115,53,50,48,54,32,101,114,114,102,53,50,48,55,41,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,35),40,97,52,51,55,48,50,32,117,110,105,116,53,50,48,56,32,105,110,102,111,53,50,48,57,32,101,114,114,102,53,50,49,48,41,0,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,26),40,97,52,51,57,50,49,32,97,114,103,115,53,49,57,57,32,101,114,114,102,53,50,48,48,41,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,26),40,97,52,51,57,52,55,32,97,114,103,115,53,49,56,55,32,101,114,114,102,53,49,56,56,41,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,16),40,97,52,52,48,52,50,32,115,116,114,53,49,57,55,41};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,35),40,97,52,52,48,50,50,32,117,110,105,116,53,49,57,50,32,105,110,102,111,53,49,57,51,32,101,114,114,102,53,49,57,52,41,0,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,26),40,97,52,52,49,53,54,32,97,114,103,115,53,49,56,48,32,101,114,114,102,53,49,56,49,41,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,35),40,97,52,52,49,57,48,32,117,110,105,116,53,49,56,50,32,105,110,102,111,53,49,56,51,32,101,114,114,102,53,49,56,52,41,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,26),40,97,52,52,50,54,55,32,97,114,103,115,53,49,54,54,32,101,114,114,102,53,49,54,55,41,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,55,51,32,97,114,103,115,53,49,55,53,41,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,35),40,97,52,52,50,56,57,32,117,110,105,116,53,49,54,56,32,105,110,102,111,53,49,54,57,32,101,114,114,102,53,49,55,48,41,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,26),40,97,52,52,52,50,49,32,97,114,103,115,53,49,53,57,32,101,114,114,102,53,49,54,48,41,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,35),40,97,52,52,52,52,55,32,117,110,105,116,53,49,54,49,32,105,110,102,111,53,49,54,50,32,101,114,114,102,53,49,54,51,41,0,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,26),40,97,52,52,53,53,55,32,97,114,103,115,53,49,53,53,32,101,114,114,102,53,49,53,54,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,26),40,97,52,52,55,49,51,32,97,114,103,115,53,49,49,56,32,101,114,114,102,53,49,49,57,41,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,35),40,97,52,52,55,51,49,32,117,110,105,116,53,49,50,48,32,105,110,102,111,53,49,50,49,32,101,114,114,102,53,49,50,50,41,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,97,52,52,55,56,52,32,97,114,103,115,53,49,49,50,32,101,114,114,102,53,49,49,51,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,26),40,97,52,52,57,51,54,32,97,114,103,115,53,49,48,57,32,101,114,114,102,53,49,49,48,41,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,26),40,97,52,53,48,55,53,32,97,114,103,115,53,49,48,54,32,101,114,114,102,53,49,48,55,41,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,52,53,49,57,53,32,97,114,103,115,53,48,56,53,32,101,114,114,102,53,48,56,54,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,35),40,97,52,53,50,50,54,32,117,110,105,116,53,48,56,56,32,105,110,102,111,53,48,56,57,32,101,114,114,102,53,48,57,48,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,26),40,97,52,53,51,49,56,32,97,114,103,115,53,48,55,57,32,101,114,114,102,53,48,56,48,41,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,35),40,97,52,53,51,51,54,32,117,110,105,116,53,48,56,49,32,105,110,102,111,53,48,56,50,32,101,114,114,102,53,48,56,51,41,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,17),40,100,111,52,55,49,51,32,100,97,116,97,52,55,49,53,41,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,35),40,97,52,53,52,49,48,32,117,110,105,116,53,48,54,56,32,105,110,102,111,53,48,54,57,32,101,114,114,102,53,48,55,48,41,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,26),40,97,52,53,53,49,48,32,97,114,103,115,53,48,53,54,32,101,114,114,102,53,48,53,55,41,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,35),40,97,52,53,53,50,48,32,117,110,105,116,53,48,53,56,32,105,110,102,111,53,48,53,57,32,101,114,114,102,53,48,54,48,41,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,52,54,51,52,41,0,0,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,35),40,97,52,53,54,57,54,32,116,121,112,52,54,51,48,32,112,97,116,52,54,51,49,32,46,32,97,114,103,115,52,54,51,50,41,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,17),40,97,52,53,55,57,57,32,101,120,112,114,51,55,49,48,41,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,32),40,100,111,51,54,52,48,32,105,51,54,52,50,32,120,51,54,52,51,32,100,51,54,52,52,32,114,51,54,52,53,41};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,14),40,97,52,53,56,48,53,32,101,51,54,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,84),40,100,111,51,52,57,51,32,100,51,52,57,53,32,107,51,52,57,54,32,112,51,52,57,55,32,107,60,51,52,57,56,32,107,62,51,52,57,57,32,102,51,53,48,48,32,102,62,51,53,48,49,32,102,60,51,53,48,50,32,111,51,53,48,51,32,120,51,53,48,52,32,110,51,53,48,53,32,101,51,53,48,54,41,0,0,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,16),40,100,111,51,52,56,55,32,107,101,121,51,52,56,57,41};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,17),40,97,52,54,49,50,56,32,97,114,103,115,49,53,55,50,41,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,15),40,97,52,54,50,55,48,32,115,121,109,56,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,15),40,97,52,54,50,55,51,32,115,121,109,56,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,22),40,97,52,54,51,48,50,32,118,97,108,56,56,49,32,115,121,109,56,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,16),40,97,52,54,51,49,54,32,97,114,103,115,56,56,48,41};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,26),40,97,52,54,51,50,50,32,115,112,101,99,56,52,53,32,46,32,98,111,100,121,56,52,54,41,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k8193 */
static C_word C_fcall stub568(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub568(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mpointer(&C_a,(void*)plot_data(t0,t1));
return C_r;}

/* from k8171 */
static C_word C_fcall stub561(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub561(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
plot_xml(t0);
return C_r;}

/* from k8157 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub555(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub555(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_fix((C_word)fms_isfiletype(t0));
return C_r;}

/* from k8143 */
static C_word C_fcall stub549(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub549(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_save(t0);
return C_r;}

/* from k8129 */
static C_word C_fcall stub543(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub543(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_xml(t0);
return C_r;}

/* from ffi_fms_run */
static C_word C_fcall stub540(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub540(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_run();
return C_r;}

/* from k8112 */
static C_word C_fcall stub535(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub535(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_load(t0);
return C_r;}

/* from ffi_fms_clear */
static C_word C_fcall stub532(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub532(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_clear();
return C_r;}

/* from ffi_fms_free */
static C_word C_fcall stub530(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub530(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_free();
return C_r;}

/* from k8092 */
static C_word C_fcall stub525(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub525(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_select(t0);
return C_r;}

/* from k8078 */
static C_word C_fcall stub519(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub519(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_new(t0);
return C_r;}

/* from ffi_fms_close_score */
static C_word C_fcall stub516(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub516(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_close_score();
return C_r;}

/* from k8054 */
static C_word C_fcall stub508(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub508(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
char * t1=(char * )C_string_or_null(C_a1);
fms_open_score(t0,t1);
return C_r;}

/* from k8036 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub498(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub498(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
char * t3=(char * )C_string_or_null(C_a3);
cs_send_score(t0,t1,t2,t3);
return C_r;}

/* from k8010 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub489(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub489(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cs_init_score(t0);
return C_r;}

/* from ffi_mp_clear_midi_input_hook */
static C_word C_fcall stub486(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub486(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_midi_input_hook();
return C_r;}

/* from ffi_mp_set_midi_input_hook */
static C_word C_fcall stub483(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub483(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
mp_set_midi_input_hook(t0);
return C_r;}

/* from ffi_mp_clear_seq */
static C_word C_fcall stub480(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub480(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_seq();
return C_r;}

/* from ffi_mp_plot_seq */
static C_word C_fcall stub478(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub478(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plot_seq();
return C_r;}

/* from ffi_mp_copy_seq */
static C_word C_fcall stub476(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub476(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copy_seq();
return C_r;}

/* from ffi_mp_save_seq */
static C_word C_fcall stub474(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub474(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_save_seq();
return C_r;}

/* from ffi_mp_play_seq */
static C_word C_fcall stub472(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub472(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_play_seq();
return C_r;}

/* from k7982 */
static C_word C_fcall stub454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5,C_word C_a6,C_word C_a7,C_word C_a8,C_word C_a9,C_word C_a10,C_word C_a11,C_word C_a12,C_word C_a13,C_word C_a14,C_word C_a15) C_regparm;
C_regparm static C_word C_fcall stub454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5,C_word C_a6,C_word C_a7,C_word C_a8,C_word C_a9,C_word C_a10,C_word C_a11,C_word C_a12,C_word C_a13,C_word C_a14,C_word C_a15){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
int t5=(int )C_unfix(C_a5);
int t6=(int )C_unfix(C_a6);
int t7=(int )C_unfix(C_a7);
int t8=(int )C_unfix(C_a8);
int t9=(int )C_unfix(C_a9);
int t10=(int )C_unfix(C_a10);
int t11=(int )C_unfix(C_a11);
int t12=(int )C_unfix(C_a12);
int t13=(int )C_unfix(C_a13);
int t14=(int )C_unfix(C_a14);
int t15=(int )C_unfix(C_a15);
mp_set_instruments(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15);
return C_r;}

/* from k7915 */
static C_word C_fcall stub435(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub435(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_tuning(t0);
return C_r;}

/* from k7908 */
static C_word C_fcall stub431(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub431(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_message_mask(t0);
return C_r;}

/* from k7901 */
static C_word C_fcall stub427(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub427(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_channel_mask(t0);
return C_r;}

/* from k7894 */
static C_word C_fcall stub419(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub419(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
mp_send_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k7871 */
static C_word C_fcall stub407(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub407(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
mp_send_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k7841 in mp:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub397(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub397(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
mp_set_output_file(t0);
return C_r;}

/* from k7834 */
static C_word C_fcall stub393(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub393(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_input(t0);
return C_r;}

/* from k7827 */
static C_word C_fcall stub389(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub389(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_output(t0);
return C_r;}

/* from k7820 */
static C_word C_fcall stub385(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub385(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_input(t0));
return C_r;}

/* from k7813 */
static C_word C_fcall stub381(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub381(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_output(t0));
return C_r;}

/* from ffi_port_info */
static C_word C_fcall stub377(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub377(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_port_info());
return C_r;}

/* from k7793 in tokenize in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub371(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub371(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)sal_tokenize(t0));
return C_r;}

/* from k7775 */
static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub363(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
int t1=(int )C_truep(C_a1);
C_r=C_mpointer(&C_a,(void*)cm_directory(t0,t1));
return C_r;}

/* from k7757 */
static C_word C_fcall stub356(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub356(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_directory_p(t0));
return C_r;}

/* from k7743 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub350(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub350(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_writable_p(t0));
return C_r;}

/* from k7729 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub344(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub344(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_exists_p(t0));
return C_r;}

/* from k7715 in full-pathname in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub337(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub337(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_full_pathname(t0));
return C_r;}

/* from k7697 in ffi_pathname_type in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub330(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub330(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_type(t0));
return C_r;}

/* from k7679 */
static C_word C_fcall stub323(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub323(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_name(t0));
return C_r;}

/* from k7661 */
static C_word C_fcall stub316(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub316(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_directory(t0));
return C_r;}

/* from k7643 in chdir in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub310(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub310(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_set_current_directory(t0));
return C_r;}

/* from ffi_current_directory */
static C_word C_fcall stub306(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_current_directory());
return C_r;}

/* from ffi_temp_directory */
static C_word C_fcall stub303(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub303(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_temp_directory());
return C_r;}

/* from ffi_user_home_directory */
static C_word C_fcall stub300(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub300(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_user_home_directory());
return C_r;}

/* from ffi_sched_score_time in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub297(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub297(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_sched_score_time());
return C_r;}

/* from k7615 */
static C_word C_fcall stub294(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub294(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_set_score_mode(t0);
return C_r;}

/* from ffi_sched_score_mode_p in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub291(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub291(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_score_mode_p());
return C_r;}

/* from ffi_sched_busy_p */
static C_word C_fcall stub289(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub289(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_busy_p());
return C_r;}

/* from k7602 */
static C_word C_fcall stub286(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub286(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_stop(t0);
return C_r;}

/* from ffi_sched_continue */
static C_word C_fcall stub283(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub283(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_continue();
return C_r;}

/* from ffi_sched_pause */
static C_word C_fcall stub281(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub281(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_pause();
return C_r;}

/* from ffi_sched_paused_p */
static C_word C_fcall stub279(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub279(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_paused_p());
return C_r;}

/* from k7586 */
static C_word C_fcall stub274(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub274(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
cm_sched_sprout(t0,t1,t2);
return C_r;}

/* from ffi_now */
static C_word C_fcall stub268(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub268(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_now());
return C_r;}

/* from k7572 */
static C_word C_fcall stub264(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub264(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_two(t0));
return C_r;}

/* from k7565 */
static C_word C_fcall stub259(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_ten(t0));
return C_r;}

/* from k7558 */
static C_word C_fcall stub253(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub253(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_bes_jn(t0,t1));
return C_r;}

/* from ffi_ranbrown in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub248(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranbrown());
return C_r;}

/* from ffi_ranpink in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub245(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub245(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranpink());
return C_r;}

/* from k7541 */
static C_word C_fcall stub242(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub242(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_ranpoisson(t0));
return C_r;}

/* from ffi_rancauchy in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub238(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub238(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_rancauchy());
return C_r;}

/* from k7531 */
static C_word C_fcall stub234(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub234(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_rangamma(t0));
return C_r;}

/* from k7524 */
static C_word C_fcall stub228(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub228(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranbeta(t0,t1));
return C_r;}

/* from k7513 */
static C_word C_fcall stub222(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub222(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranexp(t0));
return C_r;}

/* from k7506 */
static C_word C_fcall stub216(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub216(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_rangauss(t0,t1));
return C_r;}

/* from ffi_ranmiddle in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub211(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranmiddle());
return C_r;}

/* from ffi_ranhigh in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub208(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub208(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranhigh());
return C_r;}

/* from ffi_ranlow in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub205(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub205(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranlow());
return C_r;}

/* from k7486 */
static C_word C_fcall stub200(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub200(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranfloat2(t0,t1));
return C_r;}

/* from k7475 */
static C_word C_fcall stub194(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub194(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)cm_ranint2(t0,t1));
return C_r;}

/* from k7464 */
static C_word C_fcall stub188(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub188(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranfloat(t0));
return C_r;}

/* from k7457 */
static C_word C_fcall stub184(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub184(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)cm_ranint(t0));
return C_r;}

/* from ffi_ranseed in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub180(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub180(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
cm_ranseed(t0);
return C_r;}

/* from k7447 */
static C_word C_fcall stub175(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub175(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_hertz_to_keynum(t0));
return C_r;}

/* from k7440 */
static C_word C_fcall stub171(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub171(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_keynum_to_pc(t0));
return C_r;}

/* from k7433 */
static C_word C_fcall stub166(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub166(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_keynum_to_hertz(t0));
return C_r;}

/* from k7426 */
static C_word C_fcall stub158(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub158(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7407 */
static C_word C_fcall stub147(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub147(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_explseg(t0,t1,t2,t3));
return C_r;}

/* from k7388 */
static C_word C_fcall stub139(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub139(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_scaler_to_steps(t0));
return C_r;}

/* from k7381 */
static C_word C_fcall stub134(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub134(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_scaler_to_cents(t0));
return C_r;}

/* from k7374 */
static C_word C_fcall stub129(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub129(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_cents_to_scaler(t0));
return C_r;}

/* from k7367 */
static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
C_r=C_flonum(&C_a,cm_rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7352 */
static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_quantize(t0,t1));
return C_r;}

/* from k7341 */
static C_word C_fcall stub109(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub109(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_float_to_fixnum(t0));
return C_r;}

/* from k7334 */
static C_word C_fcall stub100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
double t5=(double )C_c_double(C_a5);
C_r=C_fix((C_word)cm_discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7307 */
static C_word C_fcall stub85(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub85(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
double t5=(double )C_c_double(C_a5);
C_r=C_flonum(&C_a,cm_rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7273 */
static C_word C_fcall stub74(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub74(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_play(t0);
return C_r;}

/* from k7259 in shell in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub68(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub68(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_shell(t0);
return C_r;}

/* from k7245 */
static C_word C_fcall stub62(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub62(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_values(t0);
return C_r;}

/* from k7231 in ffi_print_output in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub55(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub55(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
int t1=(int )C_truep(C_a1);
cm_print_output(t0,t1);
return C_r;}

/* from k7217 in print-error in k7207 in k7024 in k7021 in k7018 in k7015 */
static C_word C_fcall stub48(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub48(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_error(t0);
return C_r;}

/* from ffi_quit */
static C_word C_fcall stub45(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub45(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_quit();
return C_r;}

C_noret_decl(C_cm_toplevel)
C_externexport void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7017)
static void C_ccall f_7017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7020)
static void C_ccall f_7020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7023)
static void C_ccall f_7023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7026)
static void C_ccall f_7026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7209)
static void C_ccall f_7209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46323)
static void C_ccall f_46323(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_46323)
static void C_ccall f_46323r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9409)
static void C_ccall f_9409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46317)
static void C_ccall f_46317(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12765)
static void C_ccall f_12765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12768)
static void C_ccall f_12768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12934)
static void C_ccall f_12934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12930)
static void C_ccall f_12930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12920)
static void C_fcall f_12920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12775)
static void C_ccall f_12775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12779)
static void C_ccall f_12779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12782)
static void C_fcall f_12782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12793)
static void C_ccall f_12793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12801)
static void C_ccall f_12801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12873)
static void C_ccall f_12873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12881)
static void C_ccall f_12881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12877)
static void C_ccall f_12877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12869)
static void C_ccall f_12869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12865)
static void C_ccall f_12865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12837)
static void C_ccall f_12837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12833)
static void C_ccall f_12833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12797)
static void C_ccall f_12797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9412)
static void C_ccall f_9412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46303)
static void C_ccall f_46303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9415)
static void C_ccall f_9415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46274)
static void C_ccall f_46274(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_46278)
static void C_ccall f_46278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9418)
static void C_ccall f_9418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46271)
static void C_ccall f_46271(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9421)
static void C_ccall f_9421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46129)
static void C_ccall f_46129(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12947)
static void C_ccall f_12947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13079)
static void C_ccall f_13079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12950)
static void C_ccall f_12950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12961)
static void C_ccall f_12961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12969)
static void C_ccall f_12969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12993)
static void C_ccall f_12993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12996)
static void C_fcall f_12996(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13004)
static void C_ccall f_13004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13012)
static void C_ccall f_13012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13032)
static void C_ccall f_13032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13028)
static void C_ccall f_13028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13008)
static void C_ccall f_13008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13000)
static void C_ccall f_13000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12989)
static void C_ccall f_12989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12965)
static void C_ccall f_12965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12941)
static void C_ccall f_12941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23062)
static void C_ccall f_23062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45901)
static void C_fcall f_45901(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_46127)
static void C_ccall f_46127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45935)
static void C_ccall f_45935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45947)
static void C_ccall f_45947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45951)
static void C_ccall f_45951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45955)
static void C_ccall f_45955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46111)
static void C_ccall f_46111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45961)
static void C_fcall f_45961(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_45981)
static void C_fcall f_45981(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45984)
static void C_fcall f_45984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45992)
static void C_ccall f_45992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45999)
static void C_ccall f_45999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46002)
static void C_ccall f_46002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46006)
static void C_ccall f_46006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46013)
static void C_ccall f_46013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46016)
static void C_ccall f_46016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46020)
static void C_ccall f_46020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_46027)
static void C_ccall f_46027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45971)
static void C_ccall f_45971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45924)
static void C_ccall f_45924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45914)
static void C_ccall f_45914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45917)
static void C_ccall f_45917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23065)
static void C_ccall f_23065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24069)
static void C_ccall f_24069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45806)
static void C_ccall f_45806(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45819)
static void C_ccall f_45819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45895)
static void C_ccall f_45895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45822)
static void C_ccall f_45822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45827)
static void C_fcall f_45827(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_45879)
static void C_ccall f_45879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45849)
static void C_ccall f_45849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45863)
static void C_ccall f_45863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45875)
static void C_ccall f_45875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45852)
static void C_ccall f_45852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24089)
static void C_ccall f_24089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45800)
static void C_ccall f_45800(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24418)
static void C_ccall f_24418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29173)
static void C_ccall f_29173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45697)
static void C_ccall f_45697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_45697)
static void C_ccall f_45697r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_45760)
static void C_ccall f_45760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45764)
static void C_ccall f_45764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45778)
static void C_fcall f_45778(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45700)
static void C_fcall f_45700(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45720)
static void C_ccall f_45720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45724)
static void C_ccall f_45724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29278)
static void C_ccall f_29278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45675)
static void C_ccall f_45675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30833)
static void C_ccall f_30833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45655)
static void C_ccall f_45655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30836)
static void C_ccall f_30836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45615)
static void C_ccall f_45615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30839)
static void C_ccall f_30839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45521)
static void C_ccall f_45521(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_45525)
static void C_ccall f_45525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45528)
static void C_ccall f_45528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45546)
static void C_ccall f_45546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45549)
static void C_ccall f_45549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45580)
static void C_ccall f_45580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45552)
static void C_fcall f_45552(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45558)
static void C_ccall f_45558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45511)
static void C_ccall f_45511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_45505)
static void C_ccall f_45505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30842)
static void C_ccall f_30842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45409)
static void C_ccall f_45409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45411)
static void C_ccall f_45411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_45415)
static void C_ccall f_45415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45418)
static void C_ccall f_45418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45421)
static void C_ccall f_45421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45465)
static void C_ccall f_45465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45457)
static void C_ccall f_45457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45424)
static void C_ccall f_45424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29612)
static void C_fcall f_29612(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29658)
static void C_ccall f_29658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29625)
static void C_fcall f_29625(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45447)
static void C_ccall f_45447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45427)
static void C_ccall f_45427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45430)
static void C_ccall f_45430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45401)
static void C_ccall f_45401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30845)
static void C_ccall f_30845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45373)
static void C_ccall f_45373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30848)
static void C_ccall f_30848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45337)
static void C_ccall f_45337(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_45349)
static void C_ccall f_45349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45345)
static void C_ccall f_45345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45319)
static void C_ccall f_45319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_45313)
static void C_ccall f_45313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30851)
static void C_ccall f_30851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45227)
static void C_ccall f_45227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_45231)
static void C_ccall f_45231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45234)
static void C_ccall f_45234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45237)
static void C_ccall f_45237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45250)
static void C_ccall f_45250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45196)
static void C_ccall f_45196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_45200)
static void C_ccall f_45200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45215)
static void C_ccall f_45215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45190)
static void C_ccall f_45190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30854)
static void C_ccall f_30854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45076)
static void C_ccall f_45076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_45092)
static void C_ccall f_45092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45103)
static void C_ccall f_45103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45070)
static void C_ccall f_45070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30910)
static void C_ccall f_30910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44937)
static void C_ccall f_44937(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44960)
static void C_ccall f_44960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44957)
static void C_ccall f_44957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44931)
static void C_ccall f_44931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30913)
static void C_ccall f_30913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44785)
static void C_ccall f_44785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44803)
static void C_ccall f_44803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44812)
static void C_ccall f_44812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44779)
static void C_ccall f_44779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30916)
static void C_ccall f_30916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44732)
static void C_ccall f_44732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44736)
static void C_ccall f_44736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44739)
static void C_ccall f_44739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44755)
static void C_ccall f_44755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44714)
static void C_ccall f_44714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44708)
static void C_ccall f_44708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30919)
static void C_ccall f_30919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44632)
static void C_ccall f_44632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31058)
static void C_ccall f_31058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44558)
static void C_ccall f_44558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44565)
static void C_ccall f_44565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44552)
static void C_ccall f_44552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31061)
static void C_ccall f_31061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44448)
static void C_ccall f_44448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44456)
static void C_ccall f_44456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44422)
static void C_ccall f_44422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44439)
static void C_ccall f_44439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44430)
static void C_fcall f_44430(C_word t0,C_word t1) C_noret;
C_noret_decl(f_44416)
static void C_ccall f_44416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31064)
static void C_ccall f_31064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44372)
static void C_ccall f_44372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31067)
static void C_ccall f_31067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44290)
static void C_ccall f_44290(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44301)
static void C_ccall f_44301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44303)
static void C_fcall f_44303(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_44332)
static void C_ccall f_44332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44268)
static void C_ccall f_44268(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44284)
static void C_ccall f_44284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44262)
static void C_ccall f_44262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31070)
static void C_ccall f_31070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44191)
static void C_ccall f_44191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44195)
static void C_ccall f_44195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44202)
static void C_ccall f_44202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44157)
static void C_ccall f_44157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44177)
static void C_ccall f_44177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44181)
static void C_ccall f_44181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44173)
static void C_ccall f_44173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44151)
static void C_ccall f_44151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31073)
static void C_ccall f_31073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44023)
static void C_ccall f_44023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44059)
static void C_ccall f_44059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44027)
static void C_ccall f_44027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44043)
static void C_ccall f_44043(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_44055)
static void C_ccall f_44055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44051)
static void C_ccall f_44051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43948)
static void C_ccall f_43948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43991)
static void C_ccall f_43991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43995)
static void C_ccall f_43995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43955)
static void C_fcall f_43955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43966)
static void C_ccall f_43966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43942)
static void C_ccall f_43942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31076)
static void C_ccall f_31076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43922)
static void C_ccall f_43922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43916)
static void C_ccall f_43916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31079)
static void C_ccall f_31079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43896)
static void C_ccall f_43896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43900)
static void C_ccall f_43900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43888)
static void C_ccall f_43888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31082)
static void C_ccall f_31082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43868)
static void C_ccall f_43868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43872)
static void C_ccall f_43872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43860)
static void C_ccall f_43860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31085)
static void C_ccall f_31085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43840)
static void C_ccall f_43840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43844)
static void C_ccall f_43844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43832)
static void C_ccall f_43832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31088)
static void C_ccall f_31088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43812)
static void C_ccall f_43812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43816)
static void C_ccall f_43816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43804)
static void C_ccall f_43804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31091)
static void C_ccall f_31091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43703)
static void C_ccall f_43703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43673)
static void C_ccall f_43673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43697)
static void C_ccall f_43697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43667)
static void C_ccall f_43667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31094)
static void C_ccall f_31094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43617)
static void C_ccall f_43617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43619)
static void C_ccall f_43619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43623)
static void C_ccall f_43623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43651)
static void C_ccall f_43651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43643)
static void C_ccall f_43643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43639)
static void C_ccall f_43639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43626)
static void C_ccall f_43626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43609)
static void C_ccall f_43609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31097)
static void C_ccall f_31097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43556)
static void C_ccall f_43556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43558)
static void C_ccall f_43558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43562)
static void C_ccall f_43562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43593)
static void C_ccall f_43593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43585)
static void C_ccall f_43585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43581)
static void C_ccall f_43581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43565)
static void C_ccall f_43565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43568)
static void C_ccall f_43568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43548)
static void C_ccall f_43548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31100)
static void C_ccall f_31100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43498)
static void C_ccall f_43498(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43512)
static void C_ccall f_43512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43504)
static void C_ccall f_43504(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43463)
static void C_ccall f_43463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43496)
static void C_ccall f_43496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43457)
static void C_ccall f_43457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31103)
static void C_ccall f_31103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43404)
static void C_ccall f_43404(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43408)
static void C_ccall f_43408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43421)
static void C_ccall f_43421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43413)
static void C_ccall f_43413(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43361)
static void C_ccall f_43361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43394)
static void C_ccall f_43394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43355)
static void C_ccall f_43355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31106)
static void C_ccall f_31106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43275)
static void C_ccall f_43275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43269)
static void C_ccall f_43269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31109)
static void C_ccall f_31109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43038)
static void C_ccall f_43038(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43042)
static void C_ccall f_43042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43050)
static void C_fcall f_43050(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43073)
static void C_ccall f_43073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43076)
static void C_ccall f_43076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43079)
static void C_ccall f_43079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43082)
static void C_ccall f_43082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43142)
static void C_ccall f_43142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43149)
static void C_ccall f_43149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43159)
static void C_ccall f_43159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43169)
static void C_ccall f_43169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43183)
static void C_ccall f_43183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43193)
static void C_ccall f_43193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43203)
static void C_ccall f_43203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43213)
static void C_ccall f_43213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43085)
static void C_fcall f_43085(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43109)
static void C_fcall f_43109(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43088)
static void C_fcall f_43088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42995)
static void C_ccall f_42995(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43028)
static void C_ccall f_43028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42989)
static void C_ccall f_42989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31112)
static void C_ccall f_31112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42907)
static void C_ccall f_42907(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42911)
static void C_ccall f_42911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42917)
static void C_ccall f_42917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42937)
static void C_ccall f_42937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42881)
static void C_ccall f_42881(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42891)
static void C_fcall f_42891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42875)
static void C_ccall f_42875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31115)
static void C_ccall f_31115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42690)
static void C_ccall f_42690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42694)
static void C_ccall f_42694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42700)
static void C_ccall f_42700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42709)
static void C_ccall f_42709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42747)
static void C_ccall f_42747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42739)
static void C_ccall f_42739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42716)
static void C_ccall f_42716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42720)
static void C_ccall f_42720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42622)
static void C_ccall f_42622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42641)
static void C_ccall f_42641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42676)
static void C_ccall f_42676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42647)
static void C_fcall f_42647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42651)
static void C_ccall f_42651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42665)
static void C_ccall f_42665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42654)
static void C_fcall f_42654(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42635)
static void C_fcall f_42635(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42616)
static void C_ccall f_42616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31118)
static void C_ccall f_31118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42344)
static void C_ccall f_42344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31641)
static void C_ccall f_31641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42296)
static void C_ccall f_42296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42288)
static void C_ccall f_42288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31644)
static void C_ccall f_31644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42168)
static void C_ccall f_42168(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31650)
static void C_ccall f_31650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32134)
static void C_ccall f_32134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32168)
static void C_ccall f_32168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32160)
static void C_ccall f_32160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32156)
static void C_ccall f_32156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32141)
static void C_ccall f_32141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32145)
static void C_ccall f_32145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32138)
static void C_ccall f_32138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31674)
static void C_fcall f_31674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32127)
static void C_ccall f_32127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32123)
static void C_ccall f_32123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31681)
static void C_fcall f_31681(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31998)
static void C_fcall f_31998(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32019)
static void C_ccall f_32019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32021)
static void C_fcall f_32021(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32035)
static void C_ccall f_32035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32088)
static void C_ccall f_32088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32038)
static void C_fcall f_32038(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32073)
static void C_ccall f_32073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32041)
static void C_fcall f_32041(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32054)
static void C_ccall f_32054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32066)
static void C_ccall f_32066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32058)
static void C_ccall f_32058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32044)
static void C_fcall f_32044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32008)
static void C_ccall f_32008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31684)
static void C_ccall f_31684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31962)
static void C_fcall f_31962(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31988)
static void C_ccall f_31988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31973)
static void C_ccall f_31973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31687)
static void C_ccall f_31687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31902)
static void C_fcall f_31902(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31912)
static void C_ccall f_31912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31915)
static void C_ccall f_31915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31936)
static void C_ccall f_31936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31918)
static void C_fcall f_31918(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31922)
static void C_ccall f_31922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31870)
static void C_ccall f_31870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31873)
static void C_fcall f_31873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31690)
static void C_fcall f_31690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31693)
static void C_fcall f_31693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31827)
static void C_ccall f_31827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31835)
static void C_ccall f_31835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31831)
static void C_ccall f_31831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31696)
static void C_fcall f_31696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31790)
static void C_ccall f_31790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31786)
static void C_ccall f_31786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31782)
static void C_ccall f_31782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31735)
static void C_ccall f_31735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31731)
static void C_ccall f_31731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31813)
static void C_ccall f_31813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31797)
static void C_ccall f_31797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42122)
static void C_ccall f_42122(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42138)
static void C_ccall f_42138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42141)
static void C_ccall f_42141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42144)
static void C_fcall f_42144(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42147)
static void C_fcall f_42147(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42158)
static void C_ccall f_42158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42116)
static void C_ccall f_42116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32175)
static void C_ccall f_32175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41977)
static void C_ccall f_41977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42016)
static void C_ccall f_42016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41990)
static void C_fcall f_41990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41971)
static void C_ccall f_41971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32178)
static void C_ccall f_32178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41559)
static void C_ccall f_41559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41563)
static void C_ccall f_41563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41575)
static void C_ccall f_41575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41633)
static void C_ccall f_41633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41636)
static void C_ccall f_41636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41639)
static void C_ccall f_41639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41851)
static void C_ccall f_41851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41789)
static void C_ccall f_41789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41823)
static void C_ccall f_41823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41798)
static void C_fcall f_41798(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41809)
static void C_ccall f_41809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41805)
static void C_ccall f_41805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41648)
static void C_fcall f_41648(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41726)
static void C_ccall f_41726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41767)
static void C_ccall f_41767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41771)
static void C_ccall f_41771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41775)
static void C_ccall f_41775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41730)
static void C_ccall f_41730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41734)
static void C_ccall f_41734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41761)
static void C_ccall f_41761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41737)
static void C_fcall f_41737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41651)
static void C_fcall f_41651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41723)
static void C_ccall f_41723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41665)
static void C_ccall f_41665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41667)
static void C_fcall f_41667(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41715)
static void C_ccall f_41715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41686)
static void C_ccall f_41686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41703)
static void C_ccall f_41703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41689)
static void C_fcall f_41689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41682)
static void C_ccall f_41682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41654)
static void C_ccall f_41654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41584)
static void C_fcall f_41584(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41594)
static void C_ccall f_41594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41600)
static void C_ccall f_41600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41572)
static void C_ccall f_41572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41520)
static void C_ccall f_41520(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41537)
static void C_ccall f_41537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41553)
static void C_ccall f_41553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41531)
static void C_fcall f_41531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41514)
static void C_ccall f_41514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32181)
static void C_ccall f_32181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41438)
static void C_ccall f_41438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32184)
static void C_ccall f_32184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41414)
static void C_ccall f_41414(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41426)
static void C_ccall f_41426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41422)
static void C_ccall f_41422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41400)
static void C_ccall f_41400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41408)
static void C_ccall f_41408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41394)
static void C_ccall f_41394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32187)
static void C_ccall f_32187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41386)
static void C_ccall f_41386(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_41386)
static void C_ccall f_41386r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39634)
static void C_ccall f_39634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39638)
static void C_ccall f_39638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41357)
static void C_ccall f_41357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41361)
static void C_ccall f_41361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39641)
static void C_ccall f_39641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41355)
static void C_ccall f_41355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40191)
static void C_ccall f_40191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41347)
static void C_ccall f_41347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40194)
static void C_ccall f_40194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41339)
static void C_ccall f_41339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40197)
static void C_ccall f_40197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41331)
static void C_ccall f_41331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40200)
static void C_ccall f_40200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41323)
static void C_ccall f_41323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40203)
static void C_ccall f_40203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41315)
static void C_ccall f_41315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40206)
static void C_ccall f_40206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41307)
static void C_ccall f_41307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40209)
static void C_ccall f_40209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41299)
static void C_ccall f_41299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40212)
static void C_ccall f_40212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41291)
static void C_ccall f_41291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40215)
static void C_ccall f_40215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41283)
static void C_ccall f_41283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40218)
static void C_ccall f_40218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41275)
static void C_ccall f_41275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40221)
static void C_ccall f_40221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41267)
static void C_ccall f_41267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40224)
static void C_ccall f_40224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41259)
static void C_ccall f_41259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40227)
static void C_ccall f_40227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41251)
static void C_ccall f_41251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40230)
static void C_ccall f_40230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41243)
static void C_ccall f_41243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40233)
static void C_ccall f_40233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41235)
static void C_ccall f_41235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40236)
static void C_ccall f_40236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41227)
static void C_ccall f_41227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40239)
static void C_ccall f_40239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41219)
static void C_ccall f_41219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40242)
static void C_ccall f_40242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41211)
static void C_ccall f_41211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40245)
static void C_ccall f_40245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41203)
static void C_ccall f_41203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40248)
static void C_ccall f_40248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41195)
static void C_ccall f_41195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40251)
static void C_ccall f_40251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41187)
static void C_ccall f_41187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40254)
static void C_ccall f_40254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41179)
static void C_ccall f_41179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40257)
static void C_ccall f_40257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41110)
static void C_fcall f_41110(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41138)
static void C_fcall f_41138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40331)
static void C_ccall f_40331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41104)
static void C_ccall f_41104(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40609)
static void C_ccall f_40609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41075)
static void C_ccall f_41075(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_41075)
static void C_ccall f_41075r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_41089)
static void C_fcall f_41089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41079)
static void C_ccall f_41079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40612)
static void C_ccall f_40612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41073)
static void C_ccall f_41073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41008)
static void C_ccall f_41008(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_41008)
static void C_ccall f_41008r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_41026)
static void C_fcall f_41026(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41036)
static void C_ccall f_41036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41012)
static void C_ccall f_41012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41002)
static void C_ccall f_41002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40996)
static void C_ccall f_40996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40990)
static void C_ccall f_40990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40984)
static void C_ccall f_40984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40614)
static void C_ccall f_40614(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40614)
static void C_ccall f_40614r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_40951)
static void C_fcall f_40951(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40961)
static void C_ccall f_40961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40937)
static void C_ccall f_40937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40621)
static void C_ccall f_40621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40875)
static void C_fcall f_40875(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40889)
static void C_ccall f_40889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40624)
static void C_ccall f_40624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40822)
static void C_fcall f_40822(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40845)
static void C_fcall f_40845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40832)
static void C_ccall f_40832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40808)
static void C_ccall f_40808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40630)
static void C_ccall f_40630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40770)
static void C_fcall f_40770(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40780)
static void C_ccall f_40780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40756)
static void C_ccall f_40756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40636)
static void C_ccall f_40636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40753)
static void C_ccall f_40753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40639)
static void C_fcall f_40639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40745)
static void C_ccall f_40745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40749)
static void C_ccall f_40749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40709)
static void C_fcall f_40709(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40734)
static void C_ccall f_40734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40738)
static void C_ccall f_40738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40719)
static void C_ccall f_40719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40698)
static void C_ccall f_40698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40668)
static void C_fcall f_40668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40640)
static void C_fcall f_40640(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40372)
static void C_fcall f_40372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40376)
static void C_ccall f_40376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40379)
static void C_ccall f_40379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40382)
static void C_ccall f_40382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40386)
static void C_ccall f_40386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40600)
static void C_ccall f_40600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40588)
static void C_ccall f_40588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40584)
static void C_ccall f_40584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40389)
static void C_fcall f_40389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40533)
static void C_fcall f_40533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40569)
static void C_ccall f_40569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40562)
static void C_ccall f_40562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40392)
static void C_ccall f_40392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40463)
static void C_ccall f_40463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40467)
static void C_ccall f_40467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40459)
static void C_ccall f_40459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7123)
static void C_ccall f_7123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40439)
static void C_ccall f_40439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40435)
static void C_ccall f_40435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40402)
static void C_fcall f_40402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40413)
static void C_ccall f_40413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40421)
static void C_ccall f_40421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40417)
static void C_ccall f_40417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40333)
static void C_fcall f_40333(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40349)
static void C_ccall f_40349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40260)
static void C_ccall f_40260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40271)
static void C_ccall f_40271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40274)
static void C_fcall f_40274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40281)
static void C_ccall f_40281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39717)
static void C_fcall f_39717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40050)
static void C_fcall f_40050(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40070)
static void C_ccall f_40070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40139)
static void C_ccall f_40139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40135)
static void C_ccall f_40135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40096)
static void C_ccall f_40096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40108)
static void C_ccall f_40108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40104)
static void C_ccall f_40104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40060)
static void C_ccall f_40060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39721)
static void C_ccall f_39721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39725)
static void C_ccall f_39725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39729)
static void C_ccall f_39729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39733)
static void C_ccall f_39733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39737)
static void C_ccall f_39737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39738)
static void C_ccall f_39738(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39744)
static void C_ccall f_39744(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39748)
static void C_ccall f_39748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39977)
static void C_fcall f_39977(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40024)
static void C_ccall f_40024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40014)
static void C_fcall f_40014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40021)
static void C_ccall f_40021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40008)
static void C_ccall f_40008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39987)
static void C_ccall f_39987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39751)
static void C_ccall f_39751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39932)
static void C_fcall f_39932(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39937)
static void C_fcall f_39937(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39947)
static void C_ccall f_39947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39754)
static void C_ccall f_39754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39886)
static void C_fcall f_39886(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39891)
static void C_fcall f_39891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39901)
static void C_ccall f_39901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39757)
static void C_ccall f_39757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39783)
static void C_fcall f_39783(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39792)
static void C_fcall f_39792(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39808)
static void C_ccall f_39808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39861)
static void C_ccall f_39861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39842)
static void C_ccall f_39842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39811)
static void C_ccall f_39811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39832)
static void C_ccall f_39832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39818)
static void C_ccall f_39818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39802)
static void C_ccall f_39802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39760)
static void C_ccall f_39760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39773)
static void C_ccall f_39773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39643)
static void C_ccall f_39643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_39643)
static void C_ccall f_39643r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_39647)
static void C_fcall f_39647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39656)
static void C_ccall f_39656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39669)
static void C_ccall f_39669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39672)
static void C_ccall f_39672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39688)
static void C_ccall f_39688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39594)
static void C_ccall f_39594(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39594)
static void C_ccall f_39594r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_39588)
static void C_ccall f_39588(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39588)
static void C_ccall f_39588r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_39395)
static void C_fcall f_39395(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39568)
static void C_fcall f_39568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39399)
static void C_ccall f_39399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39402)
static void C_ccall f_39402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39405)
static void C_ccall f_39405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39410)
static void C_fcall f_39410(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39480)
static void C_ccall f_39480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39476)
static void C_ccall f_39476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39462)
static void C_ccall f_39462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39448)
static void C_ccall f_39448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39444)
static void C_ccall f_39444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39430)
static void C_ccall f_39430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8038)
static void C_ccall f_8038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39223)
static void C_ccall f_39223(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_39223)
static void C_ccall f_39223r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39227)
static void C_ccall f_39227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39230)
static void C_ccall f_39230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39235)
static void C_fcall f_39235(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39356)
static void C_ccall f_39356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39360)
static void C_ccall f_39360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39329)
static void C_ccall f_39329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39333)
static void C_ccall f_39333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39302)
static void C_ccall f_39302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39306)
static void C_ccall f_39306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39286)
static void C_ccall f_39286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39269)
static void C_ccall f_39269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39255)
static void C_ccall f_39255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8012)
static void C_ccall f_8012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39110)
static void C_ccall f_39110(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_39110)
static void C_ccall f_39110r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39115)
static void C_ccall f_39115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39119)
static void C_ccall f_39119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39170)
static void C_ccall f_39170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39166)
static void C_fcall f_39166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39162)
static void C_ccall f_39162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39122)
static void C_fcall f_39122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39155)
static void C_ccall f_39155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39151)
static void C_fcall f_39151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39147)
static void C_ccall f_39147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39125)
static void C_fcall f_39125(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39128)
static void C_ccall f_39128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39140)
static void C_ccall f_39140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39132)
static void C_ccall f_39132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38934)
static void C_ccall f_38934(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38934)
static void C_ccall f_38934r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38953)
static void C_fcall f_38953(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38960)
static void C_fcall f_38960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38966)
static void C_fcall f_38966(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38986)
static void C_ccall f_38986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38994)
static void C_ccall f_38994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38990)
static void C_ccall f_38990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38976)
static void C_ccall f_38976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38938)
static void C_ccall f_38938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38829)
static void C_ccall f_38829(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38829)
static void C_ccall f_38829r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38848)
static void C_fcall f_38848(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38855)
static void C_fcall f_38855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38861)
static void C_fcall f_38861(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38881)
static void C_ccall f_38881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38889)
static void C_ccall f_38889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38885)
static void C_ccall f_38885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38871)
static void C_ccall f_38871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38833)
static void C_ccall f_38833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38810)
static void C_ccall f_38810(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7170)
static void C_ccall f_7170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7176)
static void C_ccall f_7176(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7202)
static void C_ccall f_7202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7206)
static void C_ccall f_7206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7182)
static void C_ccall f_7182(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7200)
static void C_ccall f_7200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7197)
static void C_ccall f_7197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7193)
static void C_ccall f_7193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7186)
static void C_ccall f_7186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38795)
static void C_ccall f_38795(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38795)
static void C_ccall f_38795r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38789)
static void C_ccall f_38789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38783)
static void C_ccall f_38783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38777)
static void C_ccall f_38777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38771)
static void C_ccall f_38771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38765)
static void C_ccall f_38765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38549)
static void C_ccall f_38549(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38549)
static void C_ccall f_38549r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38559)
static void C_ccall f_38559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38120)
static void C_ccall f_38120(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38120)
static void C_ccall f_38120r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38526)
static void C_ccall f_38526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38541)
static void C_ccall f_38541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38533)
static void C_ccall f_38533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38497)
static void C_ccall f_38497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38501)
static void C_ccall f_38501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38462)
static void C_ccall f_38462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38466)
static void C_ccall f_38466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38427)
static void C_ccall f_38427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38431)
static void C_ccall f_38431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38124)
static void C_fcall f_38124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38391)
static void C_ccall f_38391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38406)
static void C_ccall f_38406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38398)
static void C_ccall f_38398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38362)
static void C_ccall f_38362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38366)
static void C_ccall f_38366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38327)
static void C_ccall f_38327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38331)
static void C_ccall f_38331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38292)
static void C_ccall f_38292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38296)
static void C_ccall f_38296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38127)
static void C_fcall f_38127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38256)
static void C_ccall f_38256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38271)
static void C_ccall f_38271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38263)
static void C_ccall f_38263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38227)
static void C_ccall f_38227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38231)
static void C_ccall f_38231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38192)
static void C_ccall f_38192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38196)
static void C_ccall f_38196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38157)
static void C_ccall f_38157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38161)
static void C_ccall f_38161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38130)
static void C_fcall f_38130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38133)
static void C_ccall f_38133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37691)
static void C_ccall f_37691(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37691)
static void C_ccall f_37691r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38097)
static void C_ccall f_38097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38112)
static void C_ccall f_38112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38104)
static void C_ccall f_38104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38068)
static void C_ccall f_38068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38072)
static void C_ccall f_38072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38033)
static void C_ccall f_38033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38037)
static void C_ccall f_38037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37998)
static void C_ccall f_37998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38002)
static void C_ccall f_38002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37695)
static void C_fcall f_37695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37962)
static void C_ccall f_37962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37977)
static void C_ccall f_37977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37969)
static void C_ccall f_37969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37933)
static void C_ccall f_37933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37937)
static void C_ccall f_37937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37898)
static void C_ccall f_37898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37902)
static void C_ccall f_37902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37863)
static void C_ccall f_37863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37867)
static void C_ccall f_37867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37698)
static void C_fcall f_37698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37827)
static void C_ccall f_37827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37842)
static void C_ccall f_37842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37834)
static void C_ccall f_37834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37798)
static void C_ccall f_37798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37802)
static void C_ccall f_37802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37763)
static void C_ccall f_37763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37767)
static void C_ccall f_37767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37728)
static void C_ccall f_37728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37732)
static void C_ccall f_37732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37701)
static void C_fcall f_37701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37704)
static void C_ccall f_37704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37262)
static void C_ccall f_37262(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37262)
static void C_ccall f_37262r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37668)
static void C_ccall f_37668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37683)
static void C_ccall f_37683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37675)
static void C_ccall f_37675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37639)
static void C_ccall f_37639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37643)
static void C_ccall f_37643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37604)
static void C_ccall f_37604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37608)
static void C_ccall f_37608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37569)
static void C_ccall f_37569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37573)
static void C_ccall f_37573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37266)
static void C_fcall f_37266(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37533)
static void C_ccall f_37533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37548)
static void C_ccall f_37548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37540)
static void C_ccall f_37540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37504)
static void C_ccall f_37504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37508)
static void C_ccall f_37508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37469)
static void C_ccall f_37469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37473)
static void C_ccall f_37473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37434)
static void C_ccall f_37434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37438)
static void C_ccall f_37438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37269)
static void C_fcall f_37269(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37398)
static void C_ccall f_37398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37413)
static void C_ccall f_37413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37405)
static void C_ccall f_37405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37369)
static void C_ccall f_37369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37373)
static void C_ccall f_37373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37334)
static void C_ccall f_37334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37338)
static void C_ccall f_37338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37299)
static void C_ccall f_37299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37303)
static void C_ccall f_37303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37272)
static void C_fcall f_37272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37275)
static void C_ccall f_37275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36555)
static void C_ccall f_36555(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36555)
static void C_ccall f_36555r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37239)
static void C_ccall f_37239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37254)
static void C_ccall f_37254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37246)
static void C_ccall f_37246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37210)
static void C_ccall f_37210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37214)
static void C_ccall f_37214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37175)
static void C_ccall f_37175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37179)
static void C_ccall f_37179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37140)
static void C_ccall f_37140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37144)
static void C_ccall f_37144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37105)
static void C_ccall f_37105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37109)
static void C_ccall f_37109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36559)
static void C_fcall f_36559(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37069)
static void C_ccall f_37069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37084)
static void C_ccall f_37084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37076)
static void C_ccall f_37076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37040)
static void C_ccall f_37040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37044)
static void C_ccall f_37044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37005)
static void C_ccall f_37005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37009)
static void C_ccall f_37009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36970)
static void C_ccall f_36970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36974)
static void C_ccall f_36974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36935)
static void C_ccall f_36935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36939)
static void C_ccall f_36939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36562)
static void C_fcall f_36562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36899)
static void C_ccall f_36899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36914)
static void C_ccall f_36914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36906)
static void C_ccall f_36906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36870)
static void C_ccall f_36870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36874)
static void C_ccall f_36874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36835)
static void C_ccall f_36835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36839)
static void C_ccall f_36839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36800)
static void C_ccall f_36800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36804)
static void C_ccall f_36804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36765)
static void C_ccall f_36765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36769)
static void C_ccall f_36769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36565)
static void C_fcall f_36565(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36729)
static void C_ccall f_36729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36744)
static void C_ccall f_36744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36736)
static void C_ccall f_36736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36700)
static void C_ccall f_36700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36704)
static void C_ccall f_36704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36665)
static void C_ccall f_36665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36669)
static void C_ccall f_36669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36630)
static void C_ccall f_36630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36634)
static void C_ccall f_36634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36595)
static void C_ccall f_36595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36599)
static void C_ccall f_36599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36568)
static void C_fcall f_36568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36571)
static void C_ccall f_36571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35848)
static void C_ccall f_35848(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35848)
static void C_ccall f_35848r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36532)
static void C_ccall f_36532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36547)
static void C_ccall f_36547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36539)
static void C_ccall f_36539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36503)
static void C_ccall f_36503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36507)
static void C_ccall f_36507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36468)
static void C_ccall f_36468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36472)
static void C_ccall f_36472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36433)
static void C_ccall f_36433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36437)
static void C_ccall f_36437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36398)
static void C_ccall f_36398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36402)
static void C_ccall f_36402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35852)
static void C_fcall f_35852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36362)
static void C_ccall f_36362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36377)
static void C_ccall f_36377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36369)
static void C_ccall f_36369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36333)
static void C_ccall f_36333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36337)
static void C_ccall f_36337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36298)
static void C_ccall f_36298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36302)
static void C_ccall f_36302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36263)
static void C_ccall f_36263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36267)
static void C_ccall f_36267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36228)
static void C_ccall f_36228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36232)
static void C_ccall f_36232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35855)
static void C_fcall f_35855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36192)
static void C_ccall f_36192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36207)
static void C_ccall f_36207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36199)
static void C_ccall f_36199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36163)
static void C_ccall f_36163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36167)
static void C_ccall f_36167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36128)
static void C_ccall f_36128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36132)
static void C_ccall f_36132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36093)
static void C_ccall f_36093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36097)
static void C_ccall f_36097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36058)
static void C_ccall f_36058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36062)
static void C_ccall f_36062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35858)
static void C_fcall f_35858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36022)
static void C_ccall f_36022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36037)
static void C_ccall f_36037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36029)
static void C_ccall f_36029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35993)
static void C_ccall f_35993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35997)
static void C_ccall f_35997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35958)
static void C_ccall f_35958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35962)
static void C_ccall f_35962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35923)
static void C_ccall f_35923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35927)
static void C_ccall f_35927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35888)
static void C_ccall f_35888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35892)
static void C_ccall f_35892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35861)
static void C_fcall f_35861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35864)
static void C_ccall f_35864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35141)
static void C_ccall f_35141(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35141)
static void C_ccall f_35141r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35825)
static void C_ccall f_35825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35840)
static void C_ccall f_35840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35832)
static void C_ccall f_35832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35796)
static void C_ccall f_35796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35800)
static void C_ccall f_35800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35761)
static void C_ccall f_35761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35765)
static void C_ccall f_35765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35726)
static void C_ccall f_35726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35730)
static void C_ccall f_35730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35691)
static void C_ccall f_35691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35695)
static void C_ccall f_35695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35145)
static void C_fcall f_35145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35655)
static void C_ccall f_35655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35670)
static void C_ccall f_35670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35662)
static void C_ccall f_35662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35626)
static void C_ccall f_35626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35630)
static void C_ccall f_35630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35591)
static void C_ccall f_35591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35595)
static void C_ccall f_35595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35556)
static void C_ccall f_35556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35560)
static void C_ccall f_35560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35521)
static void C_ccall f_35521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35525)
static void C_ccall f_35525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35148)
static void C_fcall f_35148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35485)
static void C_ccall f_35485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35500)
static void C_ccall f_35500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35492)
static void C_ccall f_35492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35456)
static void C_ccall f_35456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35460)
static void C_ccall f_35460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35421)
static void C_ccall f_35421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35425)
static void C_ccall f_35425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35386)
static void C_ccall f_35386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35390)
static void C_ccall f_35390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35351)
static void C_ccall f_35351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35355)
static void C_ccall f_35355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35151)
static void C_fcall f_35151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35315)
static void C_ccall f_35315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35330)
static void C_ccall f_35330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35322)
static void C_ccall f_35322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35286)
static void C_ccall f_35286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35290)
static void C_ccall f_35290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35251)
static void C_ccall f_35251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35255)
static void C_ccall f_35255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35216)
static void C_ccall f_35216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35220)
static void C_ccall f_35220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35181)
static void C_ccall f_35181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35185)
static void C_ccall f_35185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35154)
static void C_fcall f_35154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35157)
static void C_ccall f_35157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34712)
static void C_ccall f_34712(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34712)
static void C_ccall f_34712r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35118)
static void C_ccall f_35118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35133)
static void C_ccall f_35133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35125)
static void C_ccall f_35125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35089)
static void C_ccall f_35089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35093)
static void C_ccall f_35093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35054)
static void C_ccall f_35054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35058)
static void C_ccall f_35058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35019)
static void C_ccall f_35019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35023)
static void C_ccall f_35023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34716)
static void C_fcall f_34716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34983)
static void C_ccall f_34983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34998)
static void C_ccall f_34998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34990)
static void C_ccall f_34990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34954)
static void C_ccall f_34954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34958)
static void C_ccall f_34958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34919)
static void C_ccall f_34919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34923)
static void C_ccall f_34923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34884)
static void C_ccall f_34884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34888)
static void C_ccall f_34888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34719)
static void C_fcall f_34719(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34848)
static void C_ccall f_34848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34863)
static void C_ccall f_34863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34855)
static void C_ccall f_34855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34819)
static void C_ccall f_34819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34823)
static void C_ccall f_34823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34784)
static void C_ccall f_34784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34788)
static void C_ccall f_34788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34749)
static void C_ccall f_34749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34753)
static void C_ccall f_34753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34722)
static void C_fcall f_34722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34725)
static void C_ccall f_34725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33657)
static void C_ccall f_33657(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33657)
static void C_ccall f_33657r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34689)
static void C_ccall f_34689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34704)
static void C_ccall f_34704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34696)
static void C_ccall f_34696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34660)
static void C_ccall f_34660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34664)
static void C_ccall f_34664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34625)
static void C_ccall f_34625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34629)
static void C_ccall f_34629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34590)
static void C_ccall f_34590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34594)
static void C_ccall f_34594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34555)
static void C_ccall f_34555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34559)
static void C_ccall f_34559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34520)
static void C_ccall f_34520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34524)
static void C_ccall f_34524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33661)
static void C_fcall f_33661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34484)
static void C_ccall f_34484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34499)
static void C_ccall f_34499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34491)
static void C_ccall f_34491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34455)
static void C_ccall f_34455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34459)
static void C_ccall f_34459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34420)
static void C_ccall f_34420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34424)
static void C_ccall f_34424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34385)
static void C_ccall f_34385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34389)
static void C_ccall f_34389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34350)
static void C_ccall f_34350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34354)
static void C_ccall f_34354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34315)
static void C_ccall f_34315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34319)
static void C_ccall f_34319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33664)
static void C_fcall f_33664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34279)
static void C_ccall f_34279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34294)
static void C_ccall f_34294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34286)
static void C_ccall f_34286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34250)
static void C_ccall f_34250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34254)
static void C_ccall f_34254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34215)
static void C_ccall f_34215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34219)
static void C_ccall f_34219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34180)
static void C_ccall f_34180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34184)
static void C_ccall f_34184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34145)
static void C_ccall f_34145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34149)
static void C_ccall f_34149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34110)
static void C_ccall f_34110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34114)
static void C_ccall f_34114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33667)
static void C_fcall f_33667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34074)
static void C_ccall f_34074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34089)
static void C_ccall f_34089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34081)
static void C_ccall f_34081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34045)
static void C_ccall f_34045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34049)
static void C_ccall f_34049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34010)
static void C_ccall f_34010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34014)
static void C_ccall f_34014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33975)
static void C_ccall f_33975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33979)
static void C_ccall f_33979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33940)
static void C_ccall f_33940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33944)
static void C_ccall f_33944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33905)
static void C_ccall f_33905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33909)
static void C_ccall f_33909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33670)
static void C_fcall f_33670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33869)
static void C_ccall f_33869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33884)
static void C_ccall f_33884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33876)
static void C_ccall f_33876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33840)
static void C_ccall f_33840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33844)
static void C_ccall f_33844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33805)
static void C_ccall f_33805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33809)
static void C_ccall f_33809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33770)
static void C_ccall f_33770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33774)
static void C_ccall f_33774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33735)
static void C_ccall f_33735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33739)
static void C_ccall f_33739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33700)
static void C_ccall f_33700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33704)
static void C_ccall f_33704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33673)
static void C_fcall f_33673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33676)
static void C_ccall f_33676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33651)
static void C_ccall f_33651(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7843)
static void C_ccall f_7843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33498)
static void C_fcall f_33498(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33505)
static void C_fcall f_33505(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33443)
static void C_fcall f_33443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33450)
static void C_fcall f_33450(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33196)
static void C_ccall f_33196(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33196)
static void C_ccall f_33196r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33420)
static void C_ccall f_33420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33435)
static void C_ccall f_33435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33427)
static void C_ccall f_33427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33391)
static void C_ccall f_33391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33395)
static void C_ccall f_33395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33356)
static void C_ccall f_33356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33360)
static void C_ccall f_33360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33200)
static void C_fcall f_33200(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33320)
static void C_ccall f_33320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33335)
static void C_ccall f_33335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33327)
static void C_ccall f_33327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33291)
static void C_ccall f_33291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33295)
static void C_ccall f_33295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33256)
static void C_ccall f_33256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33260)
static void C_ccall f_33260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33203)
static void C_fcall f_33203(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33206)
static void C_ccall f_33206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33219)
static void C_ccall f_33219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33223)
static void C_ccall f_33223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33095)
static void C_ccall f_33095(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33095)
static void C_ccall f_33095r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_33099)
static void C_ccall f_33099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33102)
static void C_ccall f_33102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7745)
static void C_ccall f_7745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33105)
static void C_ccall f_33105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8159)
static void C_ccall f_8159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33147)
static void C_fcall f_33147(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33150)
static void C_ccall f_33150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33137)
static void C_ccall f_33137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33127)
static void C_ccall f_33127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33117)
static void C_ccall f_33117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33108)
static void C_ccall f_33108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33067)
static void C_ccall f_33067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33071)
static void C_ccall f_33071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33043)
static void C_ccall f_33043(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32994)
static void C_ccall f_32994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7731)
static void C_ccall f_7731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32998)
static void C_ccall f_32998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33014)
static void C_ccall f_33014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33041)
static void C_ccall f_33041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33017)
static void C_ccall f_33017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33037)
static void C_ccall f_33037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33033)
static void C_ccall f_33033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33001)
static void C_ccall f_33001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32985)
static void C_ccall f_32985(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32989)
static void C_ccall f_32989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32832)
static void C_ccall f_32832(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32832)
static void C_ccall f_32832r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32959)
static void C_fcall f_32959(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32972)
static void C_ccall f_32972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32954)
static void C_ccall f_32954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32835)
static void C_fcall f_32835(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32951)
static void C_ccall f_32951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32935)
static void C_ccall f_32935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32863)
static void C_ccall f_32863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32871)
static void C_fcall f_32871(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32881)
static void C_ccall f_32881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32884)
static void C_ccall f_32884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32866)
static void C_ccall f_32866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32673)
static void C_fcall f_32673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7795)
static void C_ccall f_7795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32695)
static void C_ccall f_32695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32699)
static void C_ccall f_32699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32677)
static void C_fcall f_32677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32189)
static void C_ccall f_32189(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32189)
static void C_ccall f_32189r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32650)
static void C_ccall f_32650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32665)
static void C_ccall f_32665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32657)
static void C_ccall f_32657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32621)
static void C_ccall f_32621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32625)
static void C_ccall f_32625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32586)
static void C_ccall f_32586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32590)
static void C_ccall f_32590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32551)
static void C_ccall f_32551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32555)
static void C_ccall f_32555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32193)
static void C_fcall f_32193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32515)
static void C_ccall f_32515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32530)
static void C_ccall f_32530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32522)
static void C_ccall f_32522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32486)
static void C_ccall f_32486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32490)
static void C_ccall f_32490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32451)
static void C_ccall f_32451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32455)
static void C_ccall f_32455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32416)
static void C_ccall f_32416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32420)
static void C_ccall f_32420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32196)
static void C_fcall f_32196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32380)
static void C_ccall f_32380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32395)
static void C_ccall f_32395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32387)
static void C_ccall f_32387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32351)
static void C_ccall f_32351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32355)
static void C_ccall f_32355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32316)
static void C_ccall f_32316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32320)
static void C_ccall f_32320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32281)
static void C_ccall f_32281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32285)
static void C_ccall f_32285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32199)
static void C_fcall f_32199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32202)
static void C_ccall f_32202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32257)
static void C_ccall f_32257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32253)
static void C_ccall f_32253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32205)
static void C_fcall f_32205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29993)
static void C_ccall f_29993(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30006)
static void C_ccall f_30006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30013)
static void C_fcall f_30013(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30020)
static void C_ccall f_30020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29999)
static void C_ccall f_29999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32217)
static void C_ccall f_32217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32239)
static void C_ccall f_32239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32801)
static void C_fcall f_32801(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32811)
static void C_fcall f_32811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32714)
static void C_ccall f_32714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32771)
static void C_fcall f_32771(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32781)
static void C_fcall f_32781(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32722)
static void C_ccall f_32722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32740)
static void C_ccall f_32740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32744)
static void C_ccall f_32744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32748)
static void C_ccall f_32748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32755)
static void C_ccall f_32755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32732)
static void C_ccall f_32732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32725)
static void C_ccall f_32725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32208)
static void C_ccall f_32208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31120)
static void C_ccall f_31120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31133)
static void C_ccall f_31133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31183)
static void C_ccall f_31183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31280)
static void C_ccall f_31280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31348)
static void C_ccall f_31348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31605)
static void C_ccall f_31605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31355)
static void C_fcall f_31355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31593)
static void C_ccall f_31593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31544)
static void C_ccall f_31544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31550)
static void C_ccall f_31550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31574)
static void C_ccall f_31574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31570)
static void C_ccall f_31570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31558)
static void C_ccall f_31558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31358)
static void C_fcall f_31358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31520)
static void C_ccall f_31520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31524)
static void C_ccall f_31524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31361)
static void C_fcall f_31361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31497)
static void C_ccall f_31497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31501)
static void C_ccall f_31501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31364)
static void C_fcall f_31364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31474)
static void C_ccall f_31474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31478)
static void C_ccall f_31478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31367)
static void C_fcall f_31367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31399)
static void C_ccall f_31399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31417)
static void C_ccall f_31417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31435)
static void C_ccall f_31435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31453)
static void C_ccall f_31453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31370)
static void C_fcall f_31370(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31374)
static void C_ccall f_31374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31284)
static void C_ccall f_31284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31288)
static void C_ccall f_31288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31292)
static void C_ccall f_31292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31187)
static void C_ccall f_31187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31191)
static void C_ccall f_31191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31195)
static void C_ccall f_31195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31214)
static void C_ccall f_31214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31218)
static void C_ccall f_31218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31198)
static void C_fcall f_31198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31202)
static void C_ccall f_31202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31137)
static void C_ccall f_31137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31141)
static void C_ccall f_31141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31145)
static void C_ccall f_31145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31127)
static void C_fcall f_31127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30942)
static void C_fcall f_30942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30954)
static void C_fcall f_30954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30973)
static void C_ccall f_30973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30991)
static void C_fcall f_30991(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31023)
static void C_ccall f_31023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31026)
static void C_fcall f_31026(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31019)
static void C_ccall f_31019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31005)
static void C_ccall f_31005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30976)
static void C_ccall f_30976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30921)
static void C_fcall f_30921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30928)
static void C_ccall f_30928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30931)
static void C_ccall f_30931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30937)
static void C_ccall f_30937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30856)
static void C_fcall f_30856(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30865)
static void C_fcall f_30865(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30888)
static void C_ccall f_30888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30878)
static void C_fcall f_30878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30812)
static void C_fcall f_30812(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30820)
static void C_ccall f_30820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30824)
static void C_ccall f_30824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30800)
static void C_fcall f_30800(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30698)
static void C_fcall f_30698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30650)
static void C_fcall f_30650(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30031)
static void C_fcall f_30031(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30035)
static void C_ccall f_30035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30038)
static void C_ccall f_30038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30464)
static void C_ccall f_30464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30460)
static void C_ccall f_30460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30456)
static void C_ccall f_30456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30041)
static void C_fcall f_30041(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30164)
static void C_ccall f_30164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29346)
static void C_ccall f_29346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30170)
static void C_fcall f_30170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29362)
static void C_ccall f_29362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30258)
static void C_fcall f_30258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30328)
static void C_ccall f_30328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29378)
static void C_ccall f_29378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30331)
static void C_fcall f_30331(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29410)
static void C_ccall f_29410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30409)
static void C_fcall f_30409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30435)
static void C_ccall f_30435(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30429)
static void C_ccall f_30429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30418)
static void C_ccall f_30418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30360)
static void C_fcall f_30360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30370)
static void C_ccall f_30370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30396)
static void C_ccall f_30396(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30390)
static void C_ccall f_30390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30373)
static void C_ccall f_30373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30383)
static void C_ccall f_30383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30376)
static void C_fcall f_30376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30337)
static void C_ccall f_30337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30346)
static void C_ccall f_30346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30340)
static void C_fcall f_30340(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30264)
static void C_ccall f_30264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30282)
static void C_fcall f_30282(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30315)
static void C_ccall f_30315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30301)
static void C_ccall f_30301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30309)
static void C_ccall f_30309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30292)
static void C_ccall f_30292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30267)
static void C_ccall f_30267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30179)
static void C_ccall f_30179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30201)
static void C_fcall f_30201(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30248)
static void C_ccall f_30248(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30234)
static void C_ccall f_30234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30242)
static void C_ccall f_30242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30214)
static void C_ccall f_30214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30217)
static void C_fcall f_30217(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30182)
static void C_ccall f_30182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30199)
static void C_ccall f_30199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30185)
static void C_fcall f_30185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30050)
static void C_ccall f_30050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30056)
static void C_ccall f_30056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30114)
static void C_ccall f_30114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30117)
static void C_ccall f_30117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30138)
static void C_ccall f_30138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30149)
static void C_ccall f_30149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30128)
static void C_ccall f_30128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30062)
static void C_ccall f_30062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30072)
static void C_ccall f_30072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30108)
static void C_ccall f_30108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30078)
static void C_ccall f_30078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30093)
static void C_ccall f_30093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30101)
static void C_ccall f_30101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30085)
static void C_ccall f_30085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29927)
static void C_fcall f_29927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29929)
static void C_ccall f_29929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29977)
static void C_ccall f_29977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29933)
static void C_ccall f_29933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29936)
static void C_fcall f_29936(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29941)
static void C_fcall f_29941(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29962)
static void C_ccall f_29962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29919)
static void C_fcall f_29919(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29921)
static void C_ccall f_29921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29742)
static void C_ccall f_29742(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29742)
static void C_ccall f_29742r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29750)
static void C_ccall f_29750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29711)
static void C_fcall f_29711(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29728)
static void C_ccall f_29728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29732)
static void C_ccall f_29732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29678)
static void C_fcall f_29678(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29685)
static void C_ccall f_29685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29572)
static void C_ccall f_29572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29579)
static void C_ccall f_29579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29694)
static void C_ccall f_29694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29917)
static void C_ccall f_29917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29894)
static void C_ccall f_29894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29910)
static void C_ccall f_29910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29756)
static void C_ccall f_29756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29759)
static void C_ccall f_29759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29783)
static void C_ccall f_29783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29840)
static void C_ccall f_29840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29846)
static void C_ccall f_29846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29855)
static void C_ccall f_29855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29864)
static void C_ccall f_29864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29873)
static void C_ccall f_29873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29882)
static void C_ccall f_29882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29834)
static void C_ccall f_29834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29789)
static void C_ccall f_29789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29795)
static void C_ccall f_29795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29801)
static void C_ccall f_29801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29807)
static void C_ccall f_29807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29813)
static void C_ccall f_29813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29819)
static void C_ccall f_29819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29660)
static void C_fcall f_29660(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29667)
static void C_ccall f_29667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29593)
static void C_fcall f_29593(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29581)
static void C_fcall f_29581(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29549)
static void C_fcall f_29549(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29556)
static void C_ccall f_29556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29563)
static void C_ccall f_29563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29533)
static void C_fcall f_29533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29540)
static void C_ccall f_29540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29547)
static void C_ccall f_29547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29524)
static void C_fcall f_29524(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29506)
static void C_fcall f_29506(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29488)
static void C_fcall f_29488(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29473)
static void C_fcall f_29473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29467)
static void C_fcall f_29467(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29419)
static void C_fcall f_29419(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29387)
static void C_fcall f_29387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29394)
static void C_ccall f_29394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29329)
static void C_fcall f_29329(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29337)
static void C_ccall f_29337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29319)
static void C_fcall f_29319(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29327)
static void C_ccall f_29327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29313)
static void C_fcall f_29313(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29301)
static void C_fcall f_29301(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29298)
static void C_ccall f_29298(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29280)
static void C_fcall f_29280(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29284)
static void C_ccall f_29284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29175)
static void C_fcall f_29175(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29165)
static void C_fcall f_29165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29153)
static void C_fcall f_29153(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29130)
static void C_ccall f_29130(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29121)
static void C_fcall f_29121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29085)
static void C_fcall f_29085(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29064)
static void C_ccall f_29064(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28868)
static void C_ccall f_28868(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28872)
static void C_fcall f_28872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29021)
static void C_fcall f_29021(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29047)
static void C_ccall f_29047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29032)
static void C_ccall f_29032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28878)
static void C_ccall f_28878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28883)
static void C_ccall f_28883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28887)
static void C_ccall f_28887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28890)
static void C_ccall f_28890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28893)
static void C_ccall f_28893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28896)
static void C_ccall f_28896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28899)
static void C_ccall f_28899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28902)
static void C_ccall f_28902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28907)
static void C_fcall f_28907(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29001)
static void C_ccall f_29001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29008)
static void C_ccall f_29008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28917)
static void C_ccall f_28917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28938)
static void C_ccall f_28938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28942)
static void C_ccall f_28942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28946)
static void C_ccall f_28946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28948)
static void C_fcall f_28948(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28958)
static void C_ccall f_28958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28920)
static void C_ccall f_28920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28923)
static void C_ccall f_28923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28742)
static void C_ccall f_28742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28748)
static void C_ccall f_28748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28752)
static void C_ccall f_28752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28770)
static void C_ccall f_28770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28773)
static void C_ccall f_28773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28777)
static void C_ccall f_28777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28780)
static void C_ccall f_28780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28832)
static void C_fcall f_28832(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28843)
static void C_ccall f_28843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28783)
static void C_ccall f_28783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28793)
static void C_ccall f_28793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28795)
static void C_fcall f_28795(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28639)
static void C_ccall f_28639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28663)
static void C_ccall f_28663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28667)
static void C_ccall f_28667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28693)
static void C_fcall f_28693(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28703)
static void C_ccall f_28703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28740)
static void C_ccall f_28740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28732)
static void C_ccall f_28732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28670)
static void C_ccall f_28670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28640)
static void C_fcall f_28640(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28644)
static void C_ccall f_28644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28647)
static void C_ccall f_28647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28809)
static void C_ccall f_28809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28812)
static void C_fcall f_28812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28819)
static void C_ccall f_28819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28753)
static void C_fcall f_28753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28757)
static void C_ccall f_28757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28760)
static void C_ccall f_28760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28229)
static void C_ccall f_28229(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28229)
static void C_ccall f_28229r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_28608)
static void C_fcall f_28608(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28602)
static void C_ccall f_28602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28233)
static void C_ccall f_28233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28586)
static void C_ccall f_28586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28236)
static void C_ccall f_28236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28572)
static void C_ccall f_28572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28568)
static void C_ccall f_28568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28239)
static void C_fcall f_28239(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28561)
static void C_ccall f_28561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28557)
static void C_ccall f_28557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28242)
static void C_fcall f_28242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28245)
static void C_fcall f_28245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8839)
static void C_fcall f_8839(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8862)
static void C_ccall f_8862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8852)
static void C_fcall f_8852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28545)
static void C_ccall f_28545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28537)
static void C_ccall f_28537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28541)
static void C_ccall f_28541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28529)
static void C_ccall f_28529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28533)
static void C_ccall f_28533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28403)
static void C_fcall f_28403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28518)
static void C_ccall f_28518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28522)
static void C_ccall f_28522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28510)
static void C_ccall f_28510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28514)
static void C_ccall f_28514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28406)
static void C_fcall f_28406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28410)
static void C_ccall f_28410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28415)
static void C_fcall f_28415(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28425)
static void C_fcall f_28425(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28428)
static void C_ccall f_28428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28309)
static void C_ccall f_28309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28372)
static void C_fcall f_28372(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28393)
static void C_ccall f_28393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28334)
static void C_fcall f_28334(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28363)
static void C_ccall f_28363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28312)
static void C_ccall f_28312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28329)
static void C_ccall f_28329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28325)
static void C_ccall f_28325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27775)
static void C_ccall f_27775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27779)
static void C_ccall f_27779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27767)
static void C_ccall f_27767(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27695)
static void C_ccall f_27695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27753)
static void C_ccall f_27753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27699)
static void C_ccall f_27699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27707)
static void C_fcall f_27707(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27717)
static void C_ccall f_27717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27720)
static void C_ccall f_27720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28289)
static void C_fcall f_28289(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28259)
static void C_fcall f_28259(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28248)
static void C_ccall f_28248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28172)
static void C_ccall f_28172(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28180)
static void C_ccall f_28180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28184)
static void C_ccall f_28184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28188)
static void C_ccall f_28188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28194)
static void C_fcall f_28194(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28204)
static void C_ccall f_28204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27960)
static void C_ccall f_27960(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28028)
static void C_ccall f_28028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28031)
static void C_ccall f_28031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28034)
static void C_ccall f_28034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28037)
static void C_ccall f_28037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28040)
static void C_ccall f_28040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28138)
static void C_fcall f_28138(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28148)
static void C_ccall f_28148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28106)
static void C_fcall f_28106(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28116)
static void C_ccall f_28116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28057)
static void C_fcall f_28057(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28076)
static void C_fcall f_28076(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28086)
static void C_ccall f_28086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28067)
static void C_ccall f_28067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28043)
static void C_ccall f_28043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27996)
static void C_fcall f_27996(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28006)
static void C_ccall f_28006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27979)
static void C_fcall f_27979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27986)
static void C_ccall f_27986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27962)
static void C_fcall f_27962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27969)
static void C_ccall f_27969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27781)
static void C_ccall f_27781(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27789)
static void C_ccall f_27789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27793)
static void C_ccall f_27793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27795)
static void C_fcall f_27795(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27805)
static void C_fcall f_27805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27936)
static void C_ccall f_27936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27885)
static void C_ccall f_27885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27888)
static void C_ccall f_27888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27899)
static void C_ccall f_27899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27851)
static void C_ccall f_27851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27820)
static void C_ccall f_27820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27823)
static void C_ccall f_27823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27808)
static void C_ccall f_27808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27375)
static void C_ccall f_27375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27689)
static void C_ccall f_27689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27618)
static void C_ccall f_27618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27620)
static void C_fcall f_27620(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27642)
static void C_fcall f_27642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27388)
static void C_ccall f_27388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27461)
static void C_fcall f_27461(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27614)
static void C_ccall f_27614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27598)
static void C_ccall f_27598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27550)
static void C_fcall f_27550(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27564)
static void C_fcall f_27564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27517)
static void C_ccall f_27517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27492)
static void C_fcall f_27492(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27391)
static void C_ccall f_27391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27399)
static void C_fcall f_27399(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25902)
static void C_ccall f_25902(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_25902)
static void C_ccall f_25902r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_27352)
static void C_ccall f_27352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27367)
static void C_ccall f_27367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27359)
static void C_ccall f_27359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27323)
static void C_ccall f_27323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27327)
static void C_ccall f_27327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27288)
static void C_ccall f_27288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27292)
static void C_ccall f_27292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27253)
static void C_ccall f_27253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27257)
static void C_ccall f_27257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27218)
static void C_ccall f_27218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27222)
static void C_ccall f_27222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27183)
static void C_ccall f_27183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27187)
static void C_ccall f_27187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27148)
static void C_ccall f_27148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27152)
static void C_ccall f_27152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25906)
static void C_fcall f_25906(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27112)
static void C_ccall f_27112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27127)
static void C_ccall f_27127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27119)
static void C_ccall f_27119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27083)
static void C_ccall f_27083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27087)
static void C_ccall f_27087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27048)
static void C_ccall f_27048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27052)
static void C_ccall f_27052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27013)
static void C_ccall f_27013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27017)
static void C_ccall f_27017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26978)
static void C_ccall f_26978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26982)
static void C_ccall f_26982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26943)
static void C_ccall f_26943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26947)
static void C_ccall f_26947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26908)
static void C_ccall f_26908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26912)
static void C_ccall f_26912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25909)
static void C_fcall f_25909(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26872)
static void C_ccall f_26872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26887)
static void C_ccall f_26887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26879)
static void C_ccall f_26879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26843)
static void C_ccall f_26843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26847)
static void C_ccall f_26847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26808)
static void C_ccall f_26808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26812)
static void C_ccall f_26812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26773)
static void C_ccall f_26773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26777)
static void C_ccall f_26777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26738)
static void C_ccall f_26738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26742)
static void C_ccall f_26742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26703)
static void C_ccall f_26703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26707)
static void C_ccall f_26707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26668)
static void C_ccall f_26668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26672)
static void C_ccall f_26672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25912)
static void C_fcall f_25912(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26632)
static void C_ccall f_26632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26647)
static void C_ccall f_26647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26639)
static void C_ccall f_26639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26603)
static void C_ccall f_26603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26607)
static void C_ccall f_26607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26568)
static void C_ccall f_26568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26572)
static void C_ccall f_26572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26533)
static void C_ccall f_26533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26537)
static void C_ccall f_26537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26498)
static void C_ccall f_26498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26502)
static void C_ccall f_26502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26463)
static void C_ccall f_26463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26467)
static void C_ccall f_26467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26428)
static void C_ccall f_26428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26432)
static void C_ccall f_26432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25915)
static void C_fcall f_25915(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26392)
static void C_ccall f_26392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26407)
static void C_ccall f_26407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26399)
static void C_ccall f_26399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26363)
static void C_ccall f_26363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26367)
static void C_ccall f_26367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26328)
static void C_ccall f_26328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26332)
static void C_ccall f_26332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26293)
static void C_ccall f_26293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26297)
static void C_ccall f_26297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26258)
static void C_ccall f_26258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26262)
static void C_ccall f_26262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26223)
static void C_ccall f_26223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26227)
static void C_ccall f_26227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26188)
static void C_ccall f_26188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26192)
static void C_ccall f_26192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25918)
static void C_fcall f_25918(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26152)
static void C_ccall f_26152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26167)
static void C_ccall f_26167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26159)
static void C_ccall f_26159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26123)
static void C_ccall f_26123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26127)
static void C_ccall f_26127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26088)
static void C_ccall f_26088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26092)
static void C_ccall f_26092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26053)
static void C_ccall f_26053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26057)
static void C_ccall f_26057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26018)
static void C_ccall f_26018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26022)
static void C_ccall f_26022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25983)
static void C_ccall f_25983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25987)
static void C_ccall f_25987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25948)
static void C_ccall f_25948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25952)
static void C_ccall f_25952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25921)
static void C_fcall f_25921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25924)
static void C_ccall f_25924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25670)
static void C_fcall f_25670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25676)
static void C_ccall f_25676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25679)
static void C_ccall f_25679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25883)
static void C_ccall f_25883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25868)
static void C_ccall f_25868(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25803)
static void C_ccall f_25803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8607)
static void C_fcall f_8607(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25779)
static void C_ccall f_25779(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25783)
static void C_ccall f_25783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25769)
static void C_ccall f_25769(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25777)
static void C_ccall f_25777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25755)
static void C_fcall f_25755(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25681)
static void C_fcall f_25681(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25750)
static void C_ccall f_25750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25685)
static void C_ccall f_25685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25722)
static void C_fcall f_25722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25696)
static void C_fcall f_25696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25641)
static void C_ccall f_25641(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25645)
static void C_ccall f_25645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25656)
static void C_ccall f_25656(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25654)
static void C_ccall f_25654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25610)
static void C_ccall f_25610(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25614)
static void C_ccall f_25614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25625)
static void C_ccall f_25625(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25623)
static void C_ccall f_25623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25592)
static void C_ccall f_25592(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25600)
static void C_ccall f_25600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25608)
static void C_ccall f_25608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25582)
static void C_ccall f_25582(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25590)
static void C_ccall f_25590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25523)
static void C_ccall f_25523(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25530)
static void C_ccall f_25530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25533)
static void C_ccall f_25533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25536)
static void C_ccall f_25536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25541)
static void C_fcall f_25541(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25485)
static void C_ccall f_25485(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25493)
static void C_ccall f_25493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25497)
static void C_ccall f_25497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25517)
static void C_ccall f_25517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25501)
static void C_ccall f_25501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25509)
static void C_ccall f_25509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25505)
static void C_ccall f_25505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25476)
static void C_ccall f_25476(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25467)
static void C_fcall f_25467(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25458)
static void C_ccall f_25458(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25449)
static void C_fcall f_25449(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25440)
static void C_ccall f_25440(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25431)
static void C_fcall f_25431(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25422)
static void C_ccall f_25422(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25407)
static void C_fcall f_25407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25401)
static void C_fcall f_25401(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25356)
static void C_fcall f_25356(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7717)
static void C_ccall f_7717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25314)
static void C_fcall f_25314(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25324)
static void C_ccall f_25324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24438)
static void C_ccall f_24438(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7645)
static void C_ccall f_7645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24407)
static void C_ccall f_24407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24091)
static void C_ccall f_24091(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_24091)
static void C_ccall f_24091r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_24095)
static void C_fcall f_24095(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24152)
static void C_ccall f_24152(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24124)
static void C_ccall f_24124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24189)
static void C_ccall f_24189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24226)
static void C_ccall f_24226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24229)
static void C_ccall f_24229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24389)
static void C_ccall f_24389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24236)
static void C_ccall f_24236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24239)
static void C_ccall f_24239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24241)
static void C_fcall f_24241(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24251)
static void C_ccall f_24251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24254)
static void C_ccall f_24254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24287)
static void C_ccall f_24287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24375)
static void C_ccall f_24375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24290)
static void C_ccall f_24290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24361)
static void C_ccall f_24361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24347)
static void C_ccall f_24347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24327)
static void C_ccall f_24327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24330)
static void C_ccall f_24330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24307)
static void C_ccall f_24307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24310)
static void C_ccall f_24310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24293)
static void C_ccall f_24293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24190)
static void C_fcall f_24190(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24196)
static void C_fcall f_24196(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24206)
static void C_fcall f_24206(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24075)
static void C_fcall f_24075(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24079)
static void C_ccall f_24079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24086)
static void C_ccall f_24086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24070)
static void C_fcall f_24070(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23923)
static void C_ccall f_23923(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_23923)
static void C_ccall f_23923r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23927)
static void C_fcall f_23927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23996)
static void C_ccall f_23996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24039)
static void C_ccall f_24039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24043)
static void C_ccall f_24043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24032)
static void C_ccall f_24032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24019)
static void C_ccall f_24019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23938)
static void C_ccall f_23938(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23981)
static void C_ccall f_23981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23985)
static void C_ccall f_23985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23974)
static void C_ccall f_23974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23961)
static void C_ccall f_23961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23734)
static void C_ccall f_23734(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23914)
static void C_ccall f_23914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23835)
static void C_ccall f_23835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23884)
static void C_ccall f_23884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23880)
static void C_ccall f_23880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23852)
static void C_ccall f_23852(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23787)
static void C_fcall f_23787(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23796)
static void C_fcall f_23796(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23780)
static void C_ccall f_23780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23599)
static void C_ccall f_23599(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23725)
static void C_ccall f_23725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23721)
static void C_ccall f_23721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23699)
static void C_ccall f_23699(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23629)
static void C_fcall f_23629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23645)
static void C_fcall f_23645(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23554)
static void C_ccall f_23554(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23597)
static void C_ccall f_23597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23586)
static void C_ccall f_23586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23438)
static void C_ccall f_23438(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23552)
static void C_ccall f_23552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23453)
static void C_fcall f_23453(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23483)
static void C_fcall f_23483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23502)
static void C_ccall f_23502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23487)
static void C_ccall f_23487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23466)
static void C_fcall f_23466(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23316)
static void C_ccall f_23316(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23436)
static void C_ccall f_23436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23331)
static void C_fcall f_23331(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23361)
static void C_fcall f_23361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23380)
static void C_ccall f_23380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23365)
static void C_ccall f_23365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23344)
static void C_fcall f_23344(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23219)
static void C_ccall f_23219(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23314)
static void C_ccall f_23314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23234)
static void C_fcall f_23234(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23280)
static void C_ccall f_23280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23265)
static void C_ccall f_23265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23247)
static void C_fcall f_23247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23166)
static void C_fcall f_23166(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23204)
static void C_ccall f_23204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23211)
static void C_ccall f_23211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23189)
static void C_ccall f_23189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23164)
static void C_ccall f_23164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23145)
static void C_fcall f_23145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23132)
static void C_ccall f_23132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23114)
static void C_ccall f_23114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23067)
static void C_fcall f_23067(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23071)
static void C_ccall f_23071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23096)
static void C_ccall f_23096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23083)
static void C_ccall f_23083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23039)
static void C_ccall f_23039(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23039)
static void C_ccall f_23039r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23020)
static void C_ccall f_23020(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23020)
static void C_ccall f_23020r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22979)
static void C_ccall f_22979(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22979)
static void C_ccall f_22979r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22960)
static void C_ccall f_22960(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22960)
static void C_ccall f_22960r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22732)
static void C_ccall f_22732(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22732)
static void C_ccall f_22732r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22937)
static void C_ccall f_22937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22952)
static void C_ccall f_22952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22944)
static void C_ccall f_22944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22908)
static void C_ccall f_22908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22912)
static void C_ccall f_22912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22873)
static void C_ccall f_22873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22877)
static void C_ccall f_22877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22736)
static void C_fcall f_22736(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22837)
static void C_ccall f_22837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22852)
static void C_ccall f_22852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22844)
static void C_ccall f_22844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22808)
static void C_ccall f_22808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22812)
static void C_ccall f_22812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22773)
static void C_ccall f_22773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22777)
static void C_ccall f_22777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22739)
static void C_fcall f_22739(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22742)
static void C_ccall f_22742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22745)
static void C_fcall f_22745(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22690)
static void C_ccall f_22690(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22690)
static void C_ccall f_22690r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22719)
static void C_ccall f_22719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22704)
static void C_ccall f_22704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22635)
static void C_ccall f_22635(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22646)
static void C_ccall f_22646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22648)
static void C_fcall f_22648(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22676)
static void C_ccall f_22676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22536)
static void C_ccall f_22536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_22536)
static void C_ccall f_22536r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_22540)
static void C_fcall f_22540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22543)
static void C_ccall f_22543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22608)
static void C_ccall f_22608(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22545)
static void C_fcall f_22545(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22561)
static void C_ccall f_22561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22265)
static void C_ccall f_22265(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22265)
static void C_ccall f_22265r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22298)
static void C_ccall f_22298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22283)
static void C_ccall f_22283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22244)
static void C_ccall f_22244(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22209)
static void C_ccall f_22209(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22209)
static void C_ccall f_22209r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22213)
static void C_fcall f_22213(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22001)
static void C_ccall f_22001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_22001)
static void C_ccall f_22001r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_22014)
static void C_fcall f_22014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22096)
static void C_fcall f_22096(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22099)
static void C_ccall f_22099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22107)
static void C_fcall f_22107(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22119)
static void C_fcall f_22119(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22140)
static void C_ccall f_22140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22148)
static void C_ccall f_22148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22035)
static void C_ccall f_22035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22040)
static void C_fcall f_22040(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22072)
static void C_ccall f_22072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21894)
static void C_ccall f_21894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21894)
static void C_ccall f_21894r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21981)
static void C_ccall f_21981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21901)
static void C_fcall f_21901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21910)
static void C_fcall f_21910(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21957)
static void C_ccall f_21957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21923)
static void C_fcall f_21923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21949)
static void C_ccall f_21949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21761)
static void C_ccall f_21761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_21761)
static void C_ccall f_21761r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_21765)
static void C_fcall f_21765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21768)
static void C_fcall f_21768(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21872)
static void C_ccall f_21872(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21770)
static void C_fcall f_21770(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21777)
static void C_ccall f_21777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21819)
static void C_ccall f_21819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21826)
static void C_ccall f_21826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21800)
static void C_ccall f_21800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21694)
static void C_ccall f_21694(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_21694)
static void C_ccall f_21694r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_21698)
static void C_fcall f_21698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21744)
static void C_ccall f_21744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21701)
static void C_fcall f_21701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21737)
static void C_ccall f_21737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21704)
static void C_fcall f_21704(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21717)
static void C_ccall f_21717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21648)
static void C_ccall f_21648(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21648)
static void C_ccall f_21648r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21652)
static void C_ccall f_21652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21562)
static void C_fcall f_21562(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21566)
static void C_ccall f_21566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21569)
static void C_ccall f_21569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21578)
static void C_fcall f_21578(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21600)
static void C_ccall f_21600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21547)
static void C_ccall f_21547(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21517)
static void C_ccall f_21517(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21281)
static void C_ccall f_21281(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21281)
static void C_ccall f_21281r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21494)
static void C_ccall f_21494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21509)
static void C_ccall f_21509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21501)
static void C_ccall f_21501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21465)
static void C_ccall f_21465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21469)
static void C_ccall f_21469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21430)
static void C_ccall f_21430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21434)
static void C_ccall f_21434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21285)
static void C_fcall f_21285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21394)
static void C_ccall f_21394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21409)
static void C_ccall f_21409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21401)
static void C_ccall f_21401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21365)
static void C_ccall f_21365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21369)
static void C_ccall f_21369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21330)
static void C_ccall f_21330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21334)
static void C_ccall f_21334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21288)
static void C_fcall f_21288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21291)
static void C_ccall f_21291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21302)
static void C_ccall f_21302(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21241)
static void C_ccall f_21241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21245)
static void C_ccall f_21245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21275)
static void C_ccall f_21275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21256)
static void C_ccall f_21256(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21264)
static void C_ccall f_21264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21220)
static void C_ccall f_21220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21232)
static void C_ccall f_21232(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21177)
static void C_ccall f_21177(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21177)
static void C_ccall f_21177r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21207)
static void C_ccall f_21207(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21134)
static void C_ccall f_21134(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21134)
static void C_ccall f_21134r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21164)
static void C_ccall f_21164(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21065)
static void C_ccall f_21065(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21065)
static void C_ccall f_21065r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21109)
static void C_ccall f_21109(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20996)
static void C_ccall f_20996(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20996)
static void C_ccall f_20996r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21040)
static void C_ccall f_21040(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20990)
static void C_ccall f_20990(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20984)
static void C_ccall f_20984(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20963)
static void C_ccall f_20963(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20975)
static void C_ccall f_20975(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20948)
static void C_ccall f_20948(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20837)
static void C_ccall f_20837(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_20837)
static void C_ccall f_20837r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_20912)
static void C_ccall f_20912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20841)
static void C_fcall f_20841(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20881)
static void C_ccall f_20881(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20870)
static void C_ccall f_20870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20855)
static void C_ccall f_20855(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20863)
static void C_ccall f_20863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20803)
static void C_ccall f_20803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_20803)
static void C_ccall f_20803r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_20815)
static void C_ccall f_20815(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19756)
static void C_ccall f_19756(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19756)
static void C_ccall f_19756r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20780)
static void C_ccall f_20780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20795)
static void C_ccall f_20795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20787)
static void C_ccall f_20787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20751)
static void C_ccall f_20751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20755)
static void C_ccall f_20755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20716)
static void C_ccall f_20716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20720)
static void C_ccall f_20720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19766)
static void C_fcall f_19766(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20680)
static void C_ccall f_20680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20695)
static void C_ccall f_20695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20687)
static void C_ccall f_20687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20651)
static void C_ccall f_20651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20655)
static void C_ccall f_20655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20616)
static void C_ccall f_20616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20620)
static void C_ccall f_20620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19769)
static void C_fcall f_19769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19772)
static void C_ccall f_19772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19777)
static void C_ccall f_19777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20509)
static void C_fcall f_20509(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20532)
static void C_fcall f_20532(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20585)
static void C_ccall f_20585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20567)
static void C_fcall f_20567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20560)
static void C_ccall f_20560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20542)
static void C_ccall f_20542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20519)
static void C_ccall f_20519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19971)
static void C_ccall f_19971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20471)
static void C_fcall f_20471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20493)
static void C_ccall f_20493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20477)
static void C_ccall f_20477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20485)
static void C_ccall f_20485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20489)
static void C_ccall f_20489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20475)
static void C_ccall f_20475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20465)
static void C_ccall f_20465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19974)
static void C_fcall f_19974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20342)
static void C_fcall f_20342(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20366)
static void C_ccall f_20366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20428)
static void C_fcall f_20428(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20369)
static void C_ccall f_20369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20385)
static void C_fcall f_20385(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20410)
static void C_ccall f_20410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20376)
static void C_ccall f_20376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20353)
static void C_ccall f_20353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19977)
static void C_ccall f_19977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20328)
static void C_ccall f_20328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19981)
static void C_ccall f_19981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20025)
static void C_ccall f_20025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20028)
static void C_ccall f_20028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20309)
static void C_fcall f_20309(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20319)
static void C_ccall f_20319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20031)
static void C_ccall f_20031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20247)
static void C_fcall f_20247(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20257)
static void C_ccall f_20257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20260)
static void C_ccall f_20260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20280)
static void C_ccall f_20280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20282)
static void C_fcall f_20282(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20292)
static void C_ccall f_20292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20266)
static void C_ccall f_20266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20269)
static void C_ccall f_20269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20034)
static void C_ccall f_20034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20042)
static void C_fcall f_20042(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20055)
static void C_ccall f_20055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19929)
static void C_ccall f_19929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19938)
static void C_fcall f_19938(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19960)
static void C_ccall f_19960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19949)
static void C_ccall f_19949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20058)
static void C_ccall f_20058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20218)
static void C_ccall f_20218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20220)
static void C_fcall f_20220(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20230)
static void C_ccall f_20230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20064)
static void C_ccall f_20064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20191)
static void C_ccall f_20191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20193)
static void C_fcall f_20193(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20203)
static void C_ccall f_20203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20067)
static void C_ccall f_20067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20079)
static void C_fcall f_20079(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20105)
static void C_ccall f_20105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20111)
static void C_ccall f_20111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20117)
static void C_ccall f_20117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20159)
static void C_ccall f_20159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20171)
static void C_ccall f_20171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20163)
static void C_ccall f_20163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20120)
static void C_fcall f_20120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20130)
static void C_ccall f_20130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20132)
static void C_fcall f_20132(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20142)
static void C_ccall f_20142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20123)
static void C_ccall f_20123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20092)
static void C_ccall f_20092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20070)
static void C_ccall f_20070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20037)
static void C_ccall f_20037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19984)
static void C_ccall f_19984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20007)
static void C_ccall f_20007(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19996)
static void C_ccall f_19996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19861)
static void C_fcall f_19861(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19909)
static void C_ccall f_19909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19871)
static void C_ccall f_19871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19899)
static void C_ccall f_19899(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19874)
static void C_ccall f_19874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19779)
static void C_fcall f_19779(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8800)
static void C_fcall f_8800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8820)
static void C_ccall f_8820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8810)
static void C_fcall f_8810(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19851)
static void C_fcall f_19851(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19783)
static void C_ccall f_19783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19801)
static void C_ccall f_19801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19833)
static void C_ccall f_19833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19662)
static void C_ccall f_19662(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19666)
static void C_ccall f_19666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19695)
static void C_ccall f_19695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19700)
static void C_fcall f_19700(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19725)
static void C_fcall f_19725(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19710)
static void C_ccall f_19710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19144)
static void C_ccall f_19144(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19144)
static void C_ccall f_19144r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19415)
static void C_ccall f_19415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19419)
static void C_ccall f_19419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19424)
static void C_ccall f_19424(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19424)
static void C_ccall f_19424r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19630)
static void C_ccall f_19630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19645)
static void C_ccall f_19645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19637)
static void C_ccall f_19637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19601)
static void C_ccall f_19601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19605)
static void C_ccall f_19605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19566)
static void C_ccall f_19566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19570)
static void C_ccall f_19570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19428)
static void C_fcall f_19428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19530)
static void C_ccall f_19530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19545)
static void C_ccall f_19545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19537)
static void C_ccall f_19537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19501)
static void C_ccall f_19501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19505)
static void C_ccall f_19505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19466)
static void C_ccall f_19466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19470)
static void C_ccall f_19470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19431)
static void C_fcall f_19431(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19434)
static void C_ccall f_19434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19437)
static void C_fcall f_19437(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19406)
static void C_ccall f_19406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19148)
static void C_ccall f_19148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19375)
static void C_ccall f_19375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19390)
static void C_ccall f_19390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19382)
static void C_ccall f_19382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19346)
static void C_ccall f_19346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19350)
static void C_ccall f_19350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19311)
static void C_ccall f_19311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19315)
static void C_ccall f_19315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19151)
static void C_fcall f_19151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19275)
static void C_ccall f_19275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19290)
static void C_ccall f_19290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19282)
static void C_ccall f_19282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19246)
static void C_ccall f_19246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19250)
static void C_ccall f_19250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19211)
static void C_ccall f_19211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19215)
static void C_ccall f_19215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19154)
static void C_fcall f_19154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19157)
static void C_ccall f_19157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19160)
static void C_ccall f_19160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19172)
static void C_ccall f_19172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19190)
static void C_ccall f_19190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19178)
static void C_ccall f_19178(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19166)
static void C_ccall f_19166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19081)
static void C_fcall f_19081(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18741)
static void C_ccall f_18741(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18923)
static void C_ccall f_18923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18927)
static void C_ccall f_18927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18929)
static void C_fcall f_18929(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18854)
static void C_fcall f_18854(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18864)
static void C_fcall f_18864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18871)
static void C_fcall f_18871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18939)
static void C_ccall f_18939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18942)
static void C_ccall f_18942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18946)
static void C_ccall f_18946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18966)
static void C_fcall f_18966(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18982)
static void C_ccall f_18982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18949)
static void C_ccall f_18949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18744)
static void C_fcall f_18744(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18756)
static void C_fcall f_18756(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18792)
static void C_ccall f_18792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18812)
static void C_ccall f_18812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18817)
static void C_fcall f_18817(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18254)
static void C_ccall f_18254(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18254)
static void C_ccall f_18254r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18181)
static void C_fcall f_18181(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_18026)
static void C_ccall f_18026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18032)
static void C_ccall f_18032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18117)
static void C_fcall f_18117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18044)
static void C_ccall f_18044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18060)
static void C_ccall f_18060(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18064)
static void C_fcall f_18064(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18067)
static void C_fcall f_18067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18047)
static void C_ccall f_18047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18058)
static void C_ccall f_18058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18198)
static void C_ccall f_18198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18735)
static void C_ccall f_18735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18258)
static void C_ccall f_18258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18704)
static void C_ccall f_18704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18719)
static void C_ccall f_18719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18711)
static void C_ccall f_18711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18675)
static void C_ccall f_18675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18679)
static void C_ccall f_18679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18640)
static void C_ccall f_18640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18644)
static void C_ccall f_18644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18605)
static void C_ccall f_18605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18609)
static void C_ccall f_18609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18261)
static void C_fcall f_18261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18569)
static void C_ccall f_18569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18584)
static void C_ccall f_18584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18576)
static void C_ccall f_18576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18540)
static void C_ccall f_18540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18544)
static void C_ccall f_18544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18505)
static void C_ccall f_18505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18509)
static void C_ccall f_18509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18470)
static void C_ccall f_18470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18474)
static void C_ccall f_18474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18264)
static void C_fcall f_18264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18434)
static void C_ccall f_18434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18449)
static void C_ccall f_18449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18441)
static void C_ccall f_18441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18405)
static void C_ccall f_18405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18409)
static void C_ccall f_18409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18370)
static void C_ccall f_18370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18374)
static void C_ccall f_18374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18335)
static void C_ccall f_18335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18339)
static void C_ccall f_18339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18267)
static void C_fcall f_18267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18270)
static void C_ccall f_18270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18273)
static void C_ccall f_18273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18306)
static void C_ccall f_18306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18314)
static void C_ccall f_18314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18279)
static void C_ccall f_18279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18292)
static void C_ccall f_18292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18282)
static void C_fcall f_18282(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18285)
static void C_ccall f_18285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17821)
static void C_ccall f_17821(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17825)
static void C_ccall f_17825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17828)
static void C_ccall f_17828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17831)
static void C_ccall f_17831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18000)
static void C_ccall f_18000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18013)
static void C_ccall f_18013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18017)
static void C_ccall f_18017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17837)
static void C_ccall f_17837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17993)
static void C_ccall f_17993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17974)
static void C_ccall f_17974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17981)
static void C_ccall f_17981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17985)
static void C_ccall f_17985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17843)
static void C_fcall f_17843(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17849)
static void C_ccall f_17849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17933)
static void C_ccall f_17933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17935)
static void C_fcall f_17935(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17957)
static void C_ccall f_17957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17964)
static void C_ccall f_17964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17968)
static void C_ccall f_17968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17954)
static void C_fcall f_17954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17950)
static void C_ccall f_17950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17891)
static void C_ccall f_17891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17908)
static void C_fcall f_17908(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17918)
static void C_ccall f_17918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17894)
static void C_ccall f_17894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17853)
static void C_fcall f_17853(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17861)
static void C_ccall f_17861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17863)
static void C_fcall f_17863(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17884)
static void C_ccall f_17884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17721)
static void C_fcall f_17721(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17819)
static void C_ccall f_17819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17778)
static void C_fcall f_17778(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17811)
static void C_ccall f_17811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17807)
static void C_ccall f_17807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17792)
static void C_ccall f_17792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17728)
static void C_ccall f_17728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17736)
static void C_fcall f_17736(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17769)
static void C_ccall f_17769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17753)
static void C_ccall f_17753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16954)
static void C_ccall f_16954(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16954)
static void C_ccall f_16954r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17271)
static void C_ccall f_17271(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17278)
static void C_fcall f_17278(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17683)
static void C_ccall f_17683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17698)
static void C_ccall f_17698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17690)
static void C_ccall f_17690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17654)
static void C_ccall f_17654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17658)
static void C_ccall f_17658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17619)
static void C_ccall f_17619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17623)
static void C_ccall f_17623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17584)
static void C_ccall f_17584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17588)
static void C_ccall f_17588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17281)
static void C_fcall f_17281(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17548)
static void C_ccall f_17548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17563)
static void C_ccall f_17563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17555)
static void C_ccall f_17555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17519)
static void C_ccall f_17519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17523)
static void C_ccall f_17523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17484)
static void C_ccall f_17484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17488)
static void C_ccall f_17488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17449)
static void C_ccall f_17449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17453)
static void C_ccall f_17453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17284)
static void C_fcall f_17284(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17413)
static void C_ccall f_17413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17428)
static void C_ccall f_17428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17420)
static void C_ccall f_17420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17384)
static void C_ccall f_17384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17388)
static void C_ccall f_17388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17349)
static void C_ccall f_17349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17353)
static void C_ccall f_17353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17314)
static void C_ccall f_17314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17318)
static void C_ccall f_17318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17287)
static void C_fcall f_17287(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17290)
static void C_ccall f_17290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16958)
static void C_ccall f_16958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16961)
static void C_ccall f_16961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17235)
static void C_ccall f_17235(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17239)
static void C_ccall f_17239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17242)
static void C_ccall f_17242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17245)
static void C_ccall f_17245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17248)
static void C_ccall f_17248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17261)
static void C_ccall f_17261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17251)
static void C_fcall f_17251(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16967)
static void C_ccall f_16967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17230)
static void C_ccall f_17230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16974)
static void C_fcall f_16974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17205)
static void C_ccall f_17205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17220)
static void C_ccall f_17220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17212)
static void C_ccall f_17212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17176)
static void C_ccall f_17176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17180)
static void C_ccall f_17180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17141)
static void C_ccall f_17141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17145)
static void C_ccall f_17145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16977)
static void C_fcall f_16977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17105)
static void C_ccall f_17105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17120)
static void C_ccall f_17120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17112)
static void C_ccall f_17112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17076)
static void C_ccall f_17076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17080)
static void C_ccall f_17080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17041)
static void C_ccall f_17041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17045)
static void C_ccall f_17045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16980)
static void C_fcall f_16980(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16983)
static void C_ccall f_16983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16998)
static void C_ccall f_16998(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17020)
static void C_ccall f_17020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17004)
static void C_ccall f_17004(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17012)
static void C_ccall f_17012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16986)
static void C_ccall f_16986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16989)
static void C_ccall f_16989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16871)
static void C_fcall f_16871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16862)
static void C_fcall f_16862(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16853)
static void C_fcall f_16853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16835)
static void C_fcall f_16835(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16817)
static void C_fcall f_16817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16799)
static void C_fcall f_16799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16790)
static void C_fcall f_16790(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16781)
static void C_fcall f_16781(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16559)
static void C_ccall f_16559(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16609)
static void C_ccall f_16609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16754)
static void C_ccall f_16754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16635)
static void C_ccall f_16635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16750)
static void C_ccall f_16750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16735)
static void C_ccall f_16735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16716)
static void C_ccall f_16716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16689)
static void C_ccall f_16689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16642)
static void C_ccall f_16642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16612)
static void C_fcall f_16612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16562)
static void C_ccall f_16562(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16568)
static void C_fcall f_16568(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16584)
static void C_ccall f_16584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16587)
static void C_ccall f_16587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16085)
static void C_ccall f_16085(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16085)
static void C_ccall f_16085r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16549)
static void C_ccall f_16549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16089)
static void C_fcall f_16089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16521)
static void C_ccall f_16521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16536)
static void C_ccall f_16536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16528)
static void C_ccall f_16528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16492)
static void C_ccall f_16492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16496)
static void C_ccall f_16496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16457)
static void C_ccall f_16457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16461)
static void C_ccall f_16461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16422)
static void C_ccall f_16422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16426)
static void C_ccall f_16426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16092)
static void C_fcall f_16092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16386)
static void C_ccall f_16386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16401)
static void C_ccall f_16401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16393)
static void C_ccall f_16393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16357)
static void C_ccall f_16357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16361)
static void C_ccall f_16361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16322)
static void C_ccall f_16322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16326)
static void C_ccall f_16326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16287)
static void C_ccall f_16287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16291)
static void C_ccall f_16291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16095)
static void C_fcall f_16095(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16251)
static void C_ccall f_16251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16266)
static void C_ccall f_16266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16258)
static void C_ccall f_16258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16222)
static void C_ccall f_16222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16226)
static void C_ccall f_16226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16187)
static void C_ccall f_16187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16191)
static void C_ccall f_16191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16152)
static void C_ccall f_16152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16156)
static void C_ccall f_16156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16098)
static void C_fcall f_16098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16101)
static void C_ccall f_16101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16104)
static void C_ccall f_16104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16119)
static void C_ccall f_16119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16131)
static void C_ccall f_16131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16110)
static void C_ccall f_16110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16113)
static void C_ccall f_16113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16009)
static void C_ccall f_16009(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16013)
static void C_ccall f_16013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16032)
static void C_ccall f_16032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16042)
static void C_ccall f_16042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16044)
static void C_fcall f_16044(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16061)
static void C_ccall f_16061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16064)
static void C_ccall f_16064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16075)
static void C_ccall f_16075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16016)
static void C_ccall f_16016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15746)
static void C_ccall f_15746(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15746)
static void C_ccall f_15746r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15999)
static void C_ccall f_15999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15750)
static void C_fcall f_15750(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15971)
static void C_ccall f_15971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15986)
static void C_ccall f_15986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15978)
static void C_ccall f_15978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15942)
static void C_ccall f_15942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15946)
static void C_ccall f_15946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15907)
static void C_ccall f_15907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15911)
static void C_ccall f_15911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15753)
static void C_fcall f_15753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15871)
static void C_ccall f_15871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15886)
static void C_ccall f_15886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15878)
static void C_ccall f_15878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15842)
static void C_ccall f_15842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15846)
static void C_ccall f_15846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15807)
static void C_ccall f_15807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15811)
static void C_ccall f_15811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15756)
static void C_fcall f_15756(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15759)
static void C_ccall f_15759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15762)
static void C_ccall f_15762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15774)
static void C_ccall f_15774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15786)
static void C_ccall f_15786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15768)
static void C_ccall f_15768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15710)
static void C_ccall f_15710(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15714)
static void C_ccall f_15714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15736)
static void C_ccall f_15736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15730)
static void C_ccall f_15730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15723)
static void C_ccall f_15723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15463)
static void C_ccall f_15463(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15463)
static void C_ccall f_15463r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15467)
static void C_fcall f_15467(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15680)
static void C_ccall f_15680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15695)
static void C_ccall f_15695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15687)
static void C_ccall f_15687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15651)
static void C_ccall f_15651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15655)
static void C_ccall f_15655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15616)
static void C_ccall f_15616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15620)
static void C_ccall f_15620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15470)
static void C_fcall f_15470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15580)
static void C_ccall f_15580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15595)
static void C_ccall f_15595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15587)
static void C_ccall f_15587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15551)
static void C_ccall f_15551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15555)
static void C_ccall f_15555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15516)
static void C_ccall f_15516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15520)
static void C_ccall f_15520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15473)
static void C_fcall f_15473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15476)
static void C_ccall f_15476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15479)
static void C_ccall f_15479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15487)
static void C_ccall f_15487(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15495)
static void C_ccall f_15495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15485)
static void C_ccall f_15485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15248)
static void C_ccall f_15248(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15252)
static void C_ccall f_15252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15461)
static void C_ccall f_15461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15414)
static void C_ccall f_15414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15426)
static void C_fcall f_15426(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15282)
static void C_ccall f_15282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15285)
static void C_ccall f_15285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15291)
static void C_ccall f_15291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15294)
static void C_ccall f_15294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15382)
static void C_fcall f_15382(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15297)
static void C_fcall f_15297(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15376)
static void C_ccall f_15376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15303)
static void C_ccall f_15303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15306)
static void C_ccall f_15306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15258)
static void C_ccall f_15258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15261)
static void C_ccall f_15261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15268)
static void C_ccall f_15268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14778)
static void C_ccall f_14778(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14778)
static void C_ccall f_14778r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14782)
static void C_fcall f_14782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15218)
static void C_ccall f_15218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15233)
static void C_ccall f_15233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15225)
static void C_ccall f_15225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15189)
static void C_ccall f_15189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15193)
static void C_ccall f_15193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15154)
static void C_ccall f_15154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15158)
static void C_ccall f_15158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15119)
static void C_ccall f_15119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15123)
static void C_ccall f_15123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14785)
static void C_fcall f_14785(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15083)
static void C_ccall f_15083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15098)
static void C_ccall f_15098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15090)
static void C_ccall f_15090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15054)
static void C_ccall f_15054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15058)
static void C_ccall f_15058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15019)
static void C_ccall f_15019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15023)
static void C_ccall f_15023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14984)
static void C_ccall f_14984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14988)
static void C_ccall f_14988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14788)
static void C_fcall f_14788(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14948)
static void C_ccall f_14948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14963)
static void C_ccall f_14963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14955)
static void C_ccall f_14955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14919)
static void C_ccall f_14919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14923)
static void C_ccall f_14923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14884)
static void C_ccall f_14884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14888)
static void C_ccall f_14888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14849)
static void C_ccall f_14849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14853)
static void C_ccall f_14853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14791)
static void C_fcall f_14791(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14794)
static void C_ccall f_14794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14797)
static void C_ccall f_14797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14820)
static void C_ccall f_14820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14828)
static void C_ccall f_14828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14803)
static void C_ccall f_14803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14806)
static void C_ccall f_14806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14698)
static void C_fcall f_14698(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14689)
static void C_fcall f_14689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14617)
static void C_ccall f_14617(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14621)
static void C_ccall f_14621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14624)
static void C_fcall f_14624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14362)
static void C_ccall f_14362(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14362)
static void C_ccall f_14362r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14366)
static void C_fcall f_14366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14587)
static void C_ccall f_14587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14602)
static void C_ccall f_14602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14594)
static void C_ccall f_14594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14558)
static void C_ccall f_14558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14562)
static void C_ccall f_14562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14523)
static void C_ccall f_14523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14527)
static void C_ccall f_14527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14369)
static void C_fcall f_14369(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14487)
static void C_ccall f_14487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14502)
static void C_ccall f_14502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14494)
static void C_ccall f_14494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14458)
static void C_ccall f_14458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14462)
static void C_ccall f_14462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14423)
static void C_ccall f_14423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14427)
static void C_ccall f_14427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14372)
static void C_fcall f_14372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14375)
static void C_ccall f_14375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14378)
static void C_ccall f_14378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14390)
static void C_ccall f_14390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14402)
static void C_ccall f_14402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14384)
static void C_ccall f_14384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14247)
static void C_fcall f_14247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14360)
static void C_ccall f_14360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14257)
static void C_ccall f_14257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14345)
static void C_ccall f_14345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14356)
static void C_ccall f_14356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14352)
static void C_ccall f_14352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14260)
static void C_ccall f_14260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14342)
static void C_ccall f_14342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14268)
static void C_ccall f_14268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14277)
static void C_ccall f_14277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14296)
static void C_ccall f_14296(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14325)
static void C_ccall f_14325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14306)
static void C_ccall f_14306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14321)
static void C_ccall f_14321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14309)
static void C_ccall f_14309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14280)
static void C_ccall f_14280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14290)
static void C_ccall f_14290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14271)
static void C_fcall f_14271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14274)
static void C_ccall f_14274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14201)
static void C_fcall f_14201(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14192)
static void C_fcall f_14192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13900)
static void C_fcall f_13900(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13907)
static void C_ccall f_13907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13910)
static void C_ccall f_13910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14181)
static void C_ccall f_14181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14173)
static void C_ccall f_14173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14165)
static void C_ccall f_14165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14168)
static void C_ccall f_14168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14136)
static void C_fcall f_14136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14159)
static void C_ccall f_14159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14142)
static void C_fcall f_14142(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14146)
static void C_ccall f_14146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13913)
static void C_ccall f_13913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13919)
static void C_ccall f_13919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14011)
static void C_ccall f_14011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14123)
static void C_ccall f_14123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14130)
static void C_ccall f_14130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14034)
static void C_fcall f_14034(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14036)
static void C_fcall f_14036(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14085)
static void C_fcall f_14085(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14120)
static void C_ccall f_14120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14109)
static void C_ccall f_14109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14245)
static void C_ccall f_14245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14220)
static void C_ccall f_14220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14241)
static void C_ccall f_14241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14237)
static void C_ccall f_14237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14229)
static void C_ccall f_14229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14102)
static void C_ccall f_14102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14095)
static void C_ccall f_14095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14043)
static void C_ccall f_14043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14083)
static void C_ccall f_14083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14047)
static void C_ccall f_14047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14079)
static void C_ccall f_14079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14066)
static void C_ccall f_14066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14074)
static void C_ccall f_14074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14070)
static void C_ccall f_14070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14050)
static void C_fcall f_14050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14053)
static void C_ccall f_14053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14027)
static void C_ccall f_14027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14014)
static void C_ccall f_14014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14023)
static void C_ccall f_14023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14018)
static void C_ccall f_14018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13925)
static void C_ccall f_13925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14005)
static void C_ccall f_14005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13985)
static void C_ccall f_13985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13991)
static void C_ccall f_13991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14002)
static void C_ccall f_14002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13982)
static void C_ccall f_13982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13970)
static void C_ccall f_13970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13973)
static void C_ccall f_13973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13928)
static void C_ccall f_13928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13964)
static void C_ccall f_13964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13959)
static void C_ccall f_13959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13931)
static void C_ccall f_13931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13944)
static void C_ccall f_13944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13934)
static void C_fcall f_13934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13937)
static void C_ccall f_13937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13940)
static void C_ccall f_13940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13777)
static void C_ccall f_13777(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13777)
static void C_ccall f_13777r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13836)
static void C_ccall f_13836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13846)
static void C_ccall f_13846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13848)
static void C_fcall f_13848(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13877)
static void C_ccall f_13877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13882)
static void C_ccall f_13882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13867)
static void C_fcall f_13867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13798)
static void C_fcall f_13798(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13830)
static void C_ccall f_13830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13758)
static void C_ccall f_13758(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13765)
static void C_ccall f_13765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13772)
static void C_ccall f_13772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13739)
static void C_ccall f_13739(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13746)
static void C_ccall f_13746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13753)
static void C_ccall f_13753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13559)
static void C_fcall f_13559(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_13563)
static void C_ccall f_13563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13566)
static void C_ccall f_13566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13569)
static void C_ccall f_13569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13572)
static void C_ccall f_13572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13729)
static void C_ccall f_13729(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13736)
static void C_ccall f_13736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13575)
static void C_ccall f_13575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13727)
static void C_ccall f_13727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13578)
static void C_fcall f_13578(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13720)
static void C_ccall f_13720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13710)
static void C_ccall f_13710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13584)
static void C_ccall f_13584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13700)
static void C_ccall f_13700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13690)
static void C_ccall f_13690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13590)
static void C_ccall f_13590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13653)
static void C_ccall f_13653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13667)
static void C_ccall f_13667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13683)
static void C_ccall f_13683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13679)
static void C_ccall f_13679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13675)
static void C_ccall f_13675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13671)
static void C_ccall f_13671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13661)
static void C_ccall f_13661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13657)
static void C_ccall f_13657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13593)
static void C_fcall f_13593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13596)
static void C_ccall f_13596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13637)
static void C_ccall f_13637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13602)
static void C_fcall f_13602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13615)
static void C_ccall f_13615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13605)
static void C_ccall f_13605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13608)
static void C_ccall f_13608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13549)
static void C_fcall f_13549(C_word t0) C_noret;
C_noret_decl(f_13490)
static void C_fcall f_13490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13481)
static void C_fcall f_13481(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13364)
static void C_fcall f_13364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13355)
static void C_fcall f_13355(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13346)
static void C_ccall f_13346(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13337)
static void C_fcall f_13337(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13328)
static void C_fcall f_13328(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13310)
static void C_fcall f_13310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13301)
static void C_fcall f_13301(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13292)
static void C_fcall f_13292(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13274)
static void C_fcall f_13274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13265)
static void C_fcall f_13265(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13256)
static void C_fcall f_13256(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13241)
static void C_fcall f_13241(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13196)
static void C_fcall f_13196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13178)
static void C_fcall f_13178(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13169)
static void C_fcall f_13169(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13142)
static void C_fcall f_13142(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13124)
static void C_fcall f_13124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13106)
static void C_fcall f_13106(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13097)
static void C_fcall f_13097(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13085)
static void C_fcall f_13085(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12747)
static void C_fcall f_12747(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12587)
static void C_fcall f_12587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12622)
static void C_fcall f_12622(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12632)
static void C_fcall f_12632(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12636)
static void C_ccall f_12636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12639)
static void C_ccall f_12639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12700)
static void C_ccall f_12700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12691)
static void C_ccall f_12691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12642)
static void C_ccall f_12642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12661)
static void C_ccall f_12661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12668)
static void C_ccall f_12668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12645)
static void C_ccall f_12645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12651)
static void C_ccall f_12651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12620)
static void C_ccall f_12620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12595)
static void C_fcall f_12595(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12594)
static void C_ccall f_12594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12755)
static void C_fcall f_12755(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12333)
static void C_ccall f_12333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12355)
static void C_ccall f_12355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12370)
static void C_ccall f_12370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12373)
static void C_fcall f_12373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12549)
static void C_ccall f_12549(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12543)
static void C_ccall f_12543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12376)
static void C_ccall f_12376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12525)
static void C_ccall f_12525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12379)
static void C_fcall f_12379(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12382)
static void C_ccall f_12382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12518)
static void C_ccall f_12518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12506)
static void C_ccall f_12506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12402)
static void C_fcall f_12402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12409)
static void C_ccall f_12409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12479)
static void C_ccall f_12479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12465)
static void C_ccall f_12465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12473)
static void C_ccall f_12473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12412)
static void C_ccall f_12412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12451)
static void C_ccall f_12451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12415)
static void C_fcall f_12415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12444)
static void C_ccall f_12444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12421)
static void C_ccall f_12421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12424)
static void C_ccall f_12424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12428)
static void C_ccall f_12428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12389)
static void C_fcall f_12389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12392)
static void C_ccall f_12392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12202)
static void C_fcall f_12202(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12211)
static void C_fcall f_12211(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12159)
static void C_ccall f_12159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12165)
static void C_fcall f_12165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12228)
static void C_ccall f_12228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12314)
static void C_ccall f_12314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12301)
static void C_ccall f_12301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12309)
static void C_ccall f_12309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12231)
static void C_ccall f_12231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12235)
static void C_ccall f_12235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12278)
static void C_ccall f_12278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12240)
static void C_ccall f_12240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12206)
static void C_ccall f_12206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12101)
static void C_ccall f_12101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12108)
static void C_ccall f_12108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12139)
static void C_ccall f_12139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12135)
static void C_ccall f_12135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12127)
static void C_ccall f_12127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12010)
static void C_ccall f_12010(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12017)
static void C_ccall f_12017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12085)
static void C_ccall f_12085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12028)
static void C_fcall f_12028(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12055)
static void C_ccall f_12055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12039)
static void C_ccall f_12039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11944)
static void C_ccall f_11944(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11955)
static void C_ccall f_11955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11958)
static void C_fcall f_11958(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11965)
static void C_ccall f_11965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11938)
static void C_ccall f_11938(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11392)
static void C_ccall f_11392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11423)
static void C_ccall f_11423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11887)
static void C_ccall f_11887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11893)
static void C_ccall f_11893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11434)
static void C_ccall f_11434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11319)
static void C_fcall f_11319(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11344)
static void C_ccall f_11344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11279)
static void C_fcall f_11279(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11292)
static void C_fcall f_11292(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11333)
static void C_ccall f_11333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11438)
static void C_ccall f_11438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11875)
static void C_ccall f_11875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11871)
static void C_fcall f_11871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11867)
static void C_ccall f_11867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11441)
static void C_ccall f_11441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11661)
static void C_fcall f_11661(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11770)
static void C_ccall f_11770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11835)
static void C_ccall f_11835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11777)
static void C_fcall f_11777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11781)
static void C_ccall f_11781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11785)
static void C_ccall f_11785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11827)
static void C_ccall f_11827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11823)
static void C_ccall f_11823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11801)
static void C_ccall f_11801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11664)
static void C_fcall f_11664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11667)
static void C_fcall f_11667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11566)
static void C_ccall f_11566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11649)
static void C_ccall f_11649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11616)
static void C_ccall f_11616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11642)
static void C_ccall f_11642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11624)
static void C_ccall f_11624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11572)
static void C_fcall f_11572(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11612)
static void C_ccall f_11612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11554)
static void C_ccall f_11554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11525)
static void C_ccall f_11525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11547)
static void C_ccall f_11547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11533)
static void C_ccall f_11533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11487)
static void C_fcall f_11487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11444)
static void C_fcall f_11444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11455)
static void C_ccall f_11455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11459)
static void C_ccall f_11459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11463)
static void C_ccall f_11463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11467)
static void C_ccall f_11467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11451)
static void C_ccall f_11451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11411)
static void C_fcall f_11411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11406)
static void C_fcall f_11406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11401)
static void C_fcall f_11401(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11233)
static void C_ccall f_11233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11244)
static void C_ccall f_11244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11259)
static void C_ccall f_11259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11195)
static void C_ccall f_11195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11206)
static void C_ccall f_11206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11221)
static void C_ccall f_11221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11128)
static void C_ccall f_11128(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11148)
static void C_fcall f_11148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11158)
static void C_ccall f_11158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11171)
static void C_ccall f_11171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11139)
static void C_ccall f_11139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11146)
static void C_ccall f_11146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10935)
static void C_ccall f_10935(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10995)
static void C_fcall f_10995(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11005)
static void C_ccall f_11005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11119)
static void C_ccall f_11119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11084)
static void C_ccall f_11084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11076)
static void C_ccall f_11076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11047)
static void C_ccall f_11047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11025)
static void C_ccall f_11025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11028)
static void C_ccall f_11028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11016)
static void C_ccall f_11016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10942)
static void C_ccall f_10942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10993)
static void C_ccall f_10993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10985)
static void C_ccall f_10985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10945)
static void C_ccall f_10945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10956)
static void C_ccall f_10956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10960)
static void C_ccall f_10960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10952)
static void C_ccall f_10952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10793)
static void C_ccall f_10793(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10841)
static void C_fcall f_10841(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10851)
static void C_ccall f_10851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10862)
static void C_ccall f_10862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10899)
static void C_ccall f_10899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10874)
static void C_ccall f_10874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10865)
static void C_ccall f_10865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10803)
static void C_ccall f_10803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10839)
static void C_ccall f_10839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10810)
static void C_ccall f_10810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10442)
static void C_ccall f_10442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10449)
static void C_ccall f_10449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10683)
static void C_fcall f_10683(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10693)
static void C_ccall f_10693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10704)
static void C_ccall f_10704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10716)
static void C_fcall f_10716(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10719)
static void C_ccall f_10719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10707)
static void C_ccall f_10707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10455)
static void C_ccall f_10455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10681)
static void C_ccall f_10681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10677)
static void C_ccall f_10677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10623)
static void C_fcall f_10623(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10588)
static void C_fcall f_10588(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10604)
static void C_fcall f_10604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10559)
static void C_fcall f_10559(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10483)
static void C_ccall f_10483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10486)
static void C_ccall f_10486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10550)
static void C_ccall f_10550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10546)
static void C_ccall f_10546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10466)
static void C_fcall f_10466(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10477)
static void C_ccall f_10477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10473)
static void C_ccall f_10473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10395)
static void C_ccall f_10395(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10428)
static void C_ccall f_10428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10410)
static void C_ccall f_10410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10422)
static void C_ccall f_10422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10013)
static void C_ccall f_10013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10222)
static void C_fcall f_10222(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10232)
static void C_ccall f_10232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10243)
static void C_ccall f_10243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10363)
static void C_ccall f_10363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10342)
static void C_ccall f_10342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10321)
static void C_ccall f_10321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10300)
static void C_ccall f_10300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10279)
static void C_ccall f_10279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10258)
static void C_ccall f_10258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10246)
static void C_ccall f_10246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10023)
static void C_ccall f_10023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10026)
static void C_fcall f_10026(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10189)
static void C_fcall f_10189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10029)
static void C_fcall f_10029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10180)
static void C_ccall f_10180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10160)
static void C_ccall f_10160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10032)
static void C_fcall f_10032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10125)
static void C_ccall f_10125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10142)
static void C_ccall f_10142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10035)
static void C_fcall f_10035(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10074)
static void C_ccall f_10074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10108)
static void C_ccall f_10108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10092)
static void C_ccall f_10092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10077)
static void C_fcall f_10077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10042)
static void C_fcall f_10042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10053)
static void C_ccall f_10053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10057)
static void C_ccall f_10057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10049)
static void C_ccall f_10049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9931)
static void C_ccall f_9931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9935)
static void C_ccall f_9935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9953)
static void C_ccall f_9953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9771)
static void C_fcall f_9771(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9779)
static void C_fcall f_9779(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9789)
static void C_ccall f_9789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9827)
static void C_ccall f_9827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9830)
static void C_ccall f_9830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9833)
static void C_ccall f_9833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9908)
static void C_fcall f_9908(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9918)
static void C_ccall f_9918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9836)
static void C_ccall f_9836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9839)
static void C_ccall f_9839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9842)
static void C_ccall f_9842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9862)
static void C_fcall f_9862(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9872)
static void C_ccall f_9872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9875)
static void C_ccall f_9875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9878)
static void C_ccall f_9878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9845)
static void C_ccall f_9845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9848)
static void C_ccall f_9848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9765)
static void C_fcall f_9765(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9759)
static void C_fcall f_9759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9753)
static void C_fcall f_9753(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9682)
static void C_fcall f_9682(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9723)
static void C_ccall f_9723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9727)
static void C_ccall f_9727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9731)
static void C_ccall f_9731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9735)
static void C_ccall f_9735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9739)
static void C_ccall f_9739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9743)
static void C_ccall f_9743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9747)
static void C_ccall f_9747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9751)
static void C_ccall f_9751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9684)
static void C_fcall f_9684(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9690)
static void C_fcall f_9690(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9712)
static void C_ccall f_9712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9701)
static void C_ccall f_9701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9531)
static void C_fcall f_9531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9546)
static void C_fcall f_9546(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9559)
static void C_ccall f_9559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9519)
static void C_ccall f_9519(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9507)
static void C_ccall f_9507(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9495)
static void C_ccall f_9495(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9489)
static void C_fcall f_9489(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9483)
static void C_ccall f_9483(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9471)
static void C_ccall f_9471(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9459)
static void C_ccall f_9459(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9447)
static void C_ccall f_9447(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9435)
static void C_ccall f_9435(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9429)
static void C_fcall f_9429(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9120)
static void C_ccall f_9120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9373)
static void C_ccall f_9373(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9406)
static void C_ccall f_9406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9402)
static void C_ccall f_9402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9391)
static void C_ccall f_9391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9387)
static void C_ccall f_9387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9281)
static void C_ccall f_9281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9284)
static void C_ccall f_9284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9287)
static void C_ccall f_9287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9367)
static void C_ccall f_9367(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9192)
static void C_ccall f_9192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9133)
static void C_ccall f_9133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9290)
static void C_ccall f_9290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9297)
static void C_ccall f_9297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9357)
static void C_ccall f_9357(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9343)
static void C_ccall f_9343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9309)
static void C_ccall f_9309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9335)
static void C_ccall f_9335(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9270)
static void C_ccall f_9270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9317)
static void C_ccall f_9317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9313)
static void C_ccall f_9313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9076)
static void C_ccall f_9076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9076)
static void C_ccall f_9076r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9110)
static void C_ccall f_9110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9114)
static void C_ccall f_9114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9118)
static void C_ccall f_9118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9084)
static void C_ccall f_9084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9102)
static void C_ccall f_9102(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9093)
static void C_ccall f_9093(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9101)
static void C_ccall f_9101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9088)
static void C_ccall f_9088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9032)
static void C_ccall f_9032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9032)
static void C_ccall f_9032r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9066)
static void C_ccall f_9066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9070)
static void C_ccall f_9070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9074)
static void C_ccall f_9074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9040)
static void C_ccall f_9040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9058)
static void C_ccall f_9058(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9049)
static void C_ccall f_9049(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9057)
static void C_ccall f_9057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9044)
static void C_ccall f_9044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8958)
static void C_fcall f_8958(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8962)
static void C_ccall f_8962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8969)
static void C_ccall f_8969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8971)
static void C_fcall f_8971(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8985)
static void C_ccall f_8985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8998)
static void C_ccall f_8998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8988)
static void C_fcall f_8988(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8872)
static void C_ccall f_8872(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8872)
static void C_ccall f_8872r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8754)
static void C_fcall f_8754(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8760)
static void C_fcall f_8760(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8784)
static void C_ccall f_8784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8770)
static void C_fcall f_8770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8655)
static void C_ccall f_8655(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8655)
static void C_ccall f_8655r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8659)
static void C_ccall f_8659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8684)
static void C_fcall f_8684(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8701)
static void C_ccall f_8701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8705)
static void C_ccall f_8705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8661)
static void C_fcall f_8661(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8678)
static void C_ccall f_8678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8493)
static void C_ccall f_8493(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8493)
static void C_ccall f_8493r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8502)
static void C_fcall f_8502(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8540)
static void C_fcall f_8540(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8518)
static void C_ccall f_8518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8403)
static void C_ccall f_8403(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8355)
static void C_ccall f_8355(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8389)
static void C_ccall f_8389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8332)
static void C_ccall f_8332(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8326)
static void C_ccall f_8326(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8311)
static void C_ccall f_8311(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8297)
static void C_ccall f_8297(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8287)
static void C_ccall f_8287(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8277)
static void C_ccall f_8277(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8267)
static void C_ccall f_8267(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8257)
static void C_ccall f_8257(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8247)
static void C_ccall f_8247(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7261)
static void C_ccall f_7261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8216)
static void C_ccall f_8216(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8216)
static void C_ccall f_8216r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8226)
static void C_fcall f_8226(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8210)
static void C_ccall f_8210(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7219)
static void C_ccall f_7219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8204)
static void C_ccall f_8204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7875)
static void C_fcall f_7875(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7690)
static void C_fcall f_7690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7699)
static void C_ccall f_7699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7619)
static void C_ccall f_7619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7609)
static void C_ccall f_7609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7599)
static void C_fcall f_7599(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7579)
static void C_fcall f_7579(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7548)
static void C_ccall f_7548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7545)
static void C_ccall f_7545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7538)
static void C_fcall f_7538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7535)
static void C_ccall f_7535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7528)
static void C_fcall f_7528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7510)
static void C_fcall f_7510(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7499)
static void C_fcall f_7499(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7496)
static void C_ccall f_7496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7493)
static void C_ccall f_7493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7490)
static void C_ccall f_7490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7461)
static void C_fcall f_7461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7454)
static void C_fcall f_7454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7451)
static void C_ccall f_7451(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7430)
static void C_fcall f_7430(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7411)
static void C_ccall f_7411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7392)
static void C_ccall f_7392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7378)
static void C_ccall f_7378(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7371)
static void C_ccall f_7371(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7356)
static void C_fcall f_7356(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7345)
static void C_fcall f_7345(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7338)
static void C_ccall f_7338(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7284)
static void C_fcall f_7284(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7228)
static void C_fcall f_7228(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7233)
static void C_ccall f_7233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7107)
static void C_fcall f_7107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7101)
static void C_ccall f_7101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7094)
static void C_ccall f_7094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7088)
static void C_ccall f_7088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7078)
static void C_ccall f_7078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7058)
static void C_ccall f_7058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7070)
static void C_ccall f_7070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7052)
static void C_ccall f_7052(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7052)
static void C_ccall f_7052r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7046)
static void C_ccall f_7046(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7046)
static void C_ccall f_7046r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7040)
static void C_ccall f_7040(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7040)
static void C_ccall f_7040r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7034)
static void C_ccall f_7034(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7034)
static void C_ccall f_7034r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7028)
static void C_ccall f_7028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;

C_noret_decl(trf_12920)
static void C_fcall trf_12920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12920(t0,t1);}

C_noret_decl(trf_12782)
static void C_fcall trf_12782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12782(t0,t1);}

C_noret_decl(trf_12996)
static void C_fcall trf_12996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12996(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12996(t0,t1);}

C_noret_decl(trf_45901)
static void C_fcall trf_45901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45901(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_45901(t0,t1,t2);}

C_noret_decl(trf_45961)
static void C_fcall trf_45961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45961(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_45961(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_45981)
static void C_fcall trf_45981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45981(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45981(t0,t1);}

C_noret_decl(trf_45984)
static void C_fcall trf_45984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45984(t0,t1);}

C_noret_decl(trf_45827)
static void C_fcall trf_45827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45827(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_45827(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_45778)
static void C_fcall trf_45778(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45778(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45778(t0,t1);}

C_noret_decl(trf_45700)
static void C_fcall trf_45700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45700(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_45700(t0,t1,t2);}

C_noret_decl(trf_45552)
static void C_fcall trf_45552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45552(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45552(t0,t1);}

C_noret_decl(trf_29612)
static void C_fcall trf_29612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29612(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29612(t0,t1,t2);}

C_noret_decl(trf_29625)
static void C_fcall trf_29625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29625(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29625(t0,t1);}

C_noret_decl(trf_44430)
static void C_fcall trf_44430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44430(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_44430(t0,t1);}

C_noret_decl(trf_44303)
static void C_fcall trf_44303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44303(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_44303(t0,t1,t2);}

C_noret_decl(trf_43955)
static void C_fcall trf_43955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43955(t0,t1);}

C_noret_decl(trf_43050)
static void C_fcall trf_43050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43050(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_43050(t0,t1,t2);}

C_noret_decl(trf_43085)
static void C_fcall trf_43085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43085(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43085(t0,t1);}

C_noret_decl(trf_43109)
static void C_fcall trf_43109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43109(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43109(t0,t1);}

C_noret_decl(trf_43088)
static void C_fcall trf_43088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43088(t0,t1);}

C_noret_decl(trf_42891)
static void C_fcall trf_42891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42891(t0,t1);}

C_noret_decl(trf_42647)
static void C_fcall trf_42647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42647(t0,t1);}

C_noret_decl(trf_42654)
static void C_fcall trf_42654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42654(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42654(t0,t1);}

C_noret_decl(trf_42635)
static void C_fcall trf_42635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42635(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42635(t0,t1);}

C_noret_decl(trf_31674)
static void C_fcall trf_31674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31674(t0,t1);}

C_noret_decl(trf_31681)
static void C_fcall trf_31681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31681(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31681(t0,t1);}

C_noret_decl(trf_31998)
static void C_fcall trf_31998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31998(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31998(t0,t1,t2);}

C_noret_decl(trf_32021)
static void C_fcall trf_32021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32021(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32021(t0,t1,t2);}

C_noret_decl(trf_32038)
static void C_fcall trf_32038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32038(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32038(t0,t1);}

C_noret_decl(trf_32041)
static void C_fcall trf_32041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32041(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32041(t0,t1);}

C_noret_decl(trf_32044)
static void C_fcall trf_32044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32044(t0,t1);}

C_noret_decl(trf_31962)
static void C_fcall trf_31962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31962(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31962(t0,t1,t2);}

C_noret_decl(trf_31902)
static void C_fcall trf_31902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31902(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31902(t0,t1,t2);}

C_noret_decl(trf_31918)
static void C_fcall trf_31918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31918(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31918(t0,t1);}

C_noret_decl(trf_31873)
static void C_fcall trf_31873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31873(t0,t1);}

C_noret_decl(trf_31690)
static void C_fcall trf_31690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31690(t0,t1);}

C_noret_decl(trf_31693)
static void C_fcall trf_31693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31693(t0,t1);}

C_noret_decl(trf_31696)
static void C_fcall trf_31696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31696(t0,t1);}

C_noret_decl(trf_42144)
static void C_fcall trf_42144(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42144(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42144(t0,t1);}

C_noret_decl(trf_42147)
static void C_fcall trf_42147(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42147(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42147(t0,t1);}

C_noret_decl(trf_41990)
static void C_fcall trf_41990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41990(t0,t1);}

C_noret_decl(trf_41798)
static void C_fcall trf_41798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41798(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41798(t0,t1);}

C_noret_decl(trf_41648)
static void C_fcall trf_41648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41648(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41648(t0,t1);}

C_noret_decl(trf_41737)
static void C_fcall trf_41737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41737(t0,t1);}

C_noret_decl(trf_41651)
static void C_fcall trf_41651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41651(t0,t1);}

C_noret_decl(trf_41667)
static void C_fcall trf_41667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41667(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_41667(t0,t1,t2,t3);}

C_noret_decl(trf_41689)
static void C_fcall trf_41689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41689(t0,t1);}

C_noret_decl(trf_41584)
static void C_fcall trf_41584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41584(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41584(t0,t1,t2);}

C_noret_decl(trf_41531)
static void C_fcall trf_41531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41531(t0,t1);}

C_noret_decl(trf_41110)
static void C_fcall trf_41110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41110(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41110(t0,t1,t2);}

C_noret_decl(trf_41138)
static void C_fcall trf_41138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41138(t0,t1);}

C_noret_decl(trf_41089)
static void C_fcall trf_41089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41089(t0,t1);}

C_noret_decl(trf_41026)
static void C_fcall trf_41026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41026(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41026(t0,t1,t2);}

C_noret_decl(trf_40951)
static void C_fcall trf_40951(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40951(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40951(t0,t1,t2);}

C_noret_decl(trf_40875)
static void C_fcall trf_40875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40875(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_40875(t0,t1,t2,t3);}

C_noret_decl(trf_40822)
static void C_fcall trf_40822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40822(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40822(t0,t1,t2);}

C_noret_decl(trf_40845)
static void C_fcall trf_40845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40845(t0,t1);}

C_noret_decl(trf_40770)
static void C_fcall trf_40770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40770(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40770(t0,t1,t2);}

C_noret_decl(trf_40639)
static void C_fcall trf_40639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40639(t0,t1);}

C_noret_decl(trf_40709)
static void C_fcall trf_40709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40709(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40709(t0,t1,t2);}

C_noret_decl(trf_40668)
static void C_fcall trf_40668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40668(t0,t1);}

C_noret_decl(trf_40640)
static void C_fcall trf_40640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40640(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40640(t0,t1);}

C_noret_decl(trf_40372)
static void C_fcall trf_40372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40372(t0,t1);}

C_noret_decl(trf_40389)
static void C_fcall trf_40389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40389(t0,t1);}

C_noret_decl(trf_40533)
static void C_fcall trf_40533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40533(t0,t1);}

C_noret_decl(trf_40402)
static void C_fcall trf_40402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40402(t0,t1);}

C_noret_decl(trf_40333)
static void C_fcall trf_40333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40333(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40333(t0,t1,t2);}

C_noret_decl(trf_40274)
static void C_fcall trf_40274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40274(t0,t1);}

C_noret_decl(trf_39717)
static void C_fcall trf_39717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39717(t0,t1);}

C_noret_decl(trf_40050)
static void C_fcall trf_40050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40050(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_40050(t0,t1,t2,t3);}

C_noret_decl(trf_39977)
static void C_fcall trf_39977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39977(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39977(t0,t1,t2);}

C_noret_decl(trf_40014)
static void C_fcall trf_40014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40014(t0,t1);}

C_noret_decl(trf_39932)
static void C_fcall trf_39932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39932(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39932(t0,t1);}

C_noret_decl(trf_39937)
static void C_fcall trf_39937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39937(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39937(t0,t1);}

C_noret_decl(trf_39886)
static void C_fcall trf_39886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39886(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39886(t0,t1);}

C_noret_decl(trf_39891)
static void C_fcall trf_39891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39891(t0,t1);}

C_noret_decl(trf_39783)
static void C_fcall trf_39783(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39783(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39783(t0,t1);}

C_noret_decl(trf_39792)
static void C_fcall trf_39792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39792(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39792(t0,t1,t2);}

C_noret_decl(trf_39647)
static void C_fcall trf_39647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39647(t0,t1);}

C_noret_decl(trf_39395)
static void C_fcall trf_39395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39395(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39395(t0,t1,t2);}

C_noret_decl(trf_39568)
static void C_fcall trf_39568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39568(t0,t1);}

C_noret_decl(trf_39410)
static void C_fcall trf_39410(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39410(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_39410(t0,t1,t2,t3);}

C_noret_decl(trf_39235)
static void C_fcall trf_39235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39235(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_39235(t0,t1,t2,t3);}

C_noret_decl(trf_39166)
static void C_fcall trf_39166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39166(t0,t1);}

C_noret_decl(trf_39122)
static void C_fcall trf_39122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39122(t0,t1);}

C_noret_decl(trf_39151)
static void C_fcall trf_39151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39151(t0,t1);}

C_noret_decl(trf_39125)
static void C_fcall trf_39125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39125(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39125(t0,t1);}

C_noret_decl(trf_38953)
static void C_fcall trf_38953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38953(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38953(t0,t1);}

C_noret_decl(trf_38960)
static void C_fcall trf_38960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38960(t0,t1);}

C_noret_decl(trf_38966)
static void C_fcall trf_38966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38966(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38966(t0,t1,t2);}

C_noret_decl(trf_38848)
static void C_fcall trf_38848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38848(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38848(t0,t1);}

C_noret_decl(trf_38855)
static void C_fcall trf_38855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38855(t0,t1);}

C_noret_decl(trf_38861)
static void C_fcall trf_38861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38861(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38861(t0,t1,t2);}

C_noret_decl(trf_38124)
static void C_fcall trf_38124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38124(t0,t1);}

C_noret_decl(trf_38127)
static void C_fcall trf_38127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38127(t0,t1);}

C_noret_decl(trf_38130)
static void C_fcall trf_38130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38130(t0,t1);}

C_noret_decl(trf_37695)
static void C_fcall trf_37695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37695(t0,t1);}

C_noret_decl(trf_37698)
static void C_fcall trf_37698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37698(t0,t1);}

C_noret_decl(trf_37701)
static void C_fcall trf_37701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37701(t0,t1);}

C_noret_decl(trf_37266)
static void C_fcall trf_37266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37266(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37266(t0,t1);}

C_noret_decl(trf_37269)
static void C_fcall trf_37269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37269(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37269(t0,t1);}

C_noret_decl(trf_37272)
static void C_fcall trf_37272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37272(t0,t1);}

C_noret_decl(trf_36559)
static void C_fcall trf_36559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36559(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36559(t0,t1);}

C_noret_decl(trf_36562)
static void C_fcall trf_36562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36562(t0,t1);}

C_noret_decl(trf_36565)
static void C_fcall trf_36565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36565(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36565(t0,t1);}

C_noret_decl(trf_36568)
static void C_fcall trf_36568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36568(t0,t1);}

C_noret_decl(trf_35852)
static void C_fcall trf_35852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35852(t0,t1);}

C_noret_decl(trf_35855)
static void C_fcall trf_35855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35855(t0,t1);}

C_noret_decl(trf_35858)
static void C_fcall trf_35858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35858(t0,t1);}

C_noret_decl(trf_35861)
static void C_fcall trf_35861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35861(t0,t1);}

C_noret_decl(trf_35145)
static void C_fcall trf_35145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35145(t0,t1);}

C_noret_decl(trf_35148)
static void C_fcall trf_35148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35148(t0,t1);}

C_noret_decl(trf_35151)
static void C_fcall trf_35151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35151(t0,t1);}

C_noret_decl(trf_35154)
static void C_fcall trf_35154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35154(t0,t1);}

C_noret_decl(trf_34716)
static void C_fcall trf_34716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34716(t0,t1);}

C_noret_decl(trf_34719)
static void C_fcall trf_34719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34719(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34719(t0,t1);}

C_noret_decl(trf_34722)
static void C_fcall trf_34722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34722(t0,t1);}

C_noret_decl(trf_33661)
static void C_fcall trf_33661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33661(t0,t1);}

C_noret_decl(trf_33664)
static void C_fcall trf_33664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33664(t0,t1);}

C_noret_decl(trf_33667)
static void C_fcall trf_33667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33667(t0,t1);}

C_noret_decl(trf_33670)
static void C_fcall trf_33670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33670(t0,t1);}

C_noret_decl(trf_33673)
static void C_fcall trf_33673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33673(t0,t1);}

C_noret_decl(trf_33498)
static void C_fcall trf_33498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33498(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33498(t0,t1);}

C_noret_decl(trf_33505)
static void C_fcall trf_33505(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33505(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33505(t0,t1);}

C_noret_decl(trf_33443)
static void C_fcall trf_33443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33443(t0,t1);}

C_noret_decl(trf_33450)
static void C_fcall trf_33450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33450(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33450(t0,t1);}

C_noret_decl(trf_33200)
static void C_fcall trf_33200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33200(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33200(t0,t1);}

C_noret_decl(trf_33203)
static void C_fcall trf_33203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33203(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33203(t0,t1);}

C_noret_decl(trf_33147)
static void C_fcall trf_33147(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33147(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33147(t0,t1);}

C_noret_decl(trf_32959)
static void C_fcall trf_32959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32959(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32959(t0,t1,t2);}

C_noret_decl(trf_32835)
static void C_fcall trf_32835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32835(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_32835(t0,t1,t2,t3,t4);}

C_noret_decl(trf_32871)
static void C_fcall trf_32871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32871(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32871(t0,t1,t2);}

C_noret_decl(trf_32673)
static void C_fcall trf_32673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32673(t0,t1);}

C_noret_decl(trf_32677)
static void C_fcall trf_32677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32677(t0,t1);}

C_noret_decl(trf_32193)
static void C_fcall trf_32193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32193(t0,t1);}

C_noret_decl(trf_32196)
static void C_fcall trf_32196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32196(t0,t1);}

C_noret_decl(trf_32199)
static void C_fcall trf_32199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32199(t0,t1);}

C_noret_decl(trf_32205)
static void C_fcall trf_32205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32205(t0,t1);}

C_noret_decl(trf_30013)
static void C_fcall trf_30013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30013(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30013(t0,t1);}

C_noret_decl(trf_32801)
static void C_fcall trf_32801(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32801(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32801(t0,t1,t2);}

C_noret_decl(trf_32811)
static void C_fcall trf_32811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32811(t0,t1);}

C_noret_decl(trf_32771)
static void C_fcall trf_32771(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32771(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32771(t0,t1,t2);}

C_noret_decl(trf_32781)
static void C_fcall trf_32781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32781(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32781(t0,t1);}

C_noret_decl(trf_31355)
static void C_fcall trf_31355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31355(t0,t1);}

C_noret_decl(trf_31358)
static void C_fcall trf_31358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31358(t0,t1);}

C_noret_decl(trf_31361)
static void C_fcall trf_31361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31361(t0,t1);}

C_noret_decl(trf_31364)
static void C_fcall trf_31364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31364(t0,t1);}

C_noret_decl(trf_31367)
static void C_fcall trf_31367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31367(t0,t1);}

C_noret_decl(trf_31370)
static void C_fcall trf_31370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31370(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31370(t0,t1);}

C_noret_decl(trf_31198)
static void C_fcall trf_31198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31198(t0,t1);}

C_noret_decl(trf_31127)
static void C_fcall trf_31127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31127(t0,t1);}

C_noret_decl(trf_30942)
static void C_fcall trf_30942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30942(t0,t1);}

C_noret_decl(trf_30954)
static void C_fcall trf_30954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30954(t0,t1);}

C_noret_decl(trf_30991)
static void C_fcall trf_30991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30991(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_30991(t0,t1,t2,t3,t4);}

C_noret_decl(trf_31026)
static void C_fcall trf_31026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31026(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31026(t0,t1);}

C_noret_decl(trf_30921)
static void C_fcall trf_30921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30921(t0,t1);}

C_noret_decl(trf_30856)
static void C_fcall trf_30856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30856(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30856(t0,t1,t2);}

C_noret_decl(trf_30865)
static void C_fcall trf_30865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30865(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30865(t0,t1,t2);}

C_noret_decl(trf_30878)
static void C_fcall trf_30878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30878(t0,t1);}

C_noret_decl(trf_30812)
static void C_fcall trf_30812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30812(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30812(t0,t1,t2);}

C_noret_decl(trf_30800)
static void C_fcall trf_30800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30800(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30800(t0,t1);}

C_noret_decl(trf_30698)
static void C_fcall trf_30698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30698(t0,t1);}

C_noret_decl(trf_30650)
static void C_fcall trf_30650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30650(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30650(t0,t1);}

C_noret_decl(trf_30031)
static void C_fcall trf_30031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30031(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_30031(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_30041)
static void C_fcall trf_30041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30041(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30041(t0,t1);}

C_noret_decl(trf_30170)
static void C_fcall trf_30170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30170(t0,t1);}

C_noret_decl(trf_30258)
static void C_fcall trf_30258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30258(t0,t1);}

C_noret_decl(trf_30331)
static void C_fcall trf_30331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30331(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30331(t0,t1);}

C_noret_decl(trf_30409)
static void C_fcall trf_30409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30409(t0,t1);}

C_noret_decl(trf_30360)
static void C_fcall trf_30360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30360(t0,t1);}

C_noret_decl(trf_30376)
static void C_fcall trf_30376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30376(t0,t1);}

C_noret_decl(trf_30340)
static void C_fcall trf_30340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30340(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30340(t0,t1);}

C_noret_decl(trf_30282)
static void C_fcall trf_30282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30282(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30282(t0,t1,t2);}

C_noret_decl(trf_30201)
static void C_fcall trf_30201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30201(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30201(t0,t1,t2);}

C_noret_decl(trf_30217)
static void C_fcall trf_30217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30217(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30217(t0,t1);}

C_noret_decl(trf_30185)
static void C_fcall trf_30185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30185(t0,t1);}

C_noret_decl(trf_29927)
static void C_fcall trf_29927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29927(t0,t1);}

C_noret_decl(trf_29936)
static void C_fcall trf_29936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29936(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29936(t0,t1);}

C_noret_decl(trf_29941)
static void C_fcall trf_29941(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29941(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29941(t0,t1,t2);}

C_noret_decl(trf_29919)
static void C_fcall trf_29919(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29919(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29919(t0,t1);}

C_noret_decl(trf_29711)
static void C_fcall trf_29711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29711(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29711(t0,t1,t2,t3);}

C_noret_decl(trf_29678)
static void C_fcall trf_29678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29678(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29678(t0,t1,t2,t3);}

C_noret_decl(trf_29660)
static void C_fcall trf_29660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29660(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29660(t0,t1,t2,t3);}

C_noret_decl(trf_29593)
static void C_fcall trf_29593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29593(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29593(t0,t1,t2,t3);}

C_noret_decl(trf_29581)
static void C_fcall trf_29581(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29581(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29581(t0,t1,t2);}

C_noret_decl(trf_29549)
static void C_fcall trf_29549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29549(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29549(t0,t1,t2);}

C_noret_decl(trf_29533)
static void C_fcall trf_29533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29533(t0,t1);}

C_noret_decl(trf_29524)
static void C_fcall trf_29524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29524(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29524(t0,t1);}

C_noret_decl(trf_29506)
static void C_fcall trf_29506(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29506(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29506(t0,t1);}

C_noret_decl(trf_29488)
static void C_fcall trf_29488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29488(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29488(t0,t1);}

C_noret_decl(trf_29473)
static void C_fcall trf_29473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29473(t0,t1);}

C_noret_decl(trf_29467)
static void C_fcall trf_29467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29467(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29467(t0,t1,t2,t3);}

C_noret_decl(trf_29419)
static void C_fcall trf_29419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29419(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29419(t0,t1,t2);}

C_noret_decl(trf_29387)
static void C_fcall trf_29387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29387(t0,t1);}

C_noret_decl(trf_29329)
static void C_fcall trf_29329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29329(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29329(t0,t1,t2);}

C_noret_decl(trf_29319)
static void C_fcall trf_29319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29319(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29319(t0,t1);}

C_noret_decl(trf_29313)
static void C_fcall trf_29313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29313(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29313(t0,t1);}

C_noret_decl(trf_29301)
static void C_fcall trf_29301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29301(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29301(t0,t1);}

C_noret_decl(trf_29280)
static void C_fcall trf_29280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29280(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29280(t0,t1);}

C_noret_decl(trf_29175)
static void C_fcall trf_29175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29175(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_29175(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_29165)
static void C_fcall trf_29165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29165(t0,t1);}

C_noret_decl(trf_29153)
static void C_fcall trf_29153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29153(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29153(t0,t1);}

C_noret_decl(trf_29121)
static void C_fcall trf_29121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29121(t0,t1);}

C_noret_decl(trf_29085)
static void C_fcall trf_29085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29085(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29085(t0,t1);}

C_noret_decl(trf_28872)
static void C_fcall trf_28872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28872(t0,t1);}

C_noret_decl(trf_29021)
static void C_fcall trf_29021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29021(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29021(t0,t1,t2);}

C_noret_decl(trf_28907)
static void C_fcall trf_28907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28907(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28907(t0,t1,t2,t3);}

C_noret_decl(trf_28948)
static void C_fcall trf_28948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28948(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28948(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28832)
static void C_fcall trf_28832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28832(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28832(t0,t1);}

C_noret_decl(trf_28795)
static void C_fcall trf_28795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28795(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28795(t0,t1,t2,t3);}

C_noret_decl(trf_28693)
static void C_fcall trf_28693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28693(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28693(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28640)
static void C_fcall trf_28640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28640(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28640(t0,t1,t2);}

C_noret_decl(trf_28812)
static void C_fcall trf_28812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28812(t0,t1);}

C_noret_decl(trf_28753)
static void C_fcall trf_28753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28753(t0,t1);}

C_noret_decl(trf_28608)
static void C_fcall trf_28608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28608(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28608(t0,t1);}

C_noret_decl(trf_28239)
static void C_fcall trf_28239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28239(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28239(t0,t1);}

C_noret_decl(trf_28242)
static void C_fcall trf_28242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28242(t0,t1);}

C_noret_decl(trf_28245)
static void C_fcall trf_28245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28245(t0,t1);}

C_noret_decl(trf_8839)
static void C_fcall trf_8839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8839(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8839(t0,t1,t2,t3);}

C_noret_decl(trf_8852)
static void C_fcall trf_8852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8852(t0,t1);}

C_noret_decl(trf_28403)
static void C_fcall trf_28403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28403(t0,t1);}

C_noret_decl(trf_28406)
static void C_fcall trf_28406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28406(t0,t1);}

C_noret_decl(trf_28415)
static void C_fcall trf_28415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28415(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28415(t0,t1,t2);}

C_noret_decl(trf_28425)
static void C_fcall trf_28425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28425(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28425(t0,t1);}

C_noret_decl(trf_28372)
static void C_fcall trf_28372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28372(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28372(t0,t1,t2);}

C_noret_decl(trf_28334)
static void C_fcall trf_28334(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28334(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28334(t0,t1,t2);}

C_noret_decl(trf_27707)
static void C_fcall trf_27707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27707(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27707(t0,t1,t2,t3);}

C_noret_decl(trf_28289)
static void C_fcall trf_28289(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28289(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28289(t0,t1,t2);}

C_noret_decl(trf_28259)
static void C_fcall trf_28259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28259(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28259(t0,t1,t2);}

C_noret_decl(trf_28194)
static void C_fcall trf_28194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28194(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28194(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28138)
static void C_fcall trf_28138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28138(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28138(t0,t1,t2);}

C_noret_decl(trf_28106)
static void C_fcall trf_28106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28106(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28106(t0,t1,t2);}

C_noret_decl(trf_28057)
static void C_fcall trf_28057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28057(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28057(t0,t1,t2);}

C_noret_decl(trf_28076)
static void C_fcall trf_28076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28076(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28076(t0,t1,t2);}

C_noret_decl(trf_27996)
static void C_fcall trf_27996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27996(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27996(t0,t1,t2,t3);}

C_noret_decl(trf_27979)
static void C_fcall trf_27979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27979(t0,t1);}

C_noret_decl(trf_27962)
static void C_fcall trf_27962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27962(t0,t1);}

C_noret_decl(trf_27795)
static void C_fcall trf_27795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27795(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_27795(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_27805)
static void C_fcall trf_27805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27805(t0,t1);}

C_noret_decl(trf_27620)
static void C_fcall trf_27620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27620(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27620(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27642)
static void C_fcall trf_27642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27642(t0,t1);}

C_noret_decl(trf_27461)
static void C_fcall trf_27461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27461(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27461(t0,t1,t2,t3);}

C_noret_decl(trf_27550)
static void C_fcall trf_27550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27550(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27550(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27564)
static void C_fcall trf_27564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27564(t0,t1);}

C_noret_decl(trf_27492)
static void C_fcall trf_27492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27492(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27492(t0,t1);}

C_noret_decl(trf_27399)
static void C_fcall trf_27399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27399(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27399(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25906)
static void C_fcall trf_25906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25906(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25906(t0,t1);}

C_noret_decl(trf_25909)
static void C_fcall trf_25909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25909(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25909(t0,t1);}

C_noret_decl(trf_25912)
static void C_fcall trf_25912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25912(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25912(t0,t1);}

C_noret_decl(trf_25915)
static void C_fcall trf_25915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25915(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25915(t0,t1);}

C_noret_decl(trf_25918)
static void C_fcall trf_25918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25918(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25918(t0,t1);}

C_noret_decl(trf_25921)
static void C_fcall trf_25921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25921(t0,t1);}

C_noret_decl(trf_25670)
static void C_fcall trf_25670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25670(t0,t1);}

C_noret_decl(trf_8607)
static void C_fcall trf_8607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8607(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8607(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25755)
static void C_fcall trf_25755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25755(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25755(t0,t1,t2);}

C_noret_decl(trf_25681)
static void C_fcall trf_25681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25681(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25681(t0,t1,t2);}

C_noret_decl(trf_25722)
static void C_fcall trf_25722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25722(t0,t1);}

C_noret_decl(trf_25696)
static void C_fcall trf_25696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25696(t0,t1);}

C_noret_decl(trf_25541)
static void C_fcall trf_25541(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25541(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25541(t0,t1,t2);}

C_noret_decl(trf_25467)
static void C_fcall trf_25467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25467(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25467(t0,t1,t2);}

C_noret_decl(trf_25449)
static void C_fcall trf_25449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25449(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25449(t0,t1,t2);}

C_noret_decl(trf_25431)
static void C_fcall trf_25431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25431(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25431(t0,t1,t2);}

C_noret_decl(trf_25407)
static void C_fcall trf_25407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25407(t0,t1);}

C_noret_decl(trf_25401)
static void C_fcall trf_25401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25401(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25401(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25356)
static void C_fcall trf_25356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25356(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25356(t0,t1);}

C_noret_decl(trf_25314)
static void C_fcall trf_25314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25314(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25314(t0,t1);}

C_noret_decl(trf_24095)
static void C_fcall trf_24095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24095(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24095(t0,t1);}

C_noret_decl(trf_24241)
static void C_fcall trf_24241(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24241(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_24241(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_24190)
static void C_fcall trf_24190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24190(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24190(t0,t1,t2,t3);}

C_noret_decl(trf_24196)
static void C_fcall trf_24196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24196(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24196(t0,t1,t2,t3);}

C_noret_decl(trf_24206)
static void C_fcall trf_24206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24206(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24206(t0,t1);}

C_noret_decl(trf_24075)
static void C_fcall trf_24075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24075(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24075(t0,t1,t2);}

C_noret_decl(trf_24070)
static void C_fcall trf_24070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24070(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24070(t0,t1,t2,t3);}

C_noret_decl(trf_23927)
static void C_fcall trf_23927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23927(t0,t1);}

C_noret_decl(trf_23787)
static void C_fcall trf_23787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23787(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23787(t0,t1,t2);}

C_noret_decl(trf_23796)
static void C_fcall trf_23796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23796(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23796(t0,t1,t2,t3);}

C_noret_decl(trf_23629)
static void C_fcall trf_23629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23629(t0,t1);}

C_noret_decl(trf_23645)
static void C_fcall trf_23645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23645(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23645(t0,t1,t2,t3);}

C_noret_decl(trf_23453)
static void C_fcall trf_23453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23453(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23453(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23483)
static void C_fcall trf_23483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23483(t0,t1);}

C_noret_decl(trf_23466)
static void C_fcall trf_23466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23466(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23466(t0,t1);}

C_noret_decl(trf_23331)
static void C_fcall trf_23331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23331(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23331(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23361)
static void C_fcall trf_23361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23361(t0,t1);}

C_noret_decl(trf_23344)
static void C_fcall trf_23344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23344(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23344(t0,t1);}

C_noret_decl(trf_23234)
static void C_fcall trf_23234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23234(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23234(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23247)
static void C_fcall trf_23247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23247(t0,t1);}

C_noret_decl(trf_23166)
static void C_fcall trf_23166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23166(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23166(t0,t1,t2,t3);}

C_noret_decl(trf_23145)
static void C_fcall trf_23145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23145(t0,t1);}

C_noret_decl(trf_23067)
static void C_fcall trf_23067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23067(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23067(t0,t1,t2,t3);}

C_noret_decl(trf_22736)
static void C_fcall trf_22736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22736(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22736(t0,t1);}

C_noret_decl(trf_22739)
static void C_fcall trf_22739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22739(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22739(t0,t1);}

C_noret_decl(trf_22745)
static void C_fcall trf_22745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22745(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22745(t0,t1);}

C_noret_decl(trf_22648)
static void C_fcall trf_22648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22648(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22648(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22540)
static void C_fcall trf_22540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22540(t0,t1);}

C_noret_decl(trf_22545)
static void C_fcall trf_22545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22545(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22545(t0,t1,t2,t3);}

C_noret_decl(trf_22213)
static void C_fcall trf_22213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22213(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22213(t0,t1);}

C_noret_decl(trf_22014)
static void C_fcall trf_22014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22014(t0,t1);}

C_noret_decl(trf_22096)
static void C_fcall trf_22096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22096(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22096(t0,t1);}

C_noret_decl(trf_22107)
static void C_fcall trf_22107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22107(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22107(t0,t1,t2,t3);}

C_noret_decl(trf_22119)
static void C_fcall trf_22119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22119(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22119(t0,t1,t2);}

C_noret_decl(trf_22040)
static void C_fcall trf_22040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22040(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22040(t0,t1,t2);}

C_noret_decl(trf_21901)
static void C_fcall trf_21901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21901(t0,t1);}

C_noret_decl(trf_21910)
static void C_fcall trf_21910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21910(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21910(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21923)
static void C_fcall trf_21923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21923(t0,t1);}

C_noret_decl(trf_21765)
static void C_fcall trf_21765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21765(t0,t1);}

C_noret_decl(trf_21768)
static void C_fcall trf_21768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21768(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21768(t0,t1);}

C_noret_decl(trf_21770)
static void C_fcall trf_21770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21770(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21770(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21698)
static void C_fcall trf_21698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21698(t0,t1);}

C_noret_decl(trf_21701)
static void C_fcall trf_21701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21701(t0,t1);}

C_noret_decl(trf_21704)
static void C_fcall trf_21704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21704(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21704(t0,t1);}

C_noret_decl(trf_21562)
static void C_fcall trf_21562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21562(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21562(t0,t1,t2,t3);}

C_noret_decl(trf_21578)
static void C_fcall trf_21578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21578(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21578(t0,t1,t2);}

C_noret_decl(trf_21285)
static void C_fcall trf_21285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21285(t0,t1);}

C_noret_decl(trf_21288)
static void C_fcall trf_21288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21288(t0,t1);}

C_noret_decl(trf_20841)
static void C_fcall trf_20841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20841(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20841(t0,t1);}

C_noret_decl(trf_19766)
static void C_fcall trf_19766(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19766(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19766(t0,t1);}

C_noret_decl(trf_19769)
static void C_fcall trf_19769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19769(t0,t1);}

C_noret_decl(trf_20509)
static void C_fcall trf_20509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20509(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20509(t0,t1,t2);}

C_noret_decl(trf_20532)
static void C_fcall trf_20532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20532(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20532(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20567)
static void C_fcall trf_20567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20567(t0,t1);}

C_noret_decl(trf_20471)
static void C_fcall trf_20471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20471(t0,t1);}

C_noret_decl(trf_19974)
static void C_fcall trf_19974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19974(t0,t1);}

C_noret_decl(trf_20342)
static void C_fcall trf_20342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20342(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20342(t0,t1,t2,t3);}

C_noret_decl(trf_20428)
static void C_fcall trf_20428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20428(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20428(t0,t1,t2,t3);}

C_noret_decl(trf_20385)
static void C_fcall trf_20385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20385(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20385(t0,t1,t2);}

C_noret_decl(trf_20309)
static void C_fcall trf_20309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20309(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20309(t0,t1,t2);}

C_noret_decl(trf_20247)
static void C_fcall trf_20247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20247(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20247(t0,t1,t2);}

C_noret_decl(trf_20282)
static void C_fcall trf_20282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20282(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20282(t0,t1,t2,t3);}

C_noret_decl(trf_20042)
static void C_fcall trf_20042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20042(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20042(t0,t1,t2);}

C_noret_decl(trf_19938)
static void C_fcall trf_19938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19938(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19938(t0,t1,t2);}

C_noret_decl(trf_20220)
static void C_fcall trf_20220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20220(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20220(t0,t1,t2,t3);}

C_noret_decl(trf_20193)
static void C_fcall trf_20193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20193(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20193(t0,t1,t2,t3);}

C_noret_decl(trf_20079)
static void C_fcall trf_20079(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20079(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20079(t0,t1,t2);}

C_noret_decl(trf_20120)
static void C_fcall trf_20120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20120(t0,t1);}

C_noret_decl(trf_20132)
static void C_fcall trf_20132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20132(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20132(t0,t1,t2,t3);}

C_noret_decl(trf_19861)
static void C_fcall trf_19861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19861(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19861(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19779)
static void C_fcall trf_19779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19779(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19779(t0,t1,t2,t3);}

C_noret_decl(trf_8800)
static void C_fcall trf_8800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8800(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8800(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8810)
static void C_fcall trf_8810(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8810(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8810(t0,t1);}

C_noret_decl(trf_19851)
static void C_fcall trf_19851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19851(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19851(t0,t1,t2);}

C_noret_decl(trf_19700)
static void C_fcall trf_19700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19700(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19700(t0,t1,t2);}

C_noret_decl(trf_19725)
static void C_fcall trf_19725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19725(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19725(t0,t1);}

C_noret_decl(trf_19428)
static void C_fcall trf_19428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19428(t0,t1);}

C_noret_decl(trf_19431)
static void C_fcall trf_19431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19431(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19431(t0,t1);}

C_noret_decl(trf_19437)
static void C_fcall trf_19437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19437(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19437(t0,t1);}

C_noret_decl(trf_19151)
static void C_fcall trf_19151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19151(t0,t1);}

C_noret_decl(trf_19154)
static void C_fcall trf_19154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19154(t0,t1);}

C_noret_decl(trf_19081)
static void C_fcall trf_19081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19081(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19081(t0,t1);}

C_noret_decl(trf_18929)
static void C_fcall trf_18929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18929(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18929(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18854)
static void C_fcall trf_18854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18854(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18854(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18864)
static void C_fcall trf_18864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18864(t0,t1);}

C_noret_decl(trf_18871)
static void C_fcall trf_18871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18871(t0,t1);}

C_noret_decl(trf_18966)
static void C_fcall trf_18966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18966(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18966(t0,t1,t2);}

C_noret_decl(trf_18744)
static void C_fcall trf_18744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18744(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18744(t0,t1,t2,t3);}

C_noret_decl(trf_18756)
static void C_fcall trf_18756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18756(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18756(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18817)
static void C_fcall trf_18817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18817(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18817(t0,t1,t2);}

C_noret_decl(trf_18181)
static void C_fcall trf_18181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18181(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_18181(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_18117)
static void C_fcall trf_18117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18117(t0,t1);}

C_noret_decl(trf_18064)
static void C_fcall trf_18064(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18064(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18064(t0,t1);}

C_noret_decl(trf_18067)
static void C_fcall trf_18067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18067(t0,t1);}

C_noret_decl(trf_18261)
static void C_fcall trf_18261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18261(t0,t1);}

C_noret_decl(trf_18264)
static void C_fcall trf_18264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18264(t0,t1);}

C_noret_decl(trf_18267)
static void C_fcall trf_18267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18267(t0,t1);}

C_noret_decl(trf_18282)
static void C_fcall trf_18282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18282(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18282(t0,t1);}

C_noret_decl(trf_17843)
static void C_fcall trf_17843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17843(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17843(t0,t1);}

C_noret_decl(trf_17935)
static void C_fcall trf_17935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17935(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17935(t0,t1,t2);}

C_noret_decl(trf_17954)
static void C_fcall trf_17954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17954(t0,t1);}

C_noret_decl(trf_17908)
static void C_fcall trf_17908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17908(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17908(t0,t1,t2);}

C_noret_decl(trf_17853)
static void C_fcall trf_17853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17853(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17853(t0,t1,t2);}

C_noret_decl(trf_17863)
static void C_fcall trf_17863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17863(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17863(t0,t1,t2,t3);}

C_noret_decl(trf_17721)
static void C_fcall trf_17721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17721(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17721(t0,t1,t2);}

C_noret_decl(trf_17778)
static void C_fcall trf_17778(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17778(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17778(t0,t1,t2);}

C_noret_decl(trf_17736)
static void C_fcall trf_17736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17736(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17736(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17278)
static void C_fcall trf_17278(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17278(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17278(t0,t1);}

C_noret_decl(trf_17281)
static void C_fcall trf_17281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17281(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17281(t0,t1);}

C_noret_decl(trf_17284)
static void C_fcall trf_17284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17284(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17284(t0,t1);}

C_noret_decl(trf_17287)
static void C_fcall trf_17287(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17287(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17287(t0,t1);}

C_noret_decl(trf_17251)
static void C_fcall trf_17251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17251(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17251(t0,t1);}

C_noret_decl(trf_16974)
static void C_fcall trf_16974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16974(t0,t1);}

C_noret_decl(trf_16977)
static void C_fcall trf_16977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16977(t0,t1);}

C_noret_decl(trf_16980)
static void C_fcall trf_16980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16980(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16980(t0,t1);}

C_noret_decl(trf_16871)
static void C_fcall trf_16871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16871(t0,t1);}

C_noret_decl(trf_16862)
static void C_fcall trf_16862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16862(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16862(t0,t1,t2);}

C_noret_decl(trf_16853)
static void C_fcall trf_16853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16853(t0,t1);}

C_noret_decl(trf_16835)
static void C_fcall trf_16835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16835(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16835(t0,t1);}

C_noret_decl(trf_16817)
static void C_fcall trf_16817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16817(t0,t1);}

C_noret_decl(trf_16799)
static void C_fcall trf_16799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16799(t0,t1);}

C_noret_decl(trf_16790)
static void C_fcall trf_16790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16790(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16790(t0,t1,t2);}

C_noret_decl(trf_16781)
static void C_fcall trf_16781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16781(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16781(t0,t1);}

C_noret_decl(trf_16612)
static void C_fcall trf_16612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16612(t0,t1);}

C_noret_decl(trf_16568)
static void C_fcall trf_16568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16568(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16568(t0,t1,t2);}

C_noret_decl(trf_16089)
static void C_fcall trf_16089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16089(t0,t1);}

C_noret_decl(trf_16092)
static void C_fcall trf_16092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16092(t0,t1);}

C_noret_decl(trf_16095)
static void C_fcall trf_16095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16095(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16095(t0,t1);}

C_noret_decl(trf_16098)
static void C_fcall trf_16098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16098(t0,t1);}

C_noret_decl(trf_16044)
static void C_fcall trf_16044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16044(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16044(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15750)
static void C_fcall trf_15750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15750(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15750(t0,t1);}

C_noret_decl(trf_15753)
static void C_fcall trf_15753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15753(t0,t1);}

C_noret_decl(trf_15756)
static void C_fcall trf_15756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15756(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15756(t0,t1);}

C_noret_decl(trf_15467)
static void C_fcall trf_15467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15467(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15467(t0,t1);}

C_noret_decl(trf_15470)
static void C_fcall trf_15470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15470(t0,t1);}

C_noret_decl(trf_15473)
static void C_fcall trf_15473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15473(t0,t1);}

C_noret_decl(trf_15426)
static void C_fcall trf_15426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15426(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15426(t0,t1);}

C_noret_decl(trf_15382)
static void C_fcall trf_15382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15382(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15382(t0,t1);}

C_noret_decl(trf_15297)
static void C_fcall trf_15297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15297(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15297(t0,t1);}

C_noret_decl(trf_14782)
static void C_fcall trf_14782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14782(t0,t1);}

C_noret_decl(trf_14785)
static void C_fcall trf_14785(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14785(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14785(t0,t1);}

C_noret_decl(trf_14788)
static void C_fcall trf_14788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14788(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14788(t0,t1);}

C_noret_decl(trf_14791)
static void C_fcall trf_14791(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14791(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14791(t0,t1);}

C_noret_decl(trf_14698)
static void C_fcall trf_14698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14698(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14698(t0,t1,t2);}

C_noret_decl(trf_14689)
static void C_fcall trf_14689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14689(t0,t1);}

C_noret_decl(trf_14624)
static void C_fcall trf_14624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14624(t0,t1);}

C_noret_decl(trf_14366)
static void C_fcall trf_14366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14366(t0,t1);}

C_noret_decl(trf_14369)
static void C_fcall trf_14369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14369(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14369(t0,t1);}

C_noret_decl(trf_14372)
static void C_fcall trf_14372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14372(t0,t1);}

C_noret_decl(trf_14247)
static void C_fcall trf_14247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14247(t0,t1);}

C_noret_decl(trf_14271)
static void C_fcall trf_14271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14271(t0,t1);}

C_noret_decl(trf_14201)
static void C_fcall trf_14201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14201(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14201(t0,t1,t2);}

C_noret_decl(trf_14192)
static void C_fcall trf_14192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14192(t0,t1);}

C_noret_decl(trf_13900)
static void C_fcall trf_13900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13900(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13900(t0,t1);}

C_noret_decl(trf_14136)
static void C_fcall trf_14136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14136(t0,t1);}

C_noret_decl(trf_14142)
static void C_fcall trf_14142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14142(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14142(t0,t1);}

C_noret_decl(trf_14034)
static void C_fcall trf_14034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14034(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14034(t0,t1);}

C_noret_decl(trf_14036)
static void C_fcall trf_14036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14036(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14036(t0,t1,t2,t3);}

C_noret_decl(trf_14085)
static void C_fcall trf_14085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14085(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14085(t0,t1);}

C_noret_decl(trf_14050)
static void C_fcall trf_14050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14050(t0,t1);}

C_noret_decl(trf_13934)
static void C_fcall trf_13934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13934(t0,t1);}

C_noret_decl(trf_13848)
static void C_fcall trf_13848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13848(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13848(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13867)
static void C_fcall trf_13867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13867(t0,t1);}

C_noret_decl(trf_13798)
static void C_fcall trf_13798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13798(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13798(t0,t1,t2,t3);}

C_noret_decl(trf_13559)
static void C_fcall trf_13559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13559(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_13559(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_13578)
static void C_fcall trf_13578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13578(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13578(t0,t1);}

C_noret_decl(trf_13593)
static void C_fcall trf_13593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13593(t0,t1);}

C_noret_decl(trf_13602)
static void C_fcall trf_13602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13602(t0,t1);}

C_noret_decl(trf_13549)
static void C_fcall trf_13549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13549(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_13549(t0);}

C_noret_decl(trf_13490)
static void C_fcall trf_13490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13490(t0,t1);}

C_noret_decl(trf_13481)
static void C_fcall trf_13481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13481(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13481(t0,t1,t2);}

C_noret_decl(trf_13364)
static void C_fcall trf_13364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13364(t0,t1);}

C_noret_decl(trf_13355)
static void C_fcall trf_13355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13355(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13355(t0,t1,t2);}

C_noret_decl(trf_13337)
static void C_fcall trf_13337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13337(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13337(t0,t1,t2);}

C_noret_decl(trf_13328)
static void C_fcall trf_13328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13328(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13328(t0,t1);}

C_noret_decl(trf_13310)
static void C_fcall trf_13310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13310(t0,t1);}

C_noret_decl(trf_13301)
static void C_fcall trf_13301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13301(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13301(t0,t1,t2);}

C_noret_decl(trf_13292)
static void C_fcall trf_13292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13292(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13292(t0,t1);}

C_noret_decl(trf_13274)
static void C_fcall trf_13274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13274(t0,t1);}

C_noret_decl(trf_13265)
static void C_fcall trf_13265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13265(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13265(t0,t1,t2);}

C_noret_decl(trf_13256)
static void C_fcall trf_13256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13256(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13256(t0,t1);}

C_noret_decl(trf_13241)
static void C_fcall trf_13241(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13241(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13241(t0,t1);}

C_noret_decl(trf_13196)
static void C_fcall trf_13196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13196(t0,t1);}

C_noret_decl(trf_13178)
static void C_fcall trf_13178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13178(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13178(t0,t1);}

C_noret_decl(trf_13169)
static void C_fcall trf_13169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13169(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13169(t0,t1,t2);}

C_noret_decl(trf_13142)
static void C_fcall trf_13142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13142(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13142(t0,t1);}

C_noret_decl(trf_13124)
static void C_fcall trf_13124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13124(t0,t1);}

C_noret_decl(trf_13106)
static void C_fcall trf_13106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13106(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13106(t0,t1);}

C_noret_decl(trf_13097)
static void C_fcall trf_13097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13097(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13097(t0,t1,t2);}

C_noret_decl(trf_13085)
static void C_fcall trf_13085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13085(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_13085(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_12747)
static void C_fcall trf_12747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12747(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12747(t0,t1,t2,t3);}

C_noret_decl(trf_12587)
static void C_fcall trf_12587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12587(t0,t1);}

C_noret_decl(trf_12622)
static void C_fcall trf_12622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12622(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_12622(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_12632)
static void C_fcall trf_12632(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12632(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12632(t0,t1);}

C_noret_decl(trf_12595)
static void C_fcall trf_12595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12595(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12595(t0,t1,t2);}

C_noret_decl(trf_12755)
static void C_fcall trf_12755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12755(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12755(t0,t1);}

C_noret_decl(trf_12373)
static void C_fcall trf_12373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12373(t0,t1);}

C_noret_decl(trf_12379)
static void C_fcall trf_12379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12379(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12379(t0,t1);}

C_noret_decl(trf_12402)
static void C_fcall trf_12402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12402(t0,t1);}

C_noret_decl(trf_12415)
static void C_fcall trf_12415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12415(t0,t1);}

C_noret_decl(trf_12389)
static void C_fcall trf_12389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12389(t0,t1);}

C_noret_decl(trf_12202)
static void C_fcall trf_12202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12202(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12202(t0,t1,t2,t3);}

C_noret_decl(trf_12211)
static void C_fcall trf_12211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12211(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12211(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12165)
static void C_fcall trf_12165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12165(t0,t1);}

C_noret_decl(trf_12028)
static void C_fcall trf_12028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12028(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12028(t0,t1);}

C_noret_decl(trf_11958)
static void C_fcall trf_11958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11958(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11958(t0,t1);}

C_noret_decl(trf_11319)
static void C_fcall trf_11319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11319(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11319(t0,t1,t2);}

C_noret_decl(trf_11279)
static void C_fcall trf_11279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11279(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11279(t0,t1,t2);}

C_noret_decl(trf_11292)
static void C_fcall trf_11292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11292(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11292(t0,t1);}

C_noret_decl(trf_11871)
static void C_fcall trf_11871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11871(t0,t1);}

C_noret_decl(trf_11661)
static void C_fcall trf_11661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11661(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11661(t0,t1);}

C_noret_decl(trf_11777)
static void C_fcall trf_11777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11777(t0,t1);}

C_noret_decl(trf_11664)
static void C_fcall trf_11664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11664(t0,t1);}

C_noret_decl(trf_11667)
static void C_fcall trf_11667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11667(t0,t1);}

C_noret_decl(trf_11572)
static void C_fcall trf_11572(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11572(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11572(t0,t1);}

C_noret_decl(trf_11487)
static void C_fcall trf_11487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11487(t0,t1);}

C_noret_decl(trf_11444)
static void C_fcall trf_11444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11444(t0,t1);}

C_noret_decl(trf_11411)
static void C_fcall trf_11411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11411(t0,t1);}

C_noret_decl(trf_11406)
static void C_fcall trf_11406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11406(t0,t1);}

C_noret_decl(trf_11401)
static void C_fcall trf_11401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11401(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11401(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11148)
static void C_fcall trf_11148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11148(t0,t1);}

C_noret_decl(trf_10995)
static void C_fcall trf_10995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10995(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10995(t0,t1,t2,t3);}

C_noret_decl(trf_10841)
static void C_fcall trf_10841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10841(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10841(t0,t1,t2);}

C_noret_decl(trf_10683)
static void C_fcall trf_10683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10683(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10683(t0,t1,t2);}

C_noret_decl(trf_10716)
static void C_fcall trf_10716(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10716(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10716(t0,t1);}

C_noret_decl(trf_10623)
static void C_fcall trf_10623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10623(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10623(t0,t1);}

C_noret_decl(trf_10588)
static void C_fcall trf_10588(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10588(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10588(t0,t1);}

C_noret_decl(trf_10604)
static void C_fcall trf_10604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10604(t0,t1);}

C_noret_decl(trf_10559)
static void C_fcall trf_10559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10559(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10559(t0,t1);}

C_noret_decl(trf_10466)
static void C_fcall trf_10466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10466(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10466(t0,t1);}

C_noret_decl(trf_10222)
static void C_fcall trf_10222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10222(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10222(t0,t1,t2);}

C_noret_decl(trf_10026)
static void C_fcall trf_10026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10026(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10026(t0,t1);}

C_noret_decl(trf_10189)
static void C_fcall trf_10189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10189(t0,t1);}

C_noret_decl(trf_10029)
static void C_fcall trf_10029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10029(t0,t1);}

C_noret_decl(trf_10032)
static void C_fcall trf_10032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10032(t0,t1);}

C_noret_decl(trf_10035)
static void C_fcall trf_10035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10035(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10035(t0,t1);}

C_noret_decl(trf_10077)
static void C_fcall trf_10077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10077(t0,t1);}

C_noret_decl(trf_10042)
static void C_fcall trf_10042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10042(t0,t1);}

C_noret_decl(trf_9771)
static void C_fcall trf_9771(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9771(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9771(t0,t1,t2,t3);}

C_noret_decl(trf_9779)
static void C_fcall trf_9779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9779(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9779(t0,t1,t2,t3);}

C_noret_decl(trf_9908)
static void C_fcall trf_9908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9908(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9908(t0,t1,t2);}

C_noret_decl(trf_9862)
static void C_fcall trf_9862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9862(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9862(t0,t1,t2);}

C_noret_decl(trf_9765)
static void C_fcall trf_9765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9765(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9765(t0,t1,t2);}

C_noret_decl(trf_9759)
static void C_fcall trf_9759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9759(t0,t1);}

C_noret_decl(trf_9753)
static void C_fcall trf_9753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9753(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9753(t0,t1,t2);}

C_noret_decl(trf_9682)
static void C_fcall trf_9682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9682(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9682(t0,t1,t2);}

C_noret_decl(trf_9684)
static void C_fcall trf_9684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9684(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9684(t0,t1,t2);}

C_noret_decl(trf_9690)
static void C_fcall trf_9690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9690(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9690(t0,t1,t2);}

C_noret_decl(trf_9531)
static void C_fcall trf_9531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9531(t0,t1);}

C_noret_decl(trf_9546)
static void C_fcall trf_9546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9546(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9546(t0,t1,t2);}

C_noret_decl(trf_9489)
static void C_fcall trf_9489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9489(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9489(t0,t1,t2);}

C_noret_decl(trf_9429)
static void C_fcall trf_9429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9429(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9429(t0,t1,t2);}

C_noret_decl(trf_8958)
static void C_fcall trf_8958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8958(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8958(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8971)
static void C_fcall trf_8971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8971(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8971(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8988)
static void C_fcall trf_8988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8988(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8988(t0,t1);}

C_noret_decl(trf_8754)
static void C_fcall trf_8754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8754(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8754(t0,t1,t2);}

C_noret_decl(trf_8760)
static void C_fcall trf_8760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8760(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8760(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8770)
static void C_fcall trf_8770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8770(t0,t1);}

C_noret_decl(trf_8684)
static void C_fcall trf_8684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8684(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8684(t0,t1,t2,t3);}

C_noret_decl(trf_8661)
static void C_fcall trf_8661(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8661(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8661(t0,t1,t2,t3);}

C_noret_decl(trf_8502)
static void C_fcall trf_8502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8502(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8502(t0,t1,t2);}

C_noret_decl(trf_8540)
static void C_fcall trf_8540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8540(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8540(t0,t1,t2);}

C_noret_decl(trf_8226)
static void C_fcall trf_8226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8226(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8226(t0,t1);}

C_noret_decl(trf_7875)
static void C_fcall trf_7875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7875(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7875(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7690)
static void C_fcall trf_7690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7690(t0,t1);}

C_noret_decl(trf_7599)
static void C_fcall trf_7599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7599(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7599(t0,t1);}

C_noret_decl(trf_7579)
static void C_fcall trf_7579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7579(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7579(t0,t1,t2,t3);}

C_noret_decl(trf_7538)
static void C_fcall trf_7538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7538(t0,t1);}

C_noret_decl(trf_7528)
static void C_fcall trf_7528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7528(t0,t1);}

C_noret_decl(trf_7510)
static void C_fcall trf_7510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7510(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7510(t0,t1);}

C_noret_decl(trf_7499)
static void C_fcall trf_7499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7499(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7499(t0,t1,t2);}

C_noret_decl(trf_7461)
static void C_fcall trf_7461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7461(t0,t1);}

C_noret_decl(trf_7454)
static void C_fcall trf_7454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7454(t0,t1);}

C_noret_decl(trf_7430)
static void C_fcall trf_7430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7430(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7430(t0,t1);}

C_noret_decl(trf_7356)
static void C_fcall trf_7356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7356(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7356(t0,t1,t2,t3);}

C_noret_decl(trf_7345)
static void C_fcall trf_7345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7345(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7345(t0,t1,t2);}

C_noret_decl(trf_7284)
static void C_fcall trf_7284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7284(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7284(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7228)
static void C_fcall trf_7228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7228(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7228(t0,t1,t2);}

C_noret_decl(trf_7107)
static void C_fcall trf_7107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7107(t0,t1);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_cm_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("cm_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(6058)){
C_save(t1);
C_rereclaim2(6058*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,1083);
lf[0]=C_h_intern(&lf[0],3,"ash");
lf[1]=C_h_intern(&lf[1],6,"logand");
lf[2]=C_h_intern(&lf[2],11,"bitwise-and");
lf[3]=C_h_intern(&lf[3],6,"lognot");
lf[4]=C_h_intern(&lf[4],11,"bitwise-not");
lf[5]=C_h_intern(&lf[5],6,"logxor");
lf[6]=C_h_intern(&lf[6],11,"bitwise-xor");
lf[7]=C_h_intern(&lf[7],6,"logior");
lf[8]=C_h_intern(&lf[8],11,"bitwise-ior");
lf[9]=C_h_intern(&lf[9],7,"logtest");
lf[10]=C_h_intern(&lf[10],20,"most-positive-fixnum");
lf[11]=C_h_intern(&lf[11],20,"most-negative-fixnum");
lf[12]=C_h_intern(&lf[12],2,"pi");
lf[13]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[14]=C_h_intern(&lf[14],9,"list-set!");
lf[15]=C_h_intern(&lf[15],21,"make-equal-hash-table");
lf[16]=C_h_intern(&lf[16],15,"make-hash-table");
lf[17]=C_h_intern(&lf[17],6,"equal\077");
lf[18]=C_h_intern(&lf[18],18,"make-eq-hash-table");
lf[19]=C_h_intern(&lf[19],3,"eq\077");
lf[20]=C_h_intern(&lf[20],9,"hash-set!");
lf[21]=C_h_intern(&lf[21],15,"hash-table-set!");
lf[22]=C_h_intern(&lf[22],8,"hash-ref");
lf[23]=C_h_intern(&lf[23],22,"hash-table-ref/default");
lf[25]=C_h_intern(&lf[25],22,"call-with-input-string");
lf[26]=C_h_intern(&lf[26],4,"read");
lf[28]=C_h_intern(&lf[28],17,"\003sysmake-c-string");
lf[53]=C_h_intern(&lf[53],22,"ffi_sched_score_mode_p");
lf[54]=C_h_intern(&lf[54],20,"ffi_sched_score_time");
lf[56]=C_h_intern(&lf[56],17,"\003syspeek-c-string");
lf[58]=C_h_intern(&lf[58],4,"quit");
lf[59]=C_h_intern(&lf[59],11,"print-error");
lf[60]=C_h_intern(&lf[60],12,"print-output");
lf[61]=C_h_intern(&lf[61],5,"shell");
lf[62]=C_h_intern(&lf[62],5,"first");
lf[63]=C_h_intern(&lf[63],3,"car");
lf[64]=C_h_intern(&lf[64],6,"second");
lf[65]=C_h_intern(&lf[65],4,"cadr");
lf[66]=C_h_intern(&lf[66],5,"third");
lf[67]=C_h_intern(&lf[67],5,"caddr");
lf[68]=C_h_intern(&lf[68],6,"fourth");
lf[69]=C_h_intern(&lf[69],6,"cadddr");
lf[70]=C_h_intern(&lf[70],5,"fifth");
lf[71]=C_h_intern(&lf[71],5,"sixth");
lf[72]=C_h_intern(&lf[72],7,"seventh");
lf[73]=C_h_intern(&lf[73],6,"eighth");
lf[74]=C_h_intern(&lf[74],5,"ninth");
lf[75]=C_h_intern(&lf[75],5,"tenth");
lf[76]=C_h_intern(&lf[76],3,"nth");
lf[77]=C_h_intern(&lf[77],8,"list-ref");
lf[78]=C_h_intern(&lf[78],4,"rest");
lf[79]=C_h_intern(&lf[79],4,"last");
lf[80]=C_h_intern(&lf[80],7,"butlast");
lf[81]=C_h_intern(&lf[81],4,"tail");
lf[82]=C_h_intern(&lf[82],6,"concat");
lf[83]=C_h_intern(&lf[83],9,"make-list");
lf[84]=C_h_intern(&lf[84],5,"error");
lf[85]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[89]=C_h_intern(&lf[89],6,"length");
lf[90]=C_h_intern(&lf[90],10,"string-ref");
lf[91]=C_h_intern(&lf[91],13,"string-length");
lf[92]=C_h_intern(&lf[92],10,"vector-ref");
lf[93]=C_h_intern(&lf[93],13,"vector-length");
lf[94]=C_decode_literal(C_heaptop,"\376B\000\000\034not a list, string or vector");
lf[95]=C_h_intern(&lf[95],4,"find");
lf[96]=C_h_intern(&lf[96],12,"with-optkeys");
lf[97]=C_h_intern(&lf[97],3,"key");
lf[98]=C_h_intern(&lf[98],5,"start");
lf[99]=C_h_intern(&lf[99],3,"end");
lf[100]=C_h_intern(&lf[100],8,"position");
lf[101]=C_h_intern(&lf[101],14,"expand-optkeys");
lf[102]=C_h_intern(&lf[102],3,"let");
lf[103]=C_h_intern(&lf[103],4,"let*");
lf[104]=C_h_intern(&lf[104],5,"null\077");
lf[105]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[106]=C_h_intern(&lf[106],6,"unless");
lf[107]=C_h_intern(&lf[107],10,"\003sysappend");
lf[108]=C_h_intern(&lf[108],4,"case");
lf[109]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[110]=C_h_intern(&lf[110],4,"when");
lf[111]=C_h_intern(&lf[111],4,"set!");
lf[112]=C_h_intern(&lf[112],8,"keyword\077");
lf[113]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[114]=C_h_intern(&lf[114],3,"cdr");
lf[115]=C_h_intern(&lf[115],4,"else");
lf[116]=C_h_intern(&lf[116],7,"\003sysmap");
lf[117]=C_h_intern(&lf[117],6,"append");
lf[118]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[119]=C_h_intern(&lf[119],2,"if");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[121]=C_h_intern(&lf[121],4,"cddr");
lf[122]=C_h_intern(&lf[122],15,"string->keyword");
lf[123]=C_h_intern(&lf[123],14,"symbol->string");
lf[124]=C_h_intern(&lf[124],6,"gensym");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[126]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[138]=C_h_intern(&lf[138],8,"operator");
lf[139]=C_h_intern(&lf[139],8,"bindings");
lf[140]=C_h_intern(&lf[140],10,"collectors");
lf[141]=C_h_intern(&lf[141],9,"initially");
lf[142]=C_h_intern(&lf[142],9,"end-tests");
lf[143]=C_h_intern(&lf[143],7,"looping");
lf[144]=C_h_intern(&lf[144],8,"stepping");
lf[145]=C_h_intern(&lf[145],7,"finally");
lf[146]=C_h_intern(&lf[146],9,"returning");
lf[152]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[153]=C_h_intern(&lf[153],7,"newline");
lf[154]=C_h_intern(&lf[154],7,"display");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[158]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[161]=C_h_intern(&lf[161],7,"reverse");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[168]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[169]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[171]=C_h_intern(&lf[171],3,"for");
lf[172]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[174]=C_h_intern(&lf[174],8,"downfrom");
lf[175]=C_h_intern(&lf[175],1,"-");
lf[176]=C_h_intern(&lf[176],5,"above");
lf[177]=C_h_intern(&lf[177],2,"<=");
lf[178]=C_h_intern(&lf[178],1,"<");
lf[179]=C_h_intern(&lf[179],1,"+");
lf[180]=C_h_intern(&lf[180],5,"below");
lf[181]=C_h_intern(&lf[181],2,">=");
lf[182]=C_h_intern(&lf[182],1,">");
lf[183]=C_h_intern(&lf[183],6,"downto");
lf[184]=C_h_intern(&lf[184],4,"from");
lf[185]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[187]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[188]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[191]=C_h_intern(&lf[191],2,"to");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[195]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[196]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[199]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[200]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[201]=C_h_intern(&lf[201],2,"by");
lf[202]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[203]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[204]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[207]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[208]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[210]=C_h_intern(&lf[210],6,"across");
lf[211]=C_h_intern(&lf[211],3,"not");
lf[212]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[213]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[214]=C_h_intern(&lf[214],4,"over");
lf[215]=C_h_intern(&lf[215],4,"eod\077");
lf[216]=C_h_intern(&lf[216],5,"begin");
lf[217]=C_h_intern(&lf[217],4,"next");
lf[218]=C_h_intern(&lf[218],2,"in");
lf[219]=C_h_intern(&lf[219],5,"quote");
lf[220]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[221]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[222]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[223]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[224]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[225]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[226]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[227]=C_h_intern(&lf[227],2,"on");
lf[228]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[229]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[231]=C_h_intern(&lf[231],1,"=");
lf[232]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[233]=C_h_intern(&lf[233],4,"then");
lf[234]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[235]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[236]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[237]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[239]=C_h_intern(&lf[239],4,"with");
lf[240]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[241]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[242]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[243]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[244]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[245]=C_h_intern(&lf[245],3,"and");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[248]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[249]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[260]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[261]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[263]=C_h_intern(&lf[263],3,"sum");
lf[264]=C_h_intern(&lf[264],5,"count");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[266]=C_h_intern(&lf[266],8,"minimize");
lf[267]=C_h_intern(&lf[267],8,"maximize");
lf[268]=C_h_intern(&lf[268],2,"or");
lf[269]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[270]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[271]=C_h_intern(&lf[271],4,"list");
lf[272]=C_h_intern(&lf[272],8,"set-cdr!");
lf[273]=C_h_intern(&lf[273],9,"last-pair");
lf[274]=C_h_intern(&lf[274],7,"collect");
lf[275]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[276]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[278]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[279]=C_h_intern(&lf[279],5,"nconc");
lf[280]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[281]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[282]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[283]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[284]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[285]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[286]=C_h_intern(&lf[286],4,"into");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[293]=C_h_intern(&lf[293],6,"return");
lf[295]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[296]=C_h_intern(&lf[296],5,"until");
lf[297]=C_h_intern(&lf[297],5,"while");
lf[298]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[299]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[301]=C_h_intern(&lf[301],7,"thereis");
lf[302]=C_h_intern(&lf[302],6,"always");
lf[303]=C_h_intern(&lf[303],5,"never");
lf[304]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[307]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[310]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[311]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[312]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[313]=C_h_intern(&lf[313],4,"task");
lf[314]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[316]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[319]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[320]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[322]=C_h_intern(&lf[322],2,"do");
lf[323]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[325]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[326]=C_h_intern(&lf[326],4,"iter");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[329]=C_h_intern(&lf[329],6,"repeat");
lf[330]=C_h_intern(&lf[330],2,"as");
lf[333]=C_h_intern(&lf[333],6,"period");
lf[335]=C_h_intern(&lf[335],14,"\003sysblock-set!");
lf[343]=C_h_intern(&lf[343],7,"pattern");
lf[358]=C_h_intern(&lf[358],4,"\000nad");
lf[359]=C_h_intern(&lf[359],8,"\000periods");
lf[360]=C_h_intern(&lf[360],12,"\000depth-first");
lf[362]=C_h_intern(&lf[362],14,"\000breadth-first");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[364]=C_h_intern(&lf[364],7,"\000values");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[367]=C_h_intern(&lf[367],4,"eop\077");
lf[368]=C_h_intern(&lf[368],4,"\000eop");
lf[369]=C_h_intern(&lf[369],4,"\000eod");
lf[373]=C_h_intern(&lf[373],3,"max");
lf[374]=C_h_intern(&lf[374],10,"make-cycle");
lf[375]=C_h_intern(&lf[375],12,"\003sysfor-each");
lf[377]=C_h_intern(&lf[377],4,"\000for");
lf[378]=C_h_intern(&lf[378],7,"\000repeat");
lf[380]=C_h_intern(&lf[380],5,"palin");
lf[382]=C_h_intern(&lf[382],15,"make-palindrome");
lf[384]=C_h_intern(&lf[384],6,"\000elide");
lf[385]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[386]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[387]=C_h_intern(&lf[387],9,"make-line");
lf[389]=C_h_intern(&lf[389],9,"make-heap");
lf[391]=C_h_intern(&lf[391],13,"make-rotation");
lf[393]=C_h_intern(&lf[393],7,"\000rotate");
lf[395]=C_h_intern(&lf[395],11,"random-item");
lf[403]=C_h_intern(&lf[403],14,"make-weighting");
lf[406]=C_h_intern(&lf[406],7,"\000weight");
lf[407]=C_h_intern(&lf[407],4,"\000min");
lf[408]=C_h_intern(&lf[408],4,"\000max");
lf[409]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[410]=C_h_intern(&lf[410],11,"make-markov");
lf[411]=C_h_intern(&lf[411],1,"*");
lf[413]=C_h_intern(&lf[413],5,"\000past");
lf[414]=C_h_intern(&lf[414],2,"->");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[416]=C_h_intern(&lf[416],3,"\000->");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[422]=C_h_intern(&lf[422],10,"graph-node");
lf[423]=C_h_intern(&lf[423],10,"make-graph");
lf[425]=C_h_intern(&lf[425],3,"\000to");
lf[426]=C_h_intern(&lf[426],3,"\000id");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[430]=C_h_intern(&lf[430],14,"markov-analyze");
lf[431]=C_h_intern(&lf[431],6,"format");
lf[432]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[433]=C_h_intern(&lf[433],19,"\003sysundefined-value");
lf[434]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[436]=C_h_intern(&lf[436],19,"\003syswrite-char/port");
lf[437]=C_h_intern(&lf[437],19,"\003sysstandard-output");
lf[438]=C_h_intern(&lf[438],9,"substring");
lf[439]=C_h_intern(&lf[439],3,"min");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[441]=C_h_intern(&lf[441],13,"string-append");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[445]=C_h_intern(&lf[445],11,"make-string");
lf[446]=C_h_intern(&lf[446],4,"sort");
lf[447]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[448]=C_h_intern(&lf[448],8,"decimals");
lf[449]=C_h_intern(&lf[449],11,"string-ci<\077");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[452]=C_h_intern(&lf[452],6,"modulo");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[454]=C_h_intern(&lf[454],6,"\000order");
lf[455]=C_h_intern(&lf[455],5,"\000mode");
lf[456]=C_h_intern(&lf[456],7,"rescale");
lf[457]=C_h_intern(&lf[457],8,"discrete");
lf[458]=C_h_intern(&lf[458],12,"ffi_discrete");
lf[459]=C_h_intern(&lf[459],4,"not\077");
lf[460]=C_h_intern(&lf[460],3,"int");
lf[461]=C_h_intern(&lf[461],5,"float");
lf[462]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[463]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[464]=C_h_intern(&lf[464],5,"log10");
lf[465]=C_h_intern(&lf[465],4,"log2");
lf[466]=C_h_intern(&lf[466],4,"plus");
lf[467]=C_h_intern(&lf[467],5,"times");
lf[468]=C_h_intern(&lf[468],5,"minus");
lf[469]=C_h_intern(&lf[469],6,"divide");
lf[470]=C_h_intern(&lf[470],1,"/");
lf[471]=C_h_intern(&lf[471],8,"quantize");
lf[472]=C_h_intern(&lf[472],5,"round");
lf[473]=C_h_intern(&lf[473],4,"expt");
lf[474]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[475]=C_h_intern(&lf[475],15,"rhythm->seconds");
lf[476]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[477]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[478]=C_h_intern(&lf[478],6,"\000tempo");
lf[479]=C_h_intern(&lf[479],5,"\000beat");
lf[480]=C_h_intern(&lf[480],12,"ratio->cents");
lf[481]=C_h_intern(&lf[481],12,"cents->ratio");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[484]=C_h_intern(&lf[484],3,"err");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[487]=C_h_intern(&lf[487],6,"interp");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[489]=C_h_intern(&lf[489],8,"tendency");
lf[490]=C_h_intern(&lf[490],3,"ran");
lf[491]=C_h_intern(&lf[491],3,"fit");
lf[492]=C_h_intern(&lf[492],9,"remainder");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[494]=C_h_intern(&lf[494],5,"scale");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[496]=C_h_intern(&lf[496],4,"segs");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[499]=C_h_intern(&lf[499],8,"ran-set!");
lf[500]=C_h_intern(&lf[500],7,"between");
lf[501]=C_h_intern(&lf[501],4,"pick");
lf[502]=C_h_intern(&lf[502],4,"vary");
lf[503]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[505]=C_h_intern(&lf[505],8,"shuffle!");
lf[506]=C_h_intern(&lf[506],7,"shuffle");
lf[507]=C_h_intern(&lf[507],6,"ranlow");
lf[508]=C_h_intern(&lf[508],7,"ranhigh");
lf[509]=C_h_intern(&lf[509],9,"ranmiddle");
lf[510]=C_h_intern(&lf[510],7,"ranbeta");
lf[511]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[512]=C_h_intern(&lf[512],2,"\000a");
lf[513]=C_h_intern(&lf[513],2,"\000b");
lf[514]=C_h_intern(&lf[514],6,"ranexp");
lf[515]=C_h_intern(&lf[515],8,"rangauss");
lf[516]=C_h_intern(&lf[516],9,"rancauchy");
lf[517]=C_h_intern(&lf[517],10,"ranpoisson");
lf[518]=C_h_intern(&lf[518],8,"rangamma");
lf[519]=C_h_intern(&lf[519],8,"ranbrown");
lf[520]=C_h_intern(&lf[520],7,"ranpink");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[528]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[529]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[530]=C_h_intern(&lf[530],5,"floor");
lf[531]=C_h_intern(&lf[531],15,"keyword->string");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[533]=C_h_intern(&lf[533],4,"note");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[536]=C_h_intern(&lf[536],2,"hz");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[538]=C_h_intern(&lf[538],2,"pc");
lf[539]=C_h_intern(&lf[539],6,"invert");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[542]=C_h_intern(&lf[542],9,"transpose");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[544]=C_h_intern(&lf[544],10,"retrograde");
lf[545]=C_h_intern(&lf[545],11,"scale-order");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[547]=C_h_intern(&lf[547],7,"*tempo*");
lf[548]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[549]=C_h_intern(&lf[549],6,"*beat*");
lf[550]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[552]=C_h_intern(&lf[552],14,"string->symbol");
lf[553]=C_h_intern(&lf[553],6,"rhythm");
lf[554]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\012\000\000+\376\003\000\000\002\376\377\012\000\000-\376\003\000\000\002\376\377\012\000\000*\376\003\000\000\002\376\377\012\000\000/\376\377\016");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[562]=C_h_intern(&lf[562],8,"in-tempo");
lf[563]=C_h_intern(&lf[563],5,"chdir");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[570]=C_h_intern(&lf[570],8,"spectrum");
lf[572]=C_h_intern(&lf[572],13,"spectrum-time");
lf[574]=C_h_intern(&lf[574],13,"spectrum-size");
lf[576]=C_h_intern(&lf[576],14,"spectrum-freqs");
lf[578]=C_h_intern(&lf[578],13,"spectrum-amps");
lf[579]=C_h_intern(&lf[579],13,"spectrum-copy");
lf[580]=C_h_intern(&lf[580],14,"spectrum-pairs");
lf[581]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[582]=C_h_intern(&lf[582],16,"spectrum-minfreq");
lf[583]=C_h_intern(&lf[583],16,"spectrum-maxfreq");
lf[584]=C_h_intern(&lf[584],15,"spectrum-minamp");
lf[585]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[586]=C_h_intern(&lf[586],15,"spectrum-maxamp");
lf[587]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[588]=C_h_intern(&lf[588],13,"spectrum-keys");
lf[589]=C_h_intern(&lf[589],5,"sort!");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\022mode not -1 0 or 1");
lf[591]=C_h_intern(&lf[591],4,"mode");
lf[592]=C_h_intern(&lf[592],8,"for-each");
lf[593]=C_h_intern(&lf[593],7,"\000thresh");
lf[594]=C_h_intern(&lf[594],6,"\000quant");
lf[595]=C_h_intern(&lf[595],7,"\000unique");
lf[596]=C_h_intern(&lf[596],11,"fm-spectrum");
lf[597]=C_h_intern(&lf[597],4,"caar");
lf[598]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[599]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[600]=C_h_intern(&lf[600],13,"spectrum-add!");
lf[601]=C_h_intern(&lf[601],11,"rm-spectrum");
lf[602]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[603]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[604]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[605]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[606]=C_h_intern(&lf[606],14,"spectrum-flip!");
lf[607]=C_h_intern(&lf[607],17,"spectrum-rescale!");
lf[608]=C_h_intern(&lf[608],3,"map");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[610]=C_h_intern(&lf[610],7,"number\077");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[614]=C_h_intern(&lf[614],19,"import-spear-frames");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[616]=C_h_intern(&lf[616],9,"read-line");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[618]=C_h_intern(&lf[618],17,"open-input-string");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[624]=C_h_intern(&lf[624],18,"current-input-port");
lf[625]=C_h_intern(&lf[625],20,"with-input-from-file");
lf[626]=C_h_intern(&lf[626],19,"export-spear-frames");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\011 ~S ~S ~S");
lf[629]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[630]=C_decode_literal(C_heaptop,"\376B\000\000\005~S ~S");
lf[631]=C_decode_literal(C_heaptop,"\376B\000\000\014frame-data~%");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\020frame-count ~S~%");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\023partials-count ~S~%");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000&point-type index frequency amplitude~%");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\027par-text-frame-format~%");
lf[636]=C_h_intern(&lf[636],19,"current-output-port");
lf[637]=C_h_intern(&lf[637],19,"with-output-to-file");
lf[639]=C_h_intern(&lf[639],5,"token");
lf[643]=C_h_intern(&lf[643],1,"t");
lf[648]=C_h_intern(&lf[648],4,"rule");
lf[650]=C_decode_literal(C_heaptop,"\376B\000\000\012not a rule");
lf[657]=C_h_intern(&lf[657],11,"parse-error");
lf[659]=C_h_intern(&lf[659],10,"parse-unit");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[679]=C_h_intern(&lf[679],2,"!=");
lf[684]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[685]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[686]=C_h_intern(&lf[686],1,"@");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[693]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[699]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[700]=C_h_intern(&lf[700],3,"sal");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[703]=C_h_intern(&lf[703],4,"eval");
lf[704]=C_h_intern(&lf[704],23,"interaction-environment");
lf[705]=C_h_intern(&lf[705],7,"\000syntax");
lf[706]=C_h_intern(&lf[706],7,"\000scheme");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[708]=C_h_intern(&lf[708],7,"call/cc");
lf[710]=C_h_intern(&lf[710],7,"\000tokens");
lf[711]=C_h_intern(&lf[711],8,"\000expand\077");
lf[712]=C_h_intern(&lf[712],5,"\000rule");
lf[713]=C_h_intern(&lf[713],9,"sal:print");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[715]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[721]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[722]=C_h_intern(&lf[722],9,"sal:chdir");
lf[723]=C_h_intern(&lf[723],8,"sal:load");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000\003sal");
lf[725]=C_h_intern(&lf[725],13,"load-sal-file");
lf[726]=C_h_intern(&lf[726],4,"load");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\021\042 does not exist\012");
lf[731]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[732]=C_h_intern(&lf[732],8,"sal:open");
lf[733]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[734]=C_h_intern(&lf[734],5,"ports");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\003mid");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\003sco");
lf[743]=C_h_intern(&lf[743],19,"cs:open-output-file");
lf[744]=C_h_intern(&lf[744],14,"fms:open-score");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000\026don\047t know how to open");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\005fomus");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\021file not writable");
lf[749]=C_decode_literal(C_heaptop,"\376B\000\000\033Scheduler busy, cannot open");
lf[750]=C_h_intern(&lf[750],6,"mm:off");
lf[751]=C_h_intern(&lf[751],5,"mm:on");
lf[752]=C_h_intern(&lf[752],8,"mm:touch");
lf[753]=C_h_intern(&lf[753],7,"mm:ctrl");
lf[754]=C_h_intern(&lf[754],7,"mm:prog");
lf[755]=C_h_intern(&lf[755],8,"mm:press");
lf[756]=C_h_intern(&lf[756],7,"mm:bend");
lf[757]=C_h_intern(&lf[757],7,"mp:open");
lf[760]=C_h_intern(&lf[760],4,"\000out");
lf[761]=C_h_intern(&lf[761],3,"\000in");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[764]=C_h_intern(&lf[764],7,"mp:midi");
lf[765]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[766]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[767]=C_h_intern(&lf[767],5,"\000time");
lf[768]=C_h_intern(&lf[768],4,"\000dur");
lf[769]=C_h_intern(&lf[769],4,"\000key");
lf[770]=C_h_intern(&lf[770],4,"\000amp");
lf[771]=C_h_intern(&lf[771],5,"\000chan");
lf[772]=C_h_intern(&lf[772],6,"mp:off");
lf[773]=C_h_intern(&lf[773],5,"mp:on");
lf[774]=C_h_intern(&lf[774],4,"\000vel");
lf[775]=C_h_intern(&lf[775],8,"mp:touch");
lf[776]=C_h_intern(&lf[776],4,"\000val");
lf[777]=C_h_intern(&lf[777],7,"mp:ctrl");
lf[778]=C_h_intern(&lf[778],4,"\000num");
lf[779]=C_h_intern(&lf[779],7,"mp:prog");
lf[780]=C_h_intern(&lf[780],8,"mp:press");
lf[781]=C_h_intern(&lf[781],7,"mp:bend");
lf[782]=C_h_intern(&lf[782],9,"mp:tuning");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\035not a tuning division 1 to 16");
lf[784]=C_h_intern(&lf[784],10,"mp:playseq");
lf[785]=C_h_intern(&lf[785],10,"mp:saveseq");
lf[786]=C_h_intern(&lf[786],10,"mp:copyseq");
lf[787]=C_h_intern(&lf[787],10,"mp:plotseq");
lf[788]=C_h_intern(&lf[788],11,"mp:clearseq");
lf[789]=C_h_intern(&lf[789],12,"mp:recordseq");
lf[790]=C_h_intern(&lf[790],21,"ffi_mp_set_record_seq");
lf[791]=C_h_intern(&lf[791],9,"mp:inhook");
lf[792]=C_h_intern(&lf[792],7,"sprintf");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[794]=C_h_intern(&lf[794],27,"condition-property-accessor");
lf[795]=C_h_intern(&lf[795],3,"exn");
lf[796]=C_h_intern(&lf[796],7,"message");
lf[797]=C_h_intern(&lf[797],22,"with-exception-handler");
lf[798]=C_h_intern(&lf[798],30,"call-with-current-continuation");
lf[799]=C_h_intern(&lf[799],10,"mp:inchans");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\031missing a channel 0 to 15");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\025not a channel 0 to 15");
lf[802]=C_h_intern(&lf[802],8,"mp:inops");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000(missing message type (mm:off to mm:bend)");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000$not a message type mm:off to mm:bend");
lf[806]=C_h_intern(&lf[806],9,"\000channels");
lf[807]=C_h_intern(&lf[807],14,"*clm-channels*");
lf[808]=C_h_intern(&lf[808],15,"init-with-sound");
lf[809]=C_h_intern(&lf[809],7,"\000output");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[811]=C_h_intern(&lf[811],12,"\000header-type");
lf[812]=C_h_intern(&lf[812],8,"mus-aifc");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[814]=C_h_intern(&lf[814],8,"mus-riff");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[816]=C_h_intern(&lf[816],8,"mus-next");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[818]=C_h_intern(&lf[818],12,"\000data-format");
lf[819]=C_h_intern(&lf[819],10,"mus-bshort");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[821]=C_h_intern(&lf[821],10,"mus-lshort");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[823]=C_h_intern(&lf[823],5,"\000play");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\007 :play ");
lf[827]=C_h_intern(&lf[827],6,"\000write");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\010 :write ");
lf[831]=C_h_intern(&lf[831],8,"\000options");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\013 :options \042");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\024options not a string");
lf[835]=C_h_intern(&lf[835],7,"\000header");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\012 :header \042");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\023header not a string");
lf[839]=C_h_intern(&lf[839],10,"\000orchestra");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\015 :orchestra \042");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\026orchestra not a string");
lf[843]=C_decode_literal(C_heaptop,"\376B\000\000\025unknown Csound option");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\023uneven options list");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[849]=C_h_intern(&lf[849],1,"i");
lf[850]=C_h_intern(&lf[850],14,"cs:f_statement");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000#pfield not number, string or symbol");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\027missing pfield 2 (time)");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\025pfield 2 not a number");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\027pfield 1 not an integer");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\023missing pfield data");
lf[858]=C_h_intern(&lf[858],4,"cs:i");
lf[859]=C_h_intern(&lf[859],4,"cs:f");
lf[860]=C_h_intern(&lf[860],1,"f");
lf[862]=C_h_intern(&lf[862],11,"expand-send");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\022not a send message");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000\030too many arguments in ~S");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\036Uneven keyword arguments in ~S");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000%~A not a valid keyword argument in ~S");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\031~A not a keyword argument");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[871]=C_h_intern(&lf[871],4,"\000opt");
lf[872]=C_h_intern(&lf[872],7,"\000optkey");
lf[873]=C_h_intern(&lf[873],5,"\000rest");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\012not a mode");
lf[875]=C_h_intern(&lf[875],9,"\000optional");
lf[876]=C_decode_literal(C_heaptop,"\376B\000\000\010shouldnt");
lf[877]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003out\376\003\000\000\002\376\001\000\000\002in\376\377\016");
lf[878]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003dur\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003amp\376\003\000\000\002\376\001\000\000\004"
"chan\376\377\016");
lf[879]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[880]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003vel\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[881]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[882]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003num\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[883]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[884]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[885]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[886]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\002mm\376\377\016");
lf[887]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004func\376\377\016");
lf[888]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003div\376\377\016");
lf[889]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[890]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003rec\376\377\016");
lf[891]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[892]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[893]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[894]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[895]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\003arg\376\377\016");
lf[897]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005throw\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[904]=C_h_intern(&lf[904],4,"args");
lf[905]=C_h_intern(&lf[905],6,"lambda");
lf[906]=C_h_intern(&lf[906],7,"elapsed");
lf[907]=C_h_intern(&lf[907],1,"x");
lf[908]=C_h_intern(&lf[908],4,"wait");
lf[909]=C_h_intern(&lf[909],5,"throw");
lf[910]=C_h_intern(&lf[910],18,"current-error-port");
lf[911]=C_h_intern(&lf[911],19,"print-error-message");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[913]=C_decode_literal(C_heaptop,"\376B\000\000\006errvar");
lf[914]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[915]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[916]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[917]=C_h_intern(&lf[917],7,"process");
lf[918]=C_h_intern(&lf[918],6,"sprout");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[920]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[923]=C_decode_literal(C_heaptop,"\376B\000\000\021illegal arguments");
lf[924]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[925]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[926]=C_h_intern(&lf[926],3,"now");
lf[927]=C_h_intern(&lf[927],5,"pause");
lf[928]=C_h_intern(&lf[928],7,"paused\077");
lf[929]=C_h_intern(&lf[929],8,"continue");
lf[930]=C_h_intern(&lf[930],4,"stop");
lf[931]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[932]=C_h_intern(&lf[932],14,"return-to-host");
lf[933]=C_h_intern(&lf[933],6,"define");
lf[934]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[935]=C_h_intern(&lf[935],18,"\003sysregister-macro");
lf[936]=C_h_intern(&lf[936],14,"define-process");
lf[937]=C_h_intern(&lf[937],20,"\003sysregister-macro-2");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:data");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:inops");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:inchans");
lf[943]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[944]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[945]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[946]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\016mp:instruments");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[951]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[953]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[954]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[955]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[956]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[957]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[958]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[959]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[960]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:open");
lf[961]=C_h_intern(&lf[961],19,"make-message-parser");
lf[962]=C_h_intern(&lf[962],4,"cons");
lf[963]=C_h_intern(&lf[963],10,"*messages*");
lf[964]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[965]=C_h_intern(&lf[965],19,"define-send-message");
lf[966]=C_h_intern(&lf[966],4,"send");
lf[967]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[968]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[969]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[970]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[971]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[972]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[973]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[974]=C_h_intern(&lf[974],7,"\000return");
lf[975]=C_h_intern(&lf[975],9,"\000function");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[977]=C_h_intern(&lf[977],8,"\000process");
lf[978]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[979]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[980]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[981]=C_h_intern(&lf[981],2,"go");
lf[982]=C_h_intern(&lf[982],4,"void");
lf[983]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\000\376\377\016");
lf[984]=C_h_intern(&lf[984],5,"\000loop");
lf[985]=C_h_intern(&lf[985],4,"\000run");
lf[986]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[987]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[988]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[989]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[990]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[991]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[992]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[993]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[994]=C_h_intern(&lf[994],9,"list-tail");
lf[995]=C_h_intern(&lf[995],8,"set-car!");
lf[996]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[997]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[998]=C_h_intern(&lf[998],9,"\000bindings");
lf[999]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[1000]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[1001]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[1002]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[1003]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[1004]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[1005]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[1006]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[1007]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[1008]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[1009]=C_h_intern(&lf[1009],10,"sal:output");
lf[1010]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[1011]=C_h_intern(&lf[1011],10,"sal:system");
lf[1012]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[1013]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[1014]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[1015]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[1016]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[1017]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[1018]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[1019]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[1020]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[1021]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[1022]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[1023]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[1024]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[1025]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[1026]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[1027]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[1028]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[1029]=C_h_intern(&lf[1029],7,"unquote");
lf[1030]=C_h_intern(&lf[1030],16,"unquote-splicing");
lf[1031]=C_h_intern(&lf[1031],5,"\000list");
lf[1032]=C_h_intern(&lf[1032],8,"\000unquote");
lf[1033]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[1034]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[1035]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[1036]=C_h_intern(&lf[1036],10,"quasiquote");
lf[1037]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[1038]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[1039]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[1040]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[1041]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[1042]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[1043]=C_h_intern(&lf[1043],6,"ruleid");
lf[1044]=C_h_intern(&lf[1044],9,"make-rule");
lf[1045]=C_h_intern(&lf[1045],7,"*rules*");
lf[1046]=C_h_intern(&lf[1046],7,"defrule");
lf[1047]=C_h_intern(&lf[1047],7,"promise");
lf[1048]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001.\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002..\376\003\000\000\002\376U0.75\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\003..."
"\376\003\000\000\002\376U0.875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\004....\376\003\000\000\002\376U0.9375\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\005.....\376\003\000\000\002\376U0"
".96875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\006......\376\003\000\000\002\376U0.984375\000\376\377\016\376\377\016");
lf[1049]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1050]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1051]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1052]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1053]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1054]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1055]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1056]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376U0.015625\000\376\003\000\000\002\376B\000\000\001x\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.03125\000\376\003\000\000\002\376B\000\000\001t\376\003"
"\000\000\002\376\377\001\000\000\000\001\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.0625\000\376\003\000\000\002\376B\000\000\001s\376\003\000\000\002\376\377\001\000\000\000\002\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.125\000\376\003\000\000"
"\002\376B\000\000\001e\376\003\000\000\002\376\377\001\000\000\000\003\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.25\000\376\003\000\000\002\376B\000\000\001q\376\003\000\000\002\376\377\001\000\000\000\004\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.5"
"\000\376\003\000\000\002\376B\000\000\001h\376\003\000\000\002\376\377\001\000\000\000\005\376\377\016\376\003\000\000\002\376\003\000\000\002\376\377\001\000\000\000\001\376\003\000\000\002\376B\000\000\001w\376\003\000\000\002\376\377\001\000\000\000\006\376\377\016\376\377\016");
lf[1057]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1058]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[1059]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1060]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[1061]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1062]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1063]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[1064]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[1065]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[1066]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1067]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[1068]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1069]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1070]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1071]=C_h_intern(&lf[1071],5,":loop");
lf[1072]=C_h_intern(&lf[1072],7,"tagbody");
lf[1073]=C_h_intern(&lf[1073],5,"block");
lf[1074]=C_h_intern(&lf[1074],3,"nil");
lf[1075]=C_h_intern(&lf[1075],8,"function");
lf[1076]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[1077]=C_h_intern(&lf[1077],3,"pop");
lf[1078]=C_h_intern(&lf[1078],4,"push");
lf[1079]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[1080]=C_h_intern(&lf[1080],4,"loop");
lf[1081]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[1082]=C_h_intern(&lf[1082],15,"enable-warnings");
C_register_lf2(lf,1083,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7017,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k7015 */
static void C_ccall f_7017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7020,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k7018 in k7015 */
static void C_ccall f_7020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7020,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7023,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k7021 in k7018 in k7015 */
static void C_ccall f_7023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7026,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7026,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7028,a[2]=((C_word)li0),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[1]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7034,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[3]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7040,a[2]=((C_word)li2),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[5]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7046,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[7]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7052,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[9]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7058,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=C_set_block_item(lf[10],0,C_fix(1073741823));
t9=C_set_block_item(lf[11],0,C_fix(-1073741823));
t10=C_mutate((C_word*)lf[12]+1,lf[13]);
t11=C_mutate((C_word*)lf[14]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7078,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[15]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7088,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[18]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7094,a[2]=((C_word)li8),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[20]+1,C_retrieve(lf[21]));
t15=C_mutate((C_word*)lf[22]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7101,a[2]=((C_word)li9),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[24],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7107,a[2]=((C_word)li10),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7209,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   enable-warnings");
t18=C_retrieve(lf[1082]);
((C_proc3)C_retrieve_proc(t18))(3,t18,t17,C_SCHEME_FALSE);}

/* k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[159],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7209,2,t0,t1);}
t2=C_mutate(&lf[27],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7228,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[29],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7284,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[30],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7338,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[31],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7345,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[32],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7356,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[33],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7371,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[34],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7378,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[35],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7392,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[36],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7411,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[37],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7430,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[38],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7451,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[39],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7454,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[40],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7461,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[41],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7490,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[42],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7493,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[43],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7496,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[44],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7499,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[45],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7510,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[46],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7528,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[47],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7535,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[48],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7538,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[49],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7545,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[50],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7548,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[51],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7579,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[52],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7599,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7609,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7619,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[55],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7690,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[57],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7875,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8204,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8210,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8216,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8247,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[62]+1,*((C_word*)lf[63]+1));
t36=C_mutate((C_word*)lf[64]+1,*((C_word*)lf[65]+1));
t37=C_mutate((C_word*)lf[66]+1,*((C_word*)lf[67]+1));
t38=C_mutate((C_word*)lf[68]+1,*((C_word*)lf[69]+1));
t39=C_mutate((C_word*)lf[70]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8257,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8267,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8277,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8287,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[74]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8297,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[75]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8311,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[76]+1,*((C_word*)lf[77]+1));
t46=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8326,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[79]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8332,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8355,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8403,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[82]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8493,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8655,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8754,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8872,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8958,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9032,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9076,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9120,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t58=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9409,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t59=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_46323,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   ##sys#register-macro");
t60=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t60))(4,t60,t58,lf[96],t59);}

/* a46322 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46323(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_46323r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_46323r(t0,t1,t2,t3);}}

static void C_ccall f_46323r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   expand-optkeys");
t6=C_retrieve(lf[101]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9412,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_46317,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro-2");
t4=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1080],t3);}

/* a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46317(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_46317,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12765,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[1081]);}

/* k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12768,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   parse-iteration");
f_12747(t2,lf[1080],((C_word*)t0)[2],C_retrieve2(lf[331],"*loop-operators*"));}

/* k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12768,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[293],C_retrieve2(lf[331],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12775,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12920,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12934,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-returning");
t11=C_retrieve2(lf[136],"loop-returning");
f_9519(3,t11,t10,t1);}

/* k12932 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12934,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_12920(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12930,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   loop-returning");
t3=C_retrieve2(lf[136],"loop-returning");
f_9519(3,t3,t2,((C_word*)t0)[2]);}}

/* k12928 in k12932 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_12920(t2,(C_word)C_i_car(t1));}

/* k12918 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12920(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12775,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-end-tests");
t4=C_retrieve2(lf[131],"loop-end-tests");
f_9471(3,t4,t3,((C_word*)t0)[2]);}

/* k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12779,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12782,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_12782(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[268],t1));
t6=(C_word)C_a_i_list(&a,4,lf[119],t5,lf[1079],C_SCHEME_FALSE);
t7=t2;
f_12782(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12782,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12793,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-bindings");
t4=C_retrieve2(lf[128],"loop-bindings");
f_9435(3,t4,t3,((C_word*)t0)[2]);}

/* k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12797,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-initially");
t4=C_retrieve2(lf[130],"loop-initially");
f_9459(3,t4,t3,((C_word*)t0)[3]);}

/* k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12801,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[293]);
t3=(C_word)C_a_i_list(&a,1,lf[981]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12865,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12869,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12873,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t7=C_retrieve2(lf[132],"loop-looping");
f_9483(3,t7,t6,((C_word*)t0)[3]);}

/* k12871 in k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12877,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12881,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-stepping");
t4=C_retrieve2(lf[134],"loop-stepping");
f_9495(3,t4,t3,((C_word*)t0)[2]);}

/* k12879 in k12871 in k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12881,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 83   ##sys#append");
t4=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k12875 in k12871 in k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12867 in k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k12863 in k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12865,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[102],t3);
t5=(C_word)C_a_i_list(&a,3,lf[905],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[798],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12833,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12837,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-finally");
t9=C_retrieve2(lf[135],"loop-finally");
f_9507(3,t9,t8,((C_word*)t0)[2]);}

/* k12835 in k12863 in k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12837,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   ##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k12831 in k12863 in k12799 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12833,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[905],t3);
t5=(C_word)C_a_i_list(&a,2,lf[798],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 83   ##sys#append");
t7=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k12795 in k12791 in k12780 in k12777 in k12773 in k12766 in k12763 in a46316 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12797,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[102],t2));}

/* k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9415,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_46303,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro");
t4=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1078],t3);}

/* a46302 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46303(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_46303,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[962],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[111],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[216],t5,t3));}

/* k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9418,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_46274,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro");
t4=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1077],t3);}

/* a46273 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46274(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_46274,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_46278,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[1076]);}

/* k46276 in a46273 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46278,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[63],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[102],t4,t6,t1));}

/* k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9421,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_46271,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro");
t4=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1075],t3);}

/* a46270 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46271(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_46271,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9421,2,t0,t1);}
t2=C_mutate(&lf[127],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9429,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[128],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9435,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[129],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9447,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[130],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9459,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[131],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9471,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[132],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9483,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[133],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9489,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[134],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9495,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[135],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9507,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[136],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9519,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[137],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9531,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[147],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9682,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[148],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9753,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[149],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9759,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[150],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9765,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[151],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9771,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[162],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9931,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10013,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[206],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10395,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10442,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10793,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10935,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[253],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11128,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[256],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11195,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11233,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11392,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11938,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11944,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12010,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12101,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12202,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12333,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12747,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[239],C_retrieve2(lf[238],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[141],C_retrieve2(lf[259],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[329],C_retrieve2(lf[206],"parse-repeat"),lf[326]);
t38=(C_word)C_a_i_list(&a,2,lf[184],C_retrieve2(lf[170],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[174],C_retrieve2(lf[170],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[180],C_retrieve2(lf[170],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[191],C_retrieve2(lf[170],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[176],C_retrieve2(lf[170],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[183],C_retrieve2(lf[170],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[218],C_retrieve2(lf[209],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[227],C_retrieve2(lf[209],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[210],C_retrieve2(lf[209],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[231],C_retrieve2(lf[230],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[214],C_retrieve2(lf[209],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[171],C_retrieve2(lf[162],"parse-for"),lf[326],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[330],C_retrieve2(lf[162],"parse-for"),lf[326]);
t51=(C_word)C_a_i_list(&a,3,lf[322],C_retrieve2(lf[253],"parse-do"),lf[313]);
t52=(C_word)C_a_i_list(&a,3,lf[274],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t53=(C_word)C_a_i_list(&a,3,lf[117],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t54=(C_word)C_a_i_list(&a,3,lf[279],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t55=(C_word)C_a_i_list(&a,3,lf[263],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t56=(C_word)C_a_i_list(&a,3,lf[264],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t57=(C_word)C_a_i_list(&a,3,lf[266],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t58=(C_word)C_a_i_list(&a,3,lf[267],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t59=(C_word)C_a_i_list(&a,4,lf[301],C_retrieve2(lf[300],"parse-thereis"),lf[313],C_retrieve2(lf[292],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[302],C_retrieve2(lf[300],"parse-thereis"),lf[313],C_retrieve2(lf[292],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[303],C_retrieve2(lf[300],"parse-thereis"),lf[313],C_retrieve2(lf[292],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[293],C_retrieve2(lf[306],"parse-return"),lf[313],C_retrieve2(lf[292],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[297],C_retrieve2(lf[294],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[296],C_retrieve2(lf[294],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[110],C_retrieve2(lf[315],"parse-conditional"),lf[313]);
t66=(C_word)C_a_i_list(&a,3,lf[106],C_retrieve2(lf[315],"parse-conditional"),lf[313]);
t67=(C_word)C_a_i_list(&a,3,lf[119],C_retrieve2(lf[315],"parse-conditional"),lf[313]);
t68=(C_word)C_a_i_list(&a,3,lf[145],C_retrieve2(lf[256],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[331],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12941,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_46129,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro-2");
t73=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[326],t72);}

/* a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46129(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_46129,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12947,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   parse-iteration");
f_12747(t3,lf[326],t2,C_retrieve2(lf[331],"*loop-operators*"));}

/* k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12950,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[293],C_retrieve2(lf[331],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13079,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-returning");
t6=C_retrieve2(lf[136],"loop-returning");
f_9519(3,t6,t5,t1);}

/* k13077 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13079,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12961,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-bindings");
t3=C_retrieve2(lf[128],"loop-bindings");
f_9435(3,t3,t2,((C_word*)t0)[2]);}

/* k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12965,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-initially");
t4=C_retrieve2(lf[130],"loop-initially");
f_9459(3,t4,t3,((C_word*)t0)[2]);}

/* k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12989,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-end-tests");
t4=C_retrieve2(lf[131],"loop-end-tests");
f_9471(3,t4,t3,((C_word*)t0)[2]);}

/* k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12996,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[268],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[981],lf[643]);
t6=(C_word)C_a_i_list(&a,3,lf[119],t4,t5);
t7=t2;
f_12996(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_12996(t3,C_SCHEME_END_OF_LIST);}}

/* k12994 in k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12996(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12996,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13000,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t4=C_retrieve2(lf[132],"loop-looping");
f_9483(3,t4,t3,((C_word*)t0)[2]);}

/* k13002 in k12994 in k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13008,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-stepping");
t4=C_retrieve2(lf[134],"loop-stepping");
f_9495(3,t4,t3,((C_word*)t0)[2]);}

/* k13010 in k13002 in k12994 in k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13012,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[981],lf[1071]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13028,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13032,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-finally");
t5=C_retrieve2(lf[135],"loop-finally");
f_9507(3,t5,t4,((C_word*)t0)[2]);}

/* k13030 in k13010 in k13002 in k12994 in k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13032,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k13026 in k13010 in k13002 in k12994 in k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13028,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[643],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k13006 in k13002 in k12994 in k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12998 in k12994 in k12991 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12987 in k12967 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12989,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[1071],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1072],t2);
t4=(C_word)C_a_i_list(&a,3,lf[1073],lf[1074],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k12963 in k12959 in k12948 in k12945 in a46128 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12965,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[102],t2));}

/* k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word t96;
C_word t97;
C_word t98;
C_word t99;
C_word t100;
C_word t101;
C_word t102;
C_word ab[279],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12941,2,t0,t1);}
t2=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13085,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13097,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[336],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13106,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13124,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13142,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13169,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[340],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13178,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[341],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13196,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13241,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13256,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13265,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13274,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13292,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13301,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13310,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13328,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13337,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13346,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[353],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13355,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13364,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[355],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13481,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13490,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[357],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13549,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[361],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13559,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[367]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13739,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[215]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13758,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[217]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13777,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13900,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14192,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14201,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14247,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[374]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14362,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14617,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14689,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[381],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14698,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[382]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14778,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15248,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[387]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15463,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15710,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[389]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15746,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16009,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[391]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16085,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16559,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16781,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16790,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16799,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16817,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16835,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16853,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[401],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16862,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16871,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[403]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16954,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17721,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17821,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[410]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18254,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18741,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[421],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19081,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[423]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19144,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[424],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19662,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[430]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19756,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[456]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20803,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[457]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20837,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[460]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20948,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[461]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20963,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[464]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20984,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20990,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20996,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[467]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21065,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[468]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21134,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[469]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21177,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[471]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21220,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[448]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21241,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[475]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21281,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[480]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21517,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[481]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21547,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[482],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21562,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[487]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21648,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate((C_word*)lf[489]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21694,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[491]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21761,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21894,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[496]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22001,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t83=C_mutate((C_word*)lf[499]+1,C_retrieve2(lf[38],"ffi_ranseed"));
t84=C_mutate((C_word*)lf[490]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22209,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t85=C_mutate((C_word*)lf[500]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22244,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t86=C_mutate((C_word*)lf[501]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22265,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t87=C_mutate((C_word*)lf[502]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22536,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t88=C_mutate((C_word*)lf[505]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22635,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t89=C_mutate((C_word*)lf[506]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22690,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t90=C_mutate((C_word*)lf[507]+1,C_retrieve2(lf[41],"ffi_ranlow"));
t91=C_mutate((C_word*)lf[508]+1,C_retrieve2(lf[42],"ffi_ranhigh"));
t92=C_mutate((C_word*)lf[509]+1,C_retrieve2(lf[43],"ffi_ranmiddle"));
t93=C_mutate((C_word*)lf[510]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22732,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t94=C_mutate((C_word*)lf[514]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22960,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t95=C_mutate((C_word*)lf[515]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22979,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t96=C_mutate((C_word*)lf[516]+1,C_retrieve2(lf[47],"ffi_rancauchy"));
t97=C_mutate((C_word*)lf[517]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23020,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t98=C_mutate((C_word*)lf[518]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23039,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t99=C_mutate((C_word*)lf[519]+1,C_retrieve2(lf[50],"ffi_ranbrown"));
t100=C_mutate((C_word*)lf[520]+1,C_retrieve2(lf[49],"ffi_ranpink"));
t101=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23062,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   make-equal-hash-table");
t102=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t102))(2,t102,t101);}

/* k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23062,2,t0,t1);}
t2=C_mutate(&lf[521],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23065,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45901,a[2]=t7,a[3]=t4,a[4]=((C_word)li613),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_45901(t9,t5,C_fix(0));}

/* do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45901(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45901,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[1057],C_fix(-1),lf[1058],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45914,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t5=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[521],"*notes*"),lf[1059],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_46127,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46127,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1060],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45935,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   modulo");
t6=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45935,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[1061]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[1062]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45947,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7430(t4,((C_word*)t0)[4]);}

/* k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_45951,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],lf[1070]);
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7430(t2,t3);}

/* k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_45955,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],lf[1069]);
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7430(t2,t3);}

/* k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_46111,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[8],C_fix(12));
C_trace("ChickenBridge.scm: 85   floor");
t4=*((C_word*)lf[530]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46111,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45961,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=t4,a[5]=((C_word)li612),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_45961(t6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45961(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[41],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45961,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_45971,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[4],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_45981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t8,a[6]=t6,a[7]=t9,a[8]=t5,a[9]=t17,a[10]=t4,a[11]=t7,a[12]=t3,a[13]=t16,a[14]=t15,a[15]=t14,a[16]=t18,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_45981(t21,(C_word)C_i_string_equal_p(t20,lf[1068]));}
else{
t20=t19;
f_45981(t20,C_SCHEME_FALSE);}}}

/* k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45981(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45981,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[16];
f_45971(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_45984,a[2]=((C_word*)t0)[16],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[15],tmp=(C_word)a,a+=17,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[1066]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[15])+1,t4);
t6=t2;
f_45984(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[1067]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[15])+1,t5);
t7=t2;
f_45984(t7,t6);}
else{
t5=t2;
f_45984(t5,C_SCHEME_UNDEFINED);}}}}

/* k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45984,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1063],((C_word*)((C_word*)t0)[16])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,t2);
t4=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_45992,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[15],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 85   string-append");
t6=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[15])[1]);}

/* k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45992,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[15])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[15])[1],((C_word*)t0)[14],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_45999,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[15],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[521],"*notes*"),((C_word*)((C_word*)t0)[15])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k45997 in k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_46002,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 85   hash-set!");
t4=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[521],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[9])[1]);}
else{
t4=t2;
f_46002(2,t4,C_SCHEME_UNDEFINED);}}

/* k46000 in k45997 in k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_46006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 85   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1065],((C_word*)((C_word*)t0)[9])[1]);}

/* k46004 in k46000 in k45997 in k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46006,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[12])[1],((C_word*)t0)[11],((C_word*)t0)[10],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_46013,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[521],"*notes*"),((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[8])[1]);}

/* k46011 in k46004 in k46000 in k45997 in k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_46016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(1));
t5=(C_word)C_a_i_plus(&a,2,t4,C_fix(1000));
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t2,C_retrieve2(lf[521],"*notes*"),t5,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_46016(2,t4,C_SCHEME_UNDEFINED);}}

/* k46014 in k46011 in k46004 in k46000 in k45997 in k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_46020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 85   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1064],((C_word*)((C_word*)t0)[7])[1]);}

/* k46018 in k46014 in k46011 in k46004 in k46000 in k45997 in k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46020,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[8],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_46027,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[521],"*notes*"),((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k46025 in k46018 in k46014 in k46011 in k46004 in k46000 in k45997 in k45990 in k45982 in k45979 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_46027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_46027,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1000));
C_trace("ChickenBridge.scm: 85   hash-set!");
t4=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],C_retrieve2(lf[521],"*notes*"),t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[3];
f_45971(2,t3,C_SCHEME_UNDEFINED);}}

/* k45969 in do3493 in k46109 in k45953 in k45949 in k45945 in k45933 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_45961(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k45922 in k46125 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45924,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_45901(t3,((C_word*)t0)[2],t2);}

/* k45912 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45917,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[521],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k45915 in k45912 in do3487 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23065,2,t0,t1);}
t2=C_mutate(&lf[522],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23067,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[525],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23166,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[533]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23219,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23316,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[536]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23438,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[538]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23554,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[539]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23599,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[542]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23734,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[544]+1,*((C_word*)lf[161]+1));
t11=C_mutate((C_word*)lf[545]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23923,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[547]+1,lf[548]);
t13=C_mutate((C_word*)lf[549]+1,lf[550]);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24069,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   make-equal-hash-table");
t15=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t15))(2,t15,t14);}

/* k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24069,2,t0,t1);}
t2=C_mutate(&lf[551],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24070,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24075,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24089,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45806,a[2]=t3,a[3]=t4,a[4]=((C_word)li611),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t7=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,lf[1056]);}

/* a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45806(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45806,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_i_caddr(t2);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45819,a[2]=t1,a[3]=t4,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=t3,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   addryth");
f_24075(t6,t4,t3);}

/* k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45822,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45895,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   rsym");
f_24070(t3,lf[1054],((C_word*)t0)[3],lf[1055]);}

/* k45893 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45895,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[1053]);
C_trace("ChickenBridge.scm: 85   addryth");
f_24075(((C_word*)t0)[2],t1,t2);}

/* k45820 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45822,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_45827,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word)li610),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_45827(t5,((C_word*)t0)[2],C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3640 in k45820 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45827(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45827,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t9=(C_word)C_i_list_ref(lf[1048],t2);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
t12=C_set_block_item(t7,0,t11);
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
t14=C_set_block_item(t8,0,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_45849,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t7,a[8]=t6,a[9]=t1,a[10]=((C_word*)t0)[6],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t16=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45879,a[2]=t15,a[3]=((C_word*)t0)[4],a[4]=t8,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   rsym");
f_24070(t16,lf[1052],((C_word*)t0)[2],((C_word*)t7)[1]);}
else{
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,C_SCHEME_FALSE);}}

/* k45877 in do3640 in k45820 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45879,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t2);
C_trace("ChickenBridge.scm: 85   addryth");
f_24075(((C_word*)t0)[2],t1,t3);}

/* k45847 in do3640 in k45820 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45852,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45863,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   rsym");
f_24070(t3,lf[1051],((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1]);}

/* k45861 in k45847 in do3640 in k45820 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45863,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[1049]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45875,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   *");
C_times(5,0,t3,((C_word*)t0)[5],lf[1050],((C_word*)((C_word*)t0)[2])[1]);}

/* k45873 in k45861 in k45847 in do3640 in k45820 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45875,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t1);
C_trace("ChickenBridge.scm: 85   addryth");
f_24075(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k45850 in k45847 in do3640 in k45820 in k45817 in a45805 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45852,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t3=((C_word*)((C_word*)t0)[6])[1];
f_45827(t3,((C_word*)t0)[5],t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24089,2,t0,t1);}
t2=C_mutate((C_word*)lf[553]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24091,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[562]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24407,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24418,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45800,a[2]=((C_word)li609),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   ##sys#register-macro");
t6=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[1047],t5);}

/* a45799 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45800(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45800,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[905],C_SCHEME_END_OF_LIST,t2));}

/* k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[99],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24418,2,t0,t1);}
t2=C_mutate((C_word*)lf[563]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24438,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[564],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25314,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[567],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25356,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[569],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25401,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[571],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25407,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[572]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25422,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[573],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25431,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[574]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25440,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[575],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25449,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[576]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25458,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[577],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25467,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[578]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25476,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25485,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[580]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25523,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25582,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25592,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25610,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[586]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25641,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[588]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25902,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[596]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27375,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27781,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27960,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[606]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28172,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[607]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28229,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[614]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28742,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[626]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28868,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[638],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29064,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[640],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29085,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[641],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29121,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[642],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29130,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29153,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[645],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29165,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t34=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29173,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-eq-hash-table");
t35=C_retrieve(lf[18]);
((C_proc2)C_retrieve_proc(t35))(2,t35,t34);}

/* k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29173,2,t0,t1);}
t2=C_mutate(&lf[646],t1);
t3=C_mutate(&lf[647],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29175,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29278,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45697,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   ##sys#register-macro");
t6=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[1046],t5);}

/* a45696 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_45697r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_45697r(t0,t1,t2,t3,t4);}}

static void C_ccall f_45697r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45700,a[2]=t6,a[3]=((C_word)li607),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[1043],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45760,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   symbol->string");
t11=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k45758 in a45696 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45764,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_45700(t3,t2,((C_word*)t0)[2]);}

/* k45762 in k45758 in a45696 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45764,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45778,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_45778(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_45778(t7,(C_word)C_i_nullp(t6));}}

/* k45776 in k45762 in k45758 in a45696 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45778(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45778,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[1044],((C_word*)t0)[6],lf[1043],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[20],lf[1045],lf[1043],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[102],((C_word*)t0)[2],t4));}

/* ppat in a45696 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45700(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_45700,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[1041]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45720,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[1042]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[219],t2):t2));}}}

/* k45718 in ppat in a45696 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45724,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_45700(t4,t2,t3);}

/* k45722 in k45718 in ppat in a45696 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45724,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[962],((C_word*)t0)[2],t1));}

/* k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word ab[102],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29278,2,t0,t1);}
t2=C_mutate(&lf[649],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29280,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29298,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[651],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29301,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[652],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29313,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[653],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29319,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[654],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29329,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[655],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29387,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[656],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29419,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[658],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29467,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[660],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29473,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[661],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29488,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[662],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29506,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[663],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29524,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[664],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29533,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[666],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29549,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[668],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29581,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[669],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29593,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[670],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29660,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[672],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29678,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[676],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29711,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[679]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29742,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[680],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29919,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[681],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29927,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t25=lf[682]=C_SCHEME_FALSE;;
t26=C_mutate(&lf[683],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30031,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[665],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30650,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[675],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30698,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[678],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30800,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[667],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30812,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t31=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30833,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t32=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45675,a[2]=t31,tmp=(C_word)a,a+=3,tmp);
t33=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,C_fix(3328),t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(2816),t34);
t36=(C_word)C_a_i_cons(&a,2,lf[268],t35);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t32,lf[1040],C_fix(25856),t36,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45673 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(25856),t1);}

/* k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30836,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45655,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1039],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45653 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(26112),t1);}

/* k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30839,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45615,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[268],t10);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1038],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45613 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(26368),t1);}

/* k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30842,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45505,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[411],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45511,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45521,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1037],C_fix(26624),t9,t10,t11);}

/* a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45521(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_45521,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45525,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t5,lf[1031],t3);}

/* k45523 in a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45528,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t2,((C_word*)t0)[2]);}

/* k45526 in k45523 in a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45528,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[271]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45546,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29593(t3,lf[1031],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k45544 in k45526 in k45523 in a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45549,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k45547 in k45544 in k45526 in k45523 in a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45549,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45552,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45580,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t5,lf[1031],((C_word*)t0)[2]);}

/* k45578 in k45547 in k45544 in k45526 in k45523 in a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45580,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[1032]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[1036],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_45552(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[219],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_45552(t5,t4);}}

/* k45550 in k45547 in k45544 in k45526 in k45523 in a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_45552(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45552,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t2,lf[998],((C_word*)t0)[2]);}

/* k45556 in k45550 in k45547 in k45544 in k45526 in k45523 in a45520 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45558,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[271]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a45510 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45511,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k45503 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(26624),t1);}

/* k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30845,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45401,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45409,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t10,C_fix(27648));}

/* k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45411,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[3],lf[1035],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_45411,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45415,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45418,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,t3,C_fix(5376));}

/* k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45421,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t2,lf[1031],((C_word*)t0)[4]);}

/* k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_45424(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45457,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[1033]:lf[1034]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45465,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t5,t6);}}

/* k45463 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29419(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k45455 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k45422 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45427,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45447,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=lf[1031];
t6=((C_word*)t0)[4];
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29612,a[2]=t9,a[3]=t5,a[4]=t11,a[5]=t7,a[6]=((C_word)li603),tmp=(C_word)a,a+=7,tmp));
t13=((C_word*)t11)[1];
f_29612(t13,t4,t6);}

/* do4713 in k45422 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29612(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29612,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29625,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29658,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t3,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   caar");
t5=*((C_word*)lf[597]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k29656 in do4713 in k45422 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29658,2,t0,t1);}
t2=(C_word)C_eqp(t1,((C_word*)t0)[5]);
if(C_truep(t2)){
t3=((C_word*)t0)[4];
f_29625(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=((C_word*)t0)[4];
f_29625(t8,t7);}}

/* k29623 in do4713 in k45422 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29625(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_29612(t3,((C_word*)t0)[2],t2);}

/* k45445 in k45422 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k45425 in k45422 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45430,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   set-emit-info!");
f_29660(t2,lf[1031],lf[1032],((C_word*)t0)[2]);}

/* k45428 in k45425 in k45422 in k45419 in k45416 in k45413 in a45410 in k45407 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45430,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[1029],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[1030],((C_word*)t0)[2])));}

/* k45399 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(27648),t1);}

/* k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30848,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45373,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[268],t7);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1028],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45371 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(26880),t1);}

/* k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30851,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45313,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[245],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45319,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45337,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1027],C_fix(27136),t8,t9,t10);}

/* a45336 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45337(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_45337,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45345,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45349,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t6,t2);}

/* k45347 in a45336 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k45343 in a45336 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45345,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[77],t1));}

/* a45318 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45319,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k45311 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(27136),t1);}

/* k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30854,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45190,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[686],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45196,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45227,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1026],C_fix(27392),t14,t15,t16);}

/* a45226 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_45227,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45231,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k45229 in a45226 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k45232 in k45229 in a45226 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45237,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k45235 in k45232 in k45229 in a45226 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45237,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45250,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[119],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k45248 in k45235 in k45232 in k45229 in a45226 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45250,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[119],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a45195 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45196(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45196,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45200,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   sixth");
t5=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k45198 in a45195 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45200,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45215,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k45213 in k45198 in a45195 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45215,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k45188 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(27392),t1);}

/* k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30854,2,t0,t1);}
t2=C_mutate(&lf[689],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30856,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30910,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45070,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[179],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[268],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45076,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t4,lf[1025],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a45075 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45076,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45092,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t4,t8,C_fix(256));}
else{
t7=t4;
f_45092(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_45092(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k45090 in a45075 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45092,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45103,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k45101 in k45090 in a45075 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45103,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k45068 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_45070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(28416),t1);}

/* k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30913,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44931,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[179],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[245],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[268],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44937,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1024],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a44936 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44937(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44937,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44957,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44960,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t7,t11,C_fix(256));}
else{
t10=t7;
f_44960(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_44960(2,t9,C_SCHEME_FALSE);}}

/* k44958 in a44936 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_44957(2,t2,C_SCHEME_END_OF_LIST);}}

/* k44955 in a44936 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44957,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k44929 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(28672),t1);}

/* k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30916,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44779,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[245],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[268],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44785,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1023],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a44784 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44785,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44803,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t10,t7,C_fix(768));}

/* k44801 in a44784 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44803,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44812,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,t3,C_fix(256));}}

/* k44810 in k44801 in a44784 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k44777 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(28160),t1);}

/* k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30919,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44708,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44714,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44732,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1022],C_fix(27904),t6,t7,t8);}

/* a44731 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44732,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44736,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k44734 in a44731 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44737 in k44734 in a44731 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44755,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44753 in k44737 in k44734 in a44731 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44755,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a44713 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44714,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k44706 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(27904),t1);}

/* k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30919,2,t0,t1);}
t2=C_mutate(&lf[690],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30921,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[691],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30942,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31058,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44632,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[268],t21);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t5,lf[1021],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44630 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(28928),t1);}

/* k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31061,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44552,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44558,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1020],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a44557 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44558,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44565,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 87   is-op?");
f_30921(t4,t7);}
else{
t6=t4;
f_44565(2,t6,C_SCHEME_FALSE);}}

/* k44563 in a44557 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44565,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 87   inf->pre");
f_30942(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k44550 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(29184),t1);}

/* k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31064,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44416,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[245],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[268],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44422,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44448,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1019],C_fix(29440),t23,t24,t25);}

/* a44447 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44448(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44448,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44456,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k44454 in a44447 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a44421 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44422,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44430,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44439,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t5,t6,C_fix(512));}
else{
t5=t4;
f_44430(t5,t2);}}

/* k44437 in a44421 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_44430(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k44428 in a44421 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_44430(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k44414 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(29440),t1);}

/* k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31067,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44372,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[268],t11);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1018],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44370 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(29696),t1);}

/* k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31070,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44262,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44268,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44290,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1017],C_fix(33536),t10,t11,t12);}

/* a44289 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44290(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44290,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[713]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44301,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t8,t2);}

/* k44299 in a44289 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44301,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_44303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li589),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_44303(t5,((C_word*)t0)[2],t1);}

/* do5173 in k44299 in a44289 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_44303(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44303,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44332,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k44330 in do5173 in k44299 in a44289 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44332,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_44303(t7,((C_word*)t0)[2],t6);}

/* a44267 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44268(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44268,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44284,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t5,t6,C_fix(256));}

/* k44282 in a44267 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44284,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k44260 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(33536),t1);}

/* k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31073,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44151,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(6144),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(256),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[411],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t6,t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(16896),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[245],t14);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44157,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44191,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1016],C_fix(34560),t15,t16,t17);}

/* a44190 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44191(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44191,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44195,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k44193 in a44190 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44202,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44200 in k44193 in a44190 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44202,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[918],t1));}

/* a44156 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44157,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44173,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44177,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t6,t7,C_fix(256));}

/* k44175 in a44156 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44181,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t2,t3,C_fix(256));}

/* k44179 in k44175 in a44156 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k44171 in a44156 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44173,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k44149 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(34560),t1);}

/* k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31076,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43942,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[268],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[686],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[245],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43948,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44023,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1015],C_fix(34304),t21,t22,t23);}

/* a44022 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44023,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44027,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44059,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t6,t2);}

/* k44057 in a44022 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44025 in a44022 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44027,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li584),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   expand-send");
t6=C_retrieve(lf[862]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a44042 in k44025 in a44022 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44043(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_44043,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44051,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44055,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t4,((C_word*)t0)[2]);}

/* k44053 in a44042 in k44025 in a44022 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29419(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k44049 in a44042 in k44025 in a44022 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_44051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a43947 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43948,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43955,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43991,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_43991(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_43955(t10,t9);}}

/* k43989 in a43947 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43991,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43995,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_43955(t2,C_SCHEME_UNDEFINED);}}

/* k43993 in k43989 in a43947 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_43955(t3,t2);}

/* k43953 in a43947 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_43955(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43955,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43966,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t4,t5);}

/* k43964 in k43953 in a43947 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k43940 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(34304),t1);}

/* k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31079,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43916,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43922,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1014],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a43921 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43922,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k43914 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(33792),t1);}

/* k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31082,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43888,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43896,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t7,C_fix(35072));}

/* k43894 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43900,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29927(t2,lf[723]);}

/* k43898 in k43894 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[4],lf[1013],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43886 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(35072),t1);}

/* k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31082,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31085,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43860,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43868,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t7,C_fix(35584));}

/* k43866 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43872,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29927(t2,lf[722]);}

/* k43870 in k43866 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[4],lf[1012],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43858 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(35584),t1);}

/* k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31088,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43832,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43840,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t7,C_fix(35328));}

/* k43838 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43844,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29927(t2,lf[1011]);}

/* k43842 in k43838 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[4],lf[1010],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43830 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(35328),t1);}

/* k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31091,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43804,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43812,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t7,C_fix(34816));}

/* k43810 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43816,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29927(t2,lf[1009]);}

/* k43814 in k43810 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[4],lf[1008],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43802 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(34816),t1);}

/* k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31094,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43667,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[268],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[245],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[268],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[411],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[245],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43673,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43703,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1007],C_fix(36096),t22,t23,t24);}

/* a43702 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43703,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[1006]);}

/* a43672 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43673(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43673,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43697,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t6,t7,C_fix(256));}

/* k43695 in a43672 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43697,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k43665 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(36096),t1);}

/* k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31097,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43609,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43617,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t7,C_fix(31744));}

/* k43615 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43619,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[3],lf[1005],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a43618 in k43615 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43619,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43623,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k43621 in a43618 in k43615 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43651,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t3,lf[985],((C_word*)t0)[3]);}

/* k43649 in k43621 in a43618 in k43615 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43651,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_43626(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43639,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43643,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t3,t4);}}

/* k43641 in k43649 in k43621 in a43618 in k43615 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29419(((C_word*)t0)[2],lf[1004],t1);}

/* k43637 in k43649 in k43621 in a43618 in k43615 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k43624 in k43621 in a43618 in k43615 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43607 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(31744),t1);}

/* k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31100,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43548,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43556,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t7,C_fix(31488));}

/* k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43558,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[3],lf[1003],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a43557 in k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43558,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43562,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k43560 in a43557 in k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43565,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43593,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t3,lf[975],((C_word*)t0)[3]);}

/* k43591 in k43560 in a43557 in k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43593,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_43565(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43581,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43585,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t3,t4);}}

/* k43583 in k43591 in k43560 in a43557 in k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29419(((C_word*)t0)[2],lf[1002],t1);}

/* k43579 in k43591 in k43560 in a43557 in k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k43563 in k43560 in a43557 in k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43565,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   set-emit-info!");
f_29660(t2,lf[975],lf[974],((C_word*)t0)[3]);}

/* k43566 in k43563 in k43560 in a43557 in k43554 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43546 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(31488),t1);}

/* k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31103,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43457,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[245],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[268],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43463,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43498,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[1001],C_fix(30208),t10,t11,t12);}

/* a43497 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43498(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43498,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43504,a[2]=t4,a[3]=t3,a[4]=((C_word)li576),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43512,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t6,t2);}

/* k43510 in a43497 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a43503 in a43497 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43504(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_43504,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a43462 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43463,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43496,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t4,C_fix(4608),lf[1000],C_SCHEME_FALSE);}}

/* k43494 in a43462 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43496,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k43455 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(30208),t1);}

/* k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31106,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43355,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43361,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43404,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[999],C_fix(29952),t10,t11,t12);}

/* a43403 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43404(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43404,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43408,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29593(t5,lf[998],C_SCHEME_TRUE,t3);}

/* k43406 in a43403 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43413,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li573),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43421,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t3,((C_word*)t0)[2]);}

/* k43419 in k43406 in a43403 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a43412 in k43406 in a43403 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43413(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_43413,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a43360 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43361(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43361,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43394,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k43392 in a43360 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43394,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k43353 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(29952),t1);}

/* k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31109,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43269,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[268],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[245],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43275,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[997],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a43274 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43275,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k43267 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(30720),t1);}

/* k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31112,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42989,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42995,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43038,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[996],C_fix(30464),t10,t11,t12);}

/* a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43038(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43038,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43042,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43042,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[216]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li569),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_43050(t8,((C_word*)t0)[2],t1);}

/* do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_43050(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43050,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t3,t4);}}

/* k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_43076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_43079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29488(t2,t3);}

/* k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43082,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43082,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t5,((C_word*)t0)[2],C_fix(10756));}

/* k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43142,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_43085(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k43147 in k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43149,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_43085(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k43157 in k43147 in k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43159,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[411],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_43085(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k43167 in k43157 in k43147 in k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43169,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[271],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_43085(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k43181 in k43167 in k43157 in k43147 in k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43183,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[962],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_43085(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k43191 in k43181 in k43167 in k43157 in k43147 in k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43193,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_43085(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43203,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k43201 in k43191 in k43181 in k43167 in k43157 in k43147 in k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43203,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[439],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_43085(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k43211 in k43201 in k43191 in k43181 in k43167 in k43157 in k43147 in k43140 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43213,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[373],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_43085(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_43085(t2,C_SCHEME_UNDEFINED);}}

/* k43083 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_43085(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43085,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43088,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43109,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_43109(t5,(C_word)C_eqp(t4,lf[77]));}
else{
t4=t3;
f_43109(t4,C_SCHEME_FALSE);}}

/* k43107 in k43083 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_43109(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43109,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[994],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[995],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_43088(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_43088(t4,t3);}}

/* k43086 in k43083 in k43080 in k43077 in k43074 in k43071 in do5251 in k43040 in a43037 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_43088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43088,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_43050(t7,((C_word*)t0)[2],t6);}

/* a42994 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42995(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42995,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43028,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k43026 in a42994 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_43028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43028,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k42987 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(30464),t1);}

/* k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31115,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42875,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[686],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[411],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[245],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42881,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42907,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[993],C_fix(32000),t12,t13,t14);}

/* a42906 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42907(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42907,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42911,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k42909 in a42906 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42911,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42915 in k42909 in a42906 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42917,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42937,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[216],t1));}}

/* k42935 in k42915 in k42909 in a42906 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42937,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[103],t2));}

/* a42880 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42881(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42881,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42891,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_42891(t12,t11);}
else{
t10=t8;
f_42891(t10,C_SCHEME_FALSE);}}

/* k42889 in a42880 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_42891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42891,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k42873 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(32000),t1);}

/* k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31118,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42616,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[686],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[686],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[245],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[245],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[268],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42622,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42690,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[992],C_fix(32256),t26,t27,t28);}

/* a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42690,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42694,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t5,t2);}

/* k42692 in a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,t3,C_fix(14336));}

/* k42698 in k42692 in a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42700,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42709,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,t3,C_fix(19968));}}

/* k42707 in k42698 in k42692 in a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42709,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42716,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k42745 in k42707 in k42698 in k42692 in a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42747,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[211],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42739,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42737 in k42745 in k42707 in k42698 in k42692 in a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42739,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[119],((C_word*)t0)[2],t1));}

/* k42714 in k42707 in k42698 in k42692 in a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42720,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42718 in k42714 in k42707 in k42698 in k42692 in a42689 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42720,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[119],((C_word*)t0)[2],t1));}

/* a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42622,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42635,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42641,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t9,t4,C_fix(14336));}

/* k42639 in a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42641,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42647,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_42647(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42676,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t11,C_fix(4608),lf[991],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_42635(t5,t4);}}

/* k42674 in k42639 in a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42647(t3,t2);}

/* k42645 in k42639 in a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_42647(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42647,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42651,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t3=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k42649 in k42645 in k42639 in a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42651,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_42654(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42665,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t5,C_fix(4608),lf[990],C_SCHEME_FALSE);}}

/* k42663 in k42649 in k42645 in k42639 in a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42654(t3,t2);}

/* k42652 in k42649 in k42645 in k42639 in a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_42654(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42654,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_42635(t4,t3);}

/* k42633 in a42621 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_42635(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k42614 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(32256),t1);}

/* k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31118,2,t0,t1);}
t2=C_mutate(&lf[692],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31120,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31641,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42344,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[245],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[686],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[245],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[245],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[268],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[686],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[686],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[245],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[268],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[686],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[245],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[268],t58);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t4,lf[989],C_fix(33024),t59,C_retrieve2(lf[692],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k42342 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(33024),t1);}

/* k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31644,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42288,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[268],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42296,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29919(t13,C_fix(33280));}

/* k42294 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(((C_word*)t0)[3],lf[988],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k42286 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(33280),t1);}

/* k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31644,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32175,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42116,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[686],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[411],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[411],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[179],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[686],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[245],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42122,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42168,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[987],C_fix(32512),t25,t26,t27);}

/* a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42168(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42168,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31650,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t7,t2);}

/* k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31650,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_END_OF_LIST;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_END_OF_LIST;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t17,a[5]=t19,a[6]=t9,a[7]=t11,a[8]=t7,a[9]=t15,a[10]=t13,a[11]=((C_word*)t0)[4],a[12]=t5,a[13]=t3,tmp=(C_word)a,a+=14,tmp);
t21=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32134,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t20,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t22=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t21,t22,C_fix(14864));}

/* k32132 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32134,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32138,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29593(t2,lf[984],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32141,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t3,lf[977],((C_word*)((C_word*)t0)[6])[1]);}}

/* k32166 in k32132 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32168,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_32141(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32156,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32160,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t3,t4);}}

/* k32158 in k32166 in k32132 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29419(((C_word*)t0)[2],lf[986],t1);}

/* k32154 in k32166 in k32132 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32139 in k32132 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29593(t2,lf[985],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k32143 in k32139 in k32132 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_31674(t4,t3);}

/* k32136 in k32132 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31674(t3,t2);}

/* k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31674,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31681,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32123,a[2]=t4,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32127,a[2]=((C_word*)t0)[8],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t6,t7,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}
else{
t5=t4;
f_31681(t5,C_SCHEME_UNDEFINED);}}

/* k32125 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k32121 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31681(t3,t2);}

/* k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31681(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31681,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31684,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31998,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],a[6]=t5,a[7]=((C_word)li562),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_31998(t7,t2,t3);}

/* do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31998(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31998,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32008,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32019,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t4,t5);}}

/* k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32019,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li561),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_32021(t5,((C_word*)t0)[2],t1);}

/* do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32021(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32021,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 87   append");
t9=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32035,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32088,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 87   append");
t7=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_32038(t4,C_SCHEME_UNDEFINED);}}

/* k32086 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32038(t3,t2);}

/* k32036 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32038(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32038,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32073,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 87   append");
t6=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_32041(t3,C_SCHEME_UNDEFINED);}}

/* k32071 in k32036 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32041(t3,t2);}

/* k32039 in k32036 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32041(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32041,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32044,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32054,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k32052 in k32039 in k32036 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32054,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32066,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_32044(t2,C_SCHEME_UNDEFINED);}}

/* k32064 in k32052 in k32039 in k32036 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32066,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k32056 in k32052 in k32039 in k32036 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32044(t3,t2);}

/* k32042 in k32039 in k32036 in k32033 in do5366 in k32017 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32021(t3,((C_word*)t0)[2],t2);}

/* k32006 in do5363 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31998(t3,((C_word*)t0)[2],t2);}

/* k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li560),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_31962(t7,t2,t3);}

/* do5377 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31962(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31962,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31973,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31988,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k31986 in do5377 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31988,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31971 in do5377 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_31962(t4,((C_word*)t0)[2],t3);}

/* k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t3))){
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_truep(((C_word*)((C_word*)t0)[13])[1])?C_retrieve2(lf[896],"*process-stop*"):lf[983]);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31870,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=t6,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
t8=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t10,a[5]=t5,a[6]=((C_word)li559),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_31902(t12,t7,t8);}
else{
t4=t2;
f_31690(t4,C_SCHEME_UNDEFINED);}}

/* do5384 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31902(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31902,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31912,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t3,t4);}}

/* k31910 in do5384 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31915,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k31913 in k31910 in do5384 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31915,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31918,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31936,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t5,t6,C_fix(20224));}

/* k31934 in k31913 in k31910 in do5384 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31936,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31918(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31918(t2,C_SCHEME_UNDEFINED);}}

/* k31916 in k31913 in k31910 in do5384 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31918(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31918,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 87   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k31920 in k31916 in k31913 in k31910 in do5384 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_31902(t4,((C_word*)t0)[2],t3);}

/* k31868 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_31873(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[268],((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_31873(t6,t5);}}

/* k31871 in k31868 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31873,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31690(t5,t4);}

/* k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31690(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31690,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[11])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_31693(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[268],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_31693(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[11],0,C_SCHEME_FALSE);
t4=t2;
f_31693(t4,t3);}}

/* k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31693,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_31696,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k31825 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31827,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31831,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31835,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_31696(t3,t2);}}

/* k31833 in k31825 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k31829 in k31825 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31696(t3,t2);}

/* k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31696,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31797,a[2]=((C_word*)t0)[9],tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31813,a[2]=((C_word*)t0)[5],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   append");
t6=*((C_word*)lf[117]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[7])[1]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31731,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31735,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ##sys#append");
t6=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t5,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(C_word)C_a_i_list(&a,1,lf[981]);
t4=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31782,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31786,a[2]=((C_word*)t0)[4],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31790,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ##sys#append");
t8=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t7,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}}}

/* k31788 in k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31784 in k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31780 in k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31782,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[6],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[322],t3);
t5=(C_word)C_a_i_list(&a,3,lf[905],((C_word*)t0)[5],t4);
t6=(C_word)C_a_i_list(&a,2,lf[798],t5);
t7=(C_word)C_a_i_list(&a,1,lf[982]);
t8=(C_word)C_a_i_list(&a,5,lf[103],((C_word*)((C_word*)t0)[4])[1],t6,((C_word*)((C_word*)t0)[3])[1],t7);
t9=(C_word)C_a_i_list(&a,3,lf[905],C_SCHEME_END_OF_LIST,t8);
t10=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,1,t9));}

/* k31733 in k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31729 in k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31731,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[322],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[103],((C_word*)((C_word*)t0)[2])[1],t4));}

/* k31811 in k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31813,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[6])[1];
t3=(C_truep(t2)?t2:C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 87   make-loop-clause");
f_9531(((C_word*)t0)[5],(C_word)C_a_i_list(&a,18,lf[138],lf[917],lf[139],((C_word*)((C_word*)t0)[4])[1],lf[140],C_SCHEME_END_OF_LIST,lf[141],C_SCHEME_END_OF_LIST,lf[142],((C_word*)t0)[3],lf[143],t1,lf[144],((C_word*)((C_word*)t0)[2])[1],lf[145],t3,lf[146],C_SCHEME_END_OF_LIST));}

/* k31795 in k31694 in k31691 in k31688 in k31685 in k31682 in k31679 in k31672 in k31648 in a42167 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   expand-process");
f_40372(((C_word*)t0)[2],t1);}

/* a42121 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42122(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42122,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42138,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t11=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k42136 in a42121 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42141,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   sixth");
t3=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k42139 in k42136 in a42121 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42141,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42144,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_42144(t7,t6);}
else{
t5=t4;
f_42144(t5,C_SCHEME_UNDEFINED);}}

/* k42142 in k42139 in k42136 in a42121 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_42144(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42144,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42147,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_42147(t5,t4);}
else{
t3=t2;
f_42147(t3,C_SCHEME_UNDEFINED);}}

/* k42145 in k42142 in k42139 in k42136 in a42121 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_42147(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42147,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42158,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t3,((C_word*)t0)[8]);}

/* k42156 in k42145 in k42142 in k42139 in k42136 in a42121 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k42114 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(32512),t1);}

/* k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32178,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41971,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[411],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[268],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[245],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41977,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[980],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a41976 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41977,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41990,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_41990(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42016,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t12,t13,C_fix(256));}}

/* k42014 in a41976 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_42016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42016,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41990(t4,t3);}

/* k41988 in a41976 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41990,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k41969 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(37632),t1);}

/* k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32181,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41514,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[245],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[245],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[268],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[245],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41520,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41559,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[979],C_fix(36352),t23,t24,t25);}

/* a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41559,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41563,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t6,t2);}

/* k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41563,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[216]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41572,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41575,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t7,t2,C_fix(24576));}

/* k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41575,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41584,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li554),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_41584(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t2,t3);}}

/* k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41851,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_41648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_41648(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41789,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 87   symbol->string");
t15=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k41787 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41789,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41798,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41823,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 87   substring");
t6=*((C_word*)lf[438]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_41798(t4,C_SCHEME_FALSE);}}

/* k41821 in k41787 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_41798(t2,(C_word)C_i_string_equal_p(t1,lf[978]));}

/* k41796 in k41787 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41798(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41798,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41805,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41809,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 87   substring");
t5=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_41648(t2,C_SCHEME_UNDEFINED);}}

/* k41807 in k41796 in k41787 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k41803 in k41796 in k41787 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_41648(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41648(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41648,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41651,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t3,((C_word*)t0)[2],C_fix(24064));}

/* k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41726,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29593(t2,lf[975],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k41765 in k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41767,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41771,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29593(t2,lf[977],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_41651(t2,C_SCHEME_UNDEFINED);}}

/* k41769 in k41765 in k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41771,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41775,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k41773 in k41769 in k41765 in k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41775,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[933],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[976]);
t6=((C_word*)t0)[2];
f_41651(t6,t5);}

/* k41728 in k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41730,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41734,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k41732 in k41728 in k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41734,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41737,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41761,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29581(t4,lf[975],((C_word*)((C_word*)t0)[2])[1]);}

/* k41759 in k41732 in k41728 in k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41761,2,t0,t1);}
t2=(C_word)C_eqp(lf[974],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[293]);
t4=(C_word)C_a_i_list(&a,3,lf[905],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[798],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_41737(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_41737(t3,C_SCHEME_UNDEFINED);}}

/* k41735 in k41732 in k41728 in k41724 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41737,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[933],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[973]);
t5=((C_word*)t0)[2];
f_41651(t5,t4);}

/* k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41651,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41654,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41665,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41723,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   symbol->string");
t5=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k41721 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[972]);}

/* k41663 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41665,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41667,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li555),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_41667(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do5464 in k41663 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41667(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41667,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41682,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t6=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[970]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41686,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41715,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 87   symbol->string");
t8=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k41713 in do5464 in k41663 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k41684 in do5464 in k41663 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41686,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41689,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_41689(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41703,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t6=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[971]);}}

/* k41701 in k41684 in do5464 in k41663 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41689(t3,t2);}

/* k41687 in k41684 in do5464 in k41663 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41689(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_41667(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k41680 in do5464 in k41663 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41682,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[60],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k41652 in k41649 in k41646 in k41849 in k41637 in k41634 in k41631 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41654,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_41572(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do5438 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41584(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41584,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41594,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k41592 in do5438 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41594,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[969],t2);}

/* k41598 in k41592 in do5438 in k41573 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41600,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[933],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[713],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_41584(t9,((C_word*)t0)[2],t8);}

/* k41570 in k41561 in a41558 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a41519 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41520(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41520,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41531,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41537,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t9,t7,C_fix(24576));}

/* k41535 in a41519 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41537,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30856(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_41531(t2,C_SCHEME_UNDEFINED);}}

/* k41551 in k41535 in a41519 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41553,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41531(t5,t4);}

/* k41529 in a41519 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41531(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k41512 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(36352),t1);}

/* k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32184,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41438,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[268],t19);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[968],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41436 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(36608),t1);}

/* k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32187,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41394,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[179],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41400,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41414,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_29175(t3,lf[967],C_fix(36864),t5,t6,t7);}

/* a41413 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41414(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41414,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41422,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41426,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t6,t2);}

/* k41424 in a41413 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41420 in a41413 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41422,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[216],t1));}

/* a41399 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41400,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41408,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29524(t4,t5);}

/* k41406 in a41399 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k41392 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[646],"*rules*"),C_fix(36864),t1);}

/* k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word ab[111],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32187,2,t0,t1);}
t2=C_mutate((C_word*)lf[700]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32189,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[709],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32673,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[713]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32832,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[722]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32985,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[723]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32994,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[732]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33043,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[734]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33067,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[735],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33095,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t10=C_set_block_item(lf[750],0,C_fix(8));
t11=C_set_block_item(lf[751],0,C_fix(9));
t12=C_set_block_item(lf[752],0,C_fix(10));
t13=C_set_block_item(lf[753],0,C_fix(11));
t14=C_set_block_item(lf[754],0,C_fix(12));
t15=C_set_block_item(lf[755],0,C_fix(13));
t16=C_set_block_item(lf[756],0,C_fix(14));
t17=C_mutate((C_word*)lf[757]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33196,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[759],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33443,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[758],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33498,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[737],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33651,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[764]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33657,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[772]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34712,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[773]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35141,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[775]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35848,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[777]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36555,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[779]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37262,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[780]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37691,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[781]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38120,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[782]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38549,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[784]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38765,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[785]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38771,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[786]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38777,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[787]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38783,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[788]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38789,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[789]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38795,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[791]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38810,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[799]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38829,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[802]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38934,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t39=lf[805]=C_SCHEME_FALSE;;
t40=C_mutate(&lf[741],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39110,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[743]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39223,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[847],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39395,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[858]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39588,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[859]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39594,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t45=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39634,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t46=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41386,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   ##sys#register-macro");
t47=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t47))(4,t47,t45,lf[966],t46);}

/* a41385 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41386(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_41386r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_41386r(t0,t1,t2,t3);}}

static void C_ccall f_41386r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 88   expand-send");
t4=C_retrieve(lf[862]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39638,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   make-equal-hash-table");
t3=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39638,2,t0,t1);}
t2=C_mutate(&lf[861],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39641,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41357,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   ##sys#register-macro");
t5=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[965],t4);}

/* a41356 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41357,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41361,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   gensym");
t5=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[964]);}

/* k41359 in a41356 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41361,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,t1,((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[961],t1);
t5=(C_word)C_a_i_list(&a,3,lf[962],t4,t1);
t6=(C_word)C_a_i_list(&a,4,lf[20],lf[963],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[102],t3,t6));}

/* k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39641,2,t0,t1);}
t2=C_mutate((C_word*)lf[862]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39643,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[864],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39717,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp));
t4=lf[877];
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40191,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41355,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t6,t4);}

/* k41353 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41355,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[960],t2);}

/* k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40191,2,t0,t1);}
t2=lf[878];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40194,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41347,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41345 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41347,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[959],t2);}

/* k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40194,2,t0,t1);}
t2=lf[879];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40197,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41339,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41337 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41339,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[958],t2);}

/* k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40197,2,t0,t1);}
t2=lf[880];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40200,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41331,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41329 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41331,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[957],t2);}

/* k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40200,2,t0,t1);}
t2=lf[881];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40203,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41323,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41321 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41323,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[956],t2);}

/* k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40203,2,t0,t1);}
t2=lf[882];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40206,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41315,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41313 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41315,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[955],t2);}

/* k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40206,2,t0,t1);}
t2=lf[883];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40209,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41307,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41305 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41307,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[954],t2);}

/* k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40209,2,t0,t1);}
t2=lf[884];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40212,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41299,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41297 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41299,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[953],t2);}

/* k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40212,2,t0,t1);}
t2=lf[885];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40215,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41291,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41289 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41291,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[952],t2);}

/* k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40215,2,t0,t1);}
t2=lf[886];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40218,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41283,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41281 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41283,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[951],t2);}

/* k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40218,2,t0,t1);}
t2=lf[887];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40221,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41275,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41273 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41275,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[950],t2);}

/* k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40221,2,t0,t1);}
t2=lf[888];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40224,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41267,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41265 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41267,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[949],t2);}

/* k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40224,2,t0,t1);}
t2=lf[889];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40227,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41259,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41257 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41259,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[948],t2);}

/* k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40227,2,t0,t1);}
t2=lf[890];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40230,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41251,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41249 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41251,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[947],t2);}

/* k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40230,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40233,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41243,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41241 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41243,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[946],t2);}

/* k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40233,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40236,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41235,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41233 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41235,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[945],t2);}

/* k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40236,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40239,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41227,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41225 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41227,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[944],t2);}

/* k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40239,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40242,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41219,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41217 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41219,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[943],t2);}

/* k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40242,2,t0,t1);}
t2=lf[891];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40245,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41211,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41209 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41211,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[942],t2);}

/* k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40245,2,t0,t1);}
t2=lf[892];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40248,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41203,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41201 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41203,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[941],t2);}

/* k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40248,2,t0,t1);}
t2=lf[893];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40251,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41195,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41193 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41195,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[940],t2);}

/* k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40251,2,t0,t1);}
t2=lf[894];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40254,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41187,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41185 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41187,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[939],t2);}

/* k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40254,2,t0,t1);}
t2=lf[895];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40257,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41179,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39717(t4,t2);}

/* k41177 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41179,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[861],"*messages*"),lf[938],t2);}

/* k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40257,2,t0,t1);}
t2=C_mutate(&lf[896],lf[897]);
t3=C_mutate(&lf[898],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40260,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40331,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41110,a[2]=t9,a[3]=t4,a[4]=t6,a[5]=((C_word)li548),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_41110(t11,t7,C_retrieve2(lf[331],"*loop-operators*"));}

/* do6890 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41110(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41110,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[297],C_retrieve2(lf[898],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[296],C_retrieve2(lf[898],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41138,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[274]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[117]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[279]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[263]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[264]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[266]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[267]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[301]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[302]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[303]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[293]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[297]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[296]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_41138(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_41138(t11,t10);}}}

/* k41136 in do6890 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41138(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_41110(t3,((C_word*)t0)[2],t2);}

/* k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40331,2,t0,t1);}
t2=C_mutate(&lf[901],t1);
t3=C_mutate(&lf[902],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40333,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[903],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40372,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40609,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41104,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 89   ##sys#register-macro-2");
t7=C_retrieve(lf[937]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[917],t6);}

/* a41103 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41104(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_41104,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 89   expand-process");
f_40372(t1,t2);}

/* k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40612,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41075,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 89   ##sys#register-macro");
t4=C_retrieve(lf[935]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[936],t3);}

/* a41074 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41075(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_41075r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_41075r(t0,t1,t2,t3);}}

static void C_ccall f_41075r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41079,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41089,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_41089(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_41089(t6,C_SCHEME_FALSE);}}

/* k41087 in a41074 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_41079(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[934],((C_word*)t0)[2]);}}

/* k41077 in a41074 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41079,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[933],t2));}

/* k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40612,2,t0,t1);}
t2=C_mutate((C_word*)lf[918]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40614,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[926]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40984,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[927]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40990,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[928]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40996,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[929]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41002,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[930]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41008,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp));
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41073,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 95   return-to-host");
t9=C_retrieve(lf[932]);
((C_proc2)C_retrieve_proc(t9))(2,t9,t8);}

/* k41071 in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* stop in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41008(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_41008r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_41008r(t0,t1,t2);}}

static void C_ccall f_41008r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41012,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 89   ffi_sched_stop");
f_7599(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41026,a[2]=t5,a[3]=((C_word)li544),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_41026(t7,t3,t2);}}

/* do6978 in stop in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_41026(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41026,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41036,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   ffi_sched_stop");
f_7599(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[931],t5);}}}

/* k41034 in do6978 in stop in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_41026(t3,((C_word*)t0)[2],t2);}

/* k41010 in stop in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}

/* continue in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_41002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41002,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub283(C_SCHEME_UNDEFINED));}

/* paused? in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40996,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub279(C_SCHEME_UNDEFINED));}

/* pause in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40990,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub281(C_SCHEME_UNDEFINED));}

/* now in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40984,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub268(t2));}

/* sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40614(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+27)){
C_save_and_reclaim((void*)tr3r,(void*)f_40614r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40614r(t0,t1,t2,t3);}}

static void C_ccall f_40614r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(27);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(-1);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(C_word)C_i_closurep(t2);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40621,a[2]=t4,a[3]=t10,a[4]=t2,a[5]=t1,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(t11)){
t13=t12;
f_40621(2,t13,t11);}
else{
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40937,a[2]=t2,a[3]=t12,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40951,a[2]=t2,a[3]=t15,a[4]=((C_word)li538),tmp=(C_word)a,a+=5,tmp));
t17=((C_word*)t15)[1];
f_40951(t17,t13,t2);}
else{
t14=t13;
f_40937(2,t14,C_SCHEME_FALSE);}}}

/* do6927 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40951(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40951,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40961,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_40961(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 89   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[925],((C_word*)t0)[2]);}}}

/* k40959 in do6927 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40951(t3,((C_word*)t0)[2],t2);}

/* k40935 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40621(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[924],((C_word*)t0)[2]);}}

/* k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40624,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40875,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=t4,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word)li537),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_40875(t6,t2,((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do6932 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40875(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40875,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nullp(t2);
t5=(C_truep(t4)?t4:((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t5)){
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40889,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t7))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[6])+1,t8);
t10=t6;
f_40889(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t6;
f_40889(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[2])+1,t8);
t10=t6;
f_40889(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 89   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,lf[923],((C_word*)((C_word*)t0)[5])[1]);}}}}}

/* k40887 in do6932 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40889,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_40875(t4,((C_word*)t0)[2],t2,t3);}

/* k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40624,2,t0,t1);}
t2=(C_word)C_i_numberp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?(C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[7])[1],C_fix(0)):C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t3)){
t5=t4;
f_40630(2,t5,t3);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40808,a[2]=((C_word*)t0)[7],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40822,a[2]=t7,a[3]=((C_word)li536),tmp=(C_word)a,a+=4,tmp));
t9=((C_word*)t7)[1];
f_40822(t9,t5,((C_word*)((C_word*)t0)[7])[1]);}
else{
t6=t5;
f_40808(2,t6,C_SCHEME_FALSE);}}}

/* do6944 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40822(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40822,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40832,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_numberp(t4);
t6=(C_word)C_i_not(t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40845,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t8=t7;
f_40845(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_40845(t9,(C_word)C_i_lessp(t8,C_fix(0)));}}}

/* k40843 in do6944 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 89   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[922],t2);}
else{
t2=((C_word*)t0)[2];
f_40832(2,t2,C_SCHEME_UNDEFINED);}}

/* k40830 in do6944 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40822(t3,((C_word*)t0)[2],t2);}

/* k40806 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40630(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[921],((C_word*)((C_word*)t0)[2])[1]);}}

/* k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40630,2,t0,t1);}
t2=(C_word)C_i_integerp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_40636(2,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40756,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40770,a[2]=t6,a[3]=((C_word)li535),tmp=(C_word)a,a+=4,tmp));
t8=((C_word*)t6)[1];
f_40770(t8,t4,((C_word*)((C_word*)t0)[7])[1]);}
else{
t5=t4;
f_40756(2,t5,C_SCHEME_FALSE);}}}

/* do6955 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40770(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40770,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40780,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t4))){
t5=t3;
f_40780(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[920],t5);}}}

/* k40778 in do6955 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40770(t3,((C_word*)t0)[2],t2);}

/* k40754 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40636(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[919],((C_word*)((C_word*)t0)[2])[1]);}}

/* k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40639,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40753,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[735],"open-file"),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_40639(t3,C_SCHEME_UNDEFINED);}}

/* k40751 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40639(t3,t2);}

/* k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40639(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40639,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40640,a[2]=((C_word*)t0)[5],a[3]=((C_word)li532),tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40668,a[2]=((C_word*)t0)[4],a[3]=((C_word)li533),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40698,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40709,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word)li534),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_40709(t8,t4,((C_word*)t0)[2]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40745,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextstart");
t6=t2;
f_40640(t6,t5);}}

/* k40743 in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40749,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextid");
t3=((C_word*)t0)[2];
f_40668(t3,t2);}

/* k40747 in k40743 in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   ffi_sched_sprout");
f_7579(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do6966 in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40709(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40709,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40719,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40734,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextstart");
t6=((C_word*)t0)[2];
f_40640(t6,t5);}}

/* k40732 in do6966 in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40738,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextid");
t3=((C_word*)t0)[2];
f_40668(t3,t2);}

/* k40736 in k40732 in do6966 in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   ffi_sched_sprout");
f_7579(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40717 in do6966 in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40709(t3,((C_word*)t0)[2],t2);}

/* k40696 in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}

/* nextid in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40668(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40668,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in k40637 in k40634 in k40628 in k40622 in k40619 in sprout in k40610 in k40607 in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40640(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40640,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40372(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40372,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40376,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_vectorp(t2))){
t4=t3;
f_40376(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 89   parse-iteration");
f_12747(t3,lf[917],t2,C_retrieve2(lf[901],"*run-operators*"));}}

/* k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40376,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[896],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40379,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 89   gensym");
t9=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[916]);}

/* k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 89   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[915]);}

/* k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 89   loop-end-tests");
t3=C_retrieve2(lf[131],"loop-end-tests");
f_9471(3,t3,t2,((C_word*)t0)[3]);}

/* k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40386,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40600,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   loop-finally");
t5=C_retrieve2(lf[135],"loop-finally");
f_9507(3,t5,t4,((C_word*)t0)[3]);}

/* k40598 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40600,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[4];
f_40389(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40584,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40588,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-finally");
t4=C_retrieve2(lf[135],"loop-finally");
f_9507(3,t4,t3,((C_word*)t0)[2]);}}

/* k40586 in k40598 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40588,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 89   ##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k40582 in k40598 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40584,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[216],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_40389(t4,t3);}

/* k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40389,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40562,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40569,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-looping");
t5=C_retrieve2(lf[132],"loop-looping");
f_9483(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40533,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_40533(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[268],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_40533(t7,t6);}}}

/* k40531 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40533(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40533,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_40392(2,t5,t4);}

/* k40567 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   process-code-terminates?");
f_40333(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k40560 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_40392(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 89   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[914]);}}

/* k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[124],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40392,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,2,lf[104],lf[904]);
t5=(C_word)C_a_i_list(&a,2,lf[63],lf[904]);
t6=(C_word)C_a_i_list(&a,1,lf[53]);
t7=(C_word)C_a_i_list(&a,3,lf[245],t5,t6);
t8=(C_word)C_a_i_list(&a,1,lf[54]);
t9=(C_word)C_a_i_list(&a,4,lf[119],t7,t8,((C_word*)t0)[7]);
t10=(C_word)C_a_i_list(&a,4,lf[119],t4,((C_word*)t0)[7],t9);
t11=(C_word)C_a_i_list(&a,3,lf[905],lf[904],t10);
t12=(C_word)C_a_i_list(&a,2,lf[906],t11);
t13=(C_word)C_a_i_list(&a,1,lf[907]);
t14=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],lf[907]);
t15=(C_word)C_a_i_list(&a,3,lf[905],t13,t14);
t16=(C_word)C_a_i_list(&a,2,lf[908],t15);
t17=(C_word)C_a_i_list(&a,3,t3,t12,t16);
t18=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t17,tmp=(C_word)a,a+=7,tmp);
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t18,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 89   loop-looping");
t20=C_retrieve2(lf[132],"loop-looping");
f_9483(3,t20,t19,((C_word*)t0)[3]);}

/* k40461 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40467,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 89   loop-stepping");
t3=C_retrieve2(lf[134],"loop-stepping");
f_9495(3,t3,t2,((C_word*)t0)[2]);}

/* k40465 in k40461 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40467,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 89   append");
t3=*((C_word*)lf[117]+1);
((C_proc6)C_retrieve_proc(t3))(6,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1,t2);}

/* k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[913]);}

/* k7121 in k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[96],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7123,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[909]);
t3=(C_word)C_a_i_list(&a,1,t1);
t4=(C_word)C_a_i_list(&a,1,lf[910]);
t5=(C_word)C_a_i_list(&a,4,lf[911],t1,t4,lf[912]);
t6=(C_word)C_a_i_list(&a,2,lf[909],C_fix(-2));
t7=(C_word)C_a_i_list(&a,4,lf[905],t3,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t9=(C_word)C_a_i_cons(&a,2,lf[905],t8);
t10=(C_word)C_a_i_list(&a,3,lf[797],t7,t9);
t11=(C_word)C_a_i_list(&a,3,lf[905],t2,t10);
t12=(C_word)C_a_i_list(&a,2,lf[798],t11);
t13=(C_word)C_a_i_list(&a,3,lf[103],((C_word*)t0)[6],t12);
t14=(C_word)C_a_i_list(&a,3,lf[905],((C_word*)t0)[5],t13);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t17=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40439,a[2]=((C_word*)t0)[2],a[3]=t16,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-bindings");
t18=C_retrieve2(lf[128],"loop-bindings");
f_9435(3,t18,t17,((C_word*)t0)[2]);}

/* k40437 in k7121 in k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40439,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40435,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 89   loop-initially");
t3=C_retrieve2(lf[130],"loop-initially");
f_9459(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_40402(t2,C_SCHEME_FALSE);}}

/* k40433 in k40437 in k7121 in k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_40402(t2,(C_word)C_i_nullp(t1));}

/* k40400 in k7121 in k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40402,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   loop-bindings");
t3=C_retrieve2(lf[128],"loop-bindings");
f_9435(3,t3,t2,((C_word*)t0)[2]);}}

/* k40411 in k40400 in k7121 in k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40417,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40421,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-initially");
t4=C_retrieve2(lf[130],"loop-initially");
f_9459(3,t4,t3,((C_word*)t0)[2]);}

/* k40419 in k40411 in k40400 in k7121 in k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40421,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 89   ##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k40415 in k40411 in k40400 in k7121 in k40457 in k40390 in k40387 in k40384 in k40380 in k40377 in k40374 in expand-process in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40417,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[103],t2));}

/* process-code-terminates? in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40333(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_40333,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40349,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_equalp(t2,t4));}}}

/* k40347 in process-code-terminates? in k40329 in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 89   process-code-terminates?");
f_40333(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40260,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40271,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 89   loop-error");
f_9771(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[899],t7,lf[900]));}
else{
t13=t12;
f_40271(2,t13,C_SCHEME_UNDEFINED);}}

/* k40269 in run-while-until in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[296]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_40274(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[297]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[211],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_40274(t10,t9);}
else{
t5=t2;
f_40274(t5,C_SCHEME_UNDEFINED);}}}

/* k40272 in k40269 in run-while-until in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40274,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40281,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[896],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 89   make-loop-clause");
f_9531(t2,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[143],t4));}

/* k40279 in k40272 in k40269 in run-while-until in k40255 in k40252 in k40249 in k40246 in k40243 in k40240 in k40237 in k40234 in k40231 in k40228 in k40225 in k40222 in k40219 in k40216 in k40213 in k40210 in k40207 in k40204 in k40201 in k40198 in k40195 in k40192 in k40189 in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39717(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39717,NULL,2,t1,t2);}
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39721,a[2]=t12,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40050,a[2]=t4,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t8,a[7]=t15,a[8]=((C_word)li527),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_40050(t17,t13,t2,C_SCHEME_FALSE);}

/* do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_40050(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40050,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40060,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[7],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t5,a[8]=t4,a[9]=t2,tmp=(C_word)a,a+=10,tmp);
t7=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   keyword?");
t8=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k40068 in do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40070,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_truep((C_word)C_i_equalp(t2,lf[871]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[769]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[872]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[873]))?C_SCHEME_TRUE:C_SCHEME_FALSE)))))){
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=((C_word*)t0)[7];
f_40060(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[874],((C_word*)((C_word*)t0)[8])[1]);}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[769]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40096,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_word)C_i_pairp(t3))){
C_trace("ChickenBridge.scm: 88   caar");
t4=*((C_word*)lf[597]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,((C_word*)t0)[9]);}
else{
t4=t2;
f_40096(2,t4,(C_word)C_i_car(((C_word*)t0)[9]));}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[872]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40135,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40139,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 88   symbol->string");
t5=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[875]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[7];
f_40060(2,t5,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[873]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[7];
f_40060(2,t4,t3);}
else{
t2=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[876],((C_word*)((C_word*)t0)[8])[1]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[7];
f_40060(2,t6,t5);}}}}}}}

/* k40137 in k40068 in do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k40133 in k40068 in do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40135,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_40060(2,t4,t3);}

/* k40094 in k40068 in do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40108,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   symbol->string");
t4=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t1);}

/* k40106 in k40094 in k40068 in do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k40102 in k40094 in k40068 in do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40104,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_40060(2,t4,t3);}

/* k40058 in do6691 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_40060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_40050(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k39719 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[7])[1]);}

/* k39723 in k39719 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39725,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39727 in k39723 in k39719 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39729,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39731 in k39727 in k39723 in k39719 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39733,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39735 in k39731 in k39727 in k39723 in k39719 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39737,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39738,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word)li526),tmp=(C_word)a,a+=8,tmp));}

/* f_39738 in k39735 in k39731 in k39727 in k39723 in k39719 in make-message-parser in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39738(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39738,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39744,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t3,a[8]=((C_word)li525),tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 88   call-with-current-continuation");
t5=*((C_word*)lf[798]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* a39743 */
static void C_ccall f_39744(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39744,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[7])[1];
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39748,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=t2,a[8]=t1,a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 88   return");
t5=t2;
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_TRUE);}
else{
t5=t4;
f_39748(2,t5,C_SCHEME_UNDEFINED);}}

/* k39746 in a39743 */
static void C_ccall f_39748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39977,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t4,a[7]=((C_word*)t0)[9],a[8]=((C_word)li524),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_39977(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do6702 in k39746 in a39743 */
static void C_fcall f_39977(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39977,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39987,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40008,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t5=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[869],((C_word*)t0)[4]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40014,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40024,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t7=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}}

/* k40022 in do6702 in k39746 in a39743 */
static void C_ccall f_40024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_member(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=((C_word*)t0)[3];
f_40014(t4,t3);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=((C_word*)t0)[3];
f_40014(t5,(C_word)C_i_member(t4,((C_word*)((C_word*)t0)[2])[1]));}}
else{
t2=((C_word*)t0)[3];
f_40014(t2,C_SCHEME_FALSE);}}

/* k40012 in do6702 in k39746 in a39743 */
static void C_fcall f_40014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40014,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[870],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_39987(2,t2,C_SCHEME_UNDEFINED);}}

/* k40019 in k40012 in do6702 in k39746 in a39743 */
static void C_ccall f_40021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k40006 in do6702 in k39746 in a39743 */
static void C_ccall f_40008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39985 in do6702 in k39746 in a39743 */
static void C_ccall f_39987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_39977(t5,((C_word*)t0)[2],t4);}

/* k39749 in k39746 in a39743 */
static void C_ccall f_39751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39932,a[2]=t2,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t3;
f_39932(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_39932(t5,(C_word)C_i_not(t4));}}

/* k39930 in k39749 in k39746 in a39743 */
static void C_fcall f_39932(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39932,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39937,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li523),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39937(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_39754(2,t2,C_SCHEME_UNDEFINED);}}

/* do6710 in k39930 in k39749 in k39746 in a39743 */
static void C_fcall f_39937(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39937,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_39947(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t5=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k39945 in do6710 in k39930 in k39749 in k39746 in a39743 */
static void C_ccall f_39947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_39937(t4,((C_word*)t0)[4]);}}

/* k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39757,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39886,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=t3;
f_39886(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_39886(t5,(C_word)C_i_not(t4));}}

/* k39884 in k39752 in k39749 in k39746 in a39743 */
static void C_fcall f_39886(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39886,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39891,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li522),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39891(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_39757(2,t2,C_SCHEME_UNDEFINED);}}

/* do6716 in k39884 in k39752 in k39749 in k39746 in a39743 */
static void C_fcall f_39891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39891,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_39901(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t5=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k39899 in do6716 in k39884 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_39891(t4,((C_word*)t0)[4]);}}

/* k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39760,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_not(t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39783,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_39783(t6,t4);}
else{
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t7=t5;
f_39783(t7,(C_word)C_i_not(t6));}}

/* k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_fcall f_39783(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39783,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?((C_word*)((C_word*)t0)[6])[1]:((C_word*)((C_word*)t0)[7])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li521),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_39792(t7,((C_word*)t0)[2],t3);}
else{
t2=((C_word*)t0)[2];
f_39760(2,t2,C_SCHEME_UNDEFINED);}}

/* do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_fcall f_39792(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39792,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39802,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39808,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k39806 in do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39808,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
if(C_truep((C_word)C_i_member(t3,((C_word*)t0)[2]))){
t4=t2;
f_39811(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39842,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 88   format");
t6=C_retrieve(lf[431]);
((C_proc6)C_retrieve_proc(t6))(6,t6,t4,C_SCHEME_FALSE,lf[867],t5,((C_word*)t0)[3]);}}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39861,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 88   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[868],t3);}}

/* k39859 in k39806 in do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39840 in k39806 in do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39809 in k39806 in do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39811,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39818,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39832,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t6=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_SCHEME_FALSE,lf[866],((C_word*)t0)[2]);}
else{
t5=t4;
f_39818(2,t5,C_SCHEME_UNDEFINED);}}

/* k39830 in k39809 in k39806 in do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39816 in k39809 in k39806 in do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39802(2,t4,t3);}

/* k39800 in do6724 in k39781 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_39792(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39758 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39760,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39773,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[865],((C_word*)t0)[2]);}}

/* k39771 in k39758 in k39755 in k39752 in k39749 in k39746 in a39743 */
static void C_ccall f_39773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-send in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_39643r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_39643r(t0,t1,t2,t3,t4);}}

static void C_ccall f_39643r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39647,a[2]=t3,a[3]=t1,a[4]=t5,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,*((C_word*)lf[84]+1));
t8=t6;
f_39647(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_39647(t9,t8);}}

/* k39645 in expand-send in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39647(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39647,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39656,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 88   hash-ref");
t3=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_retrieve2(lf[861],"*messages*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t0)[5]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[863],((C_word*)t0)[5]);}}}

/* k39654 in k39645 in expand-send in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39656,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t1);
t5=t4;
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   string->symbol");
t4=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k39667 in k39654 in k39645 in expand-send in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39669,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k39670 in k39654 in k39645 in expand-send in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39672,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(t1))){
C_trace("ChickenBridge.scm: 88   errcont");
t2=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],t1);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39688,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   string->symbol");
t3=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k39686 in k39670 in k39654 in k39645 in expand-send in k39639 in k39636 in k39632 in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39688,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* cs:f in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39594(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_39594r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39594r(t0,t1,t2);}}

static void C_ccall f_39594r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 88   cs:send");
f_39395(t1,lf[860],t2);}

/* cs:i in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39588(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_39588r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39588r(t0,t1,t2);}}

static void C_ccall f_39588r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 88   cs:send");
f_39395(t1,lf[849],t2);}

/* cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39395(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39395,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[848];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39399,a[2]=t4,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t2,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
C_trace("ChickenBridge.scm: 88   error");
t12=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[857]);}
else{
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39568,a[2]=t11,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_cdr(((C_word*)t4)[1]);
if(C_truep((C_word)C_i_nullp(t13))){
t14=(C_word)C_i_car(((C_word*)t4)[1]);
t15=t12;
f_39568(t15,(C_word)C_i_pairp(t14));}
else{
t14=t12;
f_39568(t14,C_SCHEME_FALSE);}}}

/* k39566 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39568(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39399(2,t4,t3);}
else{
t2=((C_word*)t0)[2];
f_39399(2,t2,C_SCHEME_UNDEFINED);}}

/* k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_integerp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_39402(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 88   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[856],t4);}}

/* k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]))){
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[854]);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_39405(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 88   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[855],t4);}}}

/* k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39405,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39410,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li516),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_39410(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],lf[853]);}

/* do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39410(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39410,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(C_word)C_eqp(((C_word*)t0)[6],lf[849]);
t5=(C_truep(t4)?C_fix(1):C_retrieve(lf[850]));
t6=t1;
t7=((C_word*)((C_word*)t0)[5])[1];
t8=((C_word*)((C_word*)t0)[4])[1];
t9=((C_word*)((C_word*)t0)[3])[1];
t10=(C_word)C_i_foreign_fixnum_argumentp(t5);
t11=(C_word)C_i_foreign_fixnum_argumentp(t7);
t12=(C_word)C_i_foreign_flonum_argumentp(t8);
t13=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8038,a[2]=t12,a[3]=t11,a[4]=t10,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t9)){
t14=(C_word)C_i_foreign_string_argumentp(t9);
C_trace("##sys#make-c-string");
t15=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}
else{
t14=t13;
f_8038(2,t14,C_SCHEME_FALSE);}}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39430,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39444,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39448,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t6))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39462,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   string-append");
t9=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t7,((C_word*)((C_word*)t0)[3])[1],t3,t8);}
else{
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_symbolp(t7))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39476,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39480,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   symbol->string");
t11=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}
else{
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,lf[852],t8);}}}}}

/* k39478 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k39474 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39430(2,t3,t2);}

/* k39460 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39430(2,t3,t2);}

/* k39446 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k39442 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39430(2,t3,t2);}

/* k39428 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39410(t3,((C_word*)t0)[2],t2,lf[851]);}

/* k8036 in do6659 in k39403 in k39400 in k39397 in cs:send in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub498(C_SCHEME_UNDEFINED,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39223(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_39223r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_39223r(t0,t1,t2,t3);}}

static void C_ccall f_39223r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39227,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[845],t2,lf[846]);}

/* k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39227,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_length(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_evenp(t5))){
t6=t4;
f_39230(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[844],((C_word*)t0)[2]);}}

/* k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39230,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39235,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li514),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39235(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39235(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39235,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
t6=((C_word*)((C_word*)t0)[3])[1];
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8012,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t6)){
t8=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t9=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t7,t8);}
else{
t8=t7;
f_8012(2,t8,C_SCHEME_FALSE);}}
else{
t5=(C_word)C_i_cadr(t2);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(t2);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39255,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t9=(C_word)C_eqp(t7,lf[823]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39269,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_cadr(t2);
t12=(C_truep(t11)?lf[824]:lf[825]);
C_trace("ChickenBridge.scm: 88   string-append");
t13=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t10,((C_word*)((C_word*)t0)[3])[1],lf[826],t12);}
else{
t10=(C_word)C_eqp(t7,lf[827]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39286,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cadr(t2);
t13=(C_truep(t12)?lf[828]:lf[829]);
C_trace("ChickenBridge.scm: 88   string-append");
t14=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t14))(5,t14,t11,((C_word*)((C_word*)t0)[3])[1],lf[830],t13);}
else{
t11=(C_word)C_eqp(t7,lf[831]);
if(C_truep(t11)){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39302,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t13=t12;
f_39302(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t13=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[834],((C_word*)t4)[1]);}}
else{
t12=(C_word)C_eqp(t7,lf[835]);
if(C_truep(t12)){
t13=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39329,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t14=t13;
f_39329(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t14=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[838],((C_word*)t4)[1]);}}
else{
t13=(C_word)C_eqp(t7,lf[839]);
if(C_truep(t13)){
t14=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39356,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t15=t14;
f_39356(2,t15,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t15=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[842],((C_word*)t4)[1]);}}
else{
t14=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   error");
t15=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t8,lf[843],t14);}}}}}}}

/* k39354 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39360,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[840],t3,lf[841]);}

/* k39358 in k39354 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39255(2,t3,t2);}

/* k39327 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[836],t3,lf[837]);}

/* k39331 in k39327 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39255(2,t3,t2);}

/* k39300 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[832],t3,lf[833]);}

/* k39304 in k39300 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39255(2,t3,t2);}

/* k39284 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39255(2,t3,t2);}

/* k39267 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39255(2,t3,t2);}

/* k39253 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_39235(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k8010 in do6639 in k39228 in k39225 in cs:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub489(C_SCHEME_UNDEFINED,t1));}

/* snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39110(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_39110r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_39110r(t0,t1,t2,t3);}}

static void C_ccall f_39110r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39115,a[2]=t5,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   full-pathname");
f_25356(t6,((C_word*)t4)[1]);}

/* k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39115,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=lf[805]=C_SCHEME_FALSE;;
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39119,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   pathname-type");
f_25314(t4,((C_word*)((C_word*)t0)[4])[1]);}

/* k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39122,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39170,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   list-prop");
t4=C_retrieve2(lf[87],"list-prop");
f_8872(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],lf[818]);}

/* k39168 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39170,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39122(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39162,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39166,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[817]))){
t5=t3;
f_39166(t5,(C_word)C_a_i_list(&a,2,lf[818],C_retrieve(lf[819])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[820]))){
t5=t3;
f_39166(t5,(C_word)C_a_i_list(&a,2,lf[818],C_retrieve(lf[821])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[822]);
t6=t3;
f_39166(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[818],C_retrieve(lf[819])):C_SCHEME_END_OF_LIST));}}}}

/* k39164 in k39168 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39166(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k39160 in k39168 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39122(t3,t2);}

/* k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39122,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39155,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   list-prop");
t4=C_retrieve2(lf[87],"list-prop");
f_8872(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],lf[811]);}

/* k39153 in k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39155,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39125(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39147,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39151,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[810]))){
t5=t3;
f_39151(t5,(C_word)C_a_i_list(&a,2,lf[811],C_retrieve(lf[812])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[813]))){
t5=t3;
f_39151(t5,(C_word)C_a_i_list(&a,2,lf[811],C_retrieve(lf[814])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[815]);
t6=t3;
f_39151(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[811],C_retrieve(lf[816])):C_SCHEME_END_OF_LIST));}}}}

/* k39149 in k39153 in k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k39145 in k39153 in k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39125(t3,t2);}

/* k39123 in k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_39125(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39125,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_apply(6,0,t2,C_retrieve(lf[808]),lf[809],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);}

/* k39126 in k39123 in k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39132,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39140,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   list-prop");
t4=C_retrieve2(lf[87],"list-prop");
f_8872(5,t4,t3,((C_word*)((C_word*)t0)[2])[1],lf[806],C_retrieve(lf[807]));}

/* k39138 in k39126 in k39123 in k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39140,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 88   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k39130 in k39126 in k39123 in k39120 in k39117 in k39113 in snd:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_39132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[805],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_retrieve2(lf[805],"*sndfileinfo*"));}

/* mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38934(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_38934r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38934r(t0,t1,t2);}}

static void C_ccall f_38934r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38938,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 88   error");
t6=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[803]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38953,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_38953(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_38953(t8,C_SCHEME_FALSE);}}}

/* k38951 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38953(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38953,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_38938(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_38960(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_38960(t4,C_SCHEME_FALSE);}}}

/* k38958 in k38951 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38960,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(127));
t3=((C_word*)t0)[3];
f_38938(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38966,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li511),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38966(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6614 in k38958 in k38951 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38966(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38966,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38976,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38986,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   <=");
C_less_or_equal_p(5,0,t4,C_retrieve(lf[750]),t5,C_retrieve(lf[756]));}}

/* k38984 in do6614 in k38958 in k38951 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38986,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38994,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=(C_word)C_a_i_minus(&a,2,t4,C_retrieve(lf[750]));
C_trace("ChickenBridge.scm: 88   ash");
t6=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,C_fix(1),t5);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[804],t2);}}

/* k38992 in k38984 in do6614 in k38958 in k38951 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38988 in k38984 in do6614 in k38958 in k38951 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38976(2,t3,t2);}

/* k38974 in do6614 in k38958 in k38951 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38966(t3,((C_word*)t0)[2],t2);}

/* k38936 in mp:inops in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub431(C_SCHEME_UNDEFINED,t4));}

/* mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38829(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_38829r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38829r(t0,t1,t2);}}

static void C_ccall f_38829r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38833,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 88   error");
t6=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[800]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38848,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_38848(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_38848(t8,C_SCHEME_FALSE);}}}

/* k38846 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38848(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38848,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_38833(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_38855(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_38855(t4,C_SCHEME_FALSE);}}}

/* k38853 in k38846 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38855,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(65535));
t3=((C_word*)t0)[3];
f_38833(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38861,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li509),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38861(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6606 in k38853 in k38846 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38861(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38861,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38871,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38881,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   <=");
C_less_or_equal_p(5,0,t4,C_fix(0),t5,C_fix(15));}}

/* k38879 in do6606 in k38853 in k38846 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38881,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38889,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   ash");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,C_fix(1),t4);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[801],t2);}}

/* k38887 in k38879 in do6606 in k38853 in k38846 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38883 in k38879 in do6606 in k38853 in k38846 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38871(2,t3,t2);}

/* k38869 in do6606 in k38853 in k38846 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38861(t3,((C_word*)t0)[2],t2);}

/* k38831 in mp:inchans in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub427(C_SCHEME_UNDEFINED,t4));}

/* mp:inhook in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38810(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38810,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=t2;
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7170,a[2]=t3,a[3]=((C_word)li507),tmp=(C_word)a,a+=4,tmp);
t5=t1;
t6=t5;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub483(C_SCHEME_UNDEFINED,t4));}
else{
t3=t1;
t4=t3;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub486(C_SCHEME_UNDEFINED));}}

/* f_7170 in mp:inhook in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7170,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7176,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[2],a[7]=((C_word)li506),tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   call-with-current-continuation");
t7=*((C_word*)lf[798]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,t6);}

/* a7175 */
static void C_ccall f_7176(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7176,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7182,a[2]=t2,a[3]=((C_word)li504),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7202,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li505),tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   with-exception-handler");
t5=C_retrieve(lf[797]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a7201 in a7175 */
static void C_ccall f_7202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7206,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   $hook$");
t3=((C_word*)t0)[6];
((C_proc6)C_retrieve_proc(t3))(6,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7204 in a7201 in a7175 */
static void C_ccall f_7206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a7181 in a7175 */
static void C_ccall f_7182(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7182,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7186,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7193,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7197,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7200,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   condition-property-accessor");
t7=C_retrieve(lf[794]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[795],lf[796]);}

/* k7198 in a7181 in a7175 */
static void C_ccall f_7200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7195 in a7181 in a7175 */
static void C_ccall f_7197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   sprintf");
t2=C_retrieve(lf[792]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[793],t1);}

/* k7191 in a7181 in a7175 */
static void C_ccall f_7193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7184 in a7181 in a7175 */
static void C_ccall f_7186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:recordseq in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38795(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_38795r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_38795r(t0,t1,t2);}}

static void C_ccall f_38795r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
C_trace("ChickenBridge.scm: 88   ffi_mp_set_record_seq");
t5=C_retrieve(lf[790]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* mp:clearseq in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38789,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub480(C_SCHEME_UNDEFINED));}

/* mp:plotseq in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38783,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub478(C_SCHEME_UNDEFINED));}

/* mp:copyseq in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38777,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub476(C_SCHEME_UNDEFINED));}

/* mp:saveseq in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38771,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub474(C_SCHEME_UNDEFINED));}

/* mp:playseq in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38765,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub472(C_SCHEME_UNDEFINED));}

/* mp:tuning in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38549(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2rv,(void*)f_38549r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_38549r(t0,t1,t2);}}

static void C_ccall f_38549r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38559,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 88   <");
C_lessp(5,0,t5,C_fix(0),t4,C_fix(17));}
else{
t6=t5;
f_38559(2,t6,C_SCHEME_FALSE);}}

/* k38557 in mp:tuning in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[2]);
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub435(C_SCHEME_UNDEFINED,t3));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[783],((C_word*)t0)[2]);}}

/* mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38120(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_38120r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38120r(t0,t1,t2);}}

static void C_ccall f_38120r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_38124,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_38124(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38427,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[767]);}
else{
t23=t22;
f_38427(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[776]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38462,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[776]);}
else{
t24=t23;
f_38462(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[771]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38497,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[771]);}
else{
t25=t24;
f_38497(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38526,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_38526(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k38524 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38526,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38541,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38539 in k38524 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38533(2,t2,C_SCHEME_UNDEFINED);}}

/* k38531 in k38524 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_38124(t5,t4);}

/* k38495 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38501(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38499 in k38495 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38124(t7,t6);}

/* k38460 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38466(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38464 in k38460 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38124(t7,t6);}

/* k38425 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38431,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38431(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38429 in k38425 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38124(t7,t6);}

/* k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38124,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_38127,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_38127(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38292,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_38292(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38327,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_38327(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38362,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_38362(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38391,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_38391(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k38389 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38391,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38406,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38404 in k38389 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38398(2,t2,C_SCHEME_UNDEFINED);}}

/* k38396 in k38389 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_38127(t5,t4);}

/* k38360 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38366(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38364 in k38360 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38127(t7,t6);}

/* k38325 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38331,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38331(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38329 in k38325 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38127(t7,t6);}

/* k38290 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38296(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38294 in k38290 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38127(t7,t6);}

/* k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38127(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38127,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38130,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_38130(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38157,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_38157(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38192,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_38192(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38227,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_38227(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38256,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_38256(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k38254 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38256,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38271,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38269 in k38254 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38263(2,t2,C_SCHEME_UNDEFINED);}}

/* k38261 in k38254 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_38130(t5,t4);}

/* k38225 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38231(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38229 in k38225 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38130(t7,t6);}

/* k38190 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38196(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38194 in k38190 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38130(t7,t6);}

/* k38155 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38161,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38161(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38159 in k38155 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_38130(t7,t6);}

/* k38128 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_38130(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38130,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38133,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_38133(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k38131 in k38128 in k38125 in k38122 in mp:bend in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7875(((C_word*)t0)[5],C_retrieve(lf[756]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37691(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37691r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37691r(t0,t1,t2);}}

static void C_ccall f_37691r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37695,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37695(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37998,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[767]);}
else{
t23=t22;
f_37998(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[776]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38033,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[776]);}
else{
t24=t23;
f_38033(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[771]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38068,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[771]);}
else{
t25=t24;
f_38068(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38097,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_38097(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k38095 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38097,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38112,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38110 in k38095 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38104(2,t2,C_SCHEME_UNDEFINED);}}

/* k38102 in k38095 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37695(t5,t4);}

/* k38066 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38072(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38070 in k38066 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37695(t7,t6);}

/* k38031 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38037,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38037(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38035 in k38031 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37695(t7,t6);}

/* k37996 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38002,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38002(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38000 in k37996 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_38002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37695(t7,t6);}

/* k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_37695(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37695,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37698(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37863,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_37863(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37898,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_37898(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37933,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_37933(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37962,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37962(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37960 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37962,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37977,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37975 in k37960 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37969(2,t2,C_SCHEME_UNDEFINED);}}

/* k37967 in k37960 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37698(t5,t4);}

/* k37931 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37937(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37935 in k37931 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37698(t7,t6);}

/* k37896 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37902(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37900 in k37896 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37698(t7,t6);}

/* k37861 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37867,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37867(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37865 in k37861 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37698(t7,t6);}

/* k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_37698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37698,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37701,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37701(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37728,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_37728(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37763,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_37763(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37798,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_37798(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37827,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37827(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37825 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37827,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37842,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37840 in k37825 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37834(2,t2,C_SCHEME_UNDEFINED);}}

/* k37832 in k37825 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37701(t5,t4);}

/* k37796 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37800 in k37796 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37701(t7,t6);}

/* k37761 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37765 in k37761 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37701(t7,t6);}

/* k37726 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37730 in k37726 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37701(t7,t6);}

/* k37699 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_37701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37701,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37704,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37704(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k37702 in k37699 in k37696 in k37693 in mp:press in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7875(((C_word*)t0)[5],C_retrieve(lf[755]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37262(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37262r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37262r(t0,t1,t2);}}

static void C_ccall f_37262r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37266,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37266(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37569,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[767]);}
else{
t23=t22;
f_37569(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[776]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37604,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[776]);}
else{
t24=t23;
f_37604(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[771]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37639,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[771]);}
else{
t25=t24;
f_37639(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37668,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_37668(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37666 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37668,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37683,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37681 in k37666 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37675(2,t2,C_SCHEME_UNDEFINED);}}

/* k37673 in k37666 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37266(t5,t4);}

/* k37637 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37643,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37643(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37641 in k37637 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37266(t7,t6);}

/* k37602 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37604,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37608,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37608(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37606 in k37602 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37266(t7,t6);}

/* k37567 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37573(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37571 in k37567 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37266(t7,t6);}

/* k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_37266(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37266,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37269(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37434,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_37434(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37469,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_37469(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37504,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_37504(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37533,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37533(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37531 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37533,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37548,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37546 in k37531 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37540(2,t2,C_SCHEME_UNDEFINED);}}

/* k37538 in k37531 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37269(t5,t4);}

/* k37502 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37508,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37508(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37506 in k37502 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37269(t7,t6);}

/* k37467 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37473(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37471 in k37467 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37269(t7,t6);}

/* k37432 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37438(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37436 in k37432 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37269(t7,t6);}

/* k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_37269(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37269,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37272,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37272(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37299,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_37299(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37334,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_37334(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37369,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_37369(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37398,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37398(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37396 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37398,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37413,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37411 in k37396 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37405(2,t2,C_SCHEME_UNDEFINED);}}

/* k37403 in k37396 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37272(t5,t4);}

/* k37367 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37373,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37373(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37371 in k37367 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37272(t7,t6);}

/* k37332 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37338(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37336 in k37332 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37272(t7,t6);}

/* k37297 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37303(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37301 in k37297 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37272(t7,t6);}

/* k37270 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_37272(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37272,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37275,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37275(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k37273 in k37270 in k37267 in k37264 in mp:prog in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7875(((C_word*)t0)[5],C_retrieve(lf[754]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36555(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_36555r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36555r(t0,t1,t2);}}

static void C_ccall f_36555r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36559,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_36559(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37105,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[118],lf[767]);}
else{
t27=t26;
f_37105(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[778]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37140,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[118],lf[778]);}
else{
t28=t27;
f_37140(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[776]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37175,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[118],lf[776]);}
else{
t29=t28;
f_37175(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[771]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37210,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[118],lf[771]);}
else{
t30=t29;
f_37210(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37239,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[109],t2);}
else{
t30=t29;
f_37239(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k37237 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37239,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37246,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37254,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37252 in k37237 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37246(2,t2,C_SCHEME_UNDEFINED);}}

/* k37244 in k37237 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36559(t5,t4);}

/* k37208 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37214(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37212 in k37208 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36559(t7,t6);}

/* k37173 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37177 in k37173 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36559(t7,t6);}

/* k37138 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37142 in k37138 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36559(t7,t6);}

/* k37103 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37109,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37109(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37107 in k37103 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36559(t7,t6);}

/* k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_36559(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36559,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36562(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36935,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_36935(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[778]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36970,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[778]);}
else{
t7=t6;
f_36970(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37005,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[776]);}
else{
t8=t7;
f_37005(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37040,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_37040(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37069,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_37069(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k37067 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37069,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37084,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37082 in k37067 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37076(2,t2,C_SCHEME_UNDEFINED);}}

/* k37074 in k37067 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36562(t5,t4);}

/* k37038 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37042 in k37038 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36562(t7,t6);}

/* k37003 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37007 in k37003 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_37009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36562(t7,t6);}

/* k36968 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36974(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36972 in k36968 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36562(t7,t6);}

/* k36933 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36939(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36937 in k36933 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36562(t7,t6);}

/* k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_36562(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36562,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36565,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36565(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36765,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_36765(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[778]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36800,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[778]);}
else{
t7=t6;
f_36800(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36835,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[776]);}
else{
t8=t7;
f_36835(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36870,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_36870(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36899,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36899(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36897 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36899,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36914,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36912 in k36897 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36906(2,t2,C_SCHEME_UNDEFINED);}}

/* k36904 in k36897 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36565(t5,t4);}

/* k36868 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36872 in k36868 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36565(t7,t6);}

/* k36833 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36839,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36839(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36837 in k36833 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36565(t7,t6);}

/* k36798 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36804(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36802 in k36798 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36565(t7,t6);}

/* k36763 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36769,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36769(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36767 in k36763 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36565(t7,t6);}

/* k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_36565(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36565,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36568,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36568(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36595,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_36595(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[778]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36630,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[778]);}
else{
t7=t6;
f_36630(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36665,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[776]);}
else{
t8=t7;
f_36665(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36700,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_36700(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36729,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36729(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36727 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36729,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36744,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36742 in k36727 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36736(2,t2,C_SCHEME_UNDEFINED);}}

/* k36734 in k36727 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36568(t5,t4);}

/* k36698 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36704(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36702 in k36698 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36568(t7,t6);}

/* k36663 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36669(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36667 in k36663 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36568(t7,t6);}

/* k36628 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36634,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36634(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36632 in k36628 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36568(t7,t6);}

/* k36593 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36599,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36599(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36597 in k36593 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36568(t7,t6);}

/* k36566 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_36568(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36568,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36571,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_36571(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k36569 in k36566 in k36563 in k36560 in k36557 in mp:ctrl in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7875(((C_word*)t0)[6],C_retrieve(lf[753]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35848(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_35848r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35848r(t0,t1,t2);}}

static void C_ccall f_35848r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35852,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_35852(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36398,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[118],lf[767]);}
else{
t27=t26;
f_36398(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[769]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36433,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[118],lf[769]);}
else{
t28=t27;
f_36433(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[776]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36468,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[118],lf[776]);}
else{
t29=t28;
f_36468(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[771]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36503,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[118],lf[771]);}
else{
t30=t29;
f_36503(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36532,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[109],t2);}
else{
t30=t29;
f_36532(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k36530 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36532,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36539,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36547,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36545 in k36530 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36539(2,t2,C_SCHEME_UNDEFINED);}}

/* k36537 in k36530 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35852(t5,t4);}

/* k36501 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36507,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36507(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36505 in k36501 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35852(t7,t6);}

/* k36466 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36472,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36472(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36470 in k36466 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35852(t7,t6);}

/* k36431 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36437(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36435 in k36431 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35852(t7,t6);}

/* k36396 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36402(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36400 in k36396 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35852(t7,t6);}

/* k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35852(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35852,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35855(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36228,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_36228(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36263,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_36263(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36298,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[776]);}
else{
t8=t7;
f_36298(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36333,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_36333(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36362,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36362(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36360 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36362,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36377,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36375 in k36360 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36369(2,t2,C_SCHEME_UNDEFINED);}}

/* k36367 in k36360 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35855(t5,t4);}

/* k36331 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36337(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36335 in k36331 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35855(t7,t6);}

/* k36296 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36302(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36300 in k36296 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35855(t7,t6);}

/* k36261 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36267,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36267(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36265 in k36261 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35855(t7,t6);}

/* k36226 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36232,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36232(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36230 in k36226 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35855(t7,t6);}

/* k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35855,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35858(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36058,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_36058(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36093,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_36093(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36128,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[776]);}
else{
t8=t7;
f_36128(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36163,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_36163(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36192,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36192(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36190 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36192,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36207,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36205 in k36190 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36199(2,t2,C_SCHEME_UNDEFINED);}}

/* k36197 in k36190 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35858(t5,t4);}

/* k36161 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36167,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36167(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36165 in k36161 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35858(t7,t6);}

/* k36126 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36132(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36130 in k36126 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35858(t7,t6);}

/* k36091 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36097(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36095 in k36091 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35858(t7,t6);}

/* k36056 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36062,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36062(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36060 in k36056 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35858(t7,t6);}

/* k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35858,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35861,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35861(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35888,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_35888(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35923,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_35923(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35958,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[776]);}
else{
t8=t7;
f_35958(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35993,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_35993(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36022,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36022(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36020 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36022,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36037,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36035 in k36020 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36029(2,t2,C_SCHEME_UNDEFINED);}}

/* k36027 in k36020 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_36029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35861(t5,t4);}

/* k35991 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35997(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35995 in k35991 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35861(t7,t6);}

/* k35956 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35962(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35960 in k35956 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35861(t7,t6);}

/* k35921 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35927(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35925 in k35921 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35861(t7,t6);}

/* k35886 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35892,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35892(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35890 in k35886 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35861(t7,t6);}

/* k35859 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35861(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35861,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35864,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35864(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k35862 in k35859 in k35856 in k35853 in k35850 in mp:touch in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7875(((C_word*)t0)[6],C_retrieve(lf[752]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35141(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_35141r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35141r(t0,t1,t2);}}

static void C_ccall f_35141r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35145,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_35145(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35691,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[118],lf[767]);}
else{
t27=t26;
f_35691(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[769]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35726,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[118],lf[769]);}
else{
t28=t27;
f_35726(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[774]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35761,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[118],lf[774]);}
else{
t29=t28;
f_35761(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[771]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35796,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[118],lf[771]);}
else{
t30=t29;
f_35796(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35825,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[109],t2);}
else{
t30=t29;
f_35825(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k35823 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35825,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35832,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35840,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35838 in k35823 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35832(2,t2,C_SCHEME_UNDEFINED);}}

/* k35830 in k35823 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35145(t5,t4);}

/* k35794 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35800(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35798 in k35794 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35145(t7,t6);}

/* k35759 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35765(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35763 in k35759 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35145(t7,t6);}

/* k35724 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35730(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35728 in k35724 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35145(t7,t6);}

/* k35689 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35695,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35695(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35693 in k35689 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35145(t7,t6);}

/* k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35145,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35148(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35521,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_35521(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35556,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_35556(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35591,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_35591(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35626,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_35626(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35655,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35655(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35653 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35655,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35670,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35668 in k35653 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35662(2,t2,C_SCHEME_UNDEFINED);}}

/* k35660 in k35653 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35148(t5,t4);}

/* k35624 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35628 in k35624 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35148(t7,t6);}

/* k35589 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35595(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35593 in k35589 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35148(t7,t6);}

/* k35554 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35560(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35558 in k35554 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35148(t7,t6);}

/* k35519 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35525(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35523 in k35519 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35148(t7,t6);}

/* k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35148,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35151,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35151(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35351,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_35351(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35386,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_35386(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35421,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_35421(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35456,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_35456(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35485,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35485(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35483 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35485,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35500,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35498 in k35483 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35492(2,t2,C_SCHEME_UNDEFINED);}}

/* k35490 in k35483 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35151(t5,t4);}

/* k35454 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35460,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35460(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35458 in k35454 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35151(t7,t6);}

/* k35419 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35425(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35423 in k35419 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35151(t7,t6);}

/* k35384 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35390,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35390(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35388 in k35384 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35151(t7,t6);}

/* k35349 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35355,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35355(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35353 in k35349 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35151(t7,t6);}

/* k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35151,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35154,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35154(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35181,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_35181(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35216,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_35216(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35251,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_35251(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35286,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[771]);}
else{
t9=t8;
f_35286(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35315,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35315(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35313 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35315,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35330,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35328 in k35313 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35322(2,t2,C_SCHEME_UNDEFINED);}}

/* k35320 in k35313 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35154(t5,t4);}

/* k35284 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35286,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35290,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35290(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35288 in k35284 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35154(t7,t6);}

/* k35249 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35255(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35253 in k35249 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35154(t7,t6);}

/* k35214 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35216,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35220,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35220(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35218 in k35214 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35154(t7,t6);}

/* k35179 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35185(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35183 in k35179 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35154(t7,t6);}

/* k35152 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_35154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35154,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35157,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35157(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k35155 in k35152 in k35149 in k35146 in k35143 in mp:on in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7875(((C_word*)t0)[6],C_retrieve(lf[751]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34712(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_34712r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34712r(t0,t1,t2);}}

static void C_ccall f_34712r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34716,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_34716(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35019,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[767]);}
else{
t23=t22;
f_35019(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[769]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35054,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[769]);}
else{
t24=t23;
f_35054(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[771]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35089,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[771]);}
else{
t25=t24;
f_35089(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35118,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_35118(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k35116 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35118,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35125,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35133,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35131 in k35116 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35125(2,t2,C_SCHEME_UNDEFINED);}}

/* k35123 in k35116 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34716(t5,t4);}

/* k35087 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35093,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35093(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35091 in k35087 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34716(t7,t6);}

/* k35052 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35058(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35056 in k35052 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34716(t7,t6);}

/* k35017 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35023,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35023(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35021 in k35017 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_35023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34716(t7,t6);}

/* k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_34716(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34716,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34719(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34884,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_34884(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34919,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_34919(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34954,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_34954(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34983,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_34983(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34981 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34983,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34998,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34996 in k34981 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34990(2,t2,C_SCHEME_UNDEFINED);}}

/* k34988 in k34981 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34719(t5,t4);}

/* k34952 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34958(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34956 in k34952 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34719(t7,t6);}

/* k34917 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34923(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34921 in k34917 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34719(t7,t6);}

/* k34882 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34888(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34886 in k34882 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34719(t7,t6);}

/* k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_34719(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34719,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34722,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34722(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34749,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_34749(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34784,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[769]);}
else{
t7=t6;
f_34784(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34819,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[771]);}
else{
t8=t7;
f_34819(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34848,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_34848(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34846 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34848,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34863,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34861 in k34846 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34855(2,t2,C_SCHEME_UNDEFINED);}}

/* k34853 in k34846 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34722(t5,t4);}

/* k34817 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34823(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34821 in k34817 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34722(t7,t6);}

/* k34782 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34788(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34786 in k34782 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34722(t7,t6);}

/* k34747 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34753(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34751 in k34747 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34722(t7,t6);}

/* k34720 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_34722(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34722,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34725,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34725(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k34723 in k34720 in k34717 in k34714 in mp:off in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7875(((C_word*)t0)[5],C_retrieve(lf[750]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33657(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+86)){
C_save_and_reclaim((void*)tr2r,(void*)f_33657r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33657r(t0,t1,t2);}}

static void C_ccall f_33657r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word *a=C_alloc(86);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=lf[765];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(60);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[766];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t2;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33661,a[2]=t22,a[3]=t20,a[4]=t18,a[5]=t16,a[6]=t26,a[7]=t14,a[8]=t2,a[9]=t24,a[10]=t12,a[11]=t10,a[12]=t8,a[13]=t6,a[14]=t4,a[15]=t1,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_33661(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[767]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34520,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t14,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t31=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[118],lf[767]);}
else{
t31=t30;
f_34520(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[768]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34555,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t16,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t32=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[118],lf[768]);}
else{
t32=t31;
f_34555(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(C_word)C_eqp(t28,lf[769]);
if(C_truep(t31)){
t32=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34590,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t18,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t33=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t33))(4,t33,t32,lf[118],lf[769]);}
else{
t33=t32;
f_34590(2,t33,C_SCHEME_UNDEFINED);}}
else{
t32=(C_word)C_eqp(t28,lf[770]);
if(C_truep(t32)){
t33=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34625,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t34=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t34))(4,t34,t33,lf[118],lf[770]);}
else{
t34=t33;
f_34625(2,t34,C_SCHEME_UNDEFINED);}}
else{
t33=(C_word)C_eqp(t28,lf[771]);
if(C_truep(t33)){
t34=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34660,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t12,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t35=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[118],lf[771]);}
else{
t35=t34;
f_34660(2,t35,C_SCHEME_UNDEFINED);}}
else{
t34=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34689,a[2]=t27,a[3]=t14,a[4]=t4,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t35=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[109],t2);}
else{
t35=t34;
f_34689(2,t35,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34687 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34689,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34704,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34702 in k34687 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34696(2,t2,C_SCHEME_UNDEFINED);}}

/* k34694 in k34687 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33661(t5,t4);}

/* k34658 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34664,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34664(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34662 in k34658 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33661(t7,t6);}

/* k34623 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34627 in k34623 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33661(t7,t6);}

/* k34588 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34592 in k34588 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33661(t7,t6);}

/* k34553 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34559(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34557 in k34553 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33661(t7,t6);}

/* k34518 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34524,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34524(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34522 in k34518 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33661(t7,t6);}

/* k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33661,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33664(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34315,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_34315(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34350,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[768]);}
else{
t7=t6;
f_34350(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34385,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_34385(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[770]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34420,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[770]);}
else{
t9=t8;
f_34420(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34455,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[771]);}
else{
t10=t9;
f_34455(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34484,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_34484(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34482 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34484,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34499,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34497 in k34482 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34491(2,t2,C_SCHEME_UNDEFINED);}}

/* k34489 in k34482 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33664(t5,t4);}

/* k34453 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34457 in k34453 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33664(t7,t6);}

/* k34418 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34424(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34422 in k34418 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33664(t7,t6);}

/* k34383 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34389,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34389(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34387 in k34383 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33664(t7,t6);}

/* k34348 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34350,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34354(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34352 in k34348 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33664(t7,t6);}

/* k34313 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34315,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34319,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34319(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34317 in k34313 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33664(t7,t6);}

/* k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33667(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34110,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_34110(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34145,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[768]);}
else{
t7=t6;
f_34145(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34180,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_34180(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[770]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34215,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[770]);}
else{
t9=t8;
f_34215(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34250,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[771]);}
else{
t10=t9;
f_34250(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34279,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_34279(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34277 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34279,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34286,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34294,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34292 in k34277 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34286(2,t2,C_SCHEME_UNDEFINED);}}

/* k34284 in k34277 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33667(t5,t4);}

/* k34248 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34254,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34254(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34252 in k34248 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33667(t7,t6);}

/* k34213 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34219,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34219(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34217 in k34213 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33667(t7,t6);}

/* k34178 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34184,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34184(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34182 in k34178 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33667(t7,t6);}

/* k34143 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34149,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34149(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34147 in k34143 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33667(t7,t6);}

/* k34108 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34112 in k34108 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33667(t7,t6);}

/* k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33667,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33670(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33905,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_33905(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33940,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[768]);}
else{
t7=t6;
f_33940(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33975,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_33975(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[770]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34010,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[770]);}
else{
t9=t8;
f_34010(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34045,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[771]);}
else{
t10=t9;
f_34045(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34074,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_34074(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34072 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34074,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34089,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34087 in k34072 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34081(2,t2,C_SCHEME_UNDEFINED);}}

/* k34079 in k34072 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33670(t5,t4);}

/* k34043 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34049,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34049(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34047 in k34043 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33670(t7,t6);}

/* k34008 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34014(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34012 in k34008 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_34014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33670(t7,t6);}

/* k33973 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33977 in k33973 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33670(t7,t6);}

/* k33938 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33944(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33942 in k33938 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33670(t7,t6);}

/* k33903 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33907 in k33903 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33670(t7,t6);}

/* k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33670(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[56],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33670,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33673,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],a[9]=((C_word*)t0)[15],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33673(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33700,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[767]);}
else{
t6=t5;
f_33700(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33735,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[768]);}
else{
t7=t6;
f_33735(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33770,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_33770(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[770]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33805,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[770]);}
else{
t9=t8;
f_33805(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[771]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33840,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[771]);}
else{
t10=t9;
f_33840(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33869,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_33869(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33867 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33869,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33884,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33882 in k33867 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33876(2,t2,C_SCHEME_UNDEFINED);}}

/* k33874 in k33867 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33673(t5,t4);}

/* k33838 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33844,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33844(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33842 in k33838 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33673(t7,t6);}

/* k33803 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33809(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33807 in k33803 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33673(t7,t6);}

/* k33768 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33774,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33774(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33772 in k33768 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33673(t7,t6);}

/* k33733 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33739,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33739(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33737 in k33733 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33673(t7,t6);}

/* k33698 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33704(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33702 in k33698 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33673(t7,t6);}

/* k33671 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33673(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33673,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33676,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33676(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k33674 in k33671 in k33668 in k33665 in k33662 in k33659 in mp:midi in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a;
t2=((C_word*)t0)[7];
t3=((C_word*)((C_word*)t0)[6])[1];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=(C_word)C_i_foreign_flonum_argumentp(t7);
t13=t2;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub407(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12));}

/* mp:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33651(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33651,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7843,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7843(2,t4,C_SCHEME_FALSE);}}

/* k7841 in mp:open-output-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub397(C_SCHEME_UNDEFINED,t1));}

/* mp:open-input in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33498(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33498,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33505,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_33505(t9,(C_word)stub385(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_33505(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_33505(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_33505(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_33505(t4,C_SCHEME_FALSE);}}

/* k33503 in mp:open-input in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33505(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[763],((C_word*)t0)[2]);}}

/* mp:open-output in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33443(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33443,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33450,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_33450(t9,(C_word)stub381(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_33450(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_33450(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_33450(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_33450(t4,C_SCHEME_FALSE);}}

/* k33448 in mp:open-output in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33450(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[762],((C_word*)t0)[2]);}}

/* mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33196(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_33196r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33196r(t0,t1,t2);}}

static void C_ccall f_33196r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33200,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t1,a[8]=t6,a[9]=t4,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_33200(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[760]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33356,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[760]);}
else{
t19=t18;
f_33356(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[761]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33391,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[761]);}
else{
t20=t19;
f_33391(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33420,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[109],t2);}
else{
t20=t19;
f_33420(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k33418 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33420,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33427,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33435,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33433 in k33418 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33427(2,t2,C_SCHEME_UNDEFINED);}}

/* k33425 in k33418 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33200(t5,t4);}

/* k33389 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33395(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33393 in k33389 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33200(t7,t6);}

/* k33354 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33360,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33360(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33358 in k33354 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33200(t7,t6);}

/* k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33200(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33200,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33203,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_33203(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[760]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33256,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[760]);}
else{
t6=t5;
f_33256(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[761]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33291,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[761]);}
else{
t7=t6;
f_33291(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33320,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_33320(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k33318 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33320,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33335,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33333 in k33318 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33327(2,t2,C_SCHEME_UNDEFINED);}}

/* k33325 in k33318 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33203(t5,t4);}

/* k33289 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33295(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33293 in k33289 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33203(t7,t6);}

/* k33254 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33258 in k33254 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33203(t7,t6);}

/* k33201 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33203(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33203,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33206,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33206(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k33204 in k33201 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33206,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[4])[1])?((C_word*)((C_word*)t0)[3])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33219,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   mp:open-output");
f_33443(t3,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 88   mp:open-output");
f_33443(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 88   mp:open-input");
f_33498(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}}}

/* k33217 in k33204 in k33201 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33223,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   mp:open-input");
f_33498(t2,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]));}

/* k33221 in k33217 in k33204 in k33201 in k33198 in mp:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33223,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,2,((C_word*)t0)[2],t1));}

/* open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33095(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_33095r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33095r(t0,t1,t2,t3);}}

static void C_ccall f_33095r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33099,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   ffi_pathname_type");
f_7690(t4,t2);}

/* k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33099,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33102,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)stub289(C_SCHEME_UNDEFINED))){
C_trace("ChickenBridge.scm: 88   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[749],((C_word*)t0)[3]);}
else{
t5=t4;
f_33102(2,t5,C_SCHEME_UNDEFINED);}}

/* k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7745,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t3)){
t5=(C_word)C_i_foreign_string_argumentp(t3);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7745(2,t5,C_SCHEME_FALSE);}}

/* k7743 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)stub350(C_SCHEME_UNDEFINED,t1))){
t2=((C_word*)t0)[3];
f_33105(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[748],((C_word*)t0)[2]);}}

/* k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33108,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_string_equal_p(((C_word*)t0)[3],lf[736]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33117,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[737],"mp:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t3,lf[738]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[739]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[740]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33127,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t4,C_retrieve2(lf[741],"snd:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t4=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t4,lf[742]))?C_SCHEME_TRUE:C_SCHEME_FALSE))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33137,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[743]),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t5=((C_word*)t0)[3];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=(C_word)C_i_foreign_string_argumentp(t5);
C_trace("##sys#make-c-string");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}
else{
t7=t6;
f_8159(2,t7,C_SCHEME_FALSE);}}}}}

/* k8157 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8159,2,t0,t1);}
t2=(C_word)stub555(C_SCHEME_UNDEFINED,t1);
t3=(C_word)C_i_nequalp(t2,C_fix(0));
t4=(C_word)C_i_not(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=t5;
f_33147(t6,t4);}
else{
t6=(C_word)C_i_string_equal_p(((C_word*)t0)[2],lf[746]);
t7=t5;
f_33147(t7,(C_truep(t6)?(C_word)C_i_string_equal_p(((C_word*)t0)[4],lf[747]):C_SCHEME_FALSE));}}

/* k33145 in k8157 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_33147(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33147,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33150,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t2,C_retrieve(lf[744]),((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[745],((C_word*)t0)[3]);}}

/* k33148 in k33145 in k8157 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(4));
t3=((C_word*)t0)[2];
f_33108(2,t3,t2);}

/* k33135 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(3));
t3=((C_word*)t0)[2];
f_33108(2,t3,t2);}

/* k33125 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(2));
t3=((C_word*)t0)[2];
f_33108(2,t3,t2);}

/* k33115 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_33108(2,t3,t2);}

/* k33106 in k33103 in k33100 in k33097 in open-file in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=(C_word)stub294(C_SCHEME_UNDEFINED,t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}

/* ports in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33071,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t4=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,(C_word)stub377(t3),C_fix(0));}

/* k33069 in ports in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   read-from-string");
f_7107(((C_word*)t0)[2],t1);}

/* sal:open in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33043(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33043,2,t0,t1);}
C_trace("ChickenBridge.scm: 87   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[733]);}

/* sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32994,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32998,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=t2;
if(C_truep((C_word)C_i_stringp(t4))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7731,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}
else{
t6=t5;
f_7731(2,t6,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[731],t4);}}

/* k7729 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_32998(2,t2,(C_word)stub344(C_SCHEME_UNDEFINED,t1));}

/* k32996 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33001,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33017,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33041,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[727],((C_word*)t0)[2],lf[728]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33014,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[729],((C_word*)t0)[2],lf[730]);}}

/* k33012 in k32996 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33039 in k32996 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33015 in k32996 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33037,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pathname-type");
f_25314(t2,((C_word*)t0)[2]);}

/* k33035 in k33015 in k32996 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33037,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(lf[724],t1))){
C_trace("ChickenBridge.scm: 87   load-sal-file");
t2=C_retrieve(lf[725]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33033,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   full-pathname");
f_25356(t2,((C_word*)t0)[2]);}}

/* k33031 in k33035 in k33015 in k32996 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   load");
t2=C_retrieve(lf[726]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32999 in k32996 in sal:load in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_33001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32985(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32985,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32989,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   chdir");
t4=C_retrieve(lf[563]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k32987 in sal:chdir in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32832(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_32832r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32832r(t0,t1,t2);}}

static void C_ccall f_32832r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32835,a[2]=t4,a[3]=((C_word)li477),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32954,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32959,a[2]=t4,a[3]=t8,a[4]=((C_word)li478),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_32959(t10,t6,t2);}

/* do5605 in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32959(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32959,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 87   print-output");
t3=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[721]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32972,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_32835(t5,t3,t4,C_fix(0),C_SCHEME_FALSE);}}

/* k32970 in do5605 in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32959(t3,((C_word*)t0)[2],t2);}

/* k32952 in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32835(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32835,NULL,5,t0,t1,t2,t3,t4);}
t5=t2;
if(C_truep(t5)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 87   print-output");
t6=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[714]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32863,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   print-output");
t7=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[717]);}
else{
t6=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 87   print-output");
t7=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,lf[718]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32935,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   number->string");
C_number_to_string(3,0,t7,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 87   print-output");
t7=C_retrieve(lf[60]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t4);}
else{
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32951,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   format");
t8=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t8))(5,t8,t7,C_SCHEME_FALSE,lf[719],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 87   print-output");
t6=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[720]);}}

/* k32949 in printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32933 in printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32861 in printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32866,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li476),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_32871(t6,t2,((C_word*)t0)[2]);}

/* do5597 in k32861 in printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32871(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32871,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32881,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 87   printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_32835(t6,t3,t4,t5,C_SCHEME_TRUE);}}

/* k32879 in do5597 in k32861 in printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_32884(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 87   print-output");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[716]);}}

/* k32882 in k32879 in do5597 in k32861 in printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32871(t3,((C_word*)t0)[2],t2);}

/* k32864 in k32861 in printer in sal:print in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[715]);}

/* tokenize in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32673(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32673,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32677,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t3)[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32695,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)t3)[1];
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7795,a[2]=t5,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t9=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t10=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}
else{
t9=t8;
f_7795(2,t9,C_SCHEME_FALSE);}}
else{
t5=t4;
f_32677(t5,C_SCHEME_UNDEFINED);}}

/* k7793 in tokenize in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub371(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* k32693 in tokenize in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   read-from-string");
f_7107(t2,t1);}

/* k32697 in k32693 in tokenize in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32677(t3,t2);}

/* k32675 in tokenize in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[642],"list->token"),((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}}

/* sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32189(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+59)){
C_save_and_reclaim((void*)tr3r,(void*)f_32189r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32189r(t0,t1,t2,t3);}}

static void C_ccall f_32189r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word *a=C_alloc(59);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(36608);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=t3;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_32193,a[2]=t15,a[3]=t13,a[4]=t19,a[5]=t11,a[6]=t3,a[7]=t17,a[8]=t9,a[9]=t7,a[10]=t2,a[11]=t5,a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t17)[1]))){
t21=t20;
f_32193(t21,C_SCHEME_UNDEFINED);}
else{
t21=(C_word)C_i_car(((C_word*)t17)[1]);
t22=(C_word)C_eqp(t21,lf[710]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32551,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[710]);}
else{
t24=t23;
f_32551(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t21,lf[711]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32586,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[711]);}
else{
t25=t24;
f_32586(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(C_word)C_eqp(t21,lf[712]);
if(C_truep(t24)){
t25=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32621,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t15,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t26=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[118],lf[712]);}
else{
t26=t25;
f_32621(2,t26,C_SCHEME_UNDEFINED);}}
else{
t25=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32650,a[2]=t20,a[3]=t11,a[4]=t5,a[5]=t17,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t26=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[109],t3);}
else{
t26=t25;
f_32650(2,t26,C_SCHEME_UNDEFINED);}}}}}}

/* k32648 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32650,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32665,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32663 in k32648 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32657(2,t2,C_SCHEME_UNDEFINED);}}

/* k32655 in k32648 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32193(t5,t4);}

/* k32619 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32625,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32625(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32623 in k32619 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32193(t7,t6);}

/* k32584 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32590,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32590(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32588 in k32584 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32193(t7,t6);}

/* k32549 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32555(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32553 in k32549 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32193(t7,t6);}

/* k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32193(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32193,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_32196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32196(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[710]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32416,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[710]);}
else{
t6=t5;
f_32416(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[711]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32451,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[711]);}
else{
t7=t6;
f_32451(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[712]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32486,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[712]);}
else{
t8=t7;
f_32486(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32515,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_32515(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32513 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32515,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32530,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32528 in k32513 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32522(2,t2,C_SCHEME_UNDEFINED);}}

/* k32520 in k32513 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32196(t5,t4);}

/* k32484 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32490,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32490(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32488 in k32484 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32196(t7,t6);}

/* k32449 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32455,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32455(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32453 in k32449 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32196(t7,t6);}

/* k32414 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32416,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32420,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32420(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32418 in k32414 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32196(t7,t6);}

/* k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32196,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32199,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32199(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[710]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32281,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[710]);}
else{
t6=t5;
f_32281(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[711]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32316,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[711]);}
else{
t7=t6;
f_32316(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[712]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32351,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[712]);}
else{
t8=t7;
f_32351(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32380,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_32380(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32378 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32380,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32387,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32395,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32393 in k32378 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32387(2,t2,C_SCHEME_UNDEFINED);}}

/* k32385 in k32378 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32199(t5,t4);}

/* k32349 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32355,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32355(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32353 in k32349 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32199(t7,t6);}

/* k32314 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32320,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32320(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32318 in k32314 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32199(t7,t6);}

/* k32279 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32285(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32283 in k32279 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32199(t7,t6);}

/* k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32199,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32202,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32202(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_not(((C_word*)((C_word*)t0)[5])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32253,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   tokenize");
f_32673(t5,((C_word*)t0)[4]);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32257,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   tokenize");
f_32673(t5,((C_word*)((C_word*)t0)[5])[1]);}}

/* k32255 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32205(t3,t2);}

/* k32251 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32205(t3,t2);}

/* k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32205,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32208,a[2]=((C_word*)t0)[6],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_32208(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32217,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29993,a[2]=t5,a[3]=t4,a[4]=((C_word)li473),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   call/cc");
t8=*((C_word*)lf[708]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t3,t7);}}

/* a29992 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29993(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29993,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29999,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li471),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30006,a[2]=t2,a[3]=((C_word)li472),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a30005 in a29992 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30006,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30013,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_30013(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_30013(t6,C_SCHEME_FALSE);}}

/* k30011 in a30005 in a29992 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30013(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30013,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29593(t2,lf[705],lf[706],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29419(((C_word*)t0)[4],lf[707],C_retrieve2(lf[682],"*maxtokpos*"));}}

/* k30018 in k30011 in a30005 in a29992 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29998 in a29992 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29999,2,t0,t1);}
t2=lf[682]=C_fix(0);;
C_trace("ChickenBridge.scm: 87   parser");
f_30031(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32217,2,t0,t1);}
t2=t1;
if(C_truep((C_word)C_i_structurep(t2,lf[657]))){
t3=((C_word*)t0)[4];
t4=t1;
t5=(C_word)C_i_string_length(t3);
t6=(C_word)C_i_check_structure(t4,lf[657]);
t7=(C_word)C_i_block_ref(t4,C_fix(2));
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32714,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=t7,a[7]=t12,a[8]=t10,tmp=(C_word)a,a+=9,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32801,a[2]=t3,a[3]=t15,a[4]=t10,a[5]=((C_word)li470),tmp=(C_word)a,a+=6,tmp));
t17=((C_word*)t15)[1];
f_32801(t17,t13,C_SCHEME_FALSE);}
else{
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 87   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[3],C_SCHEME_TRUE,lf[702],t1);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32239,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   interaction-environment");
t4=C_retrieve(lf[704]);
((C_proc2)C_retrieve_proc(t4))(2,t4,t3);}}}

/* k32237 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   eval");
t2=C_retrieve(lf[703]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do5569 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32801(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32801,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32811,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_32811(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_32811(t11,t10);}}}

/* k32809 in do5569 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_32801(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32714,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32722,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32771,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li469),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_32771(t9,t5,C_SCHEME_FALSE);}

/* do5576 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32771(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32771,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32781,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_32781(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_32781(t11,t10);}}}

/* k32779 in do5576 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_32781(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_32771(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k32720 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32725,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32732,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_check_structure(((C_word*)t0)[6],lf[657]);
t5=(C_word)C_i_block_ref(((C_word*)t0)[6],C_fix(1));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=t3,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   make-string");
t7=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(1),C_make_character(10));}

/* k32738 in k32720 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32744,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   substring");
t3=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k32742 in k32738 in k32720 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32748,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   make-string");
t3=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k32746 in k32742 in k32738 in k32720 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32748,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32755,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 87   make-string");
t5=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k32753 in k32746 in k32742 in k32738 in k32720 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32755,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 87   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[701],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32730 in k32720 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32723 in k32720 in k32712 in k32215 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* k32206 in k32203 in k32200 in k32197 in k32194 in k32191 in sal in k32185 in k32182 in k32179 in k32176 in k32173 in k31642 in k31639 in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_32208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}

/* sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31120,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31127,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_31133,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t33,t34,C_fix(23296));}

/* k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31133,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31137,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_31183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,t3,C_fix(10756));}}

/* k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31183,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_31187,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_31280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,t3,C_fix(22784));}}

/* k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31280,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31284,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31348,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31348,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31355,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31605,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_31355(t8,t7);}}

/* k31603 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31355(t3,t2);}

/* k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31355,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31358,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31593,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k31591 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31358(t3,t2);}

/* k31542 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31544,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31550,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k31548 in k31542 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31550,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31574,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t3=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_31358(t4,t3);}}

/* k31572 in k31548 in k31542 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31574,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31558,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31570,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t6=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k31568 in k31572 in k31548 in k31542 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k31556 in k31572 in k31548 in k31542 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31358(t3,t2);}

/* k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31358,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_31361(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31520,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[699]);}}

/* k31518 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31524,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31522 in k31518 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31361(t4,t3);}

/* k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31361(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31361,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_31364(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31497,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[698]);}}

/* k31495 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31501,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31499 in k31495 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31364(t4,t3);}

/* k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31364,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_31367(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31474,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[697]);}}
else{
t3=t2;
f_31367(t3,C_SCHEME_UNDEFINED);}}

/* k31472 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31478,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31476 in k31472 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31367(t4,t3);}

/* k31365 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31367,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31370,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31399,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_31370(t7,t6);}}

/* k31397 in k31365 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31399,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[181],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31370(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k31415 in k31397 in k31365 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31417,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[182],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31370(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k31433 in k31415 in k31397 in k31365 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31435,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[175],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31370(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k31451 in k31433 in k31415 in k31397 in k31365 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31453,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[178],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[175],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31370(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_31370(t2,C_SCHEME_UNDEFINED);}}

/* k31368 in k31365 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31370(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31370,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31374,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k31372 in k31368 in k31365 in k31362 in k31359 in k31356 in k31353 in k31346 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31127(t3,t2);}

/* k31282 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31284,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31288,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k31286 in k31282 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31288,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31292,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[696]);}

/* k31290 in k31286 in k31282 in k31278 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31292,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[104],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[63],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_31127(t12,t11);}

/* k31185 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31187,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_31191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k31189 in k31185 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31191,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31195,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k31193 in k31189 in k31185 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31195,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31198,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31214,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_31198(t6,t5);}}

/* k31212 in k31193 in k31189 in k31185 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31214,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31218,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[695]);}

/* k31216 in k31212 in k31193 in k31189 in k31185 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31218,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[216],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[119],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_31198(t12,t11);}

/* k31196 in k31193 in k31189 in k31185 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31202,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k31200 in k31196 in k31193 in k31189 in k31185 in k31181 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31127(t3,t2);}

/* k31135 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31137,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31141,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[694]);}

/* k31139 in k31135 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31141,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[693]);}

/* k31143 in k31139 in k31135 in k31131 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31145,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[181],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_31127(t10,t9);}

/* k31125 in sal-parse-stepping in k31116 in k31113 in k31110 in k31107 in k31104 in k31101 in k31098 in k31095 in k31092 in k31089 in k31086 in k31083 in k31080 in k31077 in k31074 in k31071 in k31068 in k31065 in k31062 in k31059 in k31056 in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31127(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30942(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30942,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30954,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li466),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_30954(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30954,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30973,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   is-op?");
f_30921(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k30971 in do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30973,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30976,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30991,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li465),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_30991(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_30976(2,t5,t4);}}

/* do5135 in k30971 in do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30991(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30991,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31005,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31019,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   reverse");
t12=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31023,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 87   is-op?");
f_30921(t10,t11);}}

/* k31021 in do5135 in k30971 in do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31023,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31026,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_31026(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_31026(t10,t9);}}

/* k31024 in k31021 in do5135 in k30971 in do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_31026(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_30991(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k31017 in do5135 in k30971 in do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   inf->pre");
f_30942(((C_word*)t0)[2],t1);}

/* k31003 in do5135 in k30971 in do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_31005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31005,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k30974 in k30971 in do5133 in inf->pre in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_30954(t2,((C_word*)t0)[2]);}

/* is-op? in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30921(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30921,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30928,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   token-unit?");
f_29533(t3,t2);}

/* k30926 in is-op? in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30928,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30931,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29488(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k30929 in k30926 in is-op? in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30937,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   SalOpType?");
f_30698(t2,t1);}

/* k30935 in k30929 in k30926 in is-op? in k30917 in k30914 in k30911 in k30908 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
C_trace("ChickenBridge.scm: 87   logand");
t4=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(255));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30856(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30856,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30865,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li462),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_30865(t10,t1,t2);}

/* do5099 in remove-token-type in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30865(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30865,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30878,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30888,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29549(t4,t5,((C_word*)t0)[2]);}}

/* k30886 in do5099 in remove-token-type in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30888,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30878(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_30878(t7,t6);}}

/* k30876 in do5099 in remove-token-type in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30831 in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30878(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30865(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30812(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30812,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30820,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ash");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_fix(-8));}

/* k30818 in SalType=? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30824,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ash");
t3=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(-8));}

/* k30822 in k30818 in SalType=? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* SalRuleType? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30800(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30800,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30698(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30698,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30650(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30650,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30031(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30031,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30035,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 87   format");
t10=C_retrieve(lf[431]);
((C_proc7)C_retrieve_proc(t10))(7,t10,t9,C_SCHEME_TRUE,lf[688],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_30035(2,t10,C_SCHEME_UNDEFINED);}}

/* k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   null-tokens?");
f_29165(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30041,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_30041(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30456,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30460,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30464,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   first-token");
f_29153(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k30462 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   token-position");
f_29121(((C_word*)t0)[2],t1);}

/* k30458 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   max");
t2=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[682],"*maxtokpos*"),t1);}

/* k30454 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[682],t1);
t3=((C_word*)t0)[2];
f_30041(t3,t2);}

/* k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30041(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30041,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   pattern-value");
t4=C_retrieve2(lf[352],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30164,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29301(t3,((C_word*)t0)[8]);}}

/* k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30164,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29346,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29301(t4,t3);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[687],((C_word*)t0)[2]);}}

/* k29344 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30170(t3,(C_word)C_eqp(t2,lf[245]));}
else{
t2=((C_word*)t0)[2];
f_30170(t2,C_SCHEME_FALSE);}}

/* k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30170,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30179,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 87   pattern-nsubs");
f_29319(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29362,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29301(t5,t4);}}

/* k29360 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30258(t3,(C_word)C_eqp(t2,lf[268]));}
else{
t2=((C_word*)t0)[2];
f_30258(t2,C_SCHEME_FALSE);}}

/* k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30258,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 87   pattern-nsubs");
f_29319(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30328,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   pattern-zero-or-more?");
f_29387(t2,((C_word*)t0)[2]);}}

/* k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_30331(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29378,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29301(t4,t3);}}

/* k29376 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30331(t3,(C_word)C_eqp(t2,lf[179]));}
else{
t2=((C_word*)t0)[2];
f_30331(t2,C_SCHEME_FALSE);}}

/* k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30331(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30331,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30337,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li454),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_30360(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29410,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29301(t4,t3);}}

/* k29408 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30409(t3,(C_word)C_eqp(t2,lf[686]));}
else{
t2=((C_word*)t0)[2];
f_30409(t2,C_SCHEME_FALSE);}}

/* k30407 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30409,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30418,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li455),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30435,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li456),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[685],t3);}}

/* a30434 in k30407 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30435(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30435,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30428 in k30407 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30429,2,t0,t1);}
C_trace("ChickenBridge.scm: 87   parser");
f_30031(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30416 in k30407 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4836 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30360(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30360,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_30370(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 87   null-tokens?");
f_29165(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k30368 in do4836 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30370,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30373,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li452),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30396,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li453),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a30395 in k30368 in do4836 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30396(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30396,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30389 in k30368 in do4836 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30390,2,t0,t1);}
C_trace("ChickenBridge.scm: 87   parser");
f_30031(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30371 in k30368 in do4836 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30376,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30383,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_30376(t3,C_SCHEME_UNDEFINED);}}

/* k30381 in k30371 in k30368 in do4836 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30383,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_30376(t6,t5);}

/* k30374 in k30371 in k30368 in do4836 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_30360(t2,((C_word*)t0)[2]);}

/* k30335 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30340,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30346,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   pattern-zero-or-more?");
f_29387(t3,((C_word*)t0)[2]);}

/* k30344 in k30335 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_30340(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_30340(t5,t4);}}

/* k30338 in k30335 in k30329 in k30326 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30340(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k30262 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30267,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_30282,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li451),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_30282(t6,t2,C_fix(0));}

/* do4816 in k30262 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30282(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30282,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30292,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30301,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li449),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30315,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li450),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a30314 in do4816 in k30262 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30315,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30300 in do4816 in k30262 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30309,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   pattern-sub");
f_29329(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30307 in a30300 in do4816 in k30262 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30309,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 87   parser");
f_30031(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30290 in do4816 in k30262 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30292,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_30282(t3,((C_word*)t0)[2],t2);}

/* k30265 in k30262 in k30256 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30179,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30182,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li448),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_30201(t8,t4,C_fix(0));}

/* do4794 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30201(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30201,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30214,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30234,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li446),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30248,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li447),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a30247 in do4794 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30248(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30248,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30233 in do4794 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30242,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   pattern-sub");
f_29329(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30240 in a30233 in do4794 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30242,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 87   parser");
f_30031(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30212 in do4794 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30217,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_30217(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_30217(t5,t4);}}

/* k30215 in k30212 in do4794 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30217(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30217,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_30201(t3,((C_word*)t0)[2],t2);}

/* k30180 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30185,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_30185(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30199,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   reverse");
t5=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k30197 in k30180 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30185(t3,t2);}

/* k30183 in k30180 in k30177 in k30168 in k30162 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_30185(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30056,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   SalTokenType?");
f_30650(t2,t1);}

/* k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30056,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30062,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   null-tokens?");
f_29165(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30114,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   SalRuleType?");
f_30800(t2,((C_word*)t0)[5]);}}

/* k30112 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30114,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   get-rule");
f_29280(t2,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[684],((C_word*)t0)[2]);}}

/* k30115 in k30112 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30117,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[648]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[648]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li444),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30138,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li445),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a30137 in k30115 in k30112 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30138,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30149,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 87   func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_30149(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k30147 in a30137 in k30115 in k30112 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a30127 in k30115 in k30112 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30128,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 87   parser");
f_30031(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30060 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30062,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   first-token");
f_29153(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k30070 in k30060 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30078,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30108,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   token-type");
f_29085(t3,t1);}

/* k30106 in k30070 in k30060 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k30076 in k30070 in k30060 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30078,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30093,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   token-type");
f_29085(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k30091 in k30076 in k30070 in k30060 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30093,2,t0,t1);}
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[639]);
t4=(C_word)C_i_block_ref(t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30101,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-position");
f_29121(t5,((C_word*)t0)[3]);}

/* k30099 in k30091 in k30076 in k30070 in k30060 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30083 in k30076 in k30070 in k30060 in k30054 in k30048 in k30039 in k30036 in k30033 in parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_30085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29927(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29927,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29929,a[2]=t2,a[3]=((C_word)li442),tmp=(C_word)a,a+=4,tmp));}

/* f_29929 in simple-unit-emitter in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29929,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29933,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29977,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t6,t2);}

/* k29975 */
static void C_ccall f_29977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k29931 */
static void C_ccall f_29933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29933,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29936,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_29936(t9,t8);}
else{
t6=t5;
f_29936(t6,C_SCHEME_UNDEFINED);}}

/* k29934 in k29931 */
static void C_fcall f_29936(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29936,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29941,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li441),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_29941(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do4751 in k29934 in k29931 */
static void C_fcall f_29941(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29941,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29962,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k29960 in do4751 in k29934 in k29931 */
static void C_ccall f_29962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_29941(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29919(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29919,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29921,a[2]=t2,a[3]=((C_word)li439),tmp=(C_word)a,a+=4,tmp));}

/* f_29921 in simple-unit-parser in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29921,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29467(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29742(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_29742r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29742r(t0,t1,t2);}}

static void C_ccall f_29742r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29750,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[231]+1),t2);}

/* k29748 in != in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29711(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29711,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29728,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29678(t5,t6,t3,t4);}}

/* k29726 in emit-list in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29732,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit-list");
f_29711(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29730 in k29726 in emit-list in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29732,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29678(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29678,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29685,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   token-unit?");
f_29533(t5,t2);}

/* k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29685,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29756,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29488(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29694,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29572,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit?");
f_29473(t4,t3);}}

/* k29570 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29572,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29579,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29488(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_29694(2,t2,C_SCHEME_FALSE);}}

/* k29577 in k29570 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalRuleType?");
f_30800(((C_word*)t0)[2],t1);}

/* k29692 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29694,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29894,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29917,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29488(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 87   emit-list");
f_29711(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[677],((C_word*)t0)[4]);}}}

/* k29915 in k29692 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   get-rule");
f_29280(((C_word*)t0)[2],t1);}

/* k29892 in k29692 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29894,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[648]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 87   meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t4,((C_word*)t0)[4]);}}

/* k29908 in k29892 in k29692 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29678(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29506(t2,((C_word*)t0)[2]);}

/* k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29759,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 87   string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 87   string->symbol");
t8=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalOpType?");
f_30698(t8,((C_word*)t0)[4]);}}}

/* k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29783,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29789,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29834,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29840,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k29838 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29840,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29846,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k29844 in k29838 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29846,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k29853 in k29844 in k29838 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29855,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29864,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k29862 in k29853 in k29844 in k29838 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29864,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k29871 in k29862 in k29853 in k29844 in k29838 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29873,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[673],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k29880 in k29871 in k29862 in k29853 in k29844 in k29838 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[674],((C_word*)t0)[2]);}}

/* k29832 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k29787 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29789,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[452]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29795,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k29793 in k29787 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29795,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[473]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k29799 in k29793 in k29787 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29801,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[17]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29807,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k29805 in k29799 in k29793 in k29787 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29807,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[245]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k29811 in k29805 in k29799 in k29793 in k29787 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29813,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[268]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k29817 in k29811 in k29805 in k29799 in k29793 in k29787 in k29781 in k29757 in k29754 in k29683 in emit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[211]);}
else{
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29660(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29660,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29667,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_29667(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 87   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[671],t2);}}

/* k29665 in set-emit-info! in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29593(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29593,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29581(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29581,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29549(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29549,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29556,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-unit?");
f_29533(t4,t2);}

/* k29554 in token-unit-type=? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29556,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29488(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29561 in k29554 in token-unit-type=? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30812(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29533(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29533,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29540,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit?");
f_29473(t3,t2);}

/* k29538 in token-unit? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29540,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29547,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29488(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29545 in k29538 in token-unit? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalTokenType?");
f_30650(((C_word*)t0)[2],t1);}

/* parse-unit-position in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29524(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29524,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[659]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29506(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29506,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[659]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29488(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29488,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[659]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29473(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29473,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[659]));}

/* make-parse-unit in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29467(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29467,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[659],t2,t3,t4));}

/* make-parse-error in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29419(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29419,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[657],t2,t3));}

/* pattern-zero-or-more? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29387(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29387,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29394,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29301(t3,t2);}

/* k29392 in pattern-zero-or-more? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[411]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29329(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29329,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29337,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-subs");
f_29313(t4,t2);}

/* k29335 in pattern-sub in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29319(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29319,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29327,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   pattern-subs");
f_29313(t3,t2);}

/* k29325 in pattern-nsubs in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29313(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29313,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29301(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29301,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29298(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29298,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29280(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29280,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29284,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[646],"*rules*"),t2);}

/* k29282 in get-rule in k29276 in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[650],((C_word*)t0)[2]);}}

/* make-rule in k29171 in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29175(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29175,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[648],t2,t3,t4,t5,t6));}

/* null-tokens? in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29165(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29165,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29153(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29153,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29130(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29130,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[643]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[638],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[638],"make-token"),t2);}}

/* token-position in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29121(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29121,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[639]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-type in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29085(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29085,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[639]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29064(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29064,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[639],t2,t3,t4));}

/* export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28868(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28868,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28872,a[2]=t3,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_28872(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_28872(t8,t7);}}

/* k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28872,NULL,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_length(((C_word*)((C_word*)t0)[4])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28878,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t4,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29021,a[2]=t7,a[3]=t3,a[4]=((C_word)li409),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_29021(t9,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* do4510 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_29021(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29021,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29032,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29047,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t6=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k29045 in do4510 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_length(t1);
C_trace("ChickenBridge.scm: 86   max");
t3=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k29030 in do4510 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_29021(t4,((C_word*)t0)[2],t3);}

/* k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28883,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word)li408),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   with-output-to-file");
t3=C_retrieve(lf[637]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   current-output-port");
t3=*((C_word*)lf[636]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,lf[635]);}

/* k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28890,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[6],lf[634]);}

/* k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[6],lf[633],((C_word*)((C_word*)t0)[2])[1]);}

/* k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[5],lf[632],((C_word*)t0)[2]);}

/* k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[4],lf[631]);}

/* k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28902,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28907,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li407),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28907(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28907(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28907,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28917,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29001,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   spectrum-time");
t7=C_retrieve(lf[572]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k28999 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29001,2,t0,t1);}
t2=(C_truep(t1)?t1:(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[629]));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29008,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t5=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k29006 in k28999 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_29008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   format");
t2=C_retrieve(lf[431]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[630],((C_word*)t0)[2],t1);}

/* k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28938,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t5=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k28936 in k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28942,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k28940 in k28936 in k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28946,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t4=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k28944 in k28940 in k28936 in k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28946,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28948,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word)li406),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28948(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do4522 in k28944 in k28940 in k28936 in k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28948(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28948,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_less_or_equalp(t4,C_fix(0)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28958,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(C_word)C_a_i_minus(&a,2,t4,C_fix(1));
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 86   format");
t9=C_retrieve(lf[431]);
((C_proc7)C_retrieve_proc(t9))(7,t9,t5,((C_word*)t0)[2],lf[628],t6,t7,t8);}}

/* k28956 in do4522 in k28944 in k28940 in k28936 in k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28958,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
t5=((C_word*)((C_word*)t0)[3])[1];
f_28948(t5,((C_word*)t0)[2],t2,t3,t4);}

/* k28918 in k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],lf[627]);}

/* k28921 in k28918 in k28915 in do4516 in k28900 in k28897 in k28894 in k28891 in k28888 in k28885 in a28882 in k28876 in k28870 in export-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28923,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_28907(t4,((C_word*)t0)[2],t2,t3);}

/* import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28742,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28748,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   with-input-from-file");
t4=C_retrieve(lf[625]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28752,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   current-input-port");
t3=*((C_word*)lf[624]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28753,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28770,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   rhdr");
f_28753(t5,t1);}

/* k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28770,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[622]))){
t4=t3;
f_28773(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[623],((C_word*)t0)[4]);}}

/* k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   rhdr");
f_28753(t2,((C_word*)t0)[4]);}

/* k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28777,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28780,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[620]))){
t4=t3;
f_28780(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[621],((C_word*)t0)[4]);}}

/* k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28783,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28832,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li403),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28832(t6,t2);}

/* do4487 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28832(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28832,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[619]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28843,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   rhdr");
f_28753(t2,((C_word*)t0)[2]);}}

/* k28841 in do4487 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28832(t3,((C_word*)t0)[2]);}

/* k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28783,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28793,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   read-line");
t6=C_retrieve(lf[616]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28793,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28795,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li402),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_28795(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28795(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28795,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28639,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   open-input-string");
t8=C_retrieve(lf[618]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28640,a[2]=((C_word*)t0)[3],a[3]=((C_word)li400),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28663,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t10=t2;
f_28640(t10,t9,t1);}

/* k28661 in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28663,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t4=((C_word*)t0)[3];
f_28640(t4,t3,((C_word*)t0)[2]);}

/* k28665 in k28661 in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28667,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28670,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li401),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_28693(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do4466 in k28665 in k28661 in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28693(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28693,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28703,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t8=((C_word*)t0)[3];
f_28640(t8,t7,((C_word*)t0)[2]);}}

/* k28701 in do4466 in k28665 in k28661 in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t3=((C_word*)t0)[3];
f_28640(t3,t2,((C_word*)t0)[2]);}

/* k28738 in k28701 in do4466 in k28665 in k28661 in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28740,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28732,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t7=((C_word*)t0)[3];
f_28640(t7,t6,((C_word*)t0)[2]);}

/* k28730 in k28738 in k28701 in do4466 in k28665 in k28661 in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28732,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_28693(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28668 in k28665 in k28661 in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_28809(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25401(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28640(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28640,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28644,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   read");
t4=*((C_word*)lf[26]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k28642 in rdat in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28644,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28647,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 86   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[617],((C_word*)t0)[2]);}
else{
t3=t2;
f_28647(2,t3,C_SCHEME_UNDEFINED);}}

/* k28645 in k28642 in rdat in k28637 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k28807 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28809,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_28812(t8,t7);}
else{
t4=t3;
f_28812(t4,C_SCHEME_UNDEFINED);}}

/* k28810 in k28807 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28812(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28812,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   read-line");
t3=C_retrieve(lf[616]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k28817 in k28810 in k28807 in do4497 in k28791 in k28781 in k28778 in k28775 in k28771 in k28768 in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_28795(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28753(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28753,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28757,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   read-line");
t4=C_retrieve(lf[616]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k28755 in rhdr in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28760,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 86   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[615],((C_word*)t0)[2]);}
else{
t3=t2;
f_28760(2,t3,C_SCHEME_UNDEFINED);}}

/* k28758 in k28755 in rhdr in k28750 in a28747 in import-spear-frames in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28229(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_28229r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28229r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28229r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28233,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 86   error");
t12=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[612]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28602,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28608,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_28608(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_28608(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_28233(2,t13,C_SCHEME_UNDEFINED);}}}

/* k28606 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28608(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_28602(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 86   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[613],t2);}}

/* k28600 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28233(2,t3,t2);}

/* k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28586,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k28584 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28586,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28236(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 86   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[611],((C_word*)((C_word*)t0)[3])[1]);}}

/* k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28568,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28572,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k28570 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28239(t3,t2);}

/* k28566 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28239(t3,t2);}

/* k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28239(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28239,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28557,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28561,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k28559 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_28242(t3,t2);}

/* k28555 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_28242(t3,t2);}

/* k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28242,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_28245(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_28245(t4,t3);}}

/* k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28245(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28245,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28248,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28259,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li389),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28259(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28289,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li390),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28289(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28545,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=*((C_word*)lf[610]+1);
t6=((C_word*)((C_word*)t0)[5])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8839,a[2]=t5,a[3]=t8,a[4]=((C_word)li397),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8839(t10,t4,t6,C_SCHEME_TRUE);}}

/* do759 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8839(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8839,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8852,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8862,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k8860 in do759 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_8852(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_8852(t3,t2);}}

/* k8850 in do759 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8852(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_8839(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28545,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_28309(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28529,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minamp");
t12=C_retrieve(lf[584]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28537,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minfreq");
t12=C_retrieve(lf[582]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k28535 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28537,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxfreq");
t4=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28539 in k28535 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28403(t3,t2);}

/* k28527 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28529,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxamp");
t4=C_retrieve(lf[586]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28531 in k28527 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28403(t3,t2);}

/* k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28403,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28406,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28510,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minamp");
t4=C_retrieve(lf[584]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28518,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minfreq");
t4=C_retrieve(lf[582]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k28516 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28518,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxfreq");
t4=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28520 in k28516 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28406(t3,t2);}

/* k28508 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28510,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxamp");
t4=C_retrieve(lf[586]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28512 in k28508 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28406(t3,t2);}

/* k28404 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28406,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k28408 in k28404 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28410,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li396),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_28415(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do4429 in k28408 in k28404 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28415(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28415,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28425,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_28425(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_28425(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k28423 in do4429 in k28408 in k28404 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28425(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28425,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28428,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[609],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_28428(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_28428(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_28428(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k28426 in k28423 in do4429 in k28408 in k28404 in k28401 in k28543 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28415(t3,((C_word*)t0)[2],t2);}

/* k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28312,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28334,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li394),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28334(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28372,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li395),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28372(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4443 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28372(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28372,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28393,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   interp");
t5=C_retrieve(lf[487]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28391 in do4443 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28372(t4,((C_word*)t0)[2],t3);}

/* do4438 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28334(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28334,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28363,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   interp");
t6=C_retrieve(lf[487]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28361 in do4438 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28363,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_28334(t5,((C_word*)t0)[2],t4);}

/* k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28329,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28327 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[177]+1),t1);}

/* k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28325,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_28248(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27695,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27767,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27775,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t6=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k27773 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27779,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27777 in k27773 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   map");
t2=*((C_word*)lf[608]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a27766 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27767(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27767,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k27693 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27695,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27753,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   sort!");
t6=C_retrieve(lf[589]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a27752 in k27693 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27753,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k27697 in k27693 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27699,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27707,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li391),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_27707(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do4314 in k27697 in k27693 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27707(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27707,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27717,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25449(t4,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_set_car(t2,t5);
t11=(C_word)C_i_cdr(t2);
t14=t1;
t15=t11;
t16=t3;
t1=t14;
t2=t15;
t3=t16;
goto loop;}}

/* k27715 in do4314 in k27697 in k27693 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27720,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps-set!");
f_25467(t2,((C_word*)t0)[3],t3);}

/* k27718 in k27715 in do4314 in k27697 in k27693 in k28323 in k28310 in k28307 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do4416 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28289(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28289,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do4411 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28259(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_28259,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k28246 in k28243 in k28240 in k28237 in k28234 in k28231 in spectrum-rescale! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28172(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28172,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28180,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxfreq");
t4=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k28178 in spectrum-flip! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28184,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minfreq");
t3=C_retrieve(lf[582]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k28182 in k28178 in spectrum-flip! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28188,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t3=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k28186 in k28182 in k28178 in spectrum-flip! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28188,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28194,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li387),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28194(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do4392 in k28186 in k28182 in k28178 in spectrum-flip! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28194(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_28194,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28204,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25449(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k28202 in do4392 in k28186 in k28182 in k28178 in spectrum-flip! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27960(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27960,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27962,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27979,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27996,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28028,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 86   getfreqs");
f_27962(t7,t2);}

/* k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28031,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 86   getfreqs");
f_27962(t2,((C_word*)t0)[4]);}

/* k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 86   getamps");
f_27979(t2,((C_word*)t0)[2]);}

/* k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28037,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   getamps");
f_27979(t2,((C_word*)t0)[2]);}

/* k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28040,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25401(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28043,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28057,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li383),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28057(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28106,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li384),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28106(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28138,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li385),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28138(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27996(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do4385 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28138(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28138,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28148,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27996(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k28146 in do4385 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28138(t3,((C_word*)t0)[2],t2);}

/* do4380 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28106(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28106,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28116,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27996(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k28114 in do4380 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28106(t3,((C_word*)t0)[2],t2);}

/* do4370 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28057(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28057,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28067,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li382),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_28076(t7,t3,((C_word*)t0)[2]);}}

/* do4373 in do4370 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_28076(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28076,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28086,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27996(t3,((C_word*)t0)[2],t4,t5);}}

/* k28084 in do4373 in do4370 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28076(t3,((C_word*)t0)[2],t2);}

/* k28065 in do4370 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28057(t3,((C_word*)t0)[2],t2);}

/* k28041 in k28038 in k28035 in k28032 in k28029 in k28026 in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27996(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27996,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28006,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 86   spectrum-add!");
t7=C_retrieve(lf[600]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[605]);}}

/* k28004 in sums-and-diffs in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_28006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28006,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 86   spectrum-add!");
t4=C_retrieve(lf[600]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[604]);}

/* getamps in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27979(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27979,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27986,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum?");
f_25407(t3,t2);}

/* k27984 in getamps in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t2=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[602]:lf[603]));}}

/* getfreqs in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27962(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27962,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27969,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum?");
f_25407(t3,t2);}

/* k27967 in getfreqs in rm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t2=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27781(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27781,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27789,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t6=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27793,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27793,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27795,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li377),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_27795(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27795(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27795,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27805,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_27805(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_27805(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27805,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27808,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27820,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25449(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27851,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t8=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_27808(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25449(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27936,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t11=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_27795(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k27934 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27936,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25431(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27883 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27888,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps-set!");
f_25467(t2,((C_word*)t0)[4],t3);}

/* k27886 in k27883 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27897 in k27886 in k27883 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27899,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25431(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27849 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27851,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25431(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27818 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps-set!");
f_25467(t2,((C_word*)t0)[3],t3);}

/* k27821 in k27818 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25431(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k27806 in k27803 in do4330 in k27791 in k27787 in spectrum-add! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27375,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27689,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   round");
t7=*((C_word*)lf[472]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27689,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27388,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27618,a[2]=t9,a[3]=t8,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 86   -");
C_minus(3,0,t10,t3);}

/* k27616 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27618,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27620,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li375),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_27620(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4252 in k27616 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27620(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27620,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=t2;
t11=((C_word*)t0)[4];
t12=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t13=(C_word)C_i_foreign_fixnum_argumentp(t10);
t14=(C_word)C_i_foreign_flonum_argumentp(t11);
t15=(C_word)stub253(t12,t13,t14);
t16=C_set_block_item(t6,0,t15);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27642,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_nequalp(((C_word*)t6)[1],lf[598]);
t19=(C_truep(t18)?t18:(C_word)C_i_nequalp(((C_word*)t5)[1],lf[599]));
if(C_truep(t19)){
t20=t17;
f_27642(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_a_i_list(&a,2,((C_word*)t5)[1],((C_word*)t6)[1]);
t21=(C_word)C_a_i_list(&a,1,t20);
t22=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t21);
t23=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t24=C_mutate(((C_word *)((C_word*)t0)[2])+1,t23);
t25=t17;
f_27642(t25,t24);}}}

/* k27640 in do4252 in k27616 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27642,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27620(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27391,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27461,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li374),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27461(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4264 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27461(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27461,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27614,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   caar");
t7=*((C_word*)lf[597]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k27612 in do4264 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27614,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27598,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 86   -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k27596 in k27612 in do4264 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27598,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_27492(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27517,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27550,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li373),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_27550(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do4270 in k27596 in k27612 in do4264 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27550(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27550,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27564,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_27564(t14,t13);}
else{
t13=t12;
f_27564(t13,C_SCHEME_UNDEFINED);}}}

/* k27562 in do4270 in k27596 in k27612 in do4264 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27564(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27564,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27550(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27515 in k27596 in k27612 in do4264 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27517,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_27492(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_27492(t5,t4);}}

/* k27490 in k27596 in k27612 in do4264 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27492(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_27461(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27389 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27391,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27399,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li372),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_27399(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do4292 in k27389 in k27386 in k27687 in fm-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_27399(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27399,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25401(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t5);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_cadr(t5);
t9=(C_word)C_a_i_abs(&a,1,t8);
t10=(C_word)C_i_set_car(t7,t9);
t11=(C_word)C_i_cdr(t5);
t12=(C_word)C_i_set_cdr(t4,t11);
t13=(C_word)C_i_cdr(t4);
t14=t4=t13;
t15=(C_word)C_i_set_car(t2,t6);
t16=(C_word)C_i_cdr(t2);
t17=(C_word)C_a_i_plus(&a,2,t3,C_fix(1));
t20=t1;
t21=t16;
t22=t17;
t23=t4;
t1=t20;
t2=t21;
t3=t22;
t4=t23;
goto loop;}}

/* spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25902(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_25902r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_25902r(t0,t1,t2,t3);}}

static void C_ccall f_25902r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25906,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_25906(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[454]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27148,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[118],lf[454]);}
else{
t36=t35;
f_27148(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[593]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27183,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[118],lf[593]);}
else{
t37=t36;
f_27183(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[594]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27218,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[118],lf[594]);}
else{
t38=t37;
f_27218(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[595]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27253,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[118],lf[595]);}
else{
t39=t38;
f_27253(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[407]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27288,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[118],lf[407]);}
else{
t40=t39;
f_27288(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[408]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27323,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[118],lf[408]);}
else{
t41=t40;
f_27323(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27352,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[109],t3);}
else{
t41=t40;
f_27352(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k27350 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27352,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27359,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27367,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27365 in k27350 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27359(2,t2,C_SCHEME_UNDEFINED);}}

/* k27357 in k27350 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25906(t5,t4);}

/* k27321 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27327(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27325 in k27321 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25906(t7,t6);}

/* k27286 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27292(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27290 in k27286 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25906(t7,t6);}

/* k27251 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27257(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27255 in k27251 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25906(t7,t6);}

/* k27216 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27222(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27220 in k27216 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25906(t7,t6);}

/* k27181 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27187,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27187(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27185 in k27181 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25906(t7,t6);}

/* k27146 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27152,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27152(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27150 in k27146 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25906(t7,t6);}

/* k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25906(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25906,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25909(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26908,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_26908(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26943,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[593]);}
else{
t7=t6;
f_26943(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26978,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[594]);}
else{
t8=t7;
f_26978(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27013,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[595]);}
else{
t9=t8;
f_27013(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27048,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_27048(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27083,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_27083(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27112,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_27112(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k27110 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27112,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27127,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27125 in k27110 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27119(2,t2,C_SCHEME_UNDEFINED);}}

/* k27117 in k27110 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25909(t5,t4);}

/* k27081 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27087(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27085 in k27081 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25909(t7,t6);}

/* k27046 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27052,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27052(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27050 in k27046 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25909(t7,t6);}

/* k27011 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27017,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27017(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27015 in k27011 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_27017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25909(t7,t6);}

/* k26976 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26982,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26982(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26980 in k26976 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25909(t7,t6);}

/* k26941 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26947,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26947(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26945 in k26941 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25909(t7,t6);}

/* k26906 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26912(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26910 in k26906 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25909(t7,t6);}

/* k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25909(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25909,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25912,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25912(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26668,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_26668(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26703,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[593]);}
else{
t7=t6;
f_26703(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26738,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[594]);}
else{
t8=t7;
f_26738(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26773,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[595]);}
else{
t9=t8;
f_26773(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26808,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26808(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26843,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26843(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26872,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26872(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26870 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26872,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26887,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26885 in k26870 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26879(2,t2,C_SCHEME_UNDEFINED);}}

/* k26877 in k26870 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25912(t5,t4);}

/* k26841 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26847(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26845 in k26841 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25912(t7,t6);}

/* k26806 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26812(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26810 in k26806 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25912(t7,t6);}

/* k26771 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26777(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26775 in k26771 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25912(t7,t6);}

/* k26736 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26742,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26742(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26740 in k26736 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25912(t7,t6);}

/* k26701 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26707(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26705 in k26701 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25912(t7,t6);}

/* k26666 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26672(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26670 in k26666 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25912(t7,t6);}

/* k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25912(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25912,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25915,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25915(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26428,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_26428(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26463,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[593]);}
else{
t7=t6;
f_26463(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26498,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[594]);}
else{
t8=t7;
f_26498(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26533,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[595]);}
else{
t9=t8;
f_26533(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26568,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26568(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26603,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26603(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26632,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26632(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26630 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26632,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26647,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26645 in k26630 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26639(2,t2,C_SCHEME_UNDEFINED);}}

/* k26637 in k26630 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25915(t5,t4);}

/* k26601 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26607(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26605 in k26601 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25915(t7,t6);}

/* k26566 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26572(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26570 in k26566 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25915(t7,t6);}

/* k26531 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26535 in k26531 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25915(t7,t6);}

/* k26496 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26502,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26502(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26500 in k26496 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25915(t7,t6);}

/* k26461 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26467,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26467(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26465 in k26461 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25915(t7,t6);}

/* k26426 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26432,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26432(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26430 in k26426 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25915(t7,t6);}

/* k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25915(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25915,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25918(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26188,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_26188(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26223,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[593]);}
else{
t7=t6;
f_26223(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26258,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[594]);}
else{
t8=t7;
f_26258(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26293,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[595]);}
else{
t9=t8;
f_26293(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26328,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26328(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26363,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26363(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26392,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26392(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26390 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26392,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26399,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26407,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26405 in k26390 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26399(2,t2,C_SCHEME_UNDEFINED);}}

/* k26397 in k26390 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25918(t5,t4);}

/* k26361 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26367(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26365 in k26361 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25918(t7,t6);}

/* k26326 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26332(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26330 in k26326 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25918(t7,t6);}

/* k26291 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26297(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26295 in k26291 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25918(t7,t6);}

/* k26256 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26262(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26260 in k26256 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25918(t7,t6);}

/* k26221 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26227,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26227(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26225 in k26221 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25918(t7,t6);}

/* k26186 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26192(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26190 in k26186 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25918(t7,t6);}

/* k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25918(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25918,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25921,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25921(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25948,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_25948(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25983,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[593]);}
else{
t7=t6;
f_25983(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26018,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[594]);}
else{
t8=t7;
f_26018(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26053,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[595]);}
else{
t9=t8;
f_26053(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26088,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26088(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26123,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26123(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26152,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26152(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26150 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26152,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26167,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26165 in k26150 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26159(2,t2,C_SCHEME_UNDEFINED);}}

/* k26157 in k26150 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25921(t5,t4);}

/* k26121 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26127(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26125 in k26121 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25921(t7,t6);}

/* k26086 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26092(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26090 in k26086 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25921(t7,t6);}

/* k26051 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26057,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26057(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26055 in k26051 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25921(t7,t6);}

/* k26016 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26022,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26022(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26020 in k26016 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_26022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25921(t7,t6);}

/* k25981 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25987,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25987(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25985 in k25981 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25921(t7,t6);}

/* k25946 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25952,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25952(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25950 in k25946 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25921(t7,t6);}

/* k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25921(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25921,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25924,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25924(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25924,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25670,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_25670(t14,t13);}
else{
t13=t11;
f_25670(t13,C_SCHEME_UNDEFINED);}}

/* k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25670(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25670,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25676,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=t6,a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t8=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25679,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25681,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word)li364),tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25755,a[2]=((C_word*)t0)[8],a[3]=((C_word)li365),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25769,a[2]=t2,a[3]=t3,a[4]=((C_word)li366),tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25779,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[7],a[5]=((C_word)li367),tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25803,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_not(((C_word*)t0)[4]);
t8=(C_truep(t7)?t7:(C_word)C_i_not(t1));
if(C_truep(t8)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t9=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t5,((C_word*)t0)[2]);}
else{
C_trace("for-each");
t9=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t4,((C_word*)t0)[2]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25868,a[2]=t5,a[3]=((C_word*)t0)[4],a[4]=((C_word)li369),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   for-each");
t10=*((C_word*)lf[592]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}
else{
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25883,a[2]=t4,a[3]=((C_word*)t0)[4],a[4]=((C_word)li370),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   for-each");
t10=*((C_word*)lf[592]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}}}

/* a25882 in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25883,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 86   addkey");
t4=((C_word*)t0)[2];
f_25769(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a25867 in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25868(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25868,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 86   adduniquekey");
t4=((C_word*)t0)[2];
f_25779(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k25801 in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25803,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
switch(((C_word*)t0)[4]){
case C_fix(0):
C_trace("ChickenBridge.scm: 86   shuffle!");
t3=C_retrieve(lf[505]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t2);
case C_fix(-1):
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 86   sort!");
t3=C_retrieve(lf[589]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[182]+1));}
else{
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8607,a[2]=t2,a[3]=t6,a[4]=((C_word)li368),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_8607(t8,((C_word*)t0)[3],C_fix(0),t4,t2);}
default:
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 86   sort!");
t3=C_retrieve(lf[589]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[178]+1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(1));
if(C_truep(t3)){
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[3],lf[590],C_retrieve(lf[591]));}}}}

/* do714 in k25801 in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8607(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8607,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* adduniquekey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25779(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25779,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25783,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   getkey");
t4=((C_word*)t0)[2];
f_25681(t4,t3,t2);}

/* k25781 in adduniquekey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   add");
t3=((C_word*)t0)[2];
f_25755(t3,((C_word*)t0)[3],t1);}}

/* addkey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25769(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25769,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25777,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   getkey");
t4=((C_word*)t0)[2];
f_25681(t4,t3,t2);}

/* k25775 in addkey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   add");
t2=((C_word*)t0)[3];
f_25755(t2,((C_word*)t0)[2],t1);}

/* add in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25755(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25755,NULL,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}

/* getkey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25681(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25681,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25685,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25750,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 86   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k25748 in getkey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   quantize");
t2=C_retrieve(lf[471]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k25683 in getkey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25685,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[5])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[5]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25696,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word)li362),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25696(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25722,a[2]=t7,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=((C_word)li363),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25722(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do4010 in k25683 in getkey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25722(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25722,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* do4005 in k25683 in getkey in k25677 in k25674 in k25668 in k25922 in k25919 in k25916 in k25913 in k25910 in k25907 in k25904 in spectrum-keys in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25696,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* spectrum-maxamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25641(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25641,3,t0,t1,t2);}
t3=lf[587];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25645,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t6=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k25643 in spectrum-maxamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25645,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25656,a[2]=((C_word*)t0)[2],a[3]=((C_word)li360),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a25655 in k25643 in spectrum-maxamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25656(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25656,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k25652 in k25643 in spectrum-maxamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25610(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25610,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25614,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t6=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k25612 in spectrum-minamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25614,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25623,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25625,a[2]=((C_word*)t0)[2],a[3]=((C_word)li358),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[585]);}}

/* a25624 in k25612 in spectrum-minamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25625(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25625,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k25621 in k25612 in spectrum-minamp in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25592(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25592,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25600,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25598 in spectrum-maxfreq in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25608,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25606 in k25598 in spectrum-maxfreq in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25608,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25582(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25582,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25590,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25588 in spectrum-minfreq in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25523(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25523,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25530,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t7=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k25528 in spectrum-pairs in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25531 in k25528 in spectrum-pairs in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25534 in k25531 in k25528 in spectrum-pairs in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25536,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25541,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li354),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_25541(t5,((C_word*)t0)[2],C_fix(0));}

/* do3967 in k25534 in k25531 in k25528 in spectrum-pairs in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25541(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25541,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[581]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25485(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25485,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25493,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-time");
t4=C_retrieve(lf[572]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25491 in spectrum-copy in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25497,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[574]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25495 in k25491 in spectrum-copy in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25501,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25517,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[576]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25515 in k25495 in k25491 in spectrum-copy in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k25499 in k25495 in k25491 in spectrum-copy in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25505,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25509,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[578]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25507 in k25499 in k25495 in k25491 in spectrum-copy in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k25503 in k25499 in k25495 in k25491 in spectrum-copy in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25401(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25476(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25476,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[570]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25467(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25467,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[570]);
C_trace("ChickenBridge.scm: 86   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25458(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25458,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[570]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25449(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25449,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[570]);
C_trace("ChickenBridge.scm: 86   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25440(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25440,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[570]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25431(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25431,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[570]);
C_trace("ChickenBridge.scm: 86   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25422(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25422,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[570]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25407(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25407,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[570]));}

/* make-spectrum in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25401(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25401,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[570],t2,t3,t4,t5));}

/* full-pathname in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25356(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25356,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7717,a[2]=t3,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t7=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}
else{
t7=t6;
f_7717(2,t7,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[568],t2);}}

/* k7715 in full-pathname in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub337(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* pathname-type in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_25314(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25314,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25324,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   ffi_pathname_type");
f_7690(t3,t2);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[566],t2);}}

/* k25322 in pathname-type in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_25324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_string_equal_p(t1,lf[565]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_FALSE:t1));}

/* chdir in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24438(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24438,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7645,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7645(2,t4,C_SCHEME_FALSE);}}

/* k7643 in chdir in k24416 in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub310(C_SCHEME_UNDEFINED,t1));}

/* in-tempo in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24407(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24407,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_divide(&a,2,C_fix(60),t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_times(&a,2,t2,t4));}

/* rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24091(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_24091r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_24091r(t0,t1,t2,t3);}}

static void C_ccall f_24091r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(10);
t4=C_retrieve(lf[547]);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve(lf[549]);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24095,a[2]=t1,a[3]=t5,a[4]=t7,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(t3))){
t9=(C_word)C_i_car(t3);
t10=C_set_block_item(t5,0,t9);
t11=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(C_word)C_i_cadr(t3);
t13=C_set_block_item(t7,0,t12);
t14=t8;
f_24095(t14,t13);}
else{
t12=t8;
f_24095(t12,C_SCHEME_UNDEFINED);}}
else{
t9=t8;
f_24095(t9,C_SCHEME_UNDEFINED);}}

/* k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_24095(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24095,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[5]))){
t2=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=(C_word)C_i_symbolp(((C_word*)t0)[5]);
t3=(C_truep(t2)?t2:(C_word)C_i_stringp(((C_word*)t0)[5]));
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24124,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t5=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,C_retrieve2(lf[551],"*rhythms*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24152,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word)li338),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,((C_word*)t0)[2],t4,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 85   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],lf[561],((C_word*)t0)[5]);}}}}

/* a24151 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24152(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24152,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   rhythm");
t3=C_retrieve(lf[553]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24124,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24189,a[2]=t2,a[3]=t3,a[4]=t4,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t3))){
C_trace("ChickenBridge.scm: 85   symbol->string");
t7=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t3);}
else{
t7=t6;
f_24189(2,t7,t3);}}}

/* k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24190,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_i_string_length(t1);
t4=C_fix(0);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t5,a[8]=t1,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 85   next-token-start");
f_24190(t6,t1,((C_word*)t5)[1],t3);}

/* k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24226,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[7])[1],((C_word*)t3)[1]))){
t5=t4;
f_24229(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[560],((C_word*)t0)[8]);}}

/* k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24389,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   substring");
t4=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k24387 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[551],"*rhythms*"),t1);}

/* k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t1)){
t3=t2;
f_24239(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[559],((C_word*)t0)[3]);}}

/* k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24239,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word)li337),tmp=(C_word)a,a+=12,tmp));
t5=((C_word*)t3)[1];
f_24241(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_24241(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24241,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]))){
t11=(C_word)C_i_string_ref(((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1]);
t12=C_set_block_item(t10,0,t11);
t13=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[10])[1],C_fix(1));
t14=C_mutate(((C_word *)((C_word*)t0)[7])+1,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24287,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=t10,a[5]=t9,a[6]=t8,a[7]=t7,a[8]=t1,a[9]=((C_word*)t0)[6],a[10]=t6,a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 85   next-token-start");
f_24190(t15,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[9]);}
else{
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=t7,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t12=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t12))(5,t12,t11,C_retrieve2(lf[551],"*rhythms*"),((C_word*)t0)[8],((C_word*)t7)[1]);}}

/* k24249 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24254,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],((C_word*)t0)[2]))){
t3=t2;
f_24254(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[551],"*rhythms*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);}}

/* k24252 in k24249 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24254,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,C_fix(1),((C_word*)t0)[5]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 85   *");
C_times(5,0,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2,t3);}

/* k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24287,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24290,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24375,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   substring");
t5=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]);}
else{
C_trace("ChickenBridge.scm: 85   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[558],((C_word*)t0)[3]);}}

/* k24373 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24290(2,t3,t2);}

/* k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
switch(((C_word*)((C_word*)t0)[3])[1]){
case C_make_character(43):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24307,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[551],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(45):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24327,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[551],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(42):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24347,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(47):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24361,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
default:
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[557],((C_word*)t0)[2]);}}

/* k24359 in k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24361,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24293(2,t5,t4);}

/* k24345 in k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24347,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_times(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24293(2,t5,t4);}

/* k24325 in k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24330,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_24330(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[556],((C_word*)t0)[2]);}}

/* k24328 in k24325 in k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24330,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24293(2,t5,t4);}

/* k24305 in k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_24310(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[555],((C_word*)t0)[2]);}}

/* k24308 in k24305 in k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24310,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24293(2,t5,t4);}

/* k24291 in k24288 in k24285 in do3682 in k24237 in k24234 in k24227 in k24224 in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24293,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_24241(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t2);}

/* next-token-start in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_24190(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24190,NULL,4,t1,t2,t3,t4);}
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24196,a[2]=t2,a[3]=t6,a[4]=t4,a[5]=((C_word)li335),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_24196(t8,t1,lf[554],t3);}

/* do3672 in next-token-start in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_24196(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24196,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24206,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=t5;
f_24206(t6,t4);}
else{
t6=(C_word)C_i_string_ref(((C_word*)t0)[2],t3);
t7=t5;
f_24206(t7,(C_word)C_i_member(t6,t2));}}

/* k24204 in do3672 in next-token-start in k24187 in k24122 in k24093 in rhythm in k24087 in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_24206(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24206,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_24196(t3,((C_word*)t0)[5],((C_word*)t0)[2],t2);}}

/* addryth in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_24075(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24075,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24079,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t5=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[551],"*rhythms*"),t2,t3);}

/* k24077 in addryth in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24086,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   string->symbol");
t3=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24084 in k24077 in addryth in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],C_retrieve2(lf[551],"*rhythms*"),t1,((C_word*)t0)[2]);}

/* rsym in k24067 in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_24070(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24070,NULL,4,t1,t2,t3,t4);}
C_trace("ChickenBridge.scm: 85   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t2,t3,t4);}

/* scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23923(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_23923r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_23923r(t0,t1,t2,t3);}}

static void C_ccall f_23923r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23927,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_23927(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_23927(t8,t7);}}

/* k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23927(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23927,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23938,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   sort");
t3=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23996,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   sort");
t3=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 85   shuffle");
t2=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[546],((C_word*)((C_word*)t0)[4])[1]);}}

/* a23995 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23996,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24019,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24032,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24039,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k24037 in a23995 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24043,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t3=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24041 in k24037 in a23995 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k24030 in a23995 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k24017 in a23995 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_24019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a23937 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23938(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23938,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23961,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23974,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23981,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k23979 in a23937 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23985,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t3=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23983 in k23979 in a23937 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k23972 in a23937 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k23959 in a23937 in k23925 in scale-order in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23734(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23734,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 85   modulo");
t7=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23780,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23787,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23835,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_23835(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 85   key");
t6=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
t4=(C_word)C_i_symbolp(t2);
t5=(C_truep(t4)?t4:(C_word)C_i_stringp(t2));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23914,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t7=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
C_trace("ChickenBridge.scm: 85   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t1,lf[543],t2);}}}}

/* k23912 in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23914,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   note");
t3=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k23833 in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23835,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23852,a[2]=t1,a[3]=((C_word)li328),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 85   transpkeys");
f_23787(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23880,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23884,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k23882 in k23833 in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   transpkeys");
f_23787(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23878 in k23833 in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   note");
t2=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a23851 in k23833 in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23852(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23852,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23787(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23787,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23796,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li326),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23796(t8,t1,t2,t4);}

/* do3609 in transpkeys in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23796(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_23796,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k23778 in transpose in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23780,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 85   note");
t3=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23599(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23599,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[540],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23629,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23699,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 85   invkeys");
f_23629(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23721,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23725,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t7=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[541],t2);}}}

/* k23723 in invert in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   invkeys");
f_23629(((C_word*)t0)[2],t1);}

/* k23719 in invert in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   note");
t2=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a23698 in invert in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23699(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23699,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23629(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23629,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23645,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li322),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_23645(t9,t1,t5,t4);}

/* do3594 in invkeys in invert in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23645(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_23645,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23554(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23554,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 85   modulo");
t3=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[538]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23586,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23597,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k23595 in pc in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   modulo");
t2=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k23584 in pc in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[538]),t1);}

/* hz in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23438(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23438,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23453,a[2]=t5,a[3]=t3,a[4]=((C_word)li319),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23453(t7,t1,t2,lf[537],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7430(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23552,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   note-aux");
f_23166(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k23550 in hz in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do3574 in hz in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23453(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23453,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23466,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23483,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_23483(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_23483(t14,(C_word)C_i_listp(t13));}}}

/* k23481 in do3574 in hz in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23483(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23483,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23487,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hz");
t4=C_retrieve(lf[536]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23502,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   note-aux");
f_23166(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k23500 in k23481 in do3574 in hz in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23502,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_23466(t9,t8);}

/* k23485 in k23481 in do3574 in hz in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23487,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23466(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23464 in do3574 in hz in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23466(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23453(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23316(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23316,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23331,a[2]=t5,a[3]=t3,a[4]=((C_word)li317),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23331(t7,t1,t2,lf[535],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub175(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23436,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   note-aux");
f_23166(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k23434 in key in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do3558 in key in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23331(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23331,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23344,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23361,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_23361(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_23361(t14,(C_word)C_i_numberp(t13));}}}

/* k23359 in do3558 in key in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23361(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23361,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23365,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23380,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   note-aux");
f_23166(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k23378 in k23359 in do3558 in key in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23380,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_23344(t9,t8);}

/* k23363 in k23359 in do3558 in key in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23365,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23344(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23342 in do3558 in key in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23344(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23331(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23219(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23219,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23234,a[2]=t5,a[3]=t3,a[4]=((C_word)li315),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23234(t7,t1,t2,lf[534],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23314,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   note-aux");
f_23166(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k23312 in note in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do3544 in note in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23234(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23234,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23247,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23265,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   note");
t13=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23280,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   note-aux");
f_23166(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k23278 in do3544 in note in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23280,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_23247(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k23263 in do3544 in note in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23265,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23247(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23245 in do3544 in note in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23247(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23234(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23166(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23166,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23114,a[2]=t6,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t9=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,C_retrieve2(lf[521],"*notes*"),t6);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23164,a[2]=t7,a[3]=t5,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   floor");
t9=*((C_word*)lf[530]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23189,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   symbol->string");
t6=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 85   string->note-entry");
f_23067(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23204,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k23202 in note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23204,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   keyword->string");
t3=C_retrieve(lf[531]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[532],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k23209 in k23202 in note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string->note-entry");
f_23067(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23187 in note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string->note-entry");
f_23067(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23162 in note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23164,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23132,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23145,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[528]))){
t6=t5;
f_23145(t6,t2);}
else{
t6=(C_word)C_i_lessp(t3,lf[529]);
t7=t5;
f_23145(t7,(C_truep(t6)?(C_word)C_a_i_plus(&a,2,t2,C_fix(1000)):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k23143 in k23162 in note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[521],"*notes*"),t1);}

/* k23130 in k23162 in note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[527],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k23112 in note-aux in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[526],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* string->note-entry in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_23067(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23067,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23071,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t6=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,C_retrieve2(lf[521],"*notes*"),t2);}

/* k23069 in string->note-entry in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23071,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23096,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[524],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k23094 in k23069 in string->note-entry in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[521],"*notes*"),t1);}

/* k23081 in k23069 in string->note-entry in k23063 in k23060 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[523],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* rangamma in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23039(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_23039r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_23039r(t0,t1,t2);}}

static void C_ccall f_23039r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_rangamma");
f_7528(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 85   ffi_rangamma");
f_7528(t1,t3);}}

/* ranpoisson in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_23020(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_23020r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_23020r(t0,t1,t2);}}

static void C_ccall f_23020r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_ranpoisson");
f_7538(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 85   ffi_ranpoisson");
f_7538(t1,t3);}}

/* rangauss in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22979(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_22979r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22979r(t0,t1,t2);}}

static void C_ccall f_22979r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_rangauss");
f_7499(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   ffi_rangauss");
f_7499(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 85   ffi_rangauss");
f_7499(t1,t4,t5);}}}

/* ranexp in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22960(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22960r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22960r(t0,t1,t2);}}

static void C_ccall f_22960r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_ranexp");
f_7510(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 85   ffi_ranexp");
f_7510(t1,t3);}}

/* ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22732(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_22732r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22732r(t0,t1,t2);}}

static void C_ccall f_22732r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[511];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22736,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_22736(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[512]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22873,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[512]);}
else{
t19=t18;
f_22873(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[513]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22908,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[513]);}
else{
t20=t19;
f_22908(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22937,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[109],t2);}
else{
t20=t19;
f_22937(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k22935 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22937,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22952,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22950 in k22935 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22944(2,t2,C_SCHEME_UNDEFINED);}}

/* k22942 in k22935 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22736(t5,t4);}

/* k22906 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22912(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22910 in k22906 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22736(t7,t6);}

/* k22871 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22877(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22875 in k22871 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22736(t7,t6);}

/* k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22736(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22736,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22739,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_22739(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[512]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22773,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[512]);}
else{
t6=t5;
f_22773(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[513]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22808,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[513]);}
else{
t7=t6;
f_22808(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22837,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_22837(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22835 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22837,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22852,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22850 in k22835 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22844(2,t2,C_SCHEME_UNDEFINED);}}

/* k22842 in k22835 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22739(t5,t4);}

/* k22806 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22812(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22810 in k22806 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22739(t7,t6);}

/* k22771 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22777(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22775 in k22771 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22739(t7,t6);}

/* k22737 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22739(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22739,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22742,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22742(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k22740 in k22737 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22745,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_22745(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_22745(t5,t4);}}

/* k22743 in k22740 in k22737 in k22734 in ranbeta in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22745(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22745,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub228(t5,t6,t7));}

/* shuffle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22690(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_22690r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22690r(t0,t1,t2);}}

static void C_ccall f_22690r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22704,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   append");
t6=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22719,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k22717 in shuffle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   shuffle!");
t2=C_retrieve(lf[505]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22702 in shuffle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   shuffle!");
t2=C_retrieve(lf[505]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22635(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22635,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22646,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7454(t4,t3);}

/* k22644 in shuffle! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22646,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22648,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li305),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_22648(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do3427 in k22644 in shuffle! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22648(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22648,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22676,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7454(t14,((C_word*)t0)[4]);}}

/* k22674 in do3427 in k22644 in shuffle! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_22648(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_22536r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_22536r(t0,t1,t2,t3,t4);}}

static void C_ccall f_22536r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22540,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_22540(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_22540(t9,t8);}}

/* k22538 in vary in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22540(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22540,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_22543(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[504],((C_word*)((C_word*)t0)[3])[1]);}}

/* k22541 in k22538 in vary in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22543,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22545,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22608,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li303),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 85   vary1");
f_22545(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a22607 in k22541 in k22538 in vary in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22608(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22608,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   vary1");
f_22545(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k22541 in k22538 in vary in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22545(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22545,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22561,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   ffi_ranfloat");
f_7461(t9,t8);}}

/* k22559 in vary1 in k22541 in k22538 in vary in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22561,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[503]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* pick in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22265(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_22265r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22265r(t0,t1,t2);}}

static void C_ccall f_22265r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22283,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7454(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22298,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7454(t4,t5);}}

/* k22296 in pick in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k22281 in pick in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22244(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22244,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub194(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub200(t9,t10,t11));}}

/* ran in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22209(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_22209r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22209r(t0,t1,t2);}}

static void C_ccall f_22209r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22213,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_22213(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_22213(t7,t6);}}

/* k22211 in ran in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22213(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7454(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 85   ffi_ranfloat");
f_7461(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 85   ffi_ranfloat");
f_7461(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_22001r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_22001r(t0,t1,t2,t3,t4);}}

static void C_ccall f_22001r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22014,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_22014(t13,t12);}
else{
t9=t8;
f_22014(t9,C_SCHEME_UNDEFINED);}}}

/* k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22014,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[35],"ffi_explseg"):C_retrieve2(lf[36],"ffi_geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22035,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 85   error");
t12=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[497],t7);}
else{
t12=t11;
f_22035(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[490]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22096,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_22096(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_22096(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[498],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k22094 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22096(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22096,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22099,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k22097 in k22094 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22099,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22107,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li297),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_22107(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do3346 in k22097 in k22094 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22107(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22107,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22148,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li296),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_22119(t8,t1,((C_word*)t0)[3]);}}

/* do3350 in do3346 in k22097 in k22094 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22119(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22119,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22140,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7284(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k22138 in do3350 in do3346 in k22097 in k22094 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22119(t4,((C_word*)t0)[2],t3);}

/* k22146 in do3346 in k22097 in k22094 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22148,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_22107(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k22033 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22035,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li295),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_22040(t5,((C_word*)t0)[2],C_fix(0));}

/* do3334 in k22033 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_22040(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22040,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22072,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k22070 in do3334 in k22033 in k22012 in segs in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_22072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22072,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_22040(t7,((C_word*)t0)[2],t6);}

/* scale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_21894r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21894r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21894r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21901,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_21901(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21981,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 85   error");
t15=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[495],((C_word*)t8)[1]);}
else{
t15=t14;
f_21981(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_21901(t11,C_SCHEME_UNDEFINED);}}

/* k21979 in scale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21901(t4,t3);}

/* k21899 in scale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21901,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li293),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_21910(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do3311 in k21899 in scale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21910(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21910,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21923,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21957,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   fit");
t10=C_retrieve(lf[491]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_21923(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k21955 in do3311 in k21899 in scale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21923(t3,t2);}

/* k21921 in do3311 in k21899 in scale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21923(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21923,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21949,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 85   modulo");
t7=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k21947 in k21921 in do3311 in k21899 in scale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21949,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_21910(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_21761r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_21761r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_21761r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21765,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_21765(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_21765(t12,t11);}}

/* k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21765,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21768,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_21768(t6,t5);}
else{
t3=t2;
f_21768(t3,C_SCHEME_UNDEFINED);}}

/* k21766 in k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21768(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21768,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21770,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li291),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 85   fit1");
f_21770(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21871 in k21766 in k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21872(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21872,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   fit1");
f_21770(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k21766 in k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21770(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21770,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21777,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 85   <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k21775 in fit1 in k21766 in k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21777,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21800,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 85   remainder");
t9=*((C_word*)lf[492]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21819,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 85   remainder");
t8=*((C_word*)lf[492]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[493],((C_word*)t0)[2]);}}}

/* k21817 in k21775 in fit1 in k21766 in k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21826,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[175]+1):*((C_word*)lf[179]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 85   -");
C_minus(3,0,t2,t1);}}

/* k21824 in k21817 in k21775 in fit1 in k21766 in k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21826,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k21798 in k21775 in fit1 in k21766 in k21763 in fit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21800,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21694(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_21694r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_21694r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_21694r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[490]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21698,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_21698(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_21698(t16,t15);}}

/* k21696 in tendency in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21698,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21701,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21744,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   interp1");
f_21562(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_21701(t3,C_SCHEME_UNDEFINED);}}

/* k21742 in k21696 in tendency in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21701(t3,t2);}

/* k21699 in k21696 in tendency in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21701,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21737,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   interp1");
f_21562(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_21704(t3,C_SCHEME_UNDEFINED);}}

/* k21735 in k21699 in k21696 in tendency in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21704(t3,t2);}

/* k21702 in k21699 in k21696 in tendency in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21704(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21704,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21717,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21715 in k21702 in k21699 in k21696 in tendency in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21717,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21648(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_21648r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21648r(t0,t1,t2,t3);}}

static void C_ccall f_21648r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21652,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[488]);}
else{
t5=t4;
f_21652(2,t5,C_SCHEME_UNDEFINED);}}

/* k21650 in interp in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 85   interp1");
f_21562(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 85   interp1");
f_21562(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21562(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21562,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21566,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 85   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[486],t3);}
else{
t6=t5;
f_21566(2,t6,(C_word)C_i_car(t3));}}

/* k21564 in interp1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21566,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 85   err");
t6=C_retrieve(lf[484]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[485],((C_word*)t0)[4]);}
else{
t6=t4;
f_21569(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k21567 in k21564 in interp1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21569,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21578,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li286),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_21578(t13,((C_word*)t0)[2],t9);}

/* do3262 in k21567 in k21564 in interp1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21578(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21578,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7284(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21600,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 85   error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[483],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_21600(2,t13,t12);}}}

/* k21598 in do3262 in k21567 in k21564 in interp1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21578(t3,((C_word*)t0)[2],t2);}

/* cents->ratio in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21547(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21547,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[33],"ffi_cents_to_scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_cents_to_scaler");
t3=C_retrieve2(lf[33],"ffi_cents_to_scaler");
f_7371(3,t3,t1,t2);}}

/* ratio->cents in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21517(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21517,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[34],"ffi_scaler_to_cents"),t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_scaler_to_cents");
t3=C_retrieve2(lf[34],"ffi_scaler_to_cents");
f_7378(3,t3,t1,t2);}}

/* rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21281(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_21281r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21281r(t0,t1,t2,t3);}}

static void C_ccall f_21281r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[476];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[477];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21285,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_21285(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[478]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21430,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[478]);}
else{
t20=t19;
f_21430(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[479]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21465,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[118],lf[479]);}
else{
t21=t20;
f_21465(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21494,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[109],t3);}
else{
t21=t20;
f_21494(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21492 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21494,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21501,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21509,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21507 in k21492 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21501(2,t2,C_SCHEME_UNDEFINED);}}

/* k21499 in k21492 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21285(t5,t4);}

/* k21463 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21469(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21467 in k21463 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21285(t7,t6);}

/* k21428 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21430,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21434,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21434(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21432 in k21428 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21285(t7,t6);}

/* k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21285(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21285,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21288,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21288(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[478]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21330,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[478]);}
else{
t6=t5;
f_21330(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[479]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21365,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[479]);}
else{
t7=t6;
f_21365(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21394,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_21394(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21392 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21394,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21409,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21407 in k21392 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21401(2,t2,C_SCHEME_UNDEFINED);}}

/* k21399 in k21392 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21288(t5,t4);}

/* k21363 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21369,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21369(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21367 in k21363 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21288(t7,t6);}

/* k21328 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21334(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21332 in k21328 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21288(t7,t6);}

/* k21286 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_21288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21288,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21291,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21291(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k21289 in k21286 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21291,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li282),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 85   ffi_rhythm_to_seconds");
f_7356(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21301 in k21289 in k21286 in k21283 in rhythm->seconds in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21302(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21302,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   ffi_rhythm_to_seconds");
f_7356(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21241,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21245,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   expt");
t5=*((C_word*)lf[473]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[474],t3);}

/* k21243 in decimals in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21245,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21256,a[2]=t1,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21275,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 85   round");
t4=*((C_word*)lf[472]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k21273 in k21243 in decimals in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21275,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a21255 in k21243 in decimals in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21256(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21256,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21264,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   round");
t5=*((C_word*)lf[472]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k21262 in a21255 in k21243 in decimals in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21264,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21220,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21232,a[2]=t3,a[3]=((C_word)li278),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_quantize");
f_7345(t1,t2,t3);}}

/* a21231 in quantize in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21232(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21232,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   ffi_quantize");
f_7345(t1,t2,((C_word*)t0)[2]);}

/* divide in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21177(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_21177r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21177r(t0,t1,t2,t3);}}

static void C_ccall f_21177r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[470]+1),t2);}
else{
C_trace("ChickenBridge.scm: 85   /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21207,a[2]=t3,a[3]=((C_word)li276),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[470]+1),t2,t3);}}}

/* a21206 in divide in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21207(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21207,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21134(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_21134r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21134r(t0,t1,t2,t3);}}

static void C_ccall f_21134r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[175]+1),t2);}
else{
C_trace("ChickenBridge.scm: 85   -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21164,a[2]=t3,a[3]=((C_word)li274),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[175]+1),t2,t3);}}}

/* a21163 in minus in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21164(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21164,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21065(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_21065r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21065r(t0,t1,t2);}}

static void C_ccall f_21065r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[411]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[411]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21109,a[2]=t2,a[3]=((C_word)li272),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[411]+1),t2);}}}}

/* a21108 in times in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21109(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21109,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20996(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20996r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20996r(t0,t1,t2);}}

static void C_ccall f_20996r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[179]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[179]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21040,a[2]=t2,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[179]+1),t2);}}}}

/* a21039 in plus in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_21040(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21040,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* log2 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20990(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20990,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub264(t3,t4));}

/* log10 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20984(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20984,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub259(t3,t4));}

/* float in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20963(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20963,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20975,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[463]));}}

/* a20974 in float in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20975(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20975,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[462]));}

/* int in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20948(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20948,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[30],"ffi_float_to_fixnum"),t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_float_to_fixnum");
t3=C_retrieve2(lf[30],"ffi_float_to_fixnum");
f_7338(3,t3,t1,t2);}}

/* discrete in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20837(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_20837r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_20837r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_20837r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20841,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_20841(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20912,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 85   not?");
t20=C_retrieve(lf[459]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_20841(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_20841(t19,t18);}}}

/* k20910 in discrete in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20841(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_20841(t2,C_SCHEME_UNDEFINED);}}

/* k20839 in discrete in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20841(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20841,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20855,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li262),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20870,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t3=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20881,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li263),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t2=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a20880 in k20839 in discrete in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20881(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20881,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t3=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20868 in k20839 in discrete in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a20854 in k20839 in discrete in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20855(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20855,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20863,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t4=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t4))(8,t4,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20861 in a20854 in k20839 in discrete in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_20803r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_20803r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_20803r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20815,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li260),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7284(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7284(t1,t2,t3,t4,t5,t6,t8);}}}

/* a20814 in rescale in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20815(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20815,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[456]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19756(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_19756r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19756r(t0,t1,t2,t3);}}

static void C_ccall f_19756r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_19766,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_19766(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[454]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20716,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[118],lf[454]);}
else{
t31=t30;
f_20716(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[455]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20751,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[118],lf[455]);}
else{
t32=t31;
f_20751(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20780,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[109],t3);}
else{
t32=t31;
f_20780(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k20778 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20780,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20795,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20793 in k20778 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20787(2,t2,C_SCHEME_UNDEFINED);}}

/* k20785 in k20778 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19766(t5,t4);}

/* k20749 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20755,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20755(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20753 in k20749 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19766(t7,t6);}

/* k20714 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20720,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20720(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20718 in k20714 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19766(t7,t6);}

/* k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19766(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19766,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19769,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19769(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20616,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_20616(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[455]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20651,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[455]);}
else{
t7=t6;
f_20651(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20680,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_20680(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20678 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20680,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20695,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20693 in k20678 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20687(2,t2,C_SCHEME_UNDEFINED);}}

/* k20685 in k20678 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19769(t5,t4);}

/* k20649 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20655(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20653 in k20649 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19769(t7,t6);}

/* k20614 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20620(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20618 in k20614 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19769(t7,t6);}

/* k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19769(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19769,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19772,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19772(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19772,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_19777(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[453],((C_word*)((C_word*)t0)[9])[1]);}}

/* k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19779,a[2]=((C_word*)t0)[9],a[3]=((C_word)li238),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19861,a[2]=t4,a[3]=((C_word)li241),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19971,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20509,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li258),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_20509(t10,t6,C_fix(0));}

/* do3002 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20509(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20509,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20519,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20532,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li257),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_20532(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do3005 in do3002 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20532(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20532,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20542,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20560,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t9=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20585,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 84   modulo");
t9=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k20583 in do3005 in do3002 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20585,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20567,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_20567(t7,t6);}
else{
t5=t4;
f_20567(t5,C_SCHEME_UNDEFINED);}}

/* k20565 in k20583 in do3005 in do3002 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20567(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20567,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_20532(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20558 in do3005 in do3002 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   add-outcome");
t2=((C_word*)t0)[4];
f_19779(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k20540 in do3005 in do3002 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20542,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k20517 in do3002 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20519,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20509(t3,((C_word*)t0)[2],t2);}

/* k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20465,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   sort");
t5=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[178]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20471,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_20471(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_20471(t5,C_SCHEME_FALSE);}}}

/* k20469 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20471,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20477,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   sort");
t4=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20491 in k20469 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19974(t3,t2);}

/* a20476 in k20469 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20477,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20485,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   format");
t5=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[451],t2);}

/* k20483 in a20476 in k20469 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20489,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[450],((C_word*)t0)[2]);}

/* k20487 in k20483 in a20476 in k20469 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   string-ci<?");
t2=*((C_word*)lf[449]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20473 in k20469 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19974(t3,t2);}

/* k20463 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19974(t3,t2);}

/* k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19974,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20342,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li255),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20342(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20342(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20342,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20353,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   max");
t6=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20366,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 84   max");
t10=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k20364 in do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20366,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20428,a[2]=t5,a[3]=((C_word)li254),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_20428(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do3026 in k20364 in do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20428(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20428,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k20367 in k20364 in do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20369,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[447]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20376,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20385,a[2]=t3,a[3]=t8,a[4]=((C_word)li253),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_20385(t10,t6,((C_word*)t0)[2]);}

/* do3032 in k20367 in k20364 in do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20385(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20385,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20410,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 84   decimals");
t9=C_retrieve(lf[448]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k20408 in do3032 in k20367 in k20364 in do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20385(t4,((C_word*)t0)[2],t3);}

/* k20374 in k20367 in k20364 in do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_20342(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20351 in do3018 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20328,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li252),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   sort");
t4=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a20327 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20328,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 84   before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_19861(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19981,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19984,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[435];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20025,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   make-string");
t7=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_19984(2,t5,C_SCHEME_UNDEFINED);}}

/* k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20028,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20309,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li251),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20309(t6,t2,C_fix(0));}

/* do3045 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20309(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20309,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20319,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[437]+1));}}

/* k20317 in do3045 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20319,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20309(t3,((C_word*)t0)[2],t2);}

/* k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20247,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li250),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20247(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20247(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20247,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20257,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   display");
t4=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k20255 in do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20260,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[444],t3);}

/* k20258 in k20255 in do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20260,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20266,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20280,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 84   max");
t6=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k20278 in k20258 in k20255 in do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20280,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20282,a[2]=t3,a[3]=((C_word)li249),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20282(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3055 in k20278 in k20258 in k20255 in do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20282(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20282,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20292,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[437]+1));}}

/* k20290 in do3055 in k20278 in k20258 in k20255 in do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20292,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20282(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20264 in k20258 in k20255 in do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20266,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k20267 in k20264 in k20258 in k20255 in do3050 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20247(t3,((C_word*)t0)[2],t2);}

/* k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20037,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li248),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_20042(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20042(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20042,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 84   newline");
t5=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_20058(2,t4,lf[440]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19929,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 84   format");
t6=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[443],t5);}}

/* k19927 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19929,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19938,a[2]=t6,a[3]=t3,a[4]=((C_word)li247),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_19938(t8,((C_word*)t0)[2],t4);}

/* do2997 in k19927 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19938(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19938,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19949,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19960,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   format");
t6=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[442],t5);}}

/* k19958 in do2997 in k19927 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19947 in do2997 in k19927 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19938(t4,((C_word*)t0)[2],t3);}

/* k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20058,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20064,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20218,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 84   max");
t6=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k20216 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20218,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20220,a[2]=t3,a[3]=((C_word)li246),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20220(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3071 in k20216 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20220(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20220,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20230,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[437]+1));}}

/* k20228 in do3071 in k20216 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20230,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20220(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20067,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20191,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   min");
t4=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k20189 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20191,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20193,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li245),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20193(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3077 in k20189 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20193(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20193,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20203,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[437]+1));}}

/* k20201 in do3077 in k20189 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20203,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20193(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20070,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li244),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_20079(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20079(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20079,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20092,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20111,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 84   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20105,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   display");
t8=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k20103 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   display");
t2=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20111,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_string_length(((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20117,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   display");
t8=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[2])[1],C_fix(5)))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20159,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   position");
t4=C_retrieve(lf[100]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_make_character(46),((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=t2;
f_20120(t3,C_SCHEME_UNDEFINED);}}

/* k20157 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20171,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_plus(&a,2,t1,C_fix(4));
C_trace("ChickenBridge.scm: 84   min");
t5=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20169 in k20157 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   substring");
t2=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t1);}

/* k20161 in k20157 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_i_string_length(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20120(t5,t4);}

/* k20118 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20120,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20123,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20130,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 84   max");
t5=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k20128 in k20118 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20130,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20132,a[2]=t3,a[3]=((C_word)li243),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20132(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3093 in k20128 in k20118 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_20132(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20132,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20142,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[437]+1));}}

/* k20140 in do3093 in k20128 in k20118 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20142,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20132(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20121 in k20118 in k20115 in k20109 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   display");
t2=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20090 in do3084 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20079(t3,((C_word*)t0)[2],t2);}

/* k20068 in k20065 in k20062 in k20056 in k20053 in do3065 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20042(t3,((C_word*)t0)[2],t2);}

/* k20035 in k20032 in k20029 in k20026 in k20023 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   newline");
t2=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k19982 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19984,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20007,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a20006 in k19982 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_20007(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20007,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[117]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[434],t4);}

/* k19994 in k19982 in k19979 in k19975 in k19972 in k19969 in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 84   make-markov");
t2=C_retrieve(lf[410]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19861(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19861,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19871,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19909,a[2]=t2,a[3]=((C_word)li240),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   list-index");
f_8754(t5,t6,t4);}}

/* a19908 in before? in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19909,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k19869 in before? in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19874,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19899,a[2]=((C_word*)t0)[4],a[3]=((C_word)li239),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   list-index");
f_8754(t2,t3,((C_word*)t0)[2]);}

/* a19898 in k19869 in before? in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19899(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19899,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k19872 in k19869 in before? in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_19861(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19779(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19779,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19783,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19851,a[2]=t2,a[3]=((C_word)li236),tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8800,a[2]=t5,a[3]=t8,a[4]=((C_word)li237),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8800(t10,t4,t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do748 in add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8800,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8810,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8820,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   p");
t11=((C_word*)t0)[2];
f_19851(t11,t9,t10);}}

/* k8818 in do748 in add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8810(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8810(t2,C_SCHEME_UNDEFINED);}}

/* k8808 in do748 in add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8810(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_8800(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* a19850 in add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19851(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19851,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k19781 in add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19783,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19833,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 84   tail");
t7=C_retrieve(lf[81]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19801,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[432],((C_word*)t0)[3]);}}

/* k19799 in k19781 in add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19801,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k19831 in k19781 in add-outcome in k19775 in k19770 in k19767 in k19764 in markov-analyze in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19833,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19662(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19662,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19666,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t3,t2);}

/* k19664 in next-in-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19666,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19695,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[422]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   graph-node-datum");
f_19081(((C_word*)t0)[2],t6);}}

/* k19693 in k19664 in next-in-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19695,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19700,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li234),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_19700(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2920 in k19693 in k19664 in next-in-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19700(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19700,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19710,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_19710(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[429],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19725,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[422]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],t8))){
t9=(C_word)C_i_car(t2);
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t5;
f_19725(t11,t10);}
else{
t9=t5;
f_19725(t9,C_SCHEME_UNDEFINED);}}}

/* k19723 in do2920 in k19693 in k19664 in next-in-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19725(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19700(t3,((C_word*)t0)[2],t2);}

/* k19708 in do2920 in k19693 in k19664 in next-in-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   graph-node-datum");
f_19081(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19144(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_19144r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19144r(t0,t1,t2,t3);}}

static void C_ccall f_19144r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19148,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19406,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19415,a[2]=t9,a[3]=((C_word)li232),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[428],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19415,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19419,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_19419(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[427],t2);}}

/* k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19424,a[2]=((C_word*)t0)[4],a[3]=((C_word)li231),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19424(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_19424r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19424r(t0,t1,t2,t3);}}

static void C_ccall f_19424r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19428,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_19428(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[425]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19566,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[425]);}
else{
t20=t19;
f_19566(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[426]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19601,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[118],lf[426]);}
else{
t21=t20;
f_19601(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19630,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[109],t3);}
else{
t21=t20;
f_19630(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k19628 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19630,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19637,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19645,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19643 in k19628 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19637(2,t2,C_SCHEME_UNDEFINED);}}

/* k19635 in k19628 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19428(t5,t4);}

/* k19599 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19605,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19605(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19603 in k19599 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19428(t7,t6);}

/* k19564 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19570(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19568 in k19564 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19428(t7,t6);}

/* k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19428,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19431,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19431(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[425]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19466,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[425]);}
else{
t6=t5;
f_19466(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[426]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19501,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[426]);}
else{
t7=t6;
f_19501(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19530,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_19530(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19528 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19530,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19545,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19543 in k19528 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19537(2,t2,C_SCHEME_UNDEFINED);}}

/* k19535 in k19528 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19431(t5,t4);}

/* k19499 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19505(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19503 in k19499 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19431(t7,t6);}

/* k19464 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19468 in k19464 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19431(t7,t6);}

/* k19429 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19431(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19431,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19434,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19434(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k19432 in k19429 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_19437(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_19437(t4,t3);}}

/* k19435 in k19432 in k19429 in k19426 in a19423 in k19417 in parse-graph-item in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19437(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19437,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[422],t5,t6,t7));}

/* k19404 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19148(2,t3,t2);}

/* k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19148,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19151,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_19151(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19311,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_19311(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19346,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_19346(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19375,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_19375(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k19373 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19375,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19390,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19388 in k19373 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19382(2,t2,C_SCHEME_UNDEFINED);}}

/* k19380 in k19373 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19151(t5,t4);}

/* k19344 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19350,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19350(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19348 in k19344 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19151(t7,t6);}

/* k19309 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19315(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19313 in k19309 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19151(t7,t6);}

/* k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19151,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19154,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19154(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19211,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_19211(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19246,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_19246(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19275,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_19275(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19273 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19275,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19290,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19288 in k19273 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19282(2,t2,C_SCHEME_UNDEFINED);}}

/* k19280 in k19273 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19154(t5,t4);}

/* k19244 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19246,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19250,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19250(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19248 in k19244 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19154(t7,t6);}

/* k19209 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19215,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19215(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19213 in k19209 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19154(t7,t6);}

/* k19152 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19154,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19157,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19157(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k19155 in k19152 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19160,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k19158 in k19155 in k19152 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19160,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19166,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19172,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[424],"next-in-graph"),t5);}

/* a19171 in k19158 in k19155 in k19152 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19172,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19178,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19190,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t5,t3);}

/* k19188 in a19171 in k19158 in k19155 in k19152 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a19177 in a19171 in k19158 in k19155 in k19152 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19178(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19178,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 84   graph-node-datum");
f_19081(t1,t2);}

/* k19164 in k19158 in k19155 in k19152 in k19149 in k19146 in make-graph in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_19166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_19081(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19081,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[422]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18741(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18741,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18744,a[2]=t4,a[3]=((C_word)li223),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18923,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t6,t2);}

/* k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18927,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13490(t2,((C_word*)t0)[4]);}

/* k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18927,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18929,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li226),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_18929(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18929(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18929,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_18939(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_18939(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18854,a[2]=t13,a[3]=((C_word)li225),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_18854(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2746 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18854(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18854,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18864,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_18864(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_18864(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k18862 in do2746 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18864,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[411]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18871,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_18871(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_18871(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_18871(t9,(C_word)C_eqp(t8,lf[411]));}}}}

/* k18869 in k18862 in do2746 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_18854(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k18937 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18939,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[420],((C_word*)t0)[6]);}
else{
t3=t2;
f_18942(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_18929(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k18940 in k18937 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18946,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 84   select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_18744(t7,t2,t4,t6);}

/* k18944 in k18940 in k18937 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18946,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18949,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_18949(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_18949(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18966,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li224),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18966(t8,t3,((C_word*)t0)[3]);}}}

/* do2770 in k18944 in k18940 in k18937 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18966(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_18966,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18982,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13481(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k18980 in do2770 in k18944 in k18940 in k18937 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k18947 in k18944 in k18940 in k18937 in do2761 in k18925 in k18921 in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18744(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18744,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18812,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranfloat");
f_7461(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18756,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li222),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_18756(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2730 in select-output in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18756(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18756,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 84   select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_18744(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18792,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_18792(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(t9,t11);}}}

/* k18790 in do2730 in select-output in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18792,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_18756(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k18810 in select-output in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18812,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18817,a[2]=t3,a[3]=t1,a[4]=((C_word)li221),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_18817(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2740 in k18810 in select-output in next-in-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18817(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18817,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18254(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_18254r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18254r(t0,t1,t2,t3);}}

static void C_ccall f_18254r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18258,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18735,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18181,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li219),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_18181(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[419],((C_word*)t4)[1]);}}

/* do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18181(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18181,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18026,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_18026(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t13=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[418],((C_word*)t11)[1]);}}}

/* k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18026,2,t0,t1);}
t2=(C_word)C_i_member(lf[414],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18032,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_18032(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[416],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_18032(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 84   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[417],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18032,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18044,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18117,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li218),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_18117(t17,t13);}

/* do2609 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_18117,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t14=t1;
t1=t14;
goto loop;}}

/* k18042 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18044,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18060,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li217),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a18059 in k18042 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18060(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18060,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18064,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_18064(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_18064(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_18064(t13,t12);}}

/* k18062 in a18059 in k18042 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18064(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18064,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18067,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_18067(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_18067(t5,t4);}}

/* k18065 in k18062 in a18059 in k18042 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18067,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k18045 in k18042 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k18056 in k18045 in k18042 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18058,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_18198(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[415],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_18198(2,t10,t9);}}

/* k18196 in k18056 in k18045 in k18042 in k18030 in k18024 in do2631 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18198,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_18181(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k18733 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18258(2,t3,t2);}

/* k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18258,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18261,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18261(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[377]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18605,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[377]);}
else{
t22=t21;
f_18605(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[378]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18640,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[378]);}
else{
t23=t22;
f_18640(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[413]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18675,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[413]);}
else{
t24=t23;
f_18675(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18704,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)t0)[4]);}
else{
t24=t23;
f_18704(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18702 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18704,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18719,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18717 in k18702 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18711(2,t2,C_SCHEME_UNDEFINED);}}

/* k18709 in k18702 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18261(t5,t4);}

/* k18673 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18679,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18679(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18677 in k18673 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18261(t7,t6);}

/* k18638 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18644(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18642 in k18638 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18261(t7,t6);}

/* k18603 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18609(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18607 in k18603 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18261(t7,t6);}

/* k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18261,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18264(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18470,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_18470(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18505,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_18505(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[413]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18540,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[413]);}
else{
t8=t7;
f_18540(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18569,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_18569(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18567 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18569,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18584,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18582 in k18567 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18576(2,t2,C_SCHEME_UNDEFINED);}}

/* k18574 in k18567 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18264(t5,t4);}

/* k18538 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18542 in k18538 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18264(t7,t6);}

/* k18503 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18507 in k18503 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18264(t7,t6);}

/* k18468 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18472 in k18468 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18264(t7,t6);}

/* k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18264,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18267,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18267(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18335,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_18335(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18370,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_18370(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[413]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18405,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[413]);}
else{
t8=t7;
f_18405(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18434,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_18434(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18432 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18434,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18449,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18447 in k18432 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18441(2,t2,C_SCHEME_UNDEFINED);}}

/* k18439 in k18432 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18267(t5,t4);}

/* k18403 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18409,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18409(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18407 in k18403 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18267(t7,t6);}

/* k18368 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18374(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18372 in k18368 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18267(t7,t6);}

/* k18333 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18337 in k18333 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18267(t7,t6);}

/* k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18267,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18270,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18270(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18273,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18279,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18306,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[412],"next-in-markov"),t4);}

/* a18305 in k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18306,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18314,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t3);}

/* k18312 in a18305 in k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18277 in k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18282,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18282(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18292,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 84   make-list");
t7=C_retrieve(lf[83]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[411]);}}

/* k18290 in k18277 in k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18282(t3,t2);}

/* k18280 in k18277 in k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_18282(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18282,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13481(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18283 in k18280 in k18277 in k18271 in k18268 in k18265 in k18262 in k18259 in k18256 in make-markov in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17821(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17821,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17825,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t3,t2);}

/* k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13328(t2,((C_word*)t0)[2]);}

/* k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17831,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13256(t2,((C_word*)t0)[2]);}

/* k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17831,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18000,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t5=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t1,C_fix(4));}

/* k17998 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18000,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17837(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18013,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_13106(t2,((C_word*)t0)[2]);}}

/* k18011 in k17998 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18017,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-length");
f_13124(t2,((C_word*)t0)[2]);}

/* k18015 in k18011 in k17998 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_18017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 84   recalc-weightings");
f_17721(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_17837(2,t2,C_SCHEME_UNDEFINED);}}

/* k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_17843(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17974,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17993,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-count");
f_16871(t4,((C_word*)t0)[4]);}}

/* k17991 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17993,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 84   random-item-count-set!");
f_16862(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17972 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-count");
f_16871(t2,((C_word*)t0)[2]);}

/* k17979 in k17972 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17985,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-min");
f_16835(t2,((C_word*)t0)[2]);}

/* k17983 in k17979 in k17972 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17843(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17843(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17843,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16781(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17849,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13490(t2,((C_word*)t0)[2]);}}

/* k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17849,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17853,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17891,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17933,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   pick");
f_17853(t7,t2,t1);}

/* k17931 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17933,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17935,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li214),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_17935(t5,((C_word*)t0)[2],t1);}

/* do2583 in k17931 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17935(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17935,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17954,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17957,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-max");
f_16853(t4,t2);}

/* k17955 in do2583 in k17931 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17957,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17964,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-count");
f_16871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_17954(t2,C_SCHEME_FALSE);}}

/* k17962 in k17955 in do2583 in k17931 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17968,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-max");
f_16853(t2,((C_word*)t0)[2]);}

/* k17966 in k17962 in k17955 in do2583 in k17931 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17954(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k17952 in do2583 in k17931 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17954,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17950,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pick");
f_17853(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k17948 in k17952 in do2583 in k17931 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17935(t2,((C_word*)t0)[2],t1);}

/* k17889 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17894,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]))){
t3=t2;
f_17894(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17908,a[2]=t4,a[3]=((C_word)li213),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_17908(t6,t2,((C_word*)t0)[2]);}}

/* do2587 in k17889 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17908(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17908,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17918,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-count-set!");
f_16862(t3,t4,C_fix(0));}}

/* k17916 in do2587 in k17889 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17908(t3,((C_word*)t0)[2],t2);}

/* k17892 in k17889 in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16781(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17853(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17853,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17861,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranfloat");
f_7461(t4,t3);}

/* k17859 in pick in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17861,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17863,a[2]=t3,a[3]=((C_word)li211),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_17863(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2578 in k17859 in pick in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17863(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17863,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17884,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-index");
f_16799(t4,t5);}

/* k17882 in do2578 in k17859 in pick in k17847 in k17841 in k17835 in k17829 in k17826 in k17823 in next-in-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_17863(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17721(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17721,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17819,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t2);}

/* k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17819,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[409];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17728,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17778,a[2]=t7,a[3]=t4,a[4]=((C_word)li209),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_17778(t9,t5,t2);}

/* do2550 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17778(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17778,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17807,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17811,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-weight");
f_16817(t4,t5);}}

/* k17809 in do2550 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(((C_word*)t0)[2],t1);}

/* k17805 in do2550 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17807,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   random-item-index-set!");
f_16790(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k17790 in k17805 in do2550 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17778(t3,((C_word*)t0)[2],t2);}

/* k17726 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17728,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17736,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li208),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_17736(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13481(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2556 in k17726 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17736(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17736,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13481(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17769,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t6,a[6]=t5,a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-index");
f_16799(t7,t8);}}

/* k17767 in do2556 in k17726 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17769,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   random-item-index-set!");
f_16790(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k17751 in k17767 in do2556 in k17726 in k17817 in recalc-weightings in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17736(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16954(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_16954r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16954r(t0,t1,t2,t3);}}

static void C_ccall f_16954r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16958,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17271,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17271(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17271,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17278,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_17278(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_17278(t9,t8);}}

/* k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17278(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17278,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17281,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17281(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[406]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17584,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[406]);}
else{
t22=t21;
f_17584(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[407]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17619,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[407]);}
else{
t23=t22;
f_17619(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[408]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17654,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[408]);}
else{
t24=t23;
f_17654(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17683,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_17683(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17681 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17683,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17698,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17696 in k17681 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17690(2,t2,C_SCHEME_UNDEFINED);}}

/* k17688 in k17681 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17281(t5,t4);}

/* k17652 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17658,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17658(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17656 in k17652 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17281(t7,t6);}

/* k17617 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17623(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17621 in k17617 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17281(t7,t6);}

/* k17582 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17588(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17586 in k17582 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17281(t7,t6);}

/* k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17281(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17281,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17284,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17284(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17449,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[406]);}
else{
t6=t5;
f_17449(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17484,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[407]);}
else{
t7=t6;
f_17484(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17519,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[408]);}
else{
t8=t7;
f_17519(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17548,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_17548(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17546 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17548,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17555,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17563,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17561 in k17546 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17555(2,t2,C_SCHEME_UNDEFINED);}}

/* k17553 in k17546 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17284(t5,t4);}

/* k17517 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17523,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17523(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17521 in k17517 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17284(t7,t6);}

/* k17482 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17488,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17488(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17486 in k17482 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17284(t7,t6);}

/* k17447 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17451 in k17447 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17284(t7,t6);}

/* k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17284(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17284,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17287,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17287(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17314,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[406]);}
else{
t6=t5;
f_17314(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17349,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[407]);}
else{
t7=t6;
f_17349(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17384,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[408]);}
else{
t8=t7;
f_17384(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17413,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_17413(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17411 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17413,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17428,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17426 in k17411 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17420(2,t2,C_SCHEME_UNDEFINED);}}

/* k17418 in k17411 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17287(t5,t4);}

/* k17382 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17384,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17388,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17388(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17386 in k17382 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17287(t7,t6);}

/* k17347 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17353(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17351 in k17347 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17287(t7,t6);}

/* k17312 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17318(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17316 in k17312 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17287(t7,t6);}

/* k17285 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17287(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17287,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17290,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17290(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)((C_word*)t0)[2])[1]);}}

/* k17288 in k17285 in k17282 in k17279 in k17276 in %make-random-item in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17290,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[395],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16961,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16967,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17235,a[2]=t8,a[3]=t6,a[4]=((C_word)li205),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a17234 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17235(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17235,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17239,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-min");
f_16835(t3,t2);}

/* k17237 in a17234 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-max");
f_16853(t2,((C_word*)t0)[2]);}

/* k17240 in k17237 in a17234 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-weight");
f_16817(t2,((C_word*)t0)[2]);}

/* k17243 in k17240 in k17237 in a17234 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16781(t2,((C_word*)t0)[2]);}

/* k17246 in k17243 in k17240 in k17237 in a17234 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17261,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t3,t1);}

/* k17259 in k17246 in k17243 in k17240 in k17237 in a17234 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17261,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17251(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_17251(t2,C_SCHEME_UNDEFINED);}}

/* k17249 in k17246 in k17243 in k17240 in k17237 in a17234 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_17251(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16967,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16974,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17230,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t7=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(4));}
else{
t6=t5;
f_16974(t6,C_SCHEME_UNDEFINED);}}

/* k17228 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16974(t3,t2);}

/* k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16974,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_16977,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16977(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17141,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_17141(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17176,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_17176(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17205,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[9]);}
else{
t19=t18;
f_17205(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17203 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17205,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17220,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17218 in k17203 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17212(2,t2,C_SCHEME_UNDEFINED);}}

/* k17210 in k17203 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16977(t5,t4);}

/* k17174 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_17180(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17178 in k17174 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16977(t7,t6);}

/* k17139 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_17145(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17143 in k17139 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16977(t7,t6);}

/* k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16977,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16980,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16980(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17041,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_17041(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17076,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_17076(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17105,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_17105(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17103 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17105,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17112,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17120,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17118 in k17103 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17112(2,t2,C_SCHEME_UNDEFINED);}}

/* k17110 in k17103 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16980(t5,t4);}

/* k17074 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_17080(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17078 in k17074 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16980(t7,t6);}

/* k17039 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17045,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_17045(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17043 in k17039 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16980(t7,t6);}

/* k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16980(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16980,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16983,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16983(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k16981 in k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16986,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16998,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[405],"next-in-weighting"),t4);}

/* a16997 in k16981 in k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16998(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16998,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17004,a[2]=t2,a[3]=((C_word)li203),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17020,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t5,t3);}

/* k17018 in a16997 in k16981 in k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a17003 in a16997 in k16981 in k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17004(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17004,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17012,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16781(t3,t2);}

/* k17010 in a17003 in a16997 in k16981 in k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_17012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k16984 in k16981 in k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   recalc-weightings");
f_17721(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_16989(2,t3,C_SCHEME_UNDEFINED);}}

/* k16987 in k16984 in k16981 in k16978 in k16975 in k16972 in k16965 in k16959 in k16956 in make-weighting in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16871(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16871,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16862(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16862,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[395]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16853(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16853,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16835(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16835,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16817(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16817,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16799(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16799,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16790(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16790,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[395]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16781(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16781,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16559(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16559,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16562,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16609,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t2);}

/* k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16612,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16635,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16754,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13490(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_16612(t4,C_SCHEME_UNDEFINED);}}

/* k16752 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(((C_word*)t0)[2],t1);}

/* k16633 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16635,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16642,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16689,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13292(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16716,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13292(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16735,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13292(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16750,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13292(t3,((C_word*)t0)[2]);}}

/* k16748 in k16633 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16750,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   rotate-items");
t3=((C_word*)t0)[5];
f_16562(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k16733 in k16633 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16735,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   rotate-items");
t3=((C_word*)t0)[5];
f_16562(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k16714 in k16633 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16716,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   rotate-items");
t3=((C_word*)t0)[6];
f_16562(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k16687 in k16633 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16689,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 84   rotate-items");
t4=((C_word*)t0)[7];
f_16562(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k16640 in k16633 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16612(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k16610 in k16607 in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16612(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16562(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_16562,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16568,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li192),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_16568(t10,t1,t3);}

/* do2319 in rotate-items in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16568(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16568,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16584,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   list-set!");
t7=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k16582 in do2319 in rotate-items in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16587,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   list-set!");
t4=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k16585 in k16582 in do2319 in rotate-items in next-in-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16587,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16568(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16085(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_16085r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16085r(t0,t1,t2,t3);}}

static void C_ccall f_16085r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16089,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16549,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   append");
t7=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16089(t8,t7);}}

/* k16547 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16089(t3,t2);}

/* k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16089,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16092,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16092(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[377]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16422,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[377]);}
else{
t22=t21;
f_16422(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[378]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16457,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[378]);}
else{
t23=t22;
f_16457(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[393]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16492,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[393]);}
else{
t24=t23;
f_16492(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16521,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)t0)[4]);}
else{
t24=t23;
f_16521(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16519 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16521,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16536,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16534 in k16519 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16528(2,t2,C_SCHEME_UNDEFINED);}}

/* k16526 in k16519 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16092(t5,t4);}

/* k16490 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16492,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16496,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16496(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16494 in k16490 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16092(t7,t6);}

/* k16455 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16461(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16459 in k16455 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16092(t7,t6);}

/* k16420 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16426(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16424 in k16420 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16092(t7,t6);}

/* k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16092(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16092,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16095(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16287,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_16287(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16322,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_16322(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[393]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16357,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[393]);}
else{
t8=t7;
f_16357(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16386,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_16386(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16384 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16386,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16401,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16399 in k16384 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16393(2,t2,C_SCHEME_UNDEFINED);}}

/* k16391 in k16384 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16095(t5,t4);}

/* k16355 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16361(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16359 in k16355 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16095(t7,t6);}

/* k16320 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16322,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16326,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16326(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16324 in k16320 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16095(t7,t6);}

/* k16285 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16291(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16289 in k16285 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16095(t7,t6);}

/* k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16095(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16095,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16098,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16098(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16152,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_16152(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16187,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_16187(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[393]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16222,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[393]);}
else{
t8=t7;
f_16222(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16251,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_16251(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16249 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16251,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16266,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16264 in k16249 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16258(2,t2,C_SCHEME_UNDEFINED);}}

/* k16256 in k16249 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16098(t5,t4);}

/* k16220 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16226,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16226(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16224 in k16220 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16098(t7,t6);}

/* k16185 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16191,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16191(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16189 in k16185 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16098(t7,t6);}

/* k16150 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16156,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16156(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16154 in k16150 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16098(t7,t6);}

/* k16096 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16098(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16098,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16101,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16101(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k16099 in k16096 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k16102 in k16099 in k16096 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16104,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16110,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16119,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[392],"next-in-rotation"),t5);}

/* a16118 in k16102 in k16099 in k16096 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16119,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16131,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t3);}

/* k16129 in a16118 in k16102 in k16099 in k16096 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16108 in k16102 in k16099 in k16096 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13481(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k16111 in k16108 in k16102 in k16099 in k16096 in k16093 in k16090 in k16087 in make-rotation in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16009(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16009,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16013,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t3,t2);}

/* k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16016,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16032,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13292(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_16016(2,t4,C_SCHEME_UNDEFINED);}}

/* k16030 in k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16032,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16042,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranint");
f_7454(t3,t1);}

/* k16040 in k16030 in k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16042,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16044,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li188),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16044(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2219 in k16040 in k16030 in k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_16044(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16044,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16061,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 84   list-set!");
t10=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k16059 in do2219 in k16040 in k16030 in k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16064,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   list-set!");
t3=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k16062 in k16059 in do2219 in k16040 in k16030 in k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16064,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16075,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranint");
f_7454(t3,((C_word*)t0)[2]);}

/* k16073 in k16062 in k16059 in do2219 in k16040 in k16030 in k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_16044(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k16014 in k16011 in next-in-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_16016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15746(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15746r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15746r(t0,t1,t2,t3);}}

static void C_ccall f_15746r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15750,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15999,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   append");
t7=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15750(t8,t7);}}

/* k15997 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15750(t3,t2);}

/* k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15750(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15750,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15753,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15753(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15907,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_15907(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15942,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_15942(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15971,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_15971(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15969 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15971,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15986,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15984 in k15969 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15978(2,t2,C_SCHEME_UNDEFINED);}}

/* k15976 in k15969 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15753(t5,t4);}

/* k15940 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15946(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15944 in k15940 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15753(t7,t6);}

/* k15905 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15911,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15911(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15909 in k15905 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15753(t7,t6);}

/* k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15753(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15753,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15756,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15756(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15807,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_15807(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15842,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_15842(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15871,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_15871(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15869 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15871,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15878,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15886,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15884 in k15869 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15878(2,t2,C_SCHEME_UNDEFINED);}}

/* k15876 in k15869 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15756(t5,t4);}

/* k15840 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15846(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15844 in k15840 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15756(t7,t6);}

/* k15805 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15811(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15809 in k15805 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15756(t7,t6);}

/* k15754 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15756(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15756,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15759,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15759(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k15757 in k15754 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15762,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k15760 in k15757 in k15754 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15762,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15768,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15774,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[390],"next-in-heap"),t5);}

/* a15773 in k15760 in k15757 in k15754 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15774,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15786,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t3);}

/* k15784 in a15773 in k15760 in k15757 in k15754 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15766 in k15760 in k15757 in k15754 in k15751 in k15748 in make-heap in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15710(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15710,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15714,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t3,t2);}

/* k15712 in next-in-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15714,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15723,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15730,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13328(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15736,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 84   pattern-data-set!");
f_13265(t4,((C_word*)t0)[2],t5);}}

/* k15734 in k15712 in next-in-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k15728 in k15712 in next-in-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[2],t1,C_fix(1));}

/* k15721 in k15712 in next-in-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15463(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15463r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15463r(t0,t1,t2,t3);}}

static void C_ccall f_15463r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15467,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15467(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15467(t8,t7);}}

/* k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15467(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15467,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15470,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15470(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15616,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_15616(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15651,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_15651(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15680,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_15680(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15678 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15680,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15695,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15693 in k15678 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15687(2,t2,C_SCHEME_UNDEFINED);}}

/* k15685 in k15678 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15470(t5,t4);}

/* k15649 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15655(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15653 in k15649 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15470(t7,t6);}

/* k15614 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15620(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15618 in k15614 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15470(t7,t6);}

/* k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15470,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15473,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15473(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15516,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_15516(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15551,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_15551(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15580,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_15580(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15578 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15580,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15595,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15593 in k15578 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15587(2,t2,C_SCHEME_UNDEFINED);}}

/* k15585 in k15578 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15473(t5,t4);}

/* k15549 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15555(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15553 in k15549 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15473(t7,t6);}

/* k15514 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15520(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15518 in k15514 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15473(t7,t6);}

/* k15471 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15473(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15473,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15476,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15476(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k15474 in k15471 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k15477 in k15474 in k15471 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15479,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15485,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15487,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[388],"next-in-line"),t4);}

/* a15486 in k15477 in k15474 in k15471 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15487(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15487,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15495,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t3);}

/* k15493 in a15486 in k15477 in k15474 in k15471 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15483 in k15477 in k15474 in k15471 in k15468 in k15465 in make-line in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15248(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15248,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15252,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13490(t3,t2);}

/* k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15252,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[380]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15258,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15282,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[380]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15461,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   palin-len");
f_14689(t8,t1);}}

/* k15459 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15461,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15414,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   palin-inc-set!");
f_14698(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_15258(2,t2,C_SCHEME_UNDEFINED);}}

/* k15412 in k15459 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15414,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[380]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_15426(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_15426(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_15426(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_15426(t7,C_SCHEME_FALSE);}}}

/* k15424 in k15412 in k15459 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15426(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15426,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15258(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15258(2,t4,t3);}}

/* k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15285,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   palin-len");
f_14689(t2,((C_word*)t0)[2]);}

/* k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15285,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[380]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t7=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k15289 in k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   palin-inc-set!");
f_14698(t2,((C_word*)t0)[2],C_fix(1));}

/* k15292 in k15289 in k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15382,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_15382(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_15382(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_15382(t5,C_SCHEME_FALSE);}}}

/* k15380 in k15292 in k15289 in k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15382(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_15297(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_15297(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_15297(t3,t2);}}

/* k15295 in k15292 in k15289 in k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_15297(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15297,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15376,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13256(t3,((C_word*)t0)[2]);}

/* k15374 in k15295 in k15292 in k15289 in k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logtest");
t2=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(2));}

/* k15301 in k15295 in k15292 in k15289 in k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15303,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13328(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_15258(2,t2,C_SCHEME_UNDEFINED);}}

/* k15304 in k15301 in k15295 in k15292 in k15289 in k15283 in k15280 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15306,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[385]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[386]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[3],t1,t2);}}}}

/* k15256 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[380]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[380]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t9=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k15259 in k15256 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t2,((C_word*)t0)[2]);}

/* k15266 in k15259 in k15256 in k15250 in next-in-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14778(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14778r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14778r(t0,t1,t2,t3);}}

static void C_ccall f_14778r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14782,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14782(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14782(t8,t7);}}

/* k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14782,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14785,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_14785(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[377]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15119,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[377]);}
else{
t22=t21;
f_15119(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[378]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15154,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[378]);}
else{
t23=t22;
f_15154(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[384]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15189,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[384]);}
else{
t24=t23;
f_15189(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15218,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)t0)[4]);}
else{
t24=t23;
f_15218(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15216 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15218,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15225,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15233,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15231 in k15216 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15225(2,t2,C_SCHEME_UNDEFINED);}}

/* k15223 in k15216 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14785(t5,t4);}

/* k15187 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15193,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15193(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15191 in k15187 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14785(t7,t6);}

/* k15152 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15154,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15158,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15158(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15156 in k15152 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14785(t7,t6);}

/* k15117 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15123,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15123(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15121 in k15117 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14785(t7,t6);}

/* k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14785(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14785,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14788(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14984,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_14984(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15019,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_15019(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[384]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15054,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[384]);}
else{
t8=t7;
f_15054(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15083,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_15083(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15081 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15083,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15098,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15096 in k15081 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15090(2,t2,C_SCHEME_UNDEFINED);}}

/* k15088 in k15081 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14788(t5,t4);}

/* k15052 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15058(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15056 in k15052 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14788(t7,t6);}

/* k15017 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15023,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15023(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15021 in k15017 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_15023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14788(t7,t6);}

/* k14982 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14988,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14988(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14986 in k14982 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14788(t7,t6);}

/* k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14788(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14788,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14791,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14791(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14849,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_14849(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14884,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_14884(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[384]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14919,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[384]);}
else{
t8=t7;
f_14919(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14948,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_14948(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14946 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14948,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14963,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14961 in k14946 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14955(2,t2,C_SCHEME_UNDEFINED);}}

/* k14953 in k14946 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14791(t5,t4);}

/* k14917 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14923(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14921 in k14917 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14791(t7,t6);}

/* k14882 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14888(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14886 in k14882 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14791(t7,t6);}

/* k14847 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14853,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14853(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14851 in k14847 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14791(t7,t6);}

/* k14789 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14791(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14791,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14794,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14794(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k14792 in k14789 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14797,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k14795 in k14792 in k14789 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14797,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14803,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14820,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[383],"next-in-palindrome"),t5);}

/* a14819 in k14795 in k14792 in k14789 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14820,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14828,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t3);}

/* k14826 in a14819 in k14795 in k14792 in k14789 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14801 in k14795 in k14792 in k14789 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14806,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[380],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13481(t2,((C_word*)t0)[4],t5);}

/* k14804 in k14801 in k14795 in k14792 in k14789 in k14786 in k14783 in k14780 in make-palindrome in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14698(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14698,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[380]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14689(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14689,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[380]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14617(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14617,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14621,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t3,t2);}

/* k14619 in next-in-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14624,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_14624(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_14624(t4,C_SCHEME_UNDEFINED);}}

/* k14622 in k14619 in next-in-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14624(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14362(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14362r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14362r(t0,t1,t2,t3);}}

static void C_ccall f_14362r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14366,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14366(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14366(t8,t7);}}

/* k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14366,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14369,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14369(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14523,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_14523(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14558,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_14558(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14587,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_14587(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14585 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14587,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14594,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14602,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14600 in k14585 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14594(2,t2,C_SCHEME_UNDEFINED);}}

/* k14592 in k14585 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14369(t5,t4);}

/* k14556 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14562,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14562(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14560 in k14556 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14369(t7,t6);}

/* k14521 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14527,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14527(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14525 in k14521 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14369(t7,t6);}

/* k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14369(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14369,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14372,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14372(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14423,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_14423(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14458,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_14458(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14487,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_14487(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14485 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14487,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14494,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14502,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14500 in k14485 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14494(2,t2,C_SCHEME_UNDEFINED);}}

/* k14492 in k14485 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14372(t5,t4);}

/* k14456 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14460 in k14456 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14372(t7,t6);}

/* k14421 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14427,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14427(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14425 in k14421 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14372(t7,t6);}

/* k14370 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14372(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14372,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14375,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14375(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k14373 in k14370 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14378,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13549(t2);}

/* k14376 in k14373 in k14370 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14378,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14384,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14390,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13559(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[376],"next-in-cycle"),t5);}

/* a14389 in k14376 in k14373 in k14370 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14390,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14402,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13274(t4,t3);}

/* k14400 in a14389 in k14376 in k14373 in k14370 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14382 in k14376 in k14373 in k14370 in k14367 in k14364 in make-cycle in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14247(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14247,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14360,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t3,t2);}

/* k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14360,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13328(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14257,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14260,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14345,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-stream");
f_13142(t7,t1);}

/* k14343 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14345,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14356,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   period-stream");
f_13142(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_14260(2,t2,C_SCHEME_UNDEFINED);}}

/* k14354 in k14343 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(((C_word*)t0)[2],t1);}

/* k14350 in k14343 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t4=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   period-length");
f_13124(t2,((C_word*)t0)[3]);}

/* k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14342,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14268,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[333]);
t7=t4;
f_14268(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 84   period-length");
f_13124(t4,((C_word*)t0)[3]);}}

/* k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14268,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14271,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14277,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14332,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13256(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_14277(2,t5,C_SCHEME_FALSE);}}

/* k14330 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logtest");
t2=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(8));}

/* k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14277,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14296,a[2]=t3,a[3]=((C_word)li173),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   map-pattern-data");
f_14201(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14271(t2,C_SCHEME_UNDEFINED);}}

/* a14295 in k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14296(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14296,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14325,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   reset-period");
f_14247(t3,t2);}

/* k14323 in a14295 in k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14325,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13328(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k14304 in k14323 in a14295 in k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14309,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14321,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-omit");
f_13178(t3,t1);}

/* k14319 in k14304 in k14323 in a14295 in k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14321,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-omit-set!");
f_13169(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14307 in k14304 in k14323 in a14295 in k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14309,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k14278 in k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14280,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 84   max");
t4=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_14271(t2,C_SCHEME_UNDEFINED);}}

/* k14288 in k14278 in k14275 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14271(t3,t2);}

/* k14269 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14271(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14271,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k14272 in k14269 in k14266 in k14340 in k14258 in k14255 in k14358 in reset-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14201(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14201,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[343]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14192(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14192,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[343]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13900(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13900,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13907,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t3,t2);}

/* k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13907,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13328(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 84   obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}}

/* k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13910,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13913,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14181,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_13106(t5,t1);}

/* k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14181,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14173,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-reps");
f_13196(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_13913(2,t2,C_SCHEME_UNDEFINED);}}

/* k14171 in k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14173,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14165,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value-set!");
f_13337(t5,((C_word*)t0)[4],lf[369]);}
else{
t5=((C_word*)t0)[2];
f_14136(t5,C_SCHEME_UNDEFINED);}}

/* k14163 in k14171 in k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-state-set!");
f_13355(t2,((C_word*)t0)[2],lf[368]);}

/* k14166 in k14163 in k14171 in k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[369]);
t3=((C_word*)t0)[2];
f_14136(t3,t2);}

/* k14134 in k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14136(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14136,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_14142(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14159,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   reset-period");
f_14247(t4,((C_word*)t0)[2]);}}

/* k14157 in k14134 in k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_14142(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k14140 in k14134 in k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14142(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14142,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[358]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value-set!");
f_13337(t3,((C_word*)t0)[2],lf[358]);}
else{
t2=((C_word*)t0)[3];
f_13913(2,t2,C_SCHEME_UNDEFINED);}}

/* k14144 in k14140 in k14134 in k14179 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-state-set!");
f_13355(((C_word*)t0)[3],((C_word*)t0)[2],lf[368]);}

/* k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13913,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13919,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13256(t2,((C_word*)t0)[3]);}}

/* k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13919,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13925,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14011,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t11=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,t1,C_fix(1));}

/* k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14011,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14014,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14027,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   next-in-pattern");
f_14192(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14034,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14123,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t4=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],C_fix(8));}}

/* k14121 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14123,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14130,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   period-length");
f_13124(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14034(t2,C_SCHEME_FALSE);}}

/* k14128 in k14121 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_14034(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14034(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14034,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li169),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14036(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14036(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14036,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14043,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14085,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li168),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_14085(t9,t5);}}

/* do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14085(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14085,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13310(t2,((C_word*)t0)[3]);}

/* k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14120,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(t1,lf[358]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14095,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14102,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14109,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   next-in-pattern");
f_14192(t4,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 84   next-in-pattern");
f_14192(t3,((C_word*)t0)[3]);}}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k14107 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14245,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t2,t1);}

/* k14243 in k14107 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14245,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14220,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13328(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14102(2,t2,((C_word*)t0)[2]);}}

/* k14218 in k14243 in k14107 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14241,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-omit");
f_13178(t2,t1);}

/* k14239 in k14218 in k14243 in k14107 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14241,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14229,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14237,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-omit");
f_13178(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_14102(2,t2,((C_word*)t0)[2]);}}

/* k14235 in k14239 in k14218 in k14243 in k14107 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14237,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-omit-set!");
f_13169(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14227 in k14239 in k14218 in k14243 in k14107 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_14102(2,t2,lf[358]);}

/* k14100 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13301(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14093 in k14118 in do1871 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_14085(t2,((C_word*)t0)[2]);}

/* k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14083,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13310(t3,((C_word*)t0)[3]);}

/* k14081 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(((C_word*)t0)[2],t1);}

/* k14045 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14047,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14066,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14079,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13310(t5,((C_word*)t0)[3]);}

/* k14077 in k14045 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(((C_word*)t0)[2],t1);}

/* k14064 in k14045 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14066,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14074,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13310(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[368]);
t3=((C_word*)t0)[3];
f_14050(t3,t2);}}

/* k14072 in k14064 in k14045 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-state");
f_13364(((C_word*)t0)[2],t1);}

/* k14068 in k14064 in k14045 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14050(t3,t2);}

/* k14048 in k14045 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_14050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14050,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14053,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[3])[1],lf[358]))){
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13301(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_14053(2,t4,t3);}}

/* k14051 in k14048 in k14045 in k14041 in do1867 in k14032 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_14036(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k14025 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13301(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14012 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14014,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14018,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14023,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13310(t3,((C_word*)t0)[2]);}

/* k14021 in k14012 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(((C_word*)t0)[2],t1);}

/* k14016 in k14012 in k14009 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[368]);
t4=((C_word*)t0)[2];
f_13925(2,t4,t3);}

/* k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],lf[368]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13970,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13982,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_13106(t4,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14005,a[2]=((C_word*)t0)[6],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t5=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],C_fix(64));}}

/* k14003 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13301(((C_word*)t0)[3],((C_word*)t0)[2],lf[358]);}
else{
t2=((C_word*)t0)[3];
f_13985(2,t2,C_SCHEME_UNDEFINED);}}

/* k13983 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13991,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t3=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(16));}

/* k13989 in k13983 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13991,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14002,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_13106(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13928(2,t2,C_SCHEME_UNDEFINED);}}

/* k14000 in k13989 in k13983 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_14002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14002,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13980 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13982,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_13097(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13968 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13301(t2,((C_word*)t0)[2],lf[358]);}

/* k13971 in k13968 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_13928(2,t3,t2);}

/* k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13964,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_13106(t3,((C_word*)t0)[2]);}

/* k13962 in k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13964,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[368]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-reps");
f_13196(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_13931(2,t3,t2);}}

/* k13957 in k13962 in k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13959,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k13929 in k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13934,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13944,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_13934(t3,C_SCHEME_UNDEFINED);}}

/* k13942 in k13929 in k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13934(t3,t2);}

/* k13932 in k13929 in k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13934(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13934,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13937,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-state-set!");
f_13355(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13935 in k13932 in k13929 in k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13940,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value-set!");
f_13337(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13938 in k13935 in k13932 in k13929 in k13926 in k13923 in k13917 in k13911 in k13908 in k13905 in next-1 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13777(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_13777r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_13777r(t0,t1,t2,t3);}}

static void C_ccall f_13777r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13798,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li165),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_13798(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13836,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(t1,t2);}}

/* k13834 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13836,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13846,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k13844 in k13834 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13846,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13848,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li166),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13848(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1843 in k13844 in k13834 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13848(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13848,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_eqvp(((C_word*)t5)[1],lf[369]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13867,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13877,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   eop?");
t13=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k13875 in do1843 in k13844 in k13834 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13877,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_13867(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(t2,((C_word*)t0)[2]);}}

/* k13880 in k13875 in do1843 in k13844 in k13834 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13867(t3,t2);}

/* k13865 in do1843 in k13844 in k13834 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13867(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_13848(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1836 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13798(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13798,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13830,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   next-1");
f_13900(t4,((C_word*)t0)[2]);}}

/* k13828 in do1836 in next in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13830,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_13798(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13758(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13758,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13765,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t3,t2);}

/* k13763 in eod? in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13765,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13772,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value");
t3=C_retrieve2(lf[352],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[369]));}}

/* k13770 in k13763 in eod? in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   eod?");
t2=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13739(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13739,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13746,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t3,t2);}

/* k13744 in eop? in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13746,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13753,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-state");
f_13364(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[368]));}}

/* k13751 in k13744 in eop? in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   eop?");
t2=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13559(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13559,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13563,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data-set!");
f_13265(t12,t2,t3);}

/* k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13566,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13572,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13575,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13729,a[2]=t3,a[3]=((C_word)li161),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   map-pattern-data");
f_14201(t4,t5,((C_word*)t0)[7]);}

/* a13728 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13729(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13729,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13736,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13241(t3,t2);}

/* k13734 in a13728 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13578,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13727,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t4=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t3=t2;
f_13578(t3,C_SCHEME_UNDEFINED);}}

/* k13725 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13578(t3,t2);}

/* k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13578(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13578,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13710,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t8=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}
else{
t7=(C_word)C_eqp(t4,lf[364]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13720,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t9=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}
else{
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[365],t4);}}}

/* k13718 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13584(2,t3,t2);}

/* k13708 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13584(2,t3,t2);}

/* k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13584,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13590,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[360]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13690,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t8=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(32));}
else{
t7=(C_word)C_eqp(t4,lf[362]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13700,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t9=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(64));}
else{
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[363],t4);}}}

/* k13698 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13590(2,t3,t2);}

/* k13688 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13590(2,t3,t2);}

/* k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13653,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t4=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13653,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13661,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   lognot");
t4=*((C_word*)lf[3]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t3=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k13665 in k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13667,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13675,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13679,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   lognot");
t5=*((C_word*)lf[3]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t3=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}}

/* k13681 in k13665 in k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13593(t3,t2);}

/* k13677 in k13665 in k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logand");
t2=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13673 in k13665 in k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(16));}

/* k13669 in k13665 in k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13593(t3,t2);}

/* k13659 in k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logand");
t2=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13655 in k13651 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13593(t3,t2);}

/* k13591 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13593,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13596,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:*((C_word*)lf[10]+1));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t8=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k13594 in k13591 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13596,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13602,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_13602(t6,C_SCHEME_UNDEFINED);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13637,a[2]=t4,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t7=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(2));}}

/* k13635 in k13594 in k13591 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13602(t3,t2);}

/* k13600 in k13594 in k13591 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13602,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13605,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13615,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 84   make-period");
f_13085(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 84   make-period");
f_13085(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k13613 in k13600 in k13594 in k13591 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t4=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k13603 in k13600 in k13594 in k13591 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13608,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k13606 in k13603 in k13600 in k13594 in k13591 in k13588 in k13582 in k13576 in k13573 in k13570 in k13567 in k13564 in k13561 in initialize-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13549(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13549,NULL,1,t1);}
t2=lf[358];
t3=lf[358];
t4=lf[358];
t5=*((C_word*)lf[10]+1);
t6=lf[359];
t7=lf[360];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[343],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13490(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13490,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13481(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13481,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13364(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13364,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13355(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13355,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_13346 in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_13346(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13346,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13337(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13337,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13328(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13328,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13310(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13310,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13301(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13301,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13292(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13292,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13274(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13274,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13265(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13265,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13256(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13256,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13241(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13241,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[343]));}

/* period-reps in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13196(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13196,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13178(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13178,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13169(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13169,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13142(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13142,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13124(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13124,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13106(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13106,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13097(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13097,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k12939 in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_13085(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13085,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[333],t2,t3,t4,t5,t6,t7));}

/* parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12747(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12747,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12755,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12587,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_12587(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_12587(t12,(C_word)C_i_not(t11));}}

/* k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12587(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12587,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12594,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(t2,(C_word)C_a_i_list(&a,4,lf[138],lf[322],lf[143],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12595,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12620,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12622,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li136),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_12622(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12622(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12622,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[245]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_12632(t16,t13);}
else{
t13=t10;
f_12632(t13,C_SCHEME_UNDEFINED);}}}

/* k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12632(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12632,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t2,t3,((C_word*)t0)[3]);}

/* k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12636,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12639,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_12639(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[327],t5,lf[328]));}}

/* k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li134),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12700,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li135),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12699 in k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12700,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12690 in k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12691,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k12640 in k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12645,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   op-type?");
f_12595(t3,((C_word*)((C_word*)t0)[6])[1],lf[313]);}

/* k12659 in k12640 in k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12661,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_12645(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   op-type?");
f_12595(t2,((C_word*)((C_word*)t0)[6])[1],lf[326]);}}

/* k12666 in k12659 in k12640 in k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12668,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_12645(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[323],t2,lf[324],t3,lf[325]));}}
else{
t2=((C_word*)t0)[5];
f_12645(2,t2,C_SCHEME_UNDEFINED);}}

/* k12643 in k12640 in k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12645,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   append");
t6=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k12649 in k12643 in k12640 in k12637 in k12634 in k12630 in do1537 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_12622(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12618 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12755(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12595(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12595,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k12592 in k12585 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12594,2,t0,t1);}
t2=((C_word*)t0)[2];
f_12755(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k12753 in parse-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12755(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9682(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12333(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12333,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[316],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12355,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[319],t8,lf[320]));}
else{
t19=t17;
f_12355(2,t19,C_SCHEME_UNDEFINED);}}

/* k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12355,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[318]));}
else{
t9=t8;
f_12370(2,t9,C_SCHEME_UNDEFINED);}}

/* k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12373,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[106]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_12373(t6,t5);}
else{
t4=t2;
f_12373(t4,C_SCHEME_UNDEFINED);}}

/* k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12373,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12543,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li130),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12549,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li131),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12548 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12549(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12549,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12542 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12543,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   parse-then-else-dependents");
f_12202(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_12379(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12525,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9682(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k12523 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12379(t3,t2);}

/* k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12379(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12379,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   loop-operator-set!");
f_9429(t2,((C_word*)((C_word*)t0)[7])[1],lf[119]);}

/* k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12518,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t4=C_retrieve2(lf[132],"loop-looping");
f_9483(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k12516 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12518,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[216],t1);
C_trace("ChickenBridge.scm: 83   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12506,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[119],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12389,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_12402(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_12402(t7,(C_word)C_eqp(t6,lf[115]));}}

/* k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12402,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12409,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[317]));}
else{
t5=t4;
f_12409(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_12389(t2,C_SCHEME_UNDEFINED);}}

/* k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12412,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li128),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12479,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li129),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12478 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12479,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12464 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12473,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k12471 in a12464 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   parse-then-else-dependents");
f_12202(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k12410 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_12415(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12451,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9682(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k12449 in k12410 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12415(t3,t2);}

/* k12413 in k12410 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12415,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12444,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t4=C_retrieve2(lf[132],"loop-looping");
f_9483(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k12442 in k12413 in k12410 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12444,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[216],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12421,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9489(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k12419 in k12442 in k12413 in k12410 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9489(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k12422 in k12419 in k12442 in k12413 in k12410 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9682(t2,lf[119],t3);}

/* k12426 in k12422 in k12419 in k12442 in k12413 in k12410 in k12407 in k12400 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12389(t3,t2);}

/* k12387 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12389,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9489(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k12390 in k12387 in k12504 in k12380 in k12377 in k12374 in k12371 in k12368 in k12353 in parse-conditional in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12202(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12202,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12206,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12211,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li126),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_12211(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12211(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12211,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t12,t10,t11);}}

/* k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_12165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_12165(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[313]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[314]);
t8=t2;
f_12165(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_12165(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_12165(t3,C_SCHEME_FALSE);}}

/* k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12165(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12165,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_12228(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[311],t6,lf[312]));}}

/* k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12301,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li124),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12314,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li125),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12313 in k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12314(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12314,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12300 in k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12309,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12307 in a12300 in k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k12229 in k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k12233 in k12229 in k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12235,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12240,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_12240(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[245]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[310]));}
else{
t10=t5;
f_12240(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[115]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_12240(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12278,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t10,t11,((C_word*)t0)[3]);}}}}

/* k12276 in k12233 in k12229 in k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_12240(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_12240(2,t2,C_SCHEME_UNDEFINED);}}

/* k12238 in k12233 in k12229 in k12226 in k12163 in k12157 in do1470 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_12211(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12204 in parse-then-else-dependents in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12101,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12108,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[307],t13,lf[308]));}
else{
t13=t11;
f_12108(2,t13,C_SCHEME_UNDEFINED);}}

/* k12106 in parse-return in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12108,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12139,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k12137 in k12106 in parse-return in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12139,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12135,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k12133 in k12137 in k12106 in parse-return in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12135,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[138],lf[293],lf[143],t2));}

/* k12125 in k12137 in k12106 in parse-return in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12010(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12010,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12017,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[304],t15,lf[305]));}
else{
t15=t13;
f_12017(2,t15,C_SCHEME_UNDEFINED);}}

/* k12015 in parse-thereis in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12017,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k12083 in k12015 in parse-thereis in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12085,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12028,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[301]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_12028(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[302]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_12028(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[303]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_12028(t9,t8);}
else{
t8=t4;
f_12028(t8,C_SCHEME_UNDEFINED);}}}}

/* k12026 in k12083 in k12015 in parse-thereis in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_12028(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12028,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12039,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12055,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k12053 in k12026 in k12083 in k12015 in parse-thereis in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12055,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[138],lf[301],lf[143],t3,lf[146],t4));}

/* k12037 in k12026 in k12083 in k12015 in parse-thereis in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_12039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11944(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11944,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11955,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[298],t7,lf[299]));}
else{
t13=t12;
f_11955(2,t13,C_SCHEME_UNDEFINED);}}

/* k11953 in parse-while-until in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11958,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[296]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_11958(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[297]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[211],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_11958(t10,t9);}
else{
t5=t2;
f_11958(t5,C_SCHEME_UNDEFINED);}}}

/* k11956 in k11953 in parse-while-until in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11958(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11958,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11965,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[3])[1],lf[295]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(t2,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[143],t4));}

/* k11963 in k11956 in k11953 in parse-while-until in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11938(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11938,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[293],t2));}

/* parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11392,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11401,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11406,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11411,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11423,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[290],t7,lf[291]));}
else{
t30=t29;
f_11423(2,t30,C_SCHEME_UNDEFINED);}}

/* k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11423,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11434,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_11434(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[286]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11887,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[289]));}
else{
t11=t9;
f_11887(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_11434(2,t9,C_SCHEME_UNDEFINED);}}}

/* k11885 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 83   loop-variable?");
f_9759(t2,t3);}

/* k11891 in k11885 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11893,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_11434(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[287],t2,lf[288]));}}

/* k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11319,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li118),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11319(t9,t2,C_SCHEME_FALSE);}

/* do1292 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11319(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11319,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11333,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11344,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   loop-collectors");
t9=C_retrieve2(lf[129],"loop-collectors");
f_9447(3,t9,t7,t8);}}

/* k11342 in do1292 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11344,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11279,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li117),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_11279(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do1284 in k11342 in do1292 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11279(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11279,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11292,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_11292(t12,t11);}
else{
t10=t6;
f_11292(t10,C_SCHEME_UNDEFINED);}}}

/* k11290 in do1284 in k11342 in do1292 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11292(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_11279(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11331 in do1292 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_11319(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11438,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11441,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11871,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11875,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   collector-type");
f_11406(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_11441(2,t6,t5);}}

/* k11873 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[283];
t3=lf[284];
t4=lf[285];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_11871(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_11871(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_11871(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_11871(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k11869 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11871,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_11441(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11867,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   collector-type");
f_11406(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11865 in k11869 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11867,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[280],t1,lf[281],((C_word*)t0)[2],lf[282]));}

/* k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11444,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[263]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[264]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11487,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11525,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_11525(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 83   gensym");
t10=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[265]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11554,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   collector-acc");
f_11411(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[266]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[267]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t8=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[270]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[117]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_11661(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[274]);
t10=t8;
f_11661(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[279])));}}}}

/* k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11661(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11661,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11664,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11777,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11835,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t9,((C_word*)((C_word*)t0)[13])[1],lf[278]);}
else{
t9=t8;
f_11777(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11770,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   collector-acc");
f_11411(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_11444(t2,C_SCHEME_UNDEFINED);}}

/* k11768 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_11664(t6,t5);}

/* k11833 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11835,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11777(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k11775 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11777(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11777,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11781,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[277]);}

/* k11779 in k11775 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11781,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11785,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[276]);}

/* k11783 in k11779 in k11775 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11785,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,((C_word*)((C_word*)t0)[11])[1],lf[275]);}

/* k11825 in k11783 in k11779 in k11775 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11827,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11823,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k11821 in k11825 in k11783 in k11779 in k11775 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11823,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11801,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-collector");
f_11401(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k11799 in k11821 in k11825 in k11783 in k11779 in k11775 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11801,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11664(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_11664(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11662 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11664(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11664,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11667,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[117]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[271]);
t5=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[272],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[273],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_11667(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[274]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[271],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[272],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_11667(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[272],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[273],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_11667(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k11665 in k11662 in k11659 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11667,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_11444(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_11444(t2,C_SCHEME_UNDEFINED);}}

/* k11564 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11566,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[266]);
t3=(C_truep(t2)?lf[178]:lf[182]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11572,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11616,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_11616(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 83   gensym");
t9=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[269]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11649,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   collector-acc");
f_11411(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k11647 in k11564 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11572(t3,t2);}

/* k11614 in k11564 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11616,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k11640 in k11614 in k11564 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11642,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11624,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-collector");
f_11401(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k11622 in k11640 in k11614 in k11564 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11624,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11572(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[268],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_11572(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11570 in k11564 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11572(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11572,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k11610 in k11570 in k11564 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11612,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[268],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[119],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[216],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_11444(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k11552 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11487(t3,t2);}

/* k11523 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11525,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11547,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k11545 in k11523 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11547,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11533,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-collector");
f_11401(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k11531 in k11545 in k11523 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11533,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11487(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_11487(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11485 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11487,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[263]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11444(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_11444(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k11442 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11444(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11444,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11451,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11455,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k11453 in k11442 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11457 in k11453 in k11442 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11463,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11461 in k11457 in k11453 in k11442 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11467,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11465 in k11461 in k11457 in k11453 in k11442 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11467,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[138],((C_word*)t0)[5],lf[139],((C_word*)t0)[4],lf[141],((C_word*)t0)[3],lf[143],((C_word*)t0)[2],lf[146],t1,lf[140],t2,lf[142],C_SCHEME_END_OF_LIST));}

/* k11449 in k11442 in k11439 in k11436 in k11432 in k11421 in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11411(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11411,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11406(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11406,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11401(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11401,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11233,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11244,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[260],t6,lf[261]));}
else{
t12=t11;
f_11244(2,t12,C_SCHEME_UNDEFINED);}}

/* k11242 in parse-initially in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11244,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11259,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(t6,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[141],t7));}

/* k11257 in k11242 in parse-initially in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11195,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11206,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[257],t6,lf[258]));}
else{
t12=t11;
f_11206(2,t12,C_SCHEME_UNDEFINED);}}

/* k11204 in parse-finally in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11206,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11221,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(t6,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[145],t7));}

/* k11219 in k11204 in parse-finally in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11128(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11128,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11139,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11148,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li110),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_11148(t16,t12);}

/* do1241 in parse-do in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_11148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11148,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11158,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_11158(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t3,t4,((C_word*)t0)[5]);}}

/* k11156 in do1241 in parse-do in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11158,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[254],((C_word*)t0)[4],lf[255]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11171,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_11148(t7,((C_word*)t0)[7]);}}

/* k11169 in k11156 in do1241 in parse-do in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k11137 in parse-do in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11146,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(t2,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[3],lf[143],((C_word*)((C_word*)t0)[2])[1]));}

/* k11144 in k11137 in parse-do in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10935(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10935,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10942,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10995,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li108),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_10995(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10995(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10995,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_11005(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t7,t8,((C_word*)t0)[5]);}}

/* k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11005,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11016,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11119,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   loop-variable?");
f_9759(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k11117 in k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11119,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11025,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[243],((C_word*)((C_word*)t0)[10])[1],lf[244]));}
else{
t4=t3;
f_11025(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[245]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11047,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[246]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11076,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11084,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[247]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[231]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[248]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_11016(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[249],((C_word*)((C_word*)t0)[10])[1],lf[250]));}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[251],((C_word*)((C_word*)t0)[10])[1],lf[252]));}}}}}

/* k11082 in k11117 in k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11084,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11047(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k11074 in k11117 in k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11076,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11047(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k11045 in k11117 in k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_11016(2,t6,t5);}

/* k11023 in k11117 in k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11028,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[241],((C_word*)((C_word*)t0)[8])[1],lf[242]));}
else{
t3=t2;
f_11028(2,t3,C_SCHEME_UNDEFINED);}}

/* k11026 in k11023 in k11117 in k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_11016(2,t6,t5);}

/* k11014 in k11003 in do1197 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_11016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10995(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k10940 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10945,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[240]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10985,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10993,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_10945(2,t3,C_SCHEME_UNDEFINED);}}}

/* k10991 in k10940 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10993,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10945(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10983 in k10940 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10985,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10945(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10943 in k10940 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10952,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10956,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10954 in k10943 in k10940 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10960,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10958 in k10954 in k10943 in k10940 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10960,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[138],lf[239],lf[139],((C_word*)t0)[2],lf[141],t1));}

/* k10950 in k10943 in k10940 in parse-with in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10793(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10793,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10803,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10841,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li106),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_10841(t22,t18,C_SCHEME_FALSE);}

/* do1159 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10841(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10841,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_10851(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t5,t6,((C_word*)t0)[5]);}}

/* k10849 in do1159 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10851,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[237]));}
else{
t7=t6;
f_10862(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10860 in k10849 in do1159 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10862,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10865,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[231]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10874,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[232]));}
else{
t6=t5;
f_10874(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[233]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10899,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[234]));}
else{
t7=t6;
f_10899(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[235],((C_word*)((C_word*)t0)[12])[1],lf[236]));}}}

/* k10897 in k10860 in k10849 in do1159 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10899,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_10865(2,t10,t9);}

/* k10872 in k10860 in k10849 in do1159 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10874,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_10865(2,t8,t7);}

/* k10863 in k10860 in k10849 in do1159 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10841(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10801 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10810,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10839,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k10837 in k10801 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10839,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[138],lf[171],lf[139],t2,lf[141],t3,lf[143],t4,lf[144],t5));}

/* k10808 in k10801 in parse-general-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10442,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10449,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t8=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[229]);}

/* k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10449,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10455,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10683,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li104),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_10683(t25,t21,C_SCHEME_FALSE);}

/* do1092 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10683(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10683,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_10693(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t5,t6,((C_word*)t0)[4]);}}

/* k10691 in do1092 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10693,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[228]));}
else{
t7=t6;
f_10704(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10702 in k10691 in do1092 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10704,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10707,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[218]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10716,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_10716(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[227]);
if(C_truep(t6)){
t7=t5;
f_10716(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[210]);
t8=t5;
f_10716(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[214])));}}}

/* k10714 in k10702 in k10691 in do1092 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10716(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10716,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10719,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[220],((C_word*)((C_word*)t0)[9])[1],lf[221],((C_word*)((C_word*)t0)[10])[1],lf[222]));}
else{
t3=t2;
f_10719(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[201]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[223]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[210]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[224]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_10707(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[225],((C_word*)((C_word*)t0)[9])[1],lf[226]));}}}

/* k10717 in k10714 in k10702 in k10691 in do1092 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_10707(2,t7,t6);}

/* k10705 in k10702 in k10691 in do1092 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10683(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10681,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10677,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10677,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10466,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10483,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t7=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[213]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[214]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10559,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[217],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_10559(t9,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[217],((C_word*)t0)[4]);
t9=t7;
f_10559(t9,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10623,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_10623(t10,(C_word)C_eqp(t9,lf[219]));}
else{
t9=t8;
f_10623(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_10588(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k10621 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10623(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10623,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10588(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10588(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k10586 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10588(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10588,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10604,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[218]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[63],((C_word*)t0)[6]);
t5=t2;
f_10604(t5,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_10604(t4,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k10602 in k10586 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10604(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10604,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[104],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10466(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10557 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10559(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10559,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[215],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[216],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10466(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k10481 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[212]);}

/* k10484 in k10481 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10550,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t2,((C_word*)t0)[7],C_fix(0));}

/* k10548 in k10484 in k10481 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10550,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10546,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k10544 in k10548 in k10484 in k10481 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10546,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[93],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[179],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[178],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[211],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_10466(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k10464 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10466(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10466,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10473,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10477,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10475 in k10464 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10477,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[138],lf[171],lf[139],t1,lf[142],((C_word*)((C_word*)t0)[5])[1],lf[141],((C_word*)((C_word*)t0)[4])[1],lf[143],((C_word*)((C_word*)t0)[3])[1],lf[144],((C_word*)((C_word*)t0)[2])[1]));}

/* k10471 in k10464 in k10675 in k10679 in k10453 in k10447 in parse-sequence-iteration in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10395(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10395,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[207]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10410,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li101),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10428,a[2]=t2,a[3]=((C_word)li102),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a10427 in parse-repeat in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10428(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10428,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,t1,t2,t4);}

/* a10409 in parse-repeat in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[208]);}

/* k10420 in a10409 in parse-repeat in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10422,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[171],t1,lf[180],t2);
C_trace("ChickenBridge.scm: 83   parse-numerical-for");
t4=C_retrieve2(lf[170],"parse-numerical-for");
f_10013(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10013,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10023,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10222,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li99),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_10222(t31,t27,C_SCHEME_FALSE);}

/* do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10222(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10222,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_10232(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t5,t6,((C_word*)t0)[6]);}}

/* k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10232,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[205]));}
else{
t7=t6;
f_10243(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10243,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10246,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[184]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[174]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10258,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[185],((C_word*)((C_word*)t0)[12])[1],lf[186],((C_word*)((C_word*)t0)[9])[1],lf[187]));}
else{
t7=t6;
f_10258(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[180]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10279,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[188],((C_word*)((C_word*)t0)[12])[1],lf[189],((C_word*)((C_word*)t0)[3])[1],lf[190]));}
else{
t8=t7;
f_10279(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[191]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10300,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[192],((C_word*)((C_word*)t0)[12])[1],lf[193],((C_word*)((C_word*)t0)[3])[1],lf[194]));}
else{
t9=t8;
f_10300(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[176]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10321,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[195],((C_word*)((C_word*)t0)[12])[1],lf[196],((C_word*)((C_word*)t0)[3])[1],lf[197]));}
else{
t10=t9;
f_10321(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[183]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10342,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[198],((C_word*)((C_word*)t0)[12])[1],lf[199],((C_word*)((C_word*)t0)[3])[1],lf[200]));}
else{
t11=t10;
f_10342(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[201]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10363,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[202]));}
else{
t12=t11;
f_10363(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[203],((C_word*)((C_word*)t0)[12])[1],lf[204]));}}}}}}}

/* k10361 in k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_10246(2,t6,t5);}

/* k10340 in k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10246(2,t7,t6);}

/* k10319 in k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10246(2,t7,t6);}

/* k10298 in k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10246(2,t7,t6);}

/* k10277 in k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10246(2,t7,t6);}

/* k10256 in k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_10246(2,t7,t6);}

/* k10244 in k10241 in k10230 in do993 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10222(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10026,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_10026(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[184]);
t5=t2;
f_10026(t5,t4);}}

/* k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10026(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10026,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10029,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[174]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10189,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_10189(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[183]);
t6=t4;
f_10189(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[176])));}}

/* k10187 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10189(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[175]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[176]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[177]);
t5=((C_word*)t0)[2];
f_10029(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[178]);
t5=((C_word*)t0)[2];
f_10029(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[179]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[180]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[181]);
t5=((C_word*)t0)[2];
f_10029(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[182]);
t5=((C_word*)t0)[2];
f_10029(t5,t4);}}}

/* k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10029,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10032,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10160,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10180,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k10178 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10180,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10032(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10158 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10160,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10032(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10032,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_10035(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10125,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t5=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[173]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_10035(t5,t4);}}

/* k10123 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t2,t1,C_SCHEME_FALSE);}

/* k10140 in k10123 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10142,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_10035(t8,t7);}

/* k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10035(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10035,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10074,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t7=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[172]);}
else{
t6=t5;
f_10042(t6,C_SCHEME_UNDEFINED);}}

/* k10072 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10077,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10092,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10108,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9765(t3,t1,C_SCHEME_FALSE);}}

/* k10106 in k10072 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10108,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10077(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10090 in k10072 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10092,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10077(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10075 in k10072 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10077(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10077,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10042(t4,t3);}

/* k10040 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_10042(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10042,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10049,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10053,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10051 in k10040 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10057,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10055 in k10051 in k10040 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10057,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[138],lf[171],lf[139],((C_word*)t0)[2],lf[141],t1,lf[144],t2,lf[142],t4));}

/* k10047 in k10040 in k10033 in k10030 in k10027 in k10024 in k10021 in parse-numerical-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_10049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9931,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9935,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t5,t6,t4);}

/* k9933 in parse-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9935,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[163]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9953,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-variable?");
f_9759(t4,t3);}}

/* k9951 in k9933 in parse-for in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9953,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[164]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[165],t6,lf[166],lf[167]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9771(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[168],t2,lf[169]));}}

/* loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9771(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9771,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9827,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9779,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_9779(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do944 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9779(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9779,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9789,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_9789(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_9789(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9753(t6,t8,((C_word*)t0)[2]);}}}

/* k9787 in do944 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9789,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 83   reverse");
t2=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_9779(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9830,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[160]);}

/* k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9908,a[2]=t4,a[3]=((C_word)li95),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_9908(t6,t2,((C_word*)t0)[2]);}

/* do954 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9908(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9908,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9918,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   display");
t5=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k9916 in do954 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9908(t3,((C_word*)t0)[2],t2);}

/* k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[159]);}

/* k9840 in k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9845,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 83   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[155]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9862,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li94),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_9862(t6,t2,((C_word*)t0)[2]);}}

/* do959 in k9840 in k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9862(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9862,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9872,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 83   display");
t5=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[158]);}
else{
t5=t3;
f_9872(2,t5,C_SCHEME_UNDEFINED);}}}

/* k9870 in do959 in k9840 in k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 83   display");
t4=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k9873 in k9870 in do959 in k9840 in k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9878,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[156]:lf[157]);
C_trace("ChickenBridge.scm: 83   display");
t6=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k9876 in k9873 in k9870 in do959 in k9840 in k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9862(t3,((C_word*)t0)[2],t2);}

/* k9843 in k9840 in k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9848,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9846 in k9843 in k9840 in k9837 in k9834 in k9831 in k9828 in k9825 in loop-error in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   error");
t2=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[152]);}

/* make-binding in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9765(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9765,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9759(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9759,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9753(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9753,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9682(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9682,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9684,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9723,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t5,t3,C_retrieve2(lf[128],"loop-bindings"));}

/* k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9727,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t2,((C_word*)t0)[2],C_retrieve2(lf[129],"loop-collectors"));}

/* k9725 in k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9731,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t2,((C_word*)t0)[2],C_retrieve2(lf[130],"loop-initially"));}

/* k9729 in k9725 in k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9731,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9735,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t2,((C_word*)t0)[2],C_retrieve2(lf[131],"loop-end-tests"));}

/* k9733 in k9729 in k9725 in k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t2,((C_word*)t0)[2],C_retrieve2(lf[132],"loop-looping"));}

/* k9737 in k9733 in k9729 in k9725 in k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9743,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t2,((C_word*)t0)[2],C_retrieve2(lf[134],"loop-stepping"));}

/* k9741 in k9737 in k9733 in k9729 in k9725 in k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t2,((C_word*)t0)[2],C_retrieve2(lf[135],"loop-finally"));}

/* k9745 in k9741 in k9737 in k9733 in k9729 in k9725 in k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9751,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9684(t2,((C_word*)t0)[2],C_retrieve2(lf[136],"loop-returning"));}

/* k9749 in k9745 in k9741 in k9737 in k9733 in k9729 in k9725 in k9721 in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9751,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9531(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[138],((C_word*)t0)[9],lf[139],((C_word*)t0)[8],lf[140],((C_word*)t0)[7],lf[141],((C_word*)t0)[6],lf[142],((C_word*)t0)[5],lf[143],((C_word*)t0)[4],lf[144],((C_word*)t0)[3],lf[145],((C_word*)t0)[2],lf[146],t1));}

/* gather-clause in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9684(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9684,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9690,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li88),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_9690(t8,t1,C_SCHEME_END_OF_LIST);}

/* do927 in gather-clause in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9690(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9690,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9701,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9712,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k9710 in do927 in gather-clause in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k9699 in do927 in gather-clause in gather-clauses in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_9690(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9531(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9531,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9546,a[2]=t5,a[3]=t3,a[4]=((C_word)li86),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9546(t7,t1,t2);}}

/* do915 in make-loop-clause in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9546(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9546,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9559,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[138]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 83   loop-operator-set!");
f_9429(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[139]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_9559(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[140]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_9559(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[141]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_9559(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[142]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_9559(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[143]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9489(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[144]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_9559(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[145]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_9559(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[146]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_9559(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_9559(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k9557 in do915 in make-loop-clause in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9546(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9519(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9519,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9507(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9507,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9495(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9495,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9489(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9489,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9483(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9483,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9471(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9471,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9459(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9459,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9447(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9447,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9435(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9435,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k9419 in k9416 in k9413 in k9410 in k9407 in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_9429(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9429,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9120,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9281,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9373,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a9372 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9373(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9373,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9387,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9391,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   symbol->string");
t6=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9402,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9406,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   symbol->string");
t5=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k9404 in a9372 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   gensym");
t2=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9400 in a9372 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9402,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k9389 in a9372 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   gensym");
t2=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9385 in a9372 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9387,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9284,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[126]);}

/* k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9287,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 82   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[125]);}

/* k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9290,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9367,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li73),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a9366 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9367(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9367,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9133,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9192,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   symbol->string");
t10=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k9190 in a9366 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9131 in a9366 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9133,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[84],lf[118],t1);
t4=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[104],t5);
t7=(C_word)C_a_i_list(&a,3,lf[84],lf[120],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[65],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[119],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[121],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9297,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[114]+1),((C_word*)t0)[2]);}

/* k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9309,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9343,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9357,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a9356 in k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9357(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9357,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k9341 in k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9343,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 82   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k9307 in k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9313,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9317,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li71),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a9334 in k9307 in k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9335(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9335,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[104],t4);
t8=(C_word)C_a_i_list(&a,2,lf[63],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9270,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[84],lf[109],t5);
t13=(C_word)C_a_i_list(&a,3,lf[110],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[63],t4);
t15=(C_word)C_a_i_list(&a,3,lf[111],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[112],t11);
t17=(C_word)C_a_i_list(&a,3,lf[84],lf[113],t11);
t18=(C_word)C_a_i_list(&a,3,lf[110],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[111],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[114],t4);
t21=(C_word)C_a_i_list(&a,3,lf[111],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[115],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k9268 in a9334 in k9307 in k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9270,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[108],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[106],((C_word*)t0)[2],t3));}

/* k9315 in k9307 in k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9317,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[104],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[84],lf[105],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[106],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k9311 in k9307 in k9295 in k9288 in k9285 in k9282 in k9279 in expand-optkeys in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9313,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[102],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[103],((C_word*)t0)[2],t3));}

/* position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_9076r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9076r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9076r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9084,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9110,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t7=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k9108 in position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9114,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   start");
t3=C_retrieve(lf[98]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k9112 in k9108 in position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9118,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   end");
t3=C_retrieve(lf[99]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k9116 in k9112 in k9108 in position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9082 in position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9088,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[97]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9093,a[2]=((C_word*)t0)[3],a[3]=((C_word)li68),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9102,a[2]=((C_word*)t0)[3],a[3]=((C_word)li69),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 82   %mapseq");
f_8958(t2,t3,((C_word*)t0)[2],C_SCHEME_FALSE,C_retrieve(lf[98]),C_retrieve(lf[99]));}

/* f_9102 in k9082 in position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9102(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9102,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_9093 in k9082 in position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9093(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9093,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9101,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k9099 */
static void C_ccall f_9101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k9086 in k9082 in position in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   with-optkeys");
t2=C_retrieve(lf[96]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_9032r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9032r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9032r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9040,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9066,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t7=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k9064 in find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9070,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   start");
t3=C_retrieve(lf[98]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k9068 in k9064 in find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9074,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   end");
t3=C_retrieve(lf[99]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k9072 in k9068 in k9064 in find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9038 in find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9044,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[97]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9049,a[2]=((C_word*)t0)[3],a[3]=((C_word)li65),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9058,a[2]=((C_word*)t0)[3],a[3]=((C_word)li66),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 82   %mapseq");
f_8958(t2,t3,((C_word*)t0)[2],C_SCHEME_TRUE,C_retrieve(lf[98]),C_retrieve(lf[99]));}

/* f_9058 in k9038 in find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9058(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9058,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_9049 in k9038 in find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9049(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9049,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9057,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k9055 */
static void C_ccall f_9057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k9042 in k9038 in find in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_9044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   with-optkeys");
t2=C_retrieve(lf[96]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* %mapseq in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8958(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8958,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8962,a[2]=t8,a[3]=t5,a[4]=t1,a[5]=t3,a[6]=t10,a[7]=t2,a[8]=t4,a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_listp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[77]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[89]+1));
t14=t11;
f_8962(2,t14,t13);}
else{
if(C_truep((C_word)C_i_stringp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[90]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[91]+1));
t14=t11;
f_8962(2,t14,t13);}
else{
if(C_truep((C_word)C_i_vectorp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[92]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[93]+1));
t14=t11;
f_8962(2,t14,t13);}
else{
C_trace("ChickenBridge.scm: 82   error");
t12=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[94],t3);}}}}

/* k8960 in %mapseq in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8962,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_8969(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 82   seqlen");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[5]);}}

/* k8967 in k8960 in %mapseq in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8969,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8971,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t3,a[7]=((C_word)li63),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_8971(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do783 in k8967 in k8960 in %mapseq in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8971(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8971,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_i_greater_or_equalp(t2,t3);
t11=(C_truep(t10)?t10:((C_word*)t8)[1]);
if(C_truep(t11)){
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t9)[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8985,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t9,a[5]=t8,a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,a[10]=t7,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 82   getter");
t13=((C_word*)((C_word*)t0)[3])[1];
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,((C_word*)t0)[2],t2);}}

/* k8983 in do783 in k8967 in k8960 in %mapseq in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8985,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8988,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8998,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 82   func");
t5=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[10])[1]);}

/* k8996 in k8983 in do783 in k8967 in k8960 in %mapseq in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_truep(((C_word*)t0)[7])?((C_word*)((C_word*)t0)[6])[1]:((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t5=((C_word*)t0)[2];
f_8988(t5,t4);}
else{
t2=((C_word*)t0)[2];
f_8988(t2,C_SCHEME_UNDEFINED);}}

/* k8986 in k8983 in do783 in k8967 in k8960 in %mapseq in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8988(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8988,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_8971(t3,((C_word*)t0)[6],t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8872(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_8872r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8872r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8872r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_eqvp(t5,t3))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_cadr(t2));}
else{
t6=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[87],"list-prop"),t6,t3,t4);}}}

/* list-index in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8754(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8754,NULL,3,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8760,a[2]=t2,a[3]=t5,a[4]=((C_word)li60),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8760(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do737 in list-index in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8760(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8760,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8770,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8784,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k8782 in do737 in list-index in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_8770(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_8770(t2,C_SCHEME_UNDEFINED);}}

/* k8768 in do737 in list-index in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8770,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_8760(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8655(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8655r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8655r(t0,t1,t2,t3);}}

static void C_ccall f_8655r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8659,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 82   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[85],t2);}
else{
t5=t4;
f_8659(2,t5,C_SCHEME_UNDEFINED);}}

/* k8657 in make-list in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8659,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8661,a[2]=t3,a[3]=((C_word)li57),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8684,a[2]=t5,a[3]=((C_word)li58),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 82   l1");
t8=((C_word*)t3)[1];
f_8661(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 82   l2");
t9=((C_word*)t5)[1];
f_8684(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 82   l1");
t10=((C_word*)t3)[1];
f_8661(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k8657 in make-list in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8684(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8684,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8701,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k8699 in l2 in k8657 in make-list in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8705,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 82   l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_8684(t4,t2,t3,((C_word*)t0)[2]);}

/* k8703 in k8699 in l2 in k8657 in make-list in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8705,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k8657 in make-list in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8661(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8661,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8678,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 82   l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k8676 in l1 in k8657 in make-list in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8678,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* concat in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8493(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_8493r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8493r(t0,t1,t2);}}

static void C_ccall f_8493r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8502,a[2]=t5,a[3]=t7,a[4]=t3,a[5]=((C_word)li55),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8502(t9,t1,t2);}

/* do698 in concat in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8502(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8502,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_nullp(t3);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8518,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_8518(2,t6,t4);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_car(t2);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8540,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=((C_word)li54),tmp=(C_word)a,a+=5,tmp));
t11=((C_word*)t9)[1];
f_8540(t11,t5,t7);}
else{
t7=(C_word)C_i_car(t2);
t8=(C_word)C_a_i_list(&a,1,t7);
t9=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[2])+1,t10);
t12=t5;
f_8518(2,t12,t11);}}}}

/* do703 in do698 in concat in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8540(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8540,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t1=t10;
t2=t11;
goto loop;}}

/* k8516 in do698 in concat in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8502(t3,((C_word*)t0)[2],t2);}

/* tail in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8403(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8403,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   tail");
t5=C_retrieve(lf[81]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8355(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8355,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8389,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   butlast");
t8=C_retrieve(lf[80]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k8387 in butlast in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8389,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8332(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8332,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   last");
t5=C_retrieve(lf[79]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8326(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8326,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8311(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8311,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8297(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8297,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8287(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8287,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8277(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8277,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8267(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8267,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8257(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8257,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* shell in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8247(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8247,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7261,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7261(2,t4,C_SCHEME_FALSE);}}

/* k7259 in shell in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub68(C_SCHEME_UNDEFINED,t1));}

/* print-output in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8216(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_8216r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_8216r(t0,t1,t2,t3);}}

static void C_ccall f_8216r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
t4=(C_word)C_vemptyp(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8226,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t6=t5;
f_8226(t6,t4);}
else{
t6=(C_word)C_i_vector_ref(t3,C_fix(0));
t7=t5;
f_8226(t7,(C_word)C_i_not(t6));}}

/* k8224 in print-output in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_8226(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 82   ffi_print_output");
f_7228(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 82   ffi_print_output");
f_7228(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_TRUE);}}

/* print-error in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8210(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8210,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7219,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7219(2,t4,C_SCHEME_FALSE);}}

/* k7217 in print-error in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub48(C_SCHEME_UNDEFINED,t1));}

/* quit in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_8204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8204,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub45(C_SCHEME_UNDEFINED));}

/* ffi_mp_send_data in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7875(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7875,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub419(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* ffi_pathname_type in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7690(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7690,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7699,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7699(2,t5,C_SCHEME_FALSE);}}

/* k7697 in ffi_pathname_type in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub330(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* ffi_sched_score_time in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7619,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub297(t2));}

/* ffi_sched_score_mode_p in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7609,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub291(C_SCHEME_UNDEFINED));}

/* ffi_sched_stop in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7599(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7599,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub286(C_SCHEME_UNDEFINED,t3));}

/* ffi_sched_sprout in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7579(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7579,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=(C_word)C_i_foreign_fixnum_argumentp(t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub274(C_SCHEME_UNDEFINED,t2,t5,t6));}

/* ffi_ranbrown in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7548,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub248(t2));}

/* ffi_ranpink in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7545,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub245(t2));}

/* ffi_ranpoisson in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7538(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7538,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub242(C_SCHEME_UNDEFINED,t3));}

/* ffi_rancauchy in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7535,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub238(t2));}

/* ffi_rangamma in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7528(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7528,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub234(t3,t4));}

/* ffi_ranexp in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7510(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7510,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub222(t3,t4));}

/* ffi_rangauss in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7499(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7499,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub216(t4,t5,t6));}

/* ffi_ranmiddle in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7496,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub211(t2));}

/* ffi_ranhigh in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7493,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub208(t2));}

/* ffi_ranlow in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7490,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub205(t2));}

/* ffi_ranfloat in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7461(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7461,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub188(t3,t4));}

/* ffi_ranint in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7454(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7454,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub184(C_SCHEME_UNDEFINED,t3));}

/* ffi_ranseed in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7451(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7451,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub180(C_SCHEME_UNDEFINED,t2));}

/* ffi_keynum_to_hertz in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7430(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7430,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub166(t3,t4));}

/* ffi_geoseg in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7411,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub158(t6,t7,t8,t9,t10));}

/* ffi_explseg in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7392,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub147(t6,t7,t8,t9,t10));}

/* ffi_scaler_to_cents in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7378(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7378,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub134(t3,t4));}

/* ffi_cents_to_scaler in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7371(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7371,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub129(t3,t4));}

/* ffi_rhythm_to_seconds in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7356(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7356,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub122(t5,t6,t7,t8));}

/* ffi_quantize in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7345(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7345,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub114(t4,t5,t6));}

/* ffi_float_to_fixnum in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7338(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7338,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub109(C_SCHEME_UNDEFINED,t3));}

/* ffi_rescale in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7284(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7284,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub85(t8,t9,t10,t11,t12,t13,t14));}

/* ffi_print_output in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7228(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7228,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7233,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7233(2,t5,C_SCHEME_FALSE);}}

/* k7231 in ffi_print_output in k7207 in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub55(C_SCHEME_UNDEFINED,t1,((C_word*)t0)[2]));}

/* read-from-string in k7024 in k7021 in k7018 in k7015 */
static void C_fcall f_7107(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7107,NULL,2,t1,t2);}
C_trace("ChickenBridge.scm: 80   call-with-input-string");
t3=C_retrieve(lf[25]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,*((C_word*)lf[26]+1));}

/* hash-ref in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7101,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 80   hash-table-ref/default");
t4=C_retrieve(lf[23]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* make-eq-hash-table in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7094,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   make-hash-table");
t2=C_retrieve(lf[16]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[19]+1));}

/* make-equal-hash-table in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7088,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   make-hash-table");
t2=C_retrieve(lf[16]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[17]+1));}

/* list-set! in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7078,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* logtest in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7058,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7070,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   logand");
t5=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,t3);}

/* k7068 in logtest in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_zerop(t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_not(t2));}

/* logior in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7052(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7052r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7052r(t0,t1,t2);}}

static void C_ccall f_7052r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[8]+1),t2);}

/* logxor in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7046(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7046r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7046r(t0,t1,t2);}}

static void C_ccall f_7046r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[6]+1),t2);}

/* lognot in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7040(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7040r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7040r(t0,t1,t2);}}

static void C_ccall f_7040r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[4]+1),t2);}

/* logand in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7034(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7034r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7034r(t0,t1,t2);}}

static void C_ccall f_7034r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[2]+1),t2);}

/* ash in k7024 in k7021 in k7018 in k7015 */
static void C_ccall f_7028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7028,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_arithmetic_shift(&a,2,t2,t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2990] = {
{"toplevelChickenBridge.scm",(void*)C_cm_toplevel},
{"f_7017ChickenBridge.scm",(void*)f_7017},
{"f_7020ChickenBridge.scm",(void*)f_7020},
{"f_7023ChickenBridge.scm",(void*)f_7023},
{"f_7026ChickenBridge.scm",(void*)f_7026},
{"f_7209ChickenBridge.scm",(void*)f_7209},
{"f_46323ChickenBridge.scm",(void*)f_46323},
{"f_9409ChickenBridge.scm",(void*)f_9409},
{"f_46317ChickenBridge.scm",(void*)f_46317},
{"f_12765ChickenBridge.scm",(void*)f_12765},
{"f_12768ChickenBridge.scm",(void*)f_12768},
{"f_12934ChickenBridge.scm",(void*)f_12934},
{"f_12930ChickenBridge.scm",(void*)f_12930},
{"f_12920ChickenBridge.scm",(void*)f_12920},
{"f_12775ChickenBridge.scm",(void*)f_12775},
{"f_12779ChickenBridge.scm",(void*)f_12779},
{"f_12782ChickenBridge.scm",(void*)f_12782},
{"f_12793ChickenBridge.scm",(void*)f_12793},
{"f_12801ChickenBridge.scm",(void*)f_12801},
{"f_12873ChickenBridge.scm",(void*)f_12873},
{"f_12881ChickenBridge.scm",(void*)f_12881},
{"f_12877ChickenBridge.scm",(void*)f_12877},
{"f_12869ChickenBridge.scm",(void*)f_12869},
{"f_12865ChickenBridge.scm",(void*)f_12865},
{"f_12837ChickenBridge.scm",(void*)f_12837},
{"f_12833ChickenBridge.scm",(void*)f_12833},
{"f_12797ChickenBridge.scm",(void*)f_12797},
{"f_9412ChickenBridge.scm",(void*)f_9412},
{"f_46303ChickenBridge.scm",(void*)f_46303},
{"f_9415ChickenBridge.scm",(void*)f_9415},
{"f_46274ChickenBridge.scm",(void*)f_46274},
{"f_46278ChickenBridge.scm",(void*)f_46278},
{"f_9418ChickenBridge.scm",(void*)f_9418},
{"f_46271ChickenBridge.scm",(void*)f_46271},
{"f_9421ChickenBridge.scm",(void*)f_9421},
{"f_46129ChickenBridge.scm",(void*)f_46129},
{"f_12947ChickenBridge.scm",(void*)f_12947},
{"f_13079ChickenBridge.scm",(void*)f_13079},
{"f_12950ChickenBridge.scm",(void*)f_12950},
{"f_12961ChickenBridge.scm",(void*)f_12961},
{"f_12969ChickenBridge.scm",(void*)f_12969},
{"f_12993ChickenBridge.scm",(void*)f_12993},
{"f_12996ChickenBridge.scm",(void*)f_12996},
{"f_13004ChickenBridge.scm",(void*)f_13004},
{"f_13012ChickenBridge.scm",(void*)f_13012},
{"f_13032ChickenBridge.scm",(void*)f_13032},
{"f_13028ChickenBridge.scm",(void*)f_13028},
{"f_13008ChickenBridge.scm",(void*)f_13008},
{"f_13000ChickenBridge.scm",(void*)f_13000},
{"f_12989ChickenBridge.scm",(void*)f_12989},
{"f_12965ChickenBridge.scm",(void*)f_12965},
{"f_12941ChickenBridge.scm",(void*)f_12941},
{"f_23062ChickenBridge.scm",(void*)f_23062},
{"f_45901ChickenBridge.scm",(void*)f_45901},
{"f_46127ChickenBridge.scm",(void*)f_46127},
{"f_45935ChickenBridge.scm",(void*)f_45935},
{"f_45947ChickenBridge.scm",(void*)f_45947},
{"f_45951ChickenBridge.scm",(void*)f_45951},
{"f_45955ChickenBridge.scm",(void*)f_45955},
{"f_46111ChickenBridge.scm",(void*)f_46111},
{"f_45961ChickenBridge.scm",(void*)f_45961},
{"f_45981ChickenBridge.scm",(void*)f_45981},
{"f_45984ChickenBridge.scm",(void*)f_45984},
{"f_45992ChickenBridge.scm",(void*)f_45992},
{"f_45999ChickenBridge.scm",(void*)f_45999},
{"f_46002ChickenBridge.scm",(void*)f_46002},
{"f_46006ChickenBridge.scm",(void*)f_46006},
{"f_46013ChickenBridge.scm",(void*)f_46013},
{"f_46016ChickenBridge.scm",(void*)f_46016},
{"f_46020ChickenBridge.scm",(void*)f_46020},
{"f_46027ChickenBridge.scm",(void*)f_46027},
{"f_45971ChickenBridge.scm",(void*)f_45971},
{"f_45924ChickenBridge.scm",(void*)f_45924},
{"f_45914ChickenBridge.scm",(void*)f_45914},
{"f_45917ChickenBridge.scm",(void*)f_45917},
{"f_23065ChickenBridge.scm",(void*)f_23065},
{"f_24069ChickenBridge.scm",(void*)f_24069},
{"f_45806ChickenBridge.scm",(void*)f_45806},
{"f_45819ChickenBridge.scm",(void*)f_45819},
{"f_45895ChickenBridge.scm",(void*)f_45895},
{"f_45822ChickenBridge.scm",(void*)f_45822},
{"f_45827ChickenBridge.scm",(void*)f_45827},
{"f_45879ChickenBridge.scm",(void*)f_45879},
{"f_45849ChickenBridge.scm",(void*)f_45849},
{"f_45863ChickenBridge.scm",(void*)f_45863},
{"f_45875ChickenBridge.scm",(void*)f_45875},
{"f_45852ChickenBridge.scm",(void*)f_45852},
{"f_24089ChickenBridge.scm",(void*)f_24089},
{"f_45800ChickenBridge.scm",(void*)f_45800},
{"f_24418ChickenBridge.scm",(void*)f_24418},
{"f_29173ChickenBridge.scm",(void*)f_29173},
{"f_45697ChickenBridge.scm",(void*)f_45697},
{"f_45760ChickenBridge.scm",(void*)f_45760},
{"f_45764ChickenBridge.scm",(void*)f_45764},
{"f_45778ChickenBridge.scm",(void*)f_45778},
{"f_45700ChickenBridge.scm",(void*)f_45700},
{"f_45720ChickenBridge.scm",(void*)f_45720},
{"f_45724ChickenBridge.scm",(void*)f_45724},
{"f_29278ChickenBridge.scm",(void*)f_29278},
{"f_45675ChickenBridge.scm",(void*)f_45675},
{"f_30833ChickenBridge.scm",(void*)f_30833},
{"f_45655ChickenBridge.scm",(void*)f_45655},
{"f_30836ChickenBridge.scm",(void*)f_30836},
{"f_45615ChickenBridge.scm",(void*)f_45615},
{"f_30839ChickenBridge.scm",(void*)f_30839},
{"f_45521ChickenBridge.scm",(void*)f_45521},
{"f_45525ChickenBridge.scm",(void*)f_45525},
{"f_45528ChickenBridge.scm",(void*)f_45528},
{"f_45546ChickenBridge.scm",(void*)f_45546},
{"f_45549ChickenBridge.scm",(void*)f_45549},
{"f_45580ChickenBridge.scm",(void*)f_45580},
{"f_45552ChickenBridge.scm",(void*)f_45552},
{"f_45558ChickenBridge.scm",(void*)f_45558},
{"f_45511ChickenBridge.scm",(void*)f_45511},
{"f_45505ChickenBridge.scm",(void*)f_45505},
{"f_30842ChickenBridge.scm",(void*)f_30842},
{"f_45409ChickenBridge.scm",(void*)f_45409},
{"f_45411ChickenBridge.scm",(void*)f_45411},
{"f_45415ChickenBridge.scm",(void*)f_45415},
{"f_45418ChickenBridge.scm",(void*)f_45418},
{"f_45421ChickenBridge.scm",(void*)f_45421},
{"f_45465ChickenBridge.scm",(void*)f_45465},
{"f_45457ChickenBridge.scm",(void*)f_45457},
{"f_45424ChickenBridge.scm",(void*)f_45424},
{"f_29612ChickenBridge.scm",(void*)f_29612},
{"f_29658ChickenBridge.scm",(void*)f_29658},
{"f_29625ChickenBridge.scm",(void*)f_29625},
{"f_45447ChickenBridge.scm",(void*)f_45447},
{"f_45427ChickenBridge.scm",(void*)f_45427},
{"f_45430ChickenBridge.scm",(void*)f_45430},
{"f_45401ChickenBridge.scm",(void*)f_45401},
{"f_30845ChickenBridge.scm",(void*)f_30845},
{"f_45373ChickenBridge.scm",(void*)f_45373},
{"f_30848ChickenBridge.scm",(void*)f_30848},
{"f_45337ChickenBridge.scm",(void*)f_45337},
{"f_45349ChickenBridge.scm",(void*)f_45349},
{"f_45345ChickenBridge.scm",(void*)f_45345},
{"f_45319ChickenBridge.scm",(void*)f_45319},
{"f_45313ChickenBridge.scm",(void*)f_45313},
{"f_30851ChickenBridge.scm",(void*)f_30851},
{"f_45227ChickenBridge.scm",(void*)f_45227},
{"f_45231ChickenBridge.scm",(void*)f_45231},
{"f_45234ChickenBridge.scm",(void*)f_45234},
{"f_45237ChickenBridge.scm",(void*)f_45237},
{"f_45250ChickenBridge.scm",(void*)f_45250},
{"f_45196ChickenBridge.scm",(void*)f_45196},
{"f_45200ChickenBridge.scm",(void*)f_45200},
{"f_45215ChickenBridge.scm",(void*)f_45215},
{"f_45190ChickenBridge.scm",(void*)f_45190},
{"f_30854ChickenBridge.scm",(void*)f_30854},
{"f_45076ChickenBridge.scm",(void*)f_45076},
{"f_45092ChickenBridge.scm",(void*)f_45092},
{"f_45103ChickenBridge.scm",(void*)f_45103},
{"f_45070ChickenBridge.scm",(void*)f_45070},
{"f_30910ChickenBridge.scm",(void*)f_30910},
{"f_44937ChickenBridge.scm",(void*)f_44937},
{"f_44960ChickenBridge.scm",(void*)f_44960},
{"f_44957ChickenBridge.scm",(void*)f_44957},
{"f_44931ChickenBridge.scm",(void*)f_44931},
{"f_30913ChickenBridge.scm",(void*)f_30913},
{"f_44785ChickenBridge.scm",(void*)f_44785},
{"f_44803ChickenBridge.scm",(void*)f_44803},
{"f_44812ChickenBridge.scm",(void*)f_44812},
{"f_44779ChickenBridge.scm",(void*)f_44779},
{"f_30916ChickenBridge.scm",(void*)f_30916},
{"f_44732ChickenBridge.scm",(void*)f_44732},
{"f_44736ChickenBridge.scm",(void*)f_44736},
{"f_44739ChickenBridge.scm",(void*)f_44739},
{"f_44755ChickenBridge.scm",(void*)f_44755},
{"f_44714ChickenBridge.scm",(void*)f_44714},
{"f_44708ChickenBridge.scm",(void*)f_44708},
{"f_30919ChickenBridge.scm",(void*)f_30919},
{"f_44632ChickenBridge.scm",(void*)f_44632},
{"f_31058ChickenBridge.scm",(void*)f_31058},
{"f_44558ChickenBridge.scm",(void*)f_44558},
{"f_44565ChickenBridge.scm",(void*)f_44565},
{"f_44552ChickenBridge.scm",(void*)f_44552},
{"f_31061ChickenBridge.scm",(void*)f_31061},
{"f_44448ChickenBridge.scm",(void*)f_44448},
{"f_44456ChickenBridge.scm",(void*)f_44456},
{"f_44422ChickenBridge.scm",(void*)f_44422},
{"f_44439ChickenBridge.scm",(void*)f_44439},
{"f_44430ChickenBridge.scm",(void*)f_44430},
{"f_44416ChickenBridge.scm",(void*)f_44416},
{"f_31064ChickenBridge.scm",(void*)f_31064},
{"f_44372ChickenBridge.scm",(void*)f_44372},
{"f_31067ChickenBridge.scm",(void*)f_31067},
{"f_44290ChickenBridge.scm",(void*)f_44290},
{"f_44301ChickenBridge.scm",(void*)f_44301},
{"f_44303ChickenBridge.scm",(void*)f_44303},
{"f_44332ChickenBridge.scm",(void*)f_44332},
{"f_44268ChickenBridge.scm",(void*)f_44268},
{"f_44284ChickenBridge.scm",(void*)f_44284},
{"f_44262ChickenBridge.scm",(void*)f_44262},
{"f_31070ChickenBridge.scm",(void*)f_31070},
{"f_44191ChickenBridge.scm",(void*)f_44191},
{"f_44195ChickenBridge.scm",(void*)f_44195},
{"f_44202ChickenBridge.scm",(void*)f_44202},
{"f_44157ChickenBridge.scm",(void*)f_44157},
{"f_44177ChickenBridge.scm",(void*)f_44177},
{"f_44181ChickenBridge.scm",(void*)f_44181},
{"f_44173ChickenBridge.scm",(void*)f_44173},
{"f_44151ChickenBridge.scm",(void*)f_44151},
{"f_31073ChickenBridge.scm",(void*)f_31073},
{"f_44023ChickenBridge.scm",(void*)f_44023},
{"f_44059ChickenBridge.scm",(void*)f_44059},
{"f_44027ChickenBridge.scm",(void*)f_44027},
{"f_44043ChickenBridge.scm",(void*)f_44043},
{"f_44055ChickenBridge.scm",(void*)f_44055},
{"f_44051ChickenBridge.scm",(void*)f_44051},
{"f_43948ChickenBridge.scm",(void*)f_43948},
{"f_43991ChickenBridge.scm",(void*)f_43991},
{"f_43995ChickenBridge.scm",(void*)f_43995},
{"f_43955ChickenBridge.scm",(void*)f_43955},
{"f_43966ChickenBridge.scm",(void*)f_43966},
{"f_43942ChickenBridge.scm",(void*)f_43942},
{"f_31076ChickenBridge.scm",(void*)f_31076},
{"f_43922ChickenBridge.scm",(void*)f_43922},
{"f_43916ChickenBridge.scm",(void*)f_43916},
{"f_31079ChickenBridge.scm",(void*)f_31079},
{"f_43896ChickenBridge.scm",(void*)f_43896},
{"f_43900ChickenBridge.scm",(void*)f_43900},
{"f_43888ChickenBridge.scm",(void*)f_43888},
{"f_31082ChickenBridge.scm",(void*)f_31082},
{"f_43868ChickenBridge.scm",(void*)f_43868},
{"f_43872ChickenBridge.scm",(void*)f_43872},
{"f_43860ChickenBridge.scm",(void*)f_43860},
{"f_31085ChickenBridge.scm",(void*)f_31085},
{"f_43840ChickenBridge.scm",(void*)f_43840},
{"f_43844ChickenBridge.scm",(void*)f_43844},
{"f_43832ChickenBridge.scm",(void*)f_43832},
{"f_31088ChickenBridge.scm",(void*)f_31088},
{"f_43812ChickenBridge.scm",(void*)f_43812},
{"f_43816ChickenBridge.scm",(void*)f_43816},
{"f_43804ChickenBridge.scm",(void*)f_43804},
{"f_31091ChickenBridge.scm",(void*)f_31091},
{"f_43703ChickenBridge.scm",(void*)f_43703},
{"f_43673ChickenBridge.scm",(void*)f_43673},
{"f_43697ChickenBridge.scm",(void*)f_43697},
{"f_43667ChickenBridge.scm",(void*)f_43667},
{"f_31094ChickenBridge.scm",(void*)f_31094},
{"f_43617ChickenBridge.scm",(void*)f_43617},
{"f_43619ChickenBridge.scm",(void*)f_43619},
{"f_43623ChickenBridge.scm",(void*)f_43623},
{"f_43651ChickenBridge.scm",(void*)f_43651},
{"f_43643ChickenBridge.scm",(void*)f_43643},
{"f_43639ChickenBridge.scm",(void*)f_43639},
{"f_43626ChickenBridge.scm",(void*)f_43626},
{"f_43609ChickenBridge.scm",(void*)f_43609},
{"f_31097ChickenBridge.scm",(void*)f_31097},
{"f_43556ChickenBridge.scm",(void*)f_43556},
{"f_43558ChickenBridge.scm",(void*)f_43558},
{"f_43562ChickenBridge.scm",(void*)f_43562},
{"f_43593ChickenBridge.scm",(void*)f_43593},
{"f_43585ChickenBridge.scm",(void*)f_43585},
{"f_43581ChickenBridge.scm",(void*)f_43581},
{"f_43565ChickenBridge.scm",(void*)f_43565},
{"f_43568ChickenBridge.scm",(void*)f_43568},
{"f_43548ChickenBridge.scm",(void*)f_43548},
{"f_31100ChickenBridge.scm",(void*)f_31100},
{"f_43498ChickenBridge.scm",(void*)f_43498},
{"f_43512ChickenBridge.scm",(void*)f_43512},
{"f_43504ChickenBridge.scm",(void*)f_43504},
{"f_43463ChickenBridge.scm",(void*)f_43463},
{"f_43496ChickenBridge.scm",(void*)f_43496},
{"f_43457ChickenBridge.scm",(void*)f_43457},
{"f_31103ChickenBridge.scm",(void*)f_31103},
{"f_43404ChickenBridge.scm",(void*)f_43404},
{"f_43408ChickenBridge.scm",(void*)f_43408},
{"f_43421ChickenBridge.scm",(void*)f_43421},
{"f_43413ChickenBridge.scm",(void*)f_43413},
{"f_43361ChickenBridge.scm",(void*)f_43361},
{"f_43394ChickenBridge.scm",(void*)f_43394},
{"f_43355ChickenBridge.scm",(void*)f_43355},
{"f_31106ChickenBridge.scm",(void*)f_31106},
{"f_43275ChickenBridge.scm",(void*)f_43275},
{"f_43269ChickenBridge.scm",(void*)f_43269},
{"f_31109ChickenBridge.scm",(void*)f_31109},
{"f_43038ChickenBridge.scm",(void*)f_43038},
{"f_43042ChickenBridge.scm",(void*)f_43042},
{"f_43050ChickenBridge.scm",(void*)f_43050},
{"f_43073ChickenBridge.scm",(void*)f_43073},
{"f_43076ChickenBridge.scm",(void*)f_43076},
{"f_43079ChickenBridge.scm",(void*)f_43079},
{"f_43082ChickenBridge.scm",(void*)f_43082},
{"f_43142ChickenBridge.scm",(void*)f_43142},
{"f_43149ChickenBridge.scm",(void*)f_43149},
{"f_43159ChickenBridge.scm",(void*)f_43159},
{"f_43169ChickenBridge.scm",(void*)f_43169},
{"f_43183ChickenBridge.scm",(void*)f_43183},
{"f_43193ChickenBridge.scm",(void*)f_43193},
{"f_43203ChickenBridge.scm",(void*)f_43203},
{"f_43213ChickenBridge.scm",(void*)f_43213},
{"f_43085ChickenBridge.scm",(void*)f_43085},
{"f_43109ChickenBridge.scm",(void*)f_43109},
{"f_43088ChickenBridge.scm",(void*)f_43088},
{"f_42995ChickenBridge.scm",(void*)f_42995},
{"f_43028ChickenBridge.scm",(void*)f_43028},
{"f_42989ChickenBridge.scm",(void*)f_42989},
{"f_31112ChickenBridge.scm",(void*)f_31112},
{"f_42907ChickenBridge.scm",(void*)f_42907},
{"f_42911ChickenBridge.scm",(void*)f_42911},
{"f_42917ChickenBridge.scm",(void*)f_42917},
{"f_42937ChickenBridge.scm",(void*)f_42937},
{"f_42881ChickenBridge.scm",(void*)f_42881},
{"f_42891ChickenBridge.scm",(void*)f_42891},
{"f_42875ChickenBridge.scm",(void*)f_42875},
{"f_31115ChickenBridge.scm",(void*)f_31115},
{"f_42690ChickenBridge.scm",(void*)f_42690},
{"f_42694ChickenBridge.scm",(void*)f_42694},
{"f_42700ChickenBridge.scm",(void*)f_42700},
{"f_42709ChickenBridge.scm",(void*)f_42709},
{"f_42747ChickenBridge.scm",(void*)f_42747},
{"f_42739ChickenBridge.scm",(void*)f_42739},
{"f_42716ChickenBridge.scm",(void*)f_42716},
{"f_42720ChickenBridge.scm",(void*)f_42720},
{"f_42622ChickenBridge.scm",(void*)f_42622},
{"f_42641ChickenBridge.scm",(void*)f_42641},
{"f_42676ChickenBridge.scm",(void*)f_42676},
{"f_42647ChickenBridge.scm",(void*)f_42647},
{"f_42651ChickenBridge.scm",(void*)f_42651},
{"f_42665ChickenBridge.scm",(void*)f_42665},
{"f_42654ChickenBridge.scm",(void*)f_42654},
{"f_42635ChickenBridge.scm",(void*)f_42635},
{"f_42616ChickenBridge.scm",(void*)f_42616},
{"f_31118ChickenBridge.scm",(void*)f_31118},
{"f_42344ChickenBridge.scm",(void*)f_42344},
{"f_31641ChickenBridge.scm",(void*)f_31641},
{"f_42296ChickenBridge.scm",(void*)f_42296},
{"f_42288ChickenBridge.scm",(void*)f_42288},
{"f_31644ChickenBridge.scm",(void*)f_31644},
{"f_42168ChickenBridge.scm",(void*)f_42168},
{"f_31650ChickenBridge.scm",(void*)f_31650},
{"f_32134ChickenBridge.scm",(void*)f_32134},
{"f_32168ChickenBridge.scm",(void*)f_32168},
{"f_32160ChickenBridge.scm",(void*)f_32160},
{"f_32156ChickenBridge.scm",(void*)f_32156},
{"f_32141ChickenBridge.scm",(void*)f_32141},
{"f_32145ChickenBridge.scm",(void*)f_32145},
{"f_32138ChickenBridge.scm",(void*)f_32138},
{"f_31674ChickenBridge.scm",(void*)f_31674},
{"f_32127ChickenBridge.scm",(void*)f_32127},
{"f_32123ChickenBridge.scm",(void*)f_32123},
{"f_31681ChickenBridge.scm",(void*)f_31681},
{"f_31998ChickenBridge.scm",(void*)f_31998},
{"f_32019ChickenBridge.scm",(void*)f_32019},
{"f_32021ChickenBridge.scm",(void*)f_32021},
{"f_32035ChickenBridge.scm",(void*)f_32035},
{"f_32088ChickenBridge.scm",(void*)f_32088},
{"f_32038ChickenBridge.scm",(void*)f_32038},
{"f_32073ChickenBridge.scm",(void*)f_32073},
{"f_32041ChickenBridge.scm",(void*)f_32041},
{"f_32054ChickenBridge.scm",(void*)f_32054},
{"f_32066ChickenBridge.scm",(void*)f_32066},
{"f_32058ChickenBridge.scm",(void*)f_32058},
{"f_32044ChickenBridge.scm",(void*)f_32044},
{"f_32008ChickenBridge.scm",(void*)f_32008},
{"f_31684ChickenBridge.scm",(void*)f_31684},
{"f_31962ChickenBridge.scm",(void*)f_31962},
{"f_31988ChickenBridge.scm",(void*)f_31988},
{"f_31973ChickenBridge.scm",(void*)f_31973},
{"f_31687ChickenBridge.scm",(void*)f_31687},
{"f_31902ChickenBridge.scm",(void*)f_31902},
{"f_31912ChickenBridge.scm",(void*)f_31912},
{"f_31915ChickenBridge.scm",(void*)f_31915},
{"f_31936ChickenBridge.scm",(void*)f_31936},
{"f_31918ChickenBridge.scm",(void*)f_31918},
{"f_31922ChickenBridge.scm",(void*)f_31922},
{"f_31870ChickenBridge.scm",(void*)f_31870},
{"f_31873ChickenBridge.scm",(void*)f_31873},
{"f_31690ChickenBridge.scm",(void*)f_31690},
{"f_31693ChickenBridge.scm",(void*)f_31693},
{"f_31827ChickenBridge.scm",(void*)f_31827},
{"f_31835ChickenBridge.scm",(void*)f_31835},
{"f_31831ChickenBridge.scm",(void*)f_31831},
{"f_31696ChickenBridge.scm",(void*)f_31696},
{"f_31790ChickenBridge.scm",(void*)f_31790},
{"f_31786ChickenBridge.scm",(void*)f_31786},
{"f_31782ChickenBridge.scm",(void*)f_31782},
{"f_31735ChickenBridge.scm",(void*)f_31735},
{"f_31731ChickenBridge.scm",(void*)f_31731},
{"f_31813ChickenBridge.scm",(void*)f_31813},
{"f_31797ChickenBridge.scm",(void*)f_31797},
{"f_42122ChickenBridge.scm",(void*)f_42122},
{"f_42138ChickenBridge.scm",(void*)f_42138},
{"f_42141ChickenBridge.scm",(void*)f_42141},
{"f_42144ChickenBridge.scm",(void*)f_42144},
{"f_42147ChickenBridge.scm",(void*)f_42147},
{"f_42158ChickenBridge.scm",(void*)f_42158},
{"f_42116ChickenBridge.scm",(void*)f_42116},
{"f_32175ChickenBridge.scm",(void*)f_32175},
{"f_41977ChickenBridge.scm",(void*)f_41977},
{"f_42016ChickenBridge.scm",(void*)f_42016},
{"f_41990ChickenBridge.scm",(void*)f_41990},
{"f_41971ChickenBridge.scm",(void*)f_41971},
{"f_32178ChickenBridge.scm",(void*)f_32178},
{"f_41559ChickenBridge.scm",(void*)f_41559},
{"f_41563ChickenBridge.scm",(void*)f_41563},
{"f_41575ChickenBridge.scm",(void*)f_41575},
{"f_41633ChickenBridge.scm",(void*)f_41633},
{"f_41636ChickenBridge.scm",(void*)f_41636},
{"f_41639ChickenBridge.scm",(void*)f_41639},
{"f_41851ChickenBridge.scm",(void*)f_41851},
{"f_41789ChickenBridge.scm",(void*)f_41789},
{"f_41823ChickenBridge.scm",(void*)f_41823},
{"f_41798ChickenBridge.scm",(void*)f_41798},
{"f_41809ChickenBridge.scm",(void*)f_41809},
{"f_41805ChickenBridge.scm",(void*)f_41805},
{"f_41648ChickenBridge.scm",(void*)f_41648},
{"f_41726ChickenBridge.scm",(void*)f_41726},
{"f_41767ChickenBridge.scm",(void*)f_41767},
{"f_41771ChickenBridge.scm",(void*)f_41771},
{"f_41775ChickenBridge.scm",(void*)f_41775},
{"f_41730ChickenBridge.scm",(void*)f_41730},
{"f_41734ChickenBridge.scm",(void*)f_41734},
{"f_41761ChickenBridge.scm",(void*)f_41761},
{"f_41737ChickenBridge.scm",(void*)f_41737},
{"f_41651ChickenBridge.scm",(void*)f_41651},
{"f_41723ChickenBridge.scm",(void*)f_41723},
{"f_41665ChickenBridge.scm",(void*)f_41665},
{"f_41667ChickenBridge.scm",(void*)f_41667},
{"f_41715ChickenBridge.scm",(void*)f_41715},
{"f_41686ChickenBridge.scm",(void*)f_41686},
{"f_41703ChickenBridge.scm",(void*)f_41703},
{"f_41689ChickenBridge.scm",(void*)f_41689},
{"f_41682ChickenBridge.scm",(void*)f_41682},
{"f_41654ChickenBridge.scm",(void*)f_41654},
{"f_41584ChickenBridge.scm",(void*)f_41584},
{"f_41594ChickenBridge.scm",(void*)f_41594},
{"f_41600ChickenBridge.scm",(void*)f_41600},
{"f_41572ChickenBridge.scm",(void*)f_41572},
{"f_41520ChickenBridge.scm",(void*)f_41520},
{"f_41537ChickenBridge.scm",(void*)f_41537},
{"f_41553ChickenBridge.scm",(void*)f_41553},
{"f_41531ChickenBridge.scm",(void*)f_41531},
{"f_41514ChickenBridge.scm",(void*)f_41514},
{"f_32181ChickenBridge.scm",(void*)f_32181},
{"f_41438ChickenBridge.scm",(void*)f_41438},
{"f_32184ChickenBridge.scm",(void*)f_32184},
{"f_41414ChickenBridge.scm",(void*)f_41414},
{"f_41426ChickenBridge.scm",(void*)f_41426},
{"f_41422ChickenBridge.scm",(void*)f_41422},
{"f_41400ChickenBridge.scm",(void*)f_41400},
{"f_41408ChickenBridge.scm",(void*)f_41408},
{"f_41394ChickenBridge.scm",(void*)f_41394},
{"f_32187ChickenBridge.scm",(void*)f_32187},
{"f_41386ChickenBridge.scm",(void*)f_41386},
{"f_39634ChickenBridge.scm",(void*)f_39634},
{"f_39638ChickenBridge.scm",(void*)f_39638},
{"f_41357ChickenBridge.scm",(void*)f_41357},
{"f_41361ChickenBridge.scm",(void*)f_41361},
{"f_39641ChickenBridge.scm",(void*)f_39641},
{"f_41355ChickenBridge.scm",(void*)f_41355},
{"f_40191ChickenBridge.scm",(void*)f_40191},
{"f_41347ChickenBridge.scm",(void*)f_41347},
{"f_40194ChickenBridge.scm",(void*)f_40194},
{"f_41339ChickenBridge.scm",(void*)f_41339},
{"f_40197ChickenBridge.scm",(void*)f_40197},
{"f_41331ChickenBridge.scm",(void*)f_41331},
{"f_40200ChickenBridge.scm",(void*)f_40200},
{"f_41323ChickenBridge.scm",(void*)f_41323},
{"f_40203ChickenBridge.scm",(void*)f_40203},
{"f_41315ChickenBridge.scm",(void*)f_41315},
{"f_40206ChickenBridge.scm",(void*)f_40206},
{"f_41307ChickenBridge.scm",(void*)f_41307},
{"f_40209ChickenBridge.scm",(void*)f_40209},
{"f_41299ChickenBridge.scm",(void*)f_41299},
{"f_40212ChickenBridge.scm",(void*)f_40212},
{"f_41291ChickenBridge.scm",(void*)f_41291},
{"f_40215ChickenBridge.scm",(void*)f_40215},
{"f_41283ChickenBridge.scm",(void*)f_41283},
{"f_40218ChickenBridge.scm",(void*)f_40218},
{"f_41275ChickenBridge.scm",(void*)f_41275},
{"f_40221ChickenBridge.scm",(void*)f_40221},
{"f_41267ChickenBridge.scm",(void*)f_41267},
{"f_40224ChickenBridge.scm",(void*)f_40224},
{"f_41259ChickenBridge.scm",(void*)f_41259},
{"f_40227ChickenBridge.scm",(void*)f_40227},
{"f_41251ChickenBridge.scm",(void*)f_41251},
{"f_40230ChickenBridge.scm",(void*)f_40230},
{"f_41243ChickenBridge.scm",(void*)f_41243},
{"f_40233ChickenBridge.scm",(void*)f_40233},
{"f_41235ChickenBridge.scm",(void*)f_41235},
{"f_40236ChickenBridge.scm",(void*)f_40236},
{"f_41227ChickenBridge.scm",(void*)f_41227},
{"f_40239ChickenBridge.scm",(void*)f_40239},
{"f_41219ChickenBridge.scm",(void*)f_41219},
{"f_40242ChickenBridge.scm",(void*)f_40242},
{"f_41211ChickenBridge.scm",(void*)f_41211},
{"f_40245ChickenBridge.scm",(void*)f_40245},
{"f_41203ChickenBridge.scm",(void*)f_41203},
{"f_40248ChickenBridge.scm",(void*)f_40248},
{"f_41195ChickenBridge.scm",(void*)f_41195},
{"f_40251ChickenBridge.scm",(void*)f_40251},
{"f_41187ChickenBridge.scm",(void*)f_41187},
{"f_40254ChickenBridge.scm",(void*)f_40254},
{"f_41179ChickenBridge.scm",(void*)f_41179},
{"f_40257ChickenBridge.scm",(void*)f_40257},
{"f_41110ChickenBridge.scm",(void*)f_41110},
{"f_41138ChickenBridge.scm",(void*)f_41138},
{"f_40331ChickenBridge.scm",(void*)f_40331},
{"f_41104ChickenBridge.scm",(void*)f_41104},
{"f_40609ChickenBridge.scm",(void*)f_40609},
{"f_41075ChickenBridge.scm",(void*)f_41075},
{"f_41089ChickenBridge.scm",(void*)f_41089},
{"f_41079ChickenBridge.scm",(void*)f_41079},
{"f_40612ChickenBridge.scm",(void*)f_40612},
{"f_41073ChickenBridge.scm",(void*)f_41073},
{"f_41008ChickenBridge.scm",(void*)f_41008},
{"f_41026ChickenBridge.scm",(void*)f_41026},
{"f_41036ChickenBridge.scm",(void*)f_41036},
{"f_41012ChickenBridge.scm",(void*)f_41012},
{"f_41002ChickenBridge.scm",(void*)f_41002},
{"f_40996ChickenBridge.scm",(void*)f_40996},
{"f_40990ChickenBridge.scm",(void*)f_40990},
{"f_40984ChickenBridge.scm",(void*)f_40984},
{"f_40614ChickenBridge.scm",(void*)f_40614},
{"f_40951ChickenBridge.scm",(void*)f_40951},
{"f_40961ChickenBridge.scm",(void*)f_40961},
{"f_40937ChickenBridge.scm",(void*)f_40937},
{"f_40621ChickenBridge.scm",(void*)f_40621},
{"f_40875ChickenBridge.scm",(void*)f_40875},
{"f_40889ChickenBridge.scm",(void*)f_40889},
{"f_40624ChickenBridge.scm",(void*)f_40624},
{"f_40822ChickenBridge.scm",(void*)f_40822},
{"f_40845ChickenBridge.scm",(void*)f_40845},
{"f_40832ChickenBridge.scm",(void*)f_40832},
{"f_40808ChickenBridge.scm",(void*)f_40808},
{"f_40630ChickenBridge.scm",(void*)f_40630},
{"f_40770ChickenBridge.scm",(void*)f_40770},
{"f_40780ChickenBridge.scm",(void*)f_40780},
{"f_40756ChickenBridge.scm",(void*)f_40756},
{"f_40636ChickenBridge.scm",(void*)f_40636},
{"f_40753ChickenBridge.scm",(void*)f_40753},
{"f_40639ChickenBridge.scm",(void*)f_40639},
{"f_40745ChickenBridge.scm",(void*)f_40745},
{"f_40749ChickenBridge.scm",(void*)f_40749},
{"f_40709ChickenBridge.scm",(void*)f_40709},
{"f_40734ChickenBridge.scm",(void*)f_40734},
{"f_40738ChickenBridge.scm",(void*)f_40738},
{"f_40719ChickenBridge.scm",(void*)f_40719},
{"f_40698ChickenBridge.scm",(void*)f_40698},
{"f_40668ChickenBridge.scm",(void*)f_40668},
{"f_40640ChickenBridge.scm",(void*)f_40640},
{"f_40372ChickenBridge.scm",(void*)f_40372},
{"f_40376ChickenBridge.scm",(void*)f_40376},
{"f_40379ChickenBridge.scm",(void*)f_40379},
{"f_40382ChickenBridge.scm",(void*)f_40382},
{"f_40386ChickenBridge.scm",(void*)f_40386},
{"f_40600ChickenBridge.scm",(void*)f_40600},
{"f_40588ChickenBridge.scm",(void*)f_40588},
{"f_40584ChickenBridge.scm",(void*)f_40584},
{"f_40389ChickenBridge.scm",(void*)f_40389},
{"f_40533ChickenBridge.scm",(void*)f_40533},
{"f_40569ChickenBridge.scm",(void*)f_40569},
{"f_40562ChickenBridge.scm",(void*)f_40562},
{"f_40392ChickenBridge.scm",(void*)f_40392},
{"f_40463ChickenBridge.scm",(void*)f_40463},
{"f_40467ChickenBridge.scm",(void*)f_40467},
{"f_40459ChickenBridge.scm",(void*)f_40459},
{"f_7123ChickenBridge.scm",(void*)f_7123},
{"f_40439ChickenBridge.scm",(void*)f_40439},
{"f_40435ChickenBridge.scm",(void*)f_40435},
{"f_40402ChickenBridge.scm",(void*)f_40402},
{"f_40413ChickenBridge.scm",(void*)f_40413},
{"f_40421ChickenBridge.scm",(void*)f_40421},
{"f_40417ChickenBridge.scm",(void*)f_40417},
{"f_40333ChickenBridge.scm",(void*)f_40333},
{"f_40349ChickenBridge.scm",(void*)f_40349},
{"f_40260ChickenBridge.scm",(void*)f_40260},
{"f_40271ChickenBridge.scm",(void*)f_40271},
{"f_40274ChickenBridge.scm",(void*)f_40274},
{"f_40281ChickenBridge.scm",(void*)f_40281},
{"f_39717ChickenBridge.scm",(void*)f_39717},
{"f_40050ChickenBridge.scm",(void*)f_40050},
{"f_40070ChickenBridge.scm",(void*)f_40070},
{"f_40139ChickenBridge.scm",(void*)f_40139},
{"f_40135ChickenBridge.scm",(void*)f_40135},
{"f_40096ChickenBridge.scm",(void*)f_40096},
{"f_40108ChickenBridge.scm",(void*)f_40108},
{"f_40104ChickenBridge.scm",(void*)f_40104},
{"f_40060ChickenBridge.scm",(void*)f_40060},
{"f_39721ChickenBridge.scm",(void*)f_39721},
{"f_39725ChickenBridge.scm",(void*)f_39725},
{"f_39729ChickenBridge.scm",(void*)f_39729},
{"f_39733ChickenBridge.scm",(void*)f_39733},
{"f_39737ChickenBridge.scm",(void*)f_39737},
{"f_39738ChickenBridge.scm",(void*)f_39738},
{"f_39744ChickenBridge.scm",(void*)f_39744},
{"f_39748ChickenBridge.scm",(void*)f_39748},
{"f_39977ChickenBridge.scm",(void*)f_39977},
{"f_40024ChickenBridge.scm",(void*)f_40024},
{"f_40014ChickenBridge.scm",(void*)f_40014},
{"f_40021ChickenBridge.scm",(void*)f_40021},
{"f_40008ChickenBridge.scm",(void*)f_40008},
{"f_39987ChickenBridge.scm",(void*)f_39987},
{"f_39751ChickenBridge.scm",(void*)f_39751},
{"f_39932ChickenBridge.scm",(void*)f_39932},
{"f_39937ChickenBridge.scm",(void*)f_39937},
{"f_39947ChickenBridge.scm",(void*)f_39947},
{"f_39754ChickenBridge.scm",(void*)f_39754},
{"f_39886ChickenBridge.scm",(void*)f_39886},
{"f_39891ChickenBridge.scm",(void*)f_39891},
{"f_39901ChickenBridge.scm",(void*)f_39901},
{"f_39757ChickenBridge.scm",(void*)f_39757},
{"f_39783ChickenBridge.scm",(void*)f_39783},
{"f_39792ChickenBridge.scm",(void*)f_39792},
{"f_39808ChickenBridge.scm",(void*)f_39808},
{"f_39861ChickenBridge.scm",(void*)f_39861},
{"f_39842ChickenBridge.scm",(void*)f_39842},
{"f_39811ChickenBridge.scm",(void*)f_39811},
{"f_39832ChickenBridge.scm",(void*)f_39832},
{"f_39818ChickenBridge.scm",(void*)f_39818},
{"f_39802ChickenBridge.scm",(void*)f_39802},
{"f_39760ChickenBridge.scm",(void*)f_39760},
{"f_39773ChickenBridge.scm",(void*)f_39773},
{"f_39643ChickenBridge.scm",(void*)f_39643},
{"f_39647ChickenBridge.scm",(void*)f_39647},
{"f_39656ChickenBridge.scm",(void*)f_39656},
{"f_39669ChickenBridge.scm",(void*)f_39669},
{"f_39672ChickenBridge.scm",(void*)f_39672},
{"f_39688ChickenBridge.scm",(void*)f_39688},
{"f_39594ChickenBridge.scm",(void*)f_39594},
{"f_39588ChickenBridge.scm",(void*)f_39588},
{"f_39395ChickenBridge.scm",(void*)f_39395},
{"f_39568ChickenBridge.scm",(void*)f_39568},
{"f_39399ChickenBridge.scm",(void*)f_39399},
{"f_39402ChickenBridge.scm",(void*)f_39402},
{"f_39405ChickenBridge.scm",(void*)f_39405},
{"f_39410ChickenBridge.scm",(void*)f_39410},
{"f_39480ChickenBridge.scm",(void*)f_39480},
{"f_39476ChickenBridge.scm",(void*)f_39476},
{"f_39462ChickenBridge.scm",(void*)f_39462},
{"f_39448ChickenBridge.scm",(void*)f_39448},
{"f_39444ChickenBridge.scm",(void*)f_39444},
{"f_39430ChickenBridge.scm",(void*)f_39430},
{"f_8038ChickenBridge.scm",(void*)f_8038},
{"f_39223ChickenBridge.scm",(void*)f_39223},
{"f_39227ChickenBridge.scm",(void*)f_39227},
{"f_39230ChickenBridge.scm",(void*)f_39230},
{"f_39235ChickenBridge.scm",(void*)f_39235},
{"f_39356ChickenBridge.scm",(void*)f_39356},
{"f_39360ChickenBridge.scm",(void*)f_39360},
{"f_39329ChickenBridge.scm",(void*)f_39329},
{"f_39333ChickenBridge.scm",(void*)f_39333},
{"f_39302ChickenBridge.scm",(void*)f_39302},
{"f_39306ChickenBridge.scm",(void*)f_39306},
{"f_39286ChickenBridge.scm",(void*)f_39286},
{"f_39269ChickenBridge.scm",(void*)f_39269},
{"f_39255ChickenBridge.scm",(void*)f_39255},
{"f_8012ChickenBridge.scm",(void*)f_8012},
{"f_39110ChickenBridge.scm",(void*)f_39110},
{"f_39115ChickenBridge.scm",(void*)f_39115},
{"f_39119ChickenBridge.scm",(void*)f_39119},
{"f_39170ChickenBridge.scm",(void*)f_39170},
{"f_39166ChickenBridge.scm",(void*)f_39166},
{"f_39162ChickenBridge.scm",(void*)f_39162},
{"f_39122ChickenBridge.scm",(void*)f_39122},
{"f_39155ChickenBridge.scm",(void*)f_39155},
{"f_39151ChickenBridge.scm",(void*)f_39151},
{"f_39147ChickenBridge.scm",(void*)f_39147},
{"f_39125ChickenBridge.scm",(void*)f_39125},
{"f_39128ChickenBridge.scm",(void*)f_39128},
{"f_39140ChickenBridge.scm",(void*)f_39140},
{"f_39132ChickenBridge.scm",(void*)f_39132},
{"f_38934ChickenBridge.scm",(void*)f_38934},
{"f_38953ChickenBridge.scm",(void*)f_38953},
{"f_38960ChickenBridge.scm",(void*)f_38960},
{"f_38966ChickenBridge.scm",(void*)f_38966},
{"f_38986ChickenBridge.scm",(void*)f_38986},
{"f_38994ChickenBridge.scm",(void*)f_38994},
{"f_38990ChickenBridge.scm",(void*)f_38990},
{"f_38976ChickenBridge.scm",(void*)f_38976},
{"f_38938ChickenBridge.scm",(void*)f_38938},
{"f_38829ChickenBridge.scm",(void*)f_38829},
{"f_38848ChickenBridge.scm",(void*)f_38848},
{"f_38855ChickenBridge.scm",(void*)f_38855},
{"f_38861ChickenBridge.scm",(void*)f_38861},
{"f_38881ChickenBridge.scm",(void*)f_38881},
{"f_38889ChickenBridge.scm",(void*)f_38889},
{"f_38885ChickenBridge.scm",(void*)f_38885},
{"f_38871ChickenBridge.scm",(void*)f_38871},
{"f_38833ChickenBridge.scm",(void*)f_38833},
{"f_38810ChickenBridge.scm",(void*)f_38810},
{"f_7170ChickenBridge.scm",(void*)f_7170},
{"f_7176ChickenBridge.scm",(void*)f_7176},
{"f_7202ChickenBridge.scm",(void*)f_7202},
{"f_7206ChickenBridge.scm",(void*)f_7206},
{"f_7182ChickenBridge.scm",(void*)f_7182},
{"f_7200ChickenBridge.scm",(void*)f_7200},
{"f_7197ChickenBridge.scm",(void*)f_7197},
{"f_7193ChickenBridge.scm",(void*)f_7193},
{"f_7186ChickenBridge.scm",(void*)f_7186},
{"f_38795ChickenBridge.scm",(void*)f_38795},
{"f_38789ChickenBridge.scm",(void*)f_38789},
{"f_38783ChickenBridge.scm",(void*)f_38783},
{"f_38777ChickenBridge.scm",(void*)f_38777},
{"f_38771ChickenBridge.scm",(void*)f_38771},
{"f_38765ChickenBridge.scm",(void*)f_38765},
{"f_38549ChickenBridge.scm",(void*)f_38549},
{"f_38559ChickenBridge.scm",(void*)f_38559},
{"f_38120ChickenBridge.scm",(void*)f_38120},
{"f_38526ChickenBridge.scm",(void*)f_38526},
{"f_38541ChickenBridge.scm",(void*)f_38541},
{"f_38533ChickenBridge.scm",(void*)f_38533},
{"f_38497ChickenBridge.scm",(void*)f_38497},
{"f_38501ChickenBridge.scm",(void*)f_38501},
{"f_38462ChickenBridge.scm",(void*)f_38462},
{"f_38466ChickenBridge.scm",(void*)f_38466},
{"f_38427ChickenBridge.scm",(void*)f_38427},
{"f_38431ChickenBridge.scm",(void*)f_38431},
{"f_38124ChickenBridge.scm",(void*)f_38124},
{"f_38391ChickenBridge.scm",(void*)f_38391},
{"f_38406ChickenBridge.scm",(void*)f_38406},
{"f_38398ChickenBridge.scm",(void*)f_38398},
{"f_38362ChickenBridge.scm",(void*)f_38362},
{"f_38366ChickenBridge.scm",(void*)f_38366},
{"f_38327ChickenBridge.scm",(void*)f_38327},
{"f_38331ChickenBridge.scm",(void*)f_38331},
{"f_38292ChickenBridge.scm",(void*)f_38292},
{"f_38296ChickenBridge.scm",(void*)f_38296},
{"f_38127ChickenBridge.scm",(void*)f_38127},
{"f_38256ChickenBridge.scm",(void*)f_38256},
{"f_38271ChickenBridge.scm",(void*)f_38271},
{"f_38263ChickenBridge.scm",(void*)f_38263},
{"f_38227ChickenBridge.scm",(void*)f_38227},
{"f_38231ChickenBridge.scm",(void*)f_38231},
{"f_38192ChickenBridge.scm",(void*)f_38192},
{"f_38196ChickenBridge.scm",(void*)f_38196},
{"f_38157ChickenBridge.scm",(void*)f_38157},
{"f_38161ChickenBridge.scm",(void*)f_38161},
{"f_38130ChickenBridge.scm",(void*)f_38130},
{"f_38133ChickenBridge.scm",(void*)f_38133},
{"f_37691ChickenBridge.scm",(void*)f_37691},
{"f_38097ChickenBridge.scm",(void*)f_38097},
{"f_38112ChickenBridge.scm",(void*)f_38112},
{"f_38104ChickenBridge.scm",(void*)f_38104},
{"f_38068ChickenBridge.scm",(void*)f_38068},
{"f_38072ChickenBridge.scm",(void*)f_38072},
{"f_38033ChickenBridge.scm",(void*)f_38033},
{"f_38037ChickenBridge.scm",(void*)f_38037},
{"f_37998ChickenBridge.scm",(void*)f_37998},
{"f_38002ChickenBridge.scm",(void*)f_38002},
{"f_37695ChickenBridge.scm",(void*)f_37695},
{"f_37962ChickenBridge.scm",(void*)f_37962},
{"f_37977ChickenBridge.scm",(void*)f_37977},
{"f_37969ChickenBridge.scm",(void*)f_37969},
{"f_37933ChickenBridge.scm",(void*)f_37933},
{"f_37937ChickenBridge.scm",(void*)f_37937},
{"f_37898ChickenBridge.scm",(void*)f_37898},
{"f_37902ChickenBridge.scm",(void*)f_37902},
{"f_37863ChickenBridge.scm",(void*)f_37863},
{"f_37867ChickenBridge.scm",(void*)f_37867},
{"f_37698ChickenBridge.scm",(void*)f_37698},
{"f_37827ChickenBridge.scm",(void*)f_37827},
{"f_37842ChickenBridge.scm",(void*)f_37842},
{"f_37834ChickenBridge.scm",(void*)f_37834},
{"f_37798ChickenBridge.scm",(void*)f_37798},
{"f_37802ChickenBridge.scm",(void*)f_37802},
{"f_37763ChickenBridge.scm",(void*)f_37763},
{"f_37767ChickenBridge.scm",(void*)f_37767},
{"f_37728ChickenBridge.scm",(void*)f_37728},
{"f_37732ChickenBridge.scm",(void*)f_37732},
{"f_37701ChickenBridge.scm",(void*)f_37701},
{"f_37704ChickenBridge.scm",(void*)f_37704},
{"f_37262ChickenBridge.scm",(void*)f_37262},
{"f_37668ChickenBridge.scm",(void*)f_37668},
{"f_37683ChickenBridge.scm",(void*)f_37683},
{"f_37675ChickenBridge.scm",(void*)f_37675},
{"f_37639ChickenBridge.scm",(void*)f_37639},
{"f_37643ChickenBridge.scm",(void*)f_37643},
{"f_37604ChickenBridge.scm",(void*)f_37604},
{"f_37608ChickenBridge.scm",(void*)f_37608},
{"f_37569ChickenBridge.scm",(void*)f_37569},
{"f_37573ChickenBridge.scm",(void*)f_37573},
{"f_37266ChickenBridge.scm",(void*)f_37266},
{"f_37533ChickenBridge.scm",(void*)f_37533},
{"f_37548ChickenBridge.scm",(void*)f_37548},
{"f_37540ChickenBridge.scm",(void*)f_37540},
{"f_37504ChickenBridge.scm",(void*)f_37504},
{"f_37508ChickenBridge.scm",(void*)f_37508},
{"f_37469ChickenBridge.scm",(void*)f_37469},
{"f_37473ChickenBridge.scm",(void*)f_37473},
{"f_37434ChickenBridge.scm",(void*)f_37434},
{"f_37438ChickenBridge.scm",(void*)f_37438},
{"f_37269ChickenBridge.scm",(void*)f_37269},
{"f_37398ChickenBridge.scm",(void*)f_37398},
{"f_37413ChickenBridge.scm",(void*)f_37413},
{"f_37405ChickenBridge.scm",(void*)f_37405},
{"f_37369ChickenBridge.scm",(void*)f_37369},
{"f_37373ChickenBridge.scm",(void*)f_37373},
{"f_37334ChickenBridge.scm",(void*)f_37334},
{"f_37338ChickenBridge.scm",(void*)f_37338},
{"f_37299ChickenBridge.scm",(void*)f_37299},
{"f_37303ChickenBridge.scm",(void*)f_37303},
{"f_37272ChickenBridge.scm",(void*)f_37272},
{"f_37275ChickenBridge.scm",(void*)f_37275},
{"f_36555ChickenBridge.scm",(void*)f_36555},
{"f_37239ChickenBridge.scm",(void*)f_37239},
{"f_37254ChickenBridge.scm",(void*)f_37254},
{"f_37246ChickenBridge.scm",(void*)f_37246},
{"f_37210ChickenBridge.scm",(void*)f_37210},
{"f_37214ChickenBridge.scm",(void*)f_37214},
{"f_37175ChickenBridge.scm",(void*)f_37175},
{"f_37179ChickenBridge.scm",(void*)f_37179},
{"f_37140ChickenBridge.scm",(void*)f_37140},
{"f_37144ChickenBridge.scm",(void*)f_37144},
{"f_37105ChickenBridge.scm",(void*)f_37105},
{"f_37109ChickenBridge.scm",(void*)f_37109},
{"f_36559ChickenBridge.scm",(void*)f_36559},
{"f_37069ChickenBridge.scm",(void*)f_37069},
{"f_37084ChickenBridge.scm",(void*)f_37084},
{"f_37076ChickenBridge.scm",(void*)f_37076},
{"f_37040ChickenBridge.scm",(void*)f_37040},
{"f_37044ChickenBridge.scm",(void*)f_37044},
{"f_37005ChickenBridge.scm",(void*)f_37005},
{"f_37009ChickenBridge.scm",(void*)f_37009},
{"f_36970ChickenBridge.scm",(void*)f_36970},
{"f_36974ChickenBridge.scm",(void*)f_36974},
{"f_36935ChickenBridge.scm",(void*)f_36935},
{"f_36939ChickenBridge.scm",(void*)f_36939},
{"f_36562ChickenBridge.scm",(void*)f_36562},
{"f_36899ChickenBridge.scm",(void*)f_36899},
{"f_36914ChickenBridge.scm",(void*)f_36914},
{"f_36906ChickenBridge.scm",(void*)f_36906},
{"f_36870ChickenBridge.scm",(void*)f_36870},
{"f_36874ChickenBridge.scm",(void*)f_36874},
{"f_36835ChickenBridge.scm",(void*)f_36835},
{"f_36839ChickenBridge.scm",(void*)f_36839},
{"f_36800ChickenBridge.scm",(void*)f_36800},
{"f_36804ChickenBridge.scm",(void*)f_36804},
{"f_36765ChickenBridge.scm",(void*)f_36765},
{"f_36769ChickenBridge.scm",(void*)f_36769},
{"f_36565ChickenBridge.scm",(void*)f_36565},
{"f_36729ChickenBridge.scm",(void*)f_36729},
{"f_36744ChickenBridge.scm",(void*)f_36744},
{"f_36736ChickenBridge.scm",(void*)f_36736},
{"f_36700ChickenBridge.scm",(void*)f_36700},
{"f_36704ChickenBridge.scm",(void*)f_36704},
{"f_36665ChickenBridge.scm",(void*)f_36665},
{"f_36669ChickenBridge.scm",(void*)f_36669},
{"f_36630ChickenBridge.scm",(void*)f_36630},
{"f_36634ChickenBridge.scm",(void*)f_36634},
{"f_36595ChickenBridge.scm",(void*)f_36595},
{"f_36599ChickenBridge.scm",(void*)f_36599},
{"f_36568ChickenBridge.scm",(void*)f_36568},
{"f_36571ChickenBridge.scm",(void*)f_36571},
{"f_35848ChickenBridge.scm",(void*)f_35848},
{"f_36532ChickenBridge.scm",(void*)f_36532},
{"f_36547ChickenBridge.scm",(void*)f_36547},
{"f_36539ChickenBridge.scm",(void*)f_36539},
{"f_36503ChickenBridge.scm",(void*)f_36503},
{"f_36507ChickenBridge.scm",(void*)f_36507},
{"f_36468ChickenBridge.scm",(void*)f_36468},
{"f_36472ChickenBridge.scm",(void*)f_36472},
{"f_36433ChickenBridge.scm",(void*)f_36433},
{"f_36437ChickenBridge.scm",(void*)f_36437},
{"f_36398ChickenBridge.scm",(void*)f_36398},
{"f_36402ChickenBridge.scm",(void*)f_36402},
{"f_35852ChickenBridge.scm",(void*)f_35852},
{"f_36362ChickenBridge.scm",(void*)f_36362},
{"f_36377ChickenBridge.scm",(void*)f_36377},
{"f_36369ChickenBridge.scm",(void*)f_36369},
{"f_36333ChickenBridge.scm",(void*)f_36333},
{"f_36337ChickenBridge.scm",(void*)f_36337},
{"f_36298ChickenBridge.scm",(void*)f_36298},
{"f_36302ChickenBridge.scm",(void*)f_36302},
{"f_36263ChickenBridge.scm",(void*)f_36263},
{"f_36267ChickenBridge.scm",(void*)f_36267},
{"f_36228ChickenBridge.scm",(void*)f_36228},
{"f_36232ChickenBridge.scm",(void*)f_36232},
{"f_35855ChickenBridge.scm",(void*)f_35855},
{"f_36192ChickenBridge.scm",(void*)f_36192},
{"f_36207ChickenBridge.scm",(void*)f_36207},
{"f_36199ChickenBridge.scm",(void*)f_36199},
{"f_36163ChickenBridge.scm",(void*)f_36163},
{"f_36167ChickenBridge.scm",(void*)f_36167},
{"f_36128ChickenBridge.scm",(void*)f_36128},
{"f_36132ChickenBridge.scm",(void*)f_36132},
{"f_36093ChickenBridge.scm",(void*)f_36093},
{"f_36097ChickenBridge.scm",(void*)f_36097},
{"f_36058ChickenBridge.scm",(void*)f_36058},
{"f_36062ChickenBridge.scm",(void*)f_36062},
{"f_35858ChickenBridge.scm",(void*)f_35858},
{"f_36022ChickenBridge.scm",(void*)f_36022},
{"f_36037ChickenBridge.scm",(void*)f_36037},
{"f_36029ChickenBridge.scm",(void*)f_36029},
{"f_35993ChickenBridge.scm",(void*)f_35993},
{"f_35997ChickenBridge.scm",(void*)f_35997},
{"f_35958ChickenBridge.scm",(void*)f_35958},
{"f_35962ChickenBridge.scm",(void*)f_35962},
{"f_35923ChickenBridge.scm",(void*)f_35923},
{"f_35927ChickenBridge.scm",(void*)f_35927},
{"f_35888ChickenBridge.scm",(void*)f_35888},
{"f_35892ChickenBridge.scm",(void*)f_35892},
{"f_35861ChickenBridge.scm",(void*)f_35861},
{"f_35864ChickenBridge.scm",(void*)f_35864},
{"f_35141ChickenBridge.scm",(void*)f_35141},
{"f_35825ChickenBridge.scm",(void*)f_35825},
{"f_35840ChickenBridge.scm",(void*)f_35840},
{"f_35832ChickenBridge.scm",(void*)f_35832},
{"f_35796ChickenBridge.scm",(void*)f_35796},
{"f_35800ChickenBridge.scm",(void*)f_35800},
{"f_35761ChickenBridge.scm",(void*)f_35761},
{"f_35765ChickenBridge.scm",(void*)f_35765},
{"f_35726ChickenBridge.scm",(void*)f_35726},
{"f_35730ChickenBridge.scm",(void*)f_35730},
{"f_35691ChickenBridge.scm",(void*)f_35691},
{"f_35695ChickenBridge.scm",(void*)f_35695},
{"f_35145ChickenBridge.scm",(void*)f_35145},
{"f_35655ChickenBridge.scm",(void*)f_35655},
{"f_35670ChickenBridge.scm",(void*)f_35670},
{"f_35662ChickenBridge.scm",(void*)f_35662},
{"f_35626ChickenBridge.scm",(void*)f_35626},
{"f_35630ChickenBridge.scm",(void*)f_35630},
{"f_35591ChickenBridge.scm",(void*)f_35591},
{"f_35595ChickenBridge.scm",(void*)f_35595},
{"f_35556ChickenBridge.scm",(void*)f_35556},
{"f_35560ChickenBridge.scm",(void*)f_35560},
{"f_35521ChickenBridge.scm",(void*)f_35521},
{"f_35525ChickenBridge.scm",(void*)f_35525},
{"f_35148ChickenBridge.scm",(void*)f_35148},
{"f_35485ChickenBridge.scm",(void*)f_35485},
{"f_35500ChickenBridge.scm",(void*)f_35500},
{"f_35492ChickenBridge.scm",(void*)f_35492},
{"f_35456ChickenBridge.scm",(void*)f_35456},
{"f_35460ChickenBridge.scm",(void*)f_35460},
{"f_35421ChickenBridge.scm",(void*)f_35421},
{"f_35425ChickenBridge.scm",(void*)f_35425},
{"f_35386ChickenBridge.scm",(void*)f_35386},
{"f_35390ChickenBridge.scm",(void*)f_35390},
{"f_35351ChickenBridge.scm",(void*)f_35351},
{"f_35355ChickenBridge.scm",(void*)f_35355},
{"f_35151ChickenBridge.scm",(void*)f_35151},
{"f_35315ChickenBridge.scm",(void*)f_35315},
{"f_35330ChickenBridge.scm",(void*)f_35330},
{"f_35322ChickenBridge.scm",(void*)f_35322},
{"f_35286ChickenBridge.scm",(void*)f_35286},
{"f_35290ChickenBridge.scm",(void*)f_35290},
{"f_35251ChickenBridge.scm",(void*)f_35251},
{"f_35255ChickenBridge.scm",(void*)f_35255},
{"f_35216ChickenBridge.scm",(void*)f_35216},
{"f_35220ChickenBridge.scm",(void*)f_35220},
{"f_35181ChickenBridge.scm",(void*)f_35181},
{"f_35185ChickenBridge.scm",(void*)f_35185},
{"f_35154ChickenBridge.scm",(void*)f_35154},
{"f_35157ChickenBridge.scm",(void*)f_35157},
{"f_34712ChickenBridge.scm",(void*)f_34712},
{"f_35118ChickenBridge.scm",(void*)f_35118},
{"f_35133ChickenBridge.scm",(void*)f_35133},
{"f_35125ChickenBridge.scm",(void*)f_35125},
{"f_35089ChickenBridge.scm",(void*)f_35089},
{"f_35093ChickenBridge.scm",(void*)f_35093},
{"f_35054ChickenBridge.scm",(void*)f_35054},
{"f_35058ChickenBridge.scm",(void*)f_35058},
{"f_35019ChickenBridge.scm",(void*)f_35019},
{"f_35023ChickenBridge.scm",(void*)f_35023},
{"f_34716ChickenBridge.scm",(void*)f_34716},
{"f_34983ChickenBridge.scm",(void*)f_34983},
{"f_34998ChickenBridge.scm",(void*)f_34998},
{"f_34990ChickenBridge.scm",(void*)f_34990},
{"f_34954ChickenBridge.scm",(void*)f_34954},
{"f_34958ChickenBridge.scm",(void*)f_34958},
{"f_34919ChickenBridge.scm",(void*)f_34919},
{"f_34923ChickenBridge.scm",(void*)f_34923},
{"f_34884ChickenBridge.scm",(void*)f_34884},
{"f_34888ChickenBridge.scm",(void*)f_34888},
{"f_34719ChickenBridge.scm",(void*)f_34719},
{"f_34848ChickenBridge.scm",(void*)f_34848},
{"f_34863ChickenBridge.scm",(void*)f_34863},
{"f_34855ChickenBridge.scm",(void*)f_34855},
{"f_34819ChickenBridge.scm",(void*)f_34819},
{"f_34823ChickenBridge.scm",(void*)f_34823},
{"f_34784ChickenBridge.scm",(void*)f_34784},
{"f_34788ChickenBridge.scm",(void*)f_34788},
{"f_34749ChickenBridge.scm",(void*)f_34749},
{"f_34753ChickenBridge.scm",(void*)f_34753},
{"f_34722ChickenBridge.scm",(void*)f_34722},
{"f_34725ChickenBridge.scm",(void*)f_34725},
{"f_33657ChickenBridge.scm",(void*)f_33657},
{"f_34689ChickenBridge.scm",(void*)f_34689},
{"f_34704ChickenBridge.scm",(void*)f_34704},
{"f_34696ChickenBridge.scm",(void*)f_34696},
{"f_34660ChickenBridge.scm",(void*)f_34660},
{"f_34664ChickenBridge.scm",(void*)f_34664},
{"f_34625ChickenBridge.scm",(void*)f_34625},
{"f_34629ChickenBridge.scm",(void*)f_34629},
{"f_34590ChickenBridge.scm",(void*)f_34590},
{"f_34594ChickenBridge.scm",(void*)f_34594},
{"f_34555ChickenBridge.scm",(void*)f_34555},
{"f_34559ChickenBridge.scm",(void*)f_34559},
{"f_34520ChickenBridge.scm",(void*)f_34520},
{"f_34524ChickenBridge.scm",(void*)f_34524},
{"f_33661ChickenBridge.scm",(void*)f_33661},
{"f_34484ChickenBridge.scm",(void*)f_34484},
{"f_34499ChickenBridge.scm",(void*)f_34499},
{"f_34491ChickenBridge.scm",(void*)f_34491},
{"f_34455ChickenBridge.scm",(void*)f_34455},
{"f_34459ChickenBridge.scm",(void*)f_34459},
{"f_34420ChickenBridge.scm",(void*)f_34420},
{"f_34424ChickenBridge.scm",(void*)f_34424},
{"f_34385ChickenBridge.scm",(void*)f_34385},
{"f_34389ChickenBridge.scm",(void*)f_34389},
{"f_34350ChickenBridge.scm",(void*)f_34350},
{"f_34354ChickenBridge.scm",(void*)f_34354},
{"f_34315ChickenBridge.scm",(void*)f_34315},
{"f_34319ChickenBridge.scm",(void*)f_34319},
{"f_33664ChickenBridge.scm",(void*)f_33664},
{"f_34279ChickenBridge.scm",(void*)f_34279},
{"f_34294ChickenBridge.scm",(void*)f_34294},
{"f_34286ChickenBridge.scm",(void*)f_34286},
{"f_34250ChickenBridge.scm",(void*)f_34250},
{"f_34254ChickenBridge.scm",(void*)f_34254},
{"f_34215ChickenBridge.scm",(void*)f_34215},
{"f_34219ChickenBridge.scm",(void*)f_34219},
{"f_34180ChickenBridge.scm",(void*)f_34180},
{"f_34184ChickenBridge.scm",(void*)f_34184},
{"f_34145ChickenBridge.scm",(void*)f_34145},
{"f_34149ChickenBridge.scm",(void*)f_34149},
{"f_34110ChickenBridge.scm",(void*)f_34110},
{"f_34114ChickenBridge.scm",(void*)f_34114},
{"f_33667ChickenBridge.scm",(void*)f_33667},
{"f_34074ChickenBridge.scm",(void*)f_34074},
{"f_34089ChickenBridge.scm",(void*)f_34089},
{"f_34081ChickenBridge.scm",(void*)f_34081},
{"f_34045ChickenBridge.scm",(void*)f_34045},
{"f_34049ChickenBridge.scm",(void*)f_34049},
{"f_34010ChickenBridge.scm",(void*)f_34010},
{"f_34014ChickenBridge.scm",(void*)f_34014},
{"f_33975ChickenBridge.scm",(void*)f_33975},
{"f_33979ChickenBridge.scm",(void*)f_33979},
{"f_33940ChickenBridge.scm",(void*)f_33940},
{"f_33944ChickenBridge.scm",(void*)f_33944},
{"f_33905ChickenBridge.scm",(void*)f_33905},
{"f_33909ChickenBridge.scm",(void*)f_33909},
{"f_33670ChickenBridge.scm",(void*)f_33670},
{"f_33869ChickenBridge.scm",(void*)f_33869},
{"f_33884ChickenBridge.scm",(void*)f_33884},
{"f_33876ChickenBridge.scm",(void*)f_33876},
{"f_33840ChickenBridge.scm",(void*)f_33840},
{"f_33844ChickenBridge.scm",(void*)f_33844},
{"f_33805ChickenBridge.scm",(void*)f_33805},
{"f_33809ChickenBridge.scm",(void*)f_33809},
{"f_33770ChickenBridge.scm",(void*)f_33770},
{"f_33774ChickenBridge.scm",(void*)f_33774},
{"f_33735ChickenBridge.scm",(void*)f_33735},
{"f_33739ChickenBridge.scm",(void*)f_33739},
{"f_33700ChickenBridge.scm",(void*)f_33700},
{"f_33704ChickenBridge.scm",(void*)f_33704},
{"f_33673ChickenBridge.scm",(void*)f_33673},
{"f_33676ChickenBridge.scm",(void*)f_33676},
{"f_33651ChickenBridge.scm",(void*)f_33651},
{"f_7843ChickenBridge.scm",(void*)f_7843},
{"f_33498ChickenBridge.scm",(void*)f_33498},
{"f_33505ChickenBridge.scm",(void*)f_33505},
{"f_33443ChickenBridge.scm",(void*)f_33443},
{"f_33450ChickenBridge.scm",(void*)f_33450},
{"f_33196ChickenBridge.scm",(void*)f_33196},
{"f_33420ChickenBridge.scm",(void*)f_33420},
{"f_33435ChickenBridge.scm",(void*)f_33435},
{"f_33427ChickenBridge.scm",(void*)f_33427},
{"f_33391ChickenBridge.scm",(void*)f_33391},
{"f_33395ChickenBridge.scm",(void*)f_33395},
{"f_33356ChickenBridge.scm",(void*)f_33356},
{"f_33360ChickenBridge.scm",(void*)f_33360},
{"f_33200ChickenBridge.scm",(void*)f_33200},
{"f_33320ChickenBridge.scm",(void*)f_33320},
{"f_33335ChickenBridge.scm",(void*)f_33335},
{"f_33327ChickenBridge.scm",(void*)f_33327},
{"f_33291ChickenBridge.scm",(void*)f_33291},
{"f_33295ChickenBridge.scm",(void*)f_33295},
{"f_33256ChickenBridge.scm",(void*)f_33256},
{"f_33260ChickenBridge.scm",(void*)f_33260},
{"f_33203ChickenBridge.scm",(void*)f_33203},
{"f_33206ChickenBridge.scm",(void*)f_33206},
{"f_33219ChickenBridge.scm",(void*)f_33219},
{"f_33223ChickenBridge.scm",(void*)f_33223},
{"f_33095ChickenBridge.scm",(void*)f_33095},
{"f_33099ChickenBridge.scm",(void*)f_33099},
{"f_33102ChickenBridge.scm",(void*)f_33102},
{"f_7745ChickenBridge.scm",(void*)f_7745},
{"f_33105ChickenBridge.scm",(void*)f_33105},
{"f_8159ChickenBridge.scm",(void*)f_8159},
{"f_33147ChickenBridge.scm",(void*)f_33147},
{"f_33150ChickenBridge.scm",(void*)f_33150},
{"f_33137ChickenBridge.scm",(void*)f_33137},
{"f_33127ChickenBridge.scm",(void*)f_33127},
{"f_33117ChickenBridge.scm",(void*)f_33117},
{"f_33108ChickenBridge.scm",(void*)f_33108},
{"f_33067ChickenBridge.scm",(void*)f_33067},
{"f_33071ChickenBridge.scm",(void*)f_33071},
{"f_33043ChickenBridge.scm",(void*)f_33043},
{"f_32994ChickenBridge.scm",(void*)f_32994},
{"f_7731ChickenBridge.scm",(void*)f_7731},
{"f_32998ChickenBridge.scm",(void*)f_32998},
{"f_33014ChickenBridge.scm",(void*)f_33014},
{"f_33041ChickenBridge.scm",(void*)f_33041},
{"f_33017ChickenBridge.scm",(void*)f_33017},
{"f_33037ChickenBridge.scm",(void*)f_33037},
{"f_33033ChickenBridge.scm",(void*)f_33033},
{"f_33001ChickenBridge.scm",(void*)f_33001},
{"f_32985ChickenBridge.scm",(void*)f_32985},
{"f_32989ChickenBridge.scm",(void*)f_32989},
{"f_32832ChickenBridge.scm",(void*)f_32832},
{"f_32959ChickenBridge.scm",(void*)f_32959},
{"f_32972ChickenBridge.scm",(void*)f_32972},
{"f_32954ChickenBridge.scm",(void*)f_32954},
{"f_32835ChickenBridge.scm",(void*)f_32835},
{"f_32951ChickenBridge.scm",(void*)f_32951},
{"f_32935ChickenBridge.scm",(void*)f_32935},
{"f_32863ChickenBridge.scm",(void*)f_32863},
{"f_32871ChickenBridge.scm",(void*)f_32871},
{"f_32881ChickenBridge.scm",(void*)f_32881},
{"f_32884ChickenBridge.scm",(void*)f_32884},
{"f_32866ChickenBridge.scm",(void*)f_32866},
{"f_32673ChickenBridge.scm",(void*)f_32673},
{"f_7795ChickenBridge.scm",(void*)f_7795},
{"f_32695ChickenBridge.scm",(void*)f_32695},
{"f_32699ChickenBridge.scm",(void*)f_32699},
{"f_32677ChickenBridge.scm",(void*)f_32677},
{"f_32189ChickenBridge.scm",(void*)f_32189},
{"f_32650ChickenBridge.scm",(void*)f_32650},
{"f_32665ChickenBridge.scm",(void*)f_32665},
{"f_32657ChickenBridge.scm",(void*)f_32657},
{"f_32621ChickenBridge.scm",(void*)f_32621},
{"f_32625ChickenBridge.scm",(void*)f_32625},
{"f_32586ChickenBridge.scm",(void*)f_32586},
{"f_32590ChickenBridge.scm",(void*)f_32590},
{"f_32551ChickenBridge.scm",(void*)f_32551},
{"f_32555ChickenBridge.scm",(void*)f_32555},
{"f_32193ChickenBridge.scm",(void*)f_32193},
{"f_32515ChickenBridge.scm",(void*)f_32515},
{"f_32530ChickenBridge.scm",(void*)f_32530},
{"f_32522ChickenBridge.scm",(void*)f_32522},
{"f_32486ChickenBridge.scm",(void*)f_32486},
{"f_32490ChickenBridge.scm",(void*)f_32490},
{"f_32451ChickenBridge.scm",(void*)f_32451},
{"f_32455ChickenBridge.scm",(void*)f_32455},
{"f_32416ChickenBridge.scm",(void*)f_32416},
{"f_32420ChickenBridge.scm",(void*)f_32420},
{"f_32196ChickenBridge.scm",(void*)f_32196},
{"f_32380ChickenBridge.scm",(void*)f_32380},
{"f_32395ChickenBridge.scm",(void*)f_32395},
{"f_32387ChickenBridge.scm",(void*)f_32387},
{"f_32351ChickenBridge.scm",(void*)f_32351},
{"f_32355ChickenBridge.scm",(void*)f_32355},
{"f_32316ChickenBridge.scm",(void*)f_32316},
{"f_32320ChickenBridge.scm",(void*)f_32320},
{"f_32281ChickenBridge.scm",(void*)f_32281},
{"f_32285ChickenBridge.scm",(void*)f_32285},
{"f_32199ChickenBridge.scm",(void*)f_32199},
{"f_32202ChickenBridge.scm",(void*)f_32202},
{"f_32257ChickenBridge.scm",(void*)f_32257},
{"f_32253ChickenBridge.scm",(void*)f_32253},
{"f_32205ChickenBridge.scm",(void*)f_32205},
{"f_29993ChickenBridge.scm",(void*)f_29993},
{"f_30006ChickenBridge.scm",(void*)f_30006},
{"f_30013ChickenBridge.scm",(void*)f_30013},
{"f_30020ChickenBridge.scm",(void*)f_30020},
{"f_29999ChickenBridge.scm",(void*)f_29999},
{"f_32217ChickenBridge.scm",(void*)f_32217},
{"f_32239ChickenBridge.scm",(void*)f_32239},
{"f_32801ChickenBridge.scm",(void*)f_32801},
{"f_32811ChickenBridge.scm",(void*)f_32811},
{"f_32714ChickenBridge.scm",(void*)f_32714},
{"f_32771ChickenBridge.scm",(void*)f_32771},
{"f_32781ChickenBridge.scm",(void*)f_32781},
{"f_32722ChickenBridge.scm",(void*)f_32722},
{"f_32740ChickenBridge.scm",(void*)f_32740},
{"f_32744ChickenBridge.scm",(void*)f_32744},
{"f_32748ChickenBridge.scm",(void*)f_32748},
{"f_32755ChickenBridge.scm",(void*)f_32755},
{"f_32732ChickenBridge.scm",(void*)f_32732},
{"f_32725ChickenBridge.scm",(void*)f_32725},
{"f_32208ChickenBridge.scm",(void*)f_32208},
{"f_31120ChickenBridge.scm",(void*)f_31120},
{"f_31133ChickenBridge.scm",(void*)f_31133},
{"f_31183ChickenBridge.scm",(void*)f_31183},
{"f_31280ChickenBridge.scm",(void*)f_31280},
{"f_31348ChickenBridge.scm",(void*)f_31348},
{"f_31605ChickenBridge.scm",(void*)f_31605},
{"f_31355ChickenBridge.scm",(void*)f_31355},
{"f_31593ChickenBridge.scm",(void*)f_31593},
{"f_31544ChickenBridge.scm",(void*)f_31544},
{"f_31550ChickenBridge.scm",(void*)f_31550},
{"f_31574ChickenBridge.scm",(void*)f_31574},
{"f_31570ChickenBridge.scm",(void*)f_31570},
{"f_31558ChickenBridge.scm",(void*)f_31558},
{"f_31358ChickenBridge.scm",(void*)f_31358},
{"f_31520ChickenBridge.scm",(void*)f_31520},
{"f_31524ChickenBridge.scm",(void*)f_31524},
{"f_31361ChickenBridge.scm",(void*)f_31361},
{"f_31497ChickenBridge.scm",(void*)f_31497},
{"f_31501ChickenBridge.scm",(void*)f_31501},
{"f_31364ChickenBridge.scm",(void*)f_31364},
{"f_31474ChickenBridge.scm",(void*)f_31474},
{"f_31478ChickenBridge.scm",(void*)f_31478},
{"f_31367ChickenBridge.scm",(void*)f_31367},
{"f_31399ChickenBridge.scm",(void*)f_31399},
{"f_31417ChickenBridge.scm",(void*)f_31417},
{"f_31435ChickenBridge.scm",(void*)f_31435},
{"f_31453ChickenBridge.scm",(void*)f_31453},
{"f_31370ChickenBridge.scm",(void*)f_31370},
{"f_31374ChickenBridge.scm",(void*)f_31374},
{"f_31284ChickenBridge.scm",(void*)f_31284},
{"f_31288ChickenBridge.scm",(void*)f_31288},
{"f_31292ChickenBridge.scm",(void*)f_31292},
{"f_31187ChickenBridge.scm",(void*)f_31187},
{"f_31191ChickenBridge.scm",(void*)f_31191},
{"f_31195ChickenBridge.scm",(void*)f_31195},
{"f_31214ChickenBridge.scm",(void*)f_31214},
{"f_31218ChickenBridge.scm",(void*)f_31218},
{"f_31198ChickenBridge.scm",(void*)f_31198},
{"f_31202ChickenBridge.scm",(void*)f_31202},
{"f_31137ChickenBridge.scm",(void*)f_31137},
{"f_31141ChickenBridge.scm",(void*)f_31141},
{"f_31145ChickenBridge.scm",(void*)f_31145},
{"f_31127ChickenBridge.scm",(void*)f_31127},
{"f_30942ChickenBridge.scm",(void*)f_30942},
{"f_30954ChickenBridge.scm",(void*)f_30954},
{"f_30973ChickenBridge.scm",(void*)f_30973},
{"f_30991ChickenBridge.scm",(void*)f_30991},
{"f_31023ChickenBridge.scm",(void*)f_31023},
{"f_31026ChickenBridge.scm",(void*)f_31026},
{"f_31019ChickenBridge.scm",(void*)f_31019},
{"f_31005ChickenBridge.scm",(void*)f_31005},
{"f_30976ChickenBridge.scm",(void*)f_30976},
{"f_30921ChickenBridge.scm",(void*)f_30921},
{"f_30928ChickenBridge.scm",(void*)f_30928},
{"f_30931ChickenBridge.scm",(void*)f_30931},
{"f_30937ChickenBridge.scm",(void*)f_30937},
{"f_30856ChickenBridge.scm",(void*)f_30856},
{"f_30865ChickenBridge.scm",(void*)f_30865},
{"f_30888ChickenBridge.scm",(void*)f_30888},
{"f_30878ChickenBridge.scm",(void*)f_30878},
{"f_30812ChickenBridge.scm",(void*)f_30812},
{"f_30820ChickenBridge.scm",(void*)f_30820},
{"f_30824ChickenBridge.scm",(void*)f_30824},
{"f_30800ChickenBridge.scm",(void*)f_30800},
{"f_30698ChickenBridge.scm",(void*)f_30698},
{"f_30650ChickenBridge.scm",(void*)f_30650},
{"f_30031ChickenBridge.scm",(void*)f_30031},
{"f_30035ChickenBridge.scm",(void*)f_30035},
{"f_30038ChickenBridge.scm",(void*)f_30038},
{"f_30464ChickenBridge.scm",(void*)f_30464},
{"f_30460ChickenBridge.scm",(void*)f_30460},
{"f_30456ChickenBridge.scm",(void*)f_30456},
{"f_30041ChickenBridge.scm",(void*)f_30041},
{"f_30164ChickenBridge.scm",(void*)f_30164},
{"f_29346ChickenBridge.scm",(void*)f_29346},
{"f_30170ChickenBridge.scm",(void*)f_30170},
{"f_29362ChickenBridge.scm",(void*)f_29362},
{"f_30258ChickenBridge.scm",(void*)f_30258},
{"f_30328ChickenBridge.scm",(void*)f_30328},
{"f_29378ChickenBridge.scm",(void*)f_29378},
{"f_30331ChickenBridge.scm",(void*)f_30331},
{"f_29410ChickenBridge.scm",(void*)f_29410},
{"f_30409ChickenBridge.scm",(void*)f_30409},
{"f_30435ChickenBridge.scm",(void*)f_30435},
{"f_30429ChickenBridge.scm",(void*)f_30429},
{"f_30418ChickenBridge.scm",(void*)f_30418},
{"f_30360ChickenBridge.scm",(void*)f_30360},
{"f_30370ChickenBridge.scm",(void*)f_30370},
{"f_30396ChickenBridge.scm",(void*)f_30396},
{"f_30390ChickenBridge.scm",(void*)f_30390},
{"f_30373ChickenBridge.scm",(void*)f_30373},
{"f_30383ChickenBridge.scm",(void*)f_30383},
{"f_30376ChickenBridge.scm",(void*)f_30376},
{"f_30337ChickenBridge.scm",(void*)f_30337},
{"f_30346ChickenBridge.scm",(void*)f_30346},
{"f_30340ChickenBridge.scm",(void*)f_30340},
{"f_30264ChickenBridge.scm",(void*)f_30264},
{"f_30282ChickenBridge.scm",(void*)f_30282},
{"f_30315ChickenBridge.scm",(void*)f_30315},
{"f_30301ChickenBridge.scm",(void*)f_30301},
{"f_30309ChickenBridge.scm",(void*)f_30309},
{"f_30292ChickenBridge.scm",(void*)f_30292},
{"f_30267ChickenBridge.scm",(void*)f_30267},
{"f_30179ChickenBridge.scm",(void*)f_30179},
{"f_30201ChickenBridge.scm",(void*)f_30201},
{"f_30248ChickenBridge.scm",(void*)f_30248},
{"f_30234ChickenBridge.scm",(void*)f_30234},
{"f_30242ChickenBridge.scm",(void*)f_30242},
{"f_30214ChickenBridge.scm",(void*)f_30214},
{"f_30217ChickenBridge.scm",(void*)f_30217},
{"f_30182ChickenBridge.scm",(void*)f_30182},
{"f_30199ChickenBridge.scm",(void*)f_30199},
{"f_30185ChickenBridge.scm",(void*)f_30185},
{"f_30050ChickenBridge.scm",(void*)f_30050},
{"f_30056ChickenBridge.scm",(void*)f_30056},
{"f_30114ChickenBridge.scm",(void*)f_30114},
{"f_30117ChickenBridge.scm",(void*)f_30117},
{"f_30138ChickenBridge.scm",(void*)f_30138},
{"f_30149ChickenBridge.scm",(void*)f_30149},
{"f_30128ChickenBridge.scm",(void*)f_30128},
{"f_30062ChickenBridge.scm",(void*)f_30062},
{"f_30072ChickenBridge.scm",(void*)f_30072},
{"f_30108ChickenBridge.scm",(void*)f_30108},
{"f_30078ChickenBridge.scm",(void*)f_30078},
{"f_30093ChickenBridge.scm",(void*)f_30093},
{"f_30101ChickenBridge.scm",(void*)f_30101},
{"f_30085ChickenBridge.scm",(void*)f_30085},
{"f_29927ChickenBridge.scm",(void*)f_29927},
{"f_29929ChickenBridge.scm",(void*)f_29929},
{"f_29977ChickenBridge.scm",(void*)f_29977},
{"f_29933ChickenBridge.scm",(void*)f_29933},
{"f_29936ChickenBridge.scm",(void*)f_29936},
{"f_29941ChickenBridge.scm",(void*)f_29941},
{"f_29962ChickenBridge.scm",(void*)f_29962},
{"f_29919ChickenBridge.scm",(void*)f_29919},
{"f_29921ChickenBridge.scm",(void*)f_29921},
{"f_29742ChickenBridge.scm",(void*)f_29742},
{"f_29750ChickenBridge.scm",(void*)f_29750},
{"f_29711ChickenBridge.scm",(void*)f_29711},
{"f_29728ChickenBridge.scm",(void*)f_29728},
{"f_29732ChickenBridge.scm",(void*)f_29732},
{"f_29678ChickenBridge.scm",(void*)f_29678},
{"f_29685ChickenBridge.scm",(void*)f_29685},
{"f_29572ChickenBridge.scm",(void*)f_29572},
{"f_29579ChickenBridge.scm",(void*)f_29579},
{"f_29694ChickenBridge.scm",(void*)f_29694},
{"f_29917ChickenBridge.scm",(void*)f_29917},
{"f_29894ChickenBridge.scm",(void*)f_29894},
{"f_29910ChickenBridge.scm",(void*)f_29910},
{"f_29756ChickenBridge.scm",(void*)f_29756},
{"f_29759ChickenBridge.scm",(void*)f_29759},
{"f_29783ChickenBridge.scm",(void*)f_29783},
{"f_29840ChickenBridge.scm",(void*)f_29840},
{"f_29846ChickenBridge.scm",(void*)f_29846},
{"f_29855ChickenBridge.scm",(void*)f_29855},
{"f_29864ChickenBridge.scm",(void*)f_29864},
{"f_29873ChickenBridge.scm",(void*)f_29873},
{"f_29882ChickenBridge.scm",(void*)f_29882},
{"f_29834ChickenBridge.scm",(void*)f_29834},
{"f_29789ChickenBridge.scm",(void*)f_29789},
{"f_29795ChickenBridge.scm",(void*)f_29795},
{"f_29801ChickenBridge.scm",(void*)f_29801},
{"f_29807ChickenBridge.scm",(void*)f_29807},
{"f_29813ChickenBridge.scm",(void*)f_29813},
{"f_29819ChickenBridge.scm",(void*)f_29819},
{"f_29660ChickenBridge.scm",(void*)f_29660},
{"f_29667ChickenBridge.scm",(void*)f_29667},
{"f_29593ChickenBridge.scm",(void*)f_29593},
{"f_29581ChickenBridge.scm",(void*)f_29581},
{"f_29549ChickenBridge.scm",(void*)f_29549},
{"f_29556ChickenBridge.scm",(void*)f_29556},
{"f_29563ChickenBridge.scm",(void*)f_29563},
{"f_29533ChickenBridge.scm",(void*)f_29533},
{"f_29540ChickenBridge.scm",(void*)f_29540},
{"f_29547ChickenBridge.scm",(void*)f_29547},
{"f_29524ChickenBridge.scm",(void*)f_29524},
{"f_29506ChickenBridge.scm",(void*)f_29506},
{"f_29488ChickenBridge.scm",(void*)f_29488},
{"f_29473ChickenBridge.scm",(void*)f_29473},
{"f_29467ChickenBridge.scm",(void*)f_29467},
{"f_29419ChickenBridge.scm",(void*)f_29419},
{"f_29387ChickenBridge.scm",(void*)f_29387},
{"f_29394ChickenBridge.scm",(void*)f_29394},
{"f_29329ChickenBridge.scm",(void*)f_29329},
{"f_29337ChickenBridge.scm",(void*)f_29337},
{"f_29319ChickenBridge.scm",(void*)f_29319},
{"f_29327ChickenBridge.scm",(void*)f_29327},
{"f_29313ChickenBridge.scm",(void*)f_29313},
{"f_29301ChickenBridge.scm",(void*)f_29301},
{"f_29298ChickenBridge.scm",(void*)f_29298},
{"f_29280ChickenBridge.scm",(void*)f_29280},
{"f_29284ChickenBridge.scm",(void*)f_29284},
{"f_29175ChickenBridge.scm",(void*)f_29175},
{"f_29165ChickenBridge.scm",(void*)f_29165},
{"f_29153ChickenBridge.scm",(void*)f_29153},
{"f_29130ChickenBridge.scm",(void*)f_29130},
{"f_29121ChickenBridge.scm",(void*)f_29121},
{"f_29085ChickenBridge.scm",(void*)f_29085},
{"f_29064ChickenBridge.scm",(void*)f_29064},
{"f_28868ChickenBridge.scm",(void*)f_28868},
{"f_28872ChickenBridge.scm",(void*)f_28872},
{"f_29021ChickenBridge.scm",(void*)f_29021},
{"f_29047ChickenBridge.scm",(void*)f_29047},
{"f_29032ChickenBridge.scm",(void*)f_29032},
{"f_28878ChickenBridge.scm",(void*)f_28878},
{"f_28883ChickenBridge.scm",(void*)f_28883},
{"f_28887ChickenBridge.scm",(void*)f_28887},
{"f_28890ChickenBridge.scm",(void*)f_28890},
{"f_28893ChickenBridge.scm",(void*)f_28893},
{"f_28896ChickenBridge.scm",(void*)f_28896},
{"f_28899ChickenBridge.scm",(void*)f_28899},
{"f_28902ChickenBridge.scm",(void*)f_28902},
{"f_28907ChickenBridge.scm",(void*)f_28907},
{"f_29001ChickenBridge.scm",(void*)f_29001},
{"f_29008ChickenBridge.scm",(void*)f_29008},
{"f_28917ChickenBridge.scm",(void*)f_28917},
{"f_28938ChickenBridge.scm",(void*)f_28938},
{"f_28942ChickenBridge.scm",(void*)f_28942},
{"f_28946ChickenBridge.scm",(void*)f_28946},
{"f_28948ChickenBridge.scm",(void*)f_28948},
{"f_28958ChickenBridge.scm",(void*)f_28958},
{"f_28920ChickenBridge.scm",(void*)f_28920},
{"f_28923ChickenBridge.scm",(void*)f_28923},
{"f_28742ChickenBridge.scm",(void*)f_28742},
{"f_28748ChickenBridge.scm",(void*)f_28748},
{"f_28752ChickenBridge.scm",(void*)f_28752},
{"f_28770ChickenBridge.scm",(void*)f_28770},
{"f_28773ChickenBridge.scm",(void*)f_28773},
{"f_28777ChickenBridge.scm",(void*)f_28777},
{"f_28780ChickenBridge.scm",(void*)f_28780},
{"f_28832ChickenBridge.scm",(void*)f_28832},
{"f_28843ChickenBridge.scm",(void*)f_28843},
{"f_28783ChickenBridge.scm",(void*)f_28783},
{"f_28793ChickenBridge.scm",(void*)f_28793},
{"f_28795ChickenBridge.scm",(void*)f_28795},
{"f_28639ChickenBridge.scm",(void*)f_28639},
{"f_28663ChickenBridge.scm",(void*)f_28663},
{"f_28667ChickenBridge.scm",(void*)f_28667},
{"f_28693ChickenBridge.scm",(void*)f_28693},
{"f_28703ChickenBridge.scm",(void*)f_28703},
{"f_28740ChickenBridge.scm",(void*)f_28740},
{"f_28732ChickenBridge.scm",(void*)f_28732},
{"f_28670ChickenBridge.scm",(void*)f_28670},
{"f_28640ChickenBridge.scm",(void*)f_28640},
{"f_28644ChickenBridge.scm",(void*)f_28644},
{"f_28647ChickenBridge.scm",(void*)f_28647},
{"f_28809ChickenBridge.scm",(void*)f_28809},
{"f_28812ChickenBridge.scm",(void*)f_28812},
{"f_28819ChickenBridge.scm",(void*)f_28819},
{"f_28753ChickenBridge.scm",(void*)f_28753},
{"f_28757ChickenBridge.scm",(void*)f_28757},
{"f_28760ChickenBridge.scm",(void*)f_28760},
{"f_28229ChickenBridge.scm",(void*)f_28229},
{"f_28608ChickenBridge.scm",(void*)f_28608},
{"f_28602ChickenBridge.scm",(void*)f_28602},
{"f_28233ChickenBridge.scm",(void*)f_28233},
{"f_28586ChickenBridge.scm",(void*)f_28586},
{"f_28236ChickenBridge.scm",(void*)f_28236},
{"f_28572ChickenBridge.scm",(void*)f_28572},
{"f_28568ChickenBridge.scm",(void*)f_28568},
{"f_28239ChickenBridge.scm",(void*)f_28239},
{"f_28561ChickenBridge.scm",(void*)f_28561},
{"f_28557ChickenBridge.scm",(void*)f_28557},
{"f_28242ChickenBridge.scm",(void*)f_28242},
{"f_28245ChickenBridge.scm",(void*)f_28245},
{"f_8839ChickenBridge.scm",(void*)f_8839},
{"f_8862ChickenBridge.scm",(void*)f_8862},
{"f_8852ChickenBridge.scm",(void*)f_8852},
{"f_28545ChickenBridge.scm",(void*)f_28545},
{"f_28537ChickenBridge.scm",(void*)f_28537},
{"f_28541ChickenBridge.scm",(void*)f_28541},
{"f_28529ChickenBridge.scm",(void*)f_28529},
{"f_28533ChickenBridge.scm",(void*)f_28533},
{"f_28403ChickenBridge.scm",(void*)f_28403},
{"f_28518ChickenBridge.scm",(void*)f_28518},
{"f_28522ChickenBridge.scm",(void*)f_28522},
{"f_28510ChickenBridge.scm",(void*)f_28510},
{"f_28514ChickenBridge.scm",(void*)f_28514},
{"f_28406ChickenBridge.scm",(void*)f_28406},
{"f_28410ChickenBridge.scm",(void*)f_28410},
{"f_28415ChickenBridge.scm",(void*)f_28415},
{"f_28425ChickenBridge.scm",(void*)f_28425},
{"f_28428ChickenBridge.scm",(void*)f_28428},
{"f_28309ChickenBridge.scm",(void*)f_28309},
{"f_28372ChickenBridge.scm",(void*)f_28372},
{"f_28393ChickenBridge.scm",(void*)f_28393},
{"f_28334ChickenBridge.scm",(void*)f_28334},
{"f_28363ChickenBridge.scm",(void*)f_28363},
{"f_28312ChickenBridge.scm",(void*)f_28312},
{"f_28329ChickenBridge.scm",(void*)f_28329},
{"f_28325ChickenBridge.scm",(void*)f_28325},
{"f_27775ChickenBridge.scm",(void*)f_27775},
{"f_27779ChickenBridge.scm",(void*)f_27779},
{"f_27767ChickenBridge.scm",(void*)f_27767},
{"f_27695ChickenBridge.scm",(void*)f_27695},
{"f_27753ChickenBridge.scm",(void*)f_27753},
{"f_27699ChickenBridge.scm",(void*)f_27699},
{"f_27707ChickenBridge.scm",(void*)f_27707},
{"f_27717ChickenBridge.scm",(void*)f_27717},
{"f_27720ChickenBridge.scm",(void*)f_27720},
{"f_28289ChickenBridge.scm",(void*)f_28289},
{"f_28259ChickenBridge.scm",(void*)f_28259},
{"f_28248ChickenBridge.scm",(void*)f_28248},
{"f_28172ChickenBridge.scm",(void*)f_28172},
{"f_28180ChickenBridge.scm",(void*)f_28180},
{"f_28184ChickenBridge.scm",(void*)f_28184},
{"f_28188ChickenBridge.scm",(void*)f_28188},
{"f_28194ChickenBridge.scm",(void*)f_28194},
{"f_28204ChickenBridge.scm",(void*)f_28204},
{"f_27960ChickenBridge.scm",(void*)f_27960},
{"f_28028ChickenBridge.scm",(void*)f_28028},
{"f_28031ChickenBridge.scm",(void*)f_28031},
{"f_28034ChickenBridge.scm",(void*)f_28034},
{"f_28037ChickenBridge.scm",(void*)f_28037},
{"f_28040ChickenBridge.scm",(void*)f_28040},
{"f_28138ChickenBridge.scm",(void*)f_28138},
{"f_28148ChickenBridge.scm",(void*)f_28148},
{"f_28106ChickenBridge.scm",(void*)f_28106},
{"f_28116ChickenBridge.scm",(void*)f_28116},
{"f_28057ChickenBridge.scm",(void*)f_28057},
{"f_28076ChickenBridge.scm",(void*)f_28076},
{"f_28086ChickenBridge.scm",(void*)f_28086},
{"f_28067ChickenBridge.scm",(void*)f_28067},
{"f_28043ChickenBridge.scm",(void*)f_28043},
{"f_27996ChickenBridge.scm",(void*)f_27996},
{"f_28006ChickenBridge.scm",(void*)f_28006},
{"f_27979ChickenBridge.scm",(void*)f_27979},
{"f_27986ChickenBridge.scm",(void*)f_27986},
{"f_27962ChickenBridge.scm",(void*)f_27962},
{"f_27969ChickenBridge.scm",(void*)f_27969},
{"f_27781ChickenBridge.scm",(void*)f_27781},
{"f_27789ChickenBridge.scm",(void*)f_27789},
{"f_27793ChickenBridge.scm",(void*)f_27793},
{"f_27795ChickenBridge.scm",(void*)f_27795},
{"f_27805ChickenBridge.scm",(void*)f_27805},
{"f_27936ChickenBridge.scm",(void*)f_27936},
{"f_27885ChickenBridge.scm",(void*)f_27885},
{"f_27888ChickenBridge.scm",(void*)f_27888},
{"f_27899ChickenBridge.scm",(void*)f_27899},
{"f_27851ChickenBridge.scm",(void*)f_27851},
{"f_27820ChickenBridge.scm",(void*)f_27820},
{"f_27823ChickenBridge.scm",(void*)f_27823},
{"f_27808ChickenBridge.scm",(void*)f_27808},
{"f_27375ChickenBridge.scm",(void*)f_27375},
{"f_27689ChickenBridge.scm",(void*)f_27689},
{"f_27618ChickenBridge.scm",(void*)f_27618},
{"f_27620ChickenBridge.scm",(void*)f_27620},
{"f_27642ChickenBridge.scm",(void*)f_27642},
{"f_27388ChickenBridge.scm",(void*)f_27388},
{"f_27461ChickenBridge.scm",(void*)f_27461},
{"f_27614ChickenBridge.scm",(void*)f_27614},
{"f_27598ChickenBridge.scm",(void*)f_27598},
{"f_27550ChickenBridge.scm",(void*)f_27550},
{"f_27564ChickenBridge.scm",(void*)f_27564},
{"f_27517ChickenBridge.scm",(void*)f_27517},
{"f_27492ChickenBridge.scm",(void*)f_27492},
{"f_27391ChickenBridge.scm",(void*)f_27391},
{"f_27399ChickenBridge.scm",(void*)f_27399},
{"f_25902ChickenBridge.scm",(void*)f_25902},
{"f_27352ChickenBridge.scm",(void*)f_27352},
{"f_27367ChickenBridge.scm",(void*)f_27367},
{"f_27359ChickenBridge.scm",(void*)f_27359},
{"f_27323ChickenBridge.scm",(void*)f_27323},
{"f_27327ChickenBridge.scm",(void*)f_27327},
{"f_27288ChickenBridge.scm",(void*)f_27288},
{"f_27292ChickenBridge.scm",(void*)f_27292},
{"f_27253ChickenBridge.scm",(void*)f_27253},
{"f_27257ChickenBridge.scm",(void*)f_27257},
{"f_27218ChickenBridge.scm",(void*)f_27218},
{"f_27222ChickenBridge.scm",(void*)f_27222},
{"f_27183ChickenBridge.scm",(void*)f_27183},
{"f_27187ChickenBridge.scm",(void*)f_27187},
{"f_27148ChickenBridge.scm",(void*)f_27148},
{"f_27152ChickenBridge.scm",(void*)f_27152},
{"f_25906ChickenBridge.scm",(void*)f_25906},
{"f_27112ChickenBridge.scm",(void*)f_27112},
{"f_27127ChickenBridge.scm",(void*)f_27127},
{"f_27119ChickenBridge.scm",(void*)f_27119},
{"f_27083ChickenBridge.scm",(void*)f_27083},
{"f_27087ChickenBridge.scm",(void*)f_27087},
{"f_27048ChickenBridge.scm",(void*)f_27048},
{"f_27052ChickenBridge.scm",(void*)f_27052},
{"f_27013ChickenBridge.scm",(void*)f_27013},
{"f_27017ChickenBridge.scm",(void*)f_27017},
{"f_26978ChickenBridge.scm",(void*)f_26978},
{"f_26982ChickenBridge.scm",(void*)f_26982},
{"f_26943ChickenBridge.scm",(void*)f_26943},
{"f_26947ChickenBridge.scm",(void*)f_26947},
{"f_26908ChickenBridge.scm",(void*)f_26908},
{"f_26912ChickenBridge.scm",(void*)f_26912},
{"f_25909ChickenBridge.scm",(void*)f_25909},
{"f_26872ChickenBridge.scm",(void*)f_26872},
{"f_26887ChickenBridge.scm",(void*)f_26887},
{"f_26879ChickenBridge.scm",(void*)f_26879},
{"f_26843ChickenBridge.scm",(void*)f_26843},
{"f_26847ChickenBridge.scm",(void*)f_26847},
{"f_26808ChickenBridge.scm",(void*)f_26808},
{"f_26812ChickenBridge.scm",(void*)f_26812},
{"f_26773ChickenBridge.scm",(void*)f_26773},
{"f_26777ChickenBridge.scm",(void*)f_26777},
{"f_26738ChickenBridge.scm",(void*)f_26738},
{"f_26742ChickenBridge.scm",(void*)f_26742},
{"f_26703ChickenBridge.scm",(void*)f_26703},
{"f_26707ChickenBridge.scm",(void*)f_26707},
{"f_26668ChickenBridge.scm",(void*)f_26668},
{"f_26672ChickenBridge.scm",(void*)f_26672},
{"f_25912ChickenBridge.scm",(void*)f_25912},
{"f_26632ChickenBridge.scm",(void*)f_26632},
{"f_26647ChickenBridge.scm",(void*)f_26647},
{"f_26639ChickenBridge.scm",(void*)f_26639},
{"f_26603ChickenBridge.scm",(void*)f_26603},
{"f_26607ChickenBridge.scm",(void*)f_26607},
{"f_26568ChickenBridge.scm",(void*)f_26568},
{"f_26572ChickenBridge.scm",(void*)f_26572},
{"f_26533ChickenBridge.scm",(void*)f_26533},
{"f_26537ChickenBridge.scm",(void*)f_26537},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_26502ChickenBridge.scm",(void*)f_26502},
{"f_26463ChickenBridge.scm",(void*)f_26463},
{"f_26467ChickenBridge.scm",(void*)f_26467},
{"f_26428ChickenBridge.scm",(void*)f_26428},
{"f_26432ChickenBridge.scm",(void*)f_26432},
{"f_25915ChickenBridge.scm",(void*)f_25915},
{"f_26392ChickenBridge.scm",(void*)f_26392},
{"f_26407ChickenBridge.scm",(void*)f_26407},
{"f_26399ChickenBridge.scm",(void*)f_26399},
{"f_26363ChickenBridge.scm",(void*)f_26363},
{"f_26367ChickenBridge.scm",(void*)f_26367},
{"f_26328ChickenBridge.scm",(void*)f_26328},
{"f_26332ChickenBridge.scm",(void*)f_26332},
{"f_26293ChickenBridge.scm",(void*)f_26293},
{"f_26297ChickenBridge.scm",(void*)f_26297},
{"f_26258ChickenBridge.scm",(void*)f_26258},
{"f_26262ChickenBridge.scm",(void*)f_26262},
{"f_26223ChickenBridge.scm",(void*)f_26223},
{"f_26227ChickenBridge.scm",(void*)f_26227},
{"f_26188ChickenBridge.scm",(void*)f_26188},
{"f_26192ChickenBridge.scm",(void*)f_26192},
{"f_25918ChickenBridge.scm",(void*)f_25918},
{"f_26152ChickenBridge.scm",(void*)f_26152},
{"f_26167ChickenBridge.scm",(void*)f_26167},
{"f_26159ChickenBridge.scm",(void*)f_26159},
{"f_26123ChickenBridge.scm",(void*)f_26123},
{"f_26127ChickenBridge.scm",(void*)f_26127},
{"f_26088ChickenBridge.scm",(void*)f_26088},
{"f_26092ChickenBridge.scm",(void*)f_26092},
{"f_26053ChickenBridge.scm",(void*)f_26053},
{"f_26057ChickenBridge.scm",(void*)f_26057},
{"f_26018ChickenBridge.scm",(void*)f_26018},
{"f_26022ChickenBridge.scm",(void*)f_26022},
{"f_25983ChickenBridge.scm",(void*)f_25983},
{"f_25987ChickenBridge.scm",(void*)f_25987},
{"f_25948ChickenBridge.scm",(void*)f_25948},
{"f_25952ChickenBridge.scm",(void*)f_25952},
{"f_25921ChickenBridge.scm",(void*)f_25921},
{"f_25924ChickenBridge.scm",(void*)f_25924},
{"f_25670ChickenBridge.scm",(void*)f_25670},
{"f_25676ChickenBridge.scm",(void*)f_25676},
{"f_25679ChickenBridge.scm",(void*)f_25679},
{"f_25883ChickenBridge.scm",(void*)f_25883},
{"f_25868ChickenBridge.scm",(void*)f_25868},
{"f_25803ChickenBridge.scm",(void*)f_25803},
{"f_8607ChickenBridge.scm",(void*)f_8607},
{"f_25779ChickenBridge.scm",(void*)f_25779},
{"f_25783ChickenBridge.scm",(void*)f_25783},
{"f_25769ChickenBridge.scm",(void*)f_25769},
{"f_25777ChickenBridge.scm",(void*)f_25777},
{"f_25755ChickenBridge.scm",(void*)f_25755},
{"f_25681ChickenBridge.scm",(void*)f_25681},
{"f_25750ChickenBridge.scm",(void*)f_25750},
{"f_25685ChickenBridge.scm",(void*)f_25685},
{"f_25722ChickenBridge.scm",(void*)f_25722},
{"f_25696ChickenBridge.scm",(void*)f_25696},
{"f_25641ChickenBridge.scm",(void*)f_25641},
{"f_25645ChickenBridge.scm",(void*)f_25645},
{"f_25656ChickenBridge.scm",(void*)f_25656},
{"f_25654ChickenBridge.scm",(void*)f_25654},
{"f_25610ChickenBridge.scm",(void*)f_25610},
{"f_25614ChickenBridge.scm",(void*)f_25614},
{"f_25625ChickenBridge.scm",(void*)f_25625},
{"f_25623ChickenBridge.scm",(void*)f_25623},
{"f_25592ChickenBridge.scm",(void*)f_25592},
{"f_25600ChickenBridge.scm",(void*)f_25600},
{"f_25608ChickenBridge.scm",(void*)f_25608},
{"f_25582ChickenBridge.scm",(void*)f_25582},
{"f_25590ChickenBridge.scm",(void*)f_25590},
{"f_25523ChickenBridge.scm",(void*)f_25523},
{"f_25530ChickenBridge.scm",(void*)f_25530},
{"f_25533ChickenBridge.scm",(void*)f_25533},
{"f_25536ChickenBridge.scm",(void*)f_25536},
{"f_25541ChickenBridge.scm",(void*)f_25541},
{"f_25485ChickenBridge.scm",(void*)f_25485},
{"f_25493ChickenBridge.scm",(void*)f_25493},
{"f_25497ChickenBridge.scm",(void*)f_25497},
{"f_25517ChickenBridge.scm",(void*)f_25517},
{"f_25501ChickenBridge.scm",(void*)f_25501},
{"f_25509ChickenBridge.scm",(void*)f_25509},
{"f_25505ChickenBridge.scm",(void*)f_25505},
{"f_25476ChickenBridge.scm",(void*)f_25476},
{"f_25467ChickenBridge.scm",(void*)f_25467},
{"f_25458ChickenBridge.scm",(void*)f_25458},
{"f_25449ChickenBridge.scm",(void*)f_25449},
{"f_25440ChickenBridge.scm",(void*)f_25440},
{"f_25431ChickenBridge.scm",(void*)f_25431},
{"f_25422ChickenBridge.scm",(void*)f_25422},
{"f_25407ChickenBridge.scm",(void*)f_25407},
{"f_25401ChickenBridge.scm",(void*)f_25401},
{"f_25356ChickenBridge.scm",(void*)f_25356},
{"f_7717ChickenBridge.scm",(void*)f_7717},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_25324ChickenBridge.scm",(void*)f_25324},
{"f_24438ChickenBridge.scm",(void*)f_24438},
{"f_7645ChickenBridge.scm",(void*)f_7645},
{"f_24407ChickenBridge.scm",(void*)f_24407},
{"f_24091ChickenBridge.scm",(void*)f_24091},
{"f_24095ChickenBridge.scm",(void*)f_24095},
{"f_24152ChickenBridge.scm",(void*)f_24152},
{"f_24124ChickenBridge.scm",(void*)f_24124},
{"f_24189ChickenBridge.scm",(void*)f_24189},
{"f_24226ChickenBridge.scm",(void*)f_24226},
{"f_24229ChickenBridge.scm",(void*)f_24229},
{"f_24389ChickenBridge.scm",(void*)f_24389},
{"f_24236ChickenBridge.scm",(void*)f_24236},
{"f_24239ChickenBridge.scm",(void*)f_24239},
{"f_24241ChickenBridge.scm",(void*)f_24241},
{"f_24251ChickenBridge.scm",(void*)f_24251},
{"f_24254ChickenBridge.scm",(void*)f_24254},
{"f_24287ChickenBridge.scm",(void*)f_24287},
{"f_24375ChickenBridge.scm",(void*)f_24375},
{"f_24290ChickenBridge.scm",(void*)f_24290},
{"f_24361ChickenBridge.scm",(void*)f_24361},
{"f_24347ChickenBridge.scm",(void*)f_24347},
{"f_24327ChickenBridge.scm",(void*)f_24327},
{"f_24330ChickenBridge.scm",(void*)f_24330},
{"f_24307ChickenBridge.scm",(void*)f_24307},
{"f_24310ChickenBridge.scm",(void*)f_24310},
{"f_24293ChickenBridge.scm",(void*)f_24293},
{"f_24190ChickenBridge.scm",(void*)f_24190},
{"f_24196ChickenBridge.scm",(void*)f_24196},
{"f_24206ChickenBridge.scm",(void*)f_24206},
{"f_24075ChickenBridge.scm",(void*)f_24075},
{"f_24079ChickenBridge.scm",(void*)f_24079},
{"f_24086ChickenBridge.scm",(void*)f_24086},
{"f_24070ChickenBridge.scm",(void*)f_24070},
{"f_23923ChickenBridge.scm",(void*)f_23923},
{"f_23927ChickenBridge.scm",(void*)f_23927},
{"f_23996ChickenBridge.scm",(void*)f_23996},
{"f_24039ChickenBridge.scm",(void*)f_24039},
{"f_24043ChickenBridge.scm",(void*)f_24043},
{"f_24032ChickenBridge.scm",(void*)f_24032},
{"f_24019ChickenBridge.scm",(void*)f_24019},
{"f_23938ChickenBridge.scm",(void*)f_23938},
{"f_23981ChickenBridge.scm",(void*)f_23981},
{"f_23985ChickenBridge.scm",(void*)f_23985},
{"f_23974ChickenBridge.scm",(void*)f_23974},
{"f_23961ChickenBridge.scm",(void*)f_23961},
{"f_23734ChickenBridge.scm",(void*)f_23734},
{"f_23914ChickenBridge.scm",(void*)f_23914},
{"f_23835ChickenBridge.scm",(void*)f_23835},
{"f_23884ChickenBridge.scm",(void*)f_23884},
{"f_23880ChickenBridge.scm",(void*)f_23880},
{"f_23852ChickenBridge.scm",(void*)f_23852},
{"f_23787ChickenBridge.scm",(void*)f_23787},
{"f_23796ChickenBridge.scm",(void*)f_23796},
{"f_23780ChickenBridge.scm",(void*)f_23780},
{"f_23599ChickenBridge.scm",(void*)f_23599},
{"f_23725ChickenBridge.scm",(void*)f_23725},
{"f_23721ChickenBridge.scm",(void*)f_23721},
{"f_23699ChickenBridge.scm",(void*)f_23699},
{"f_23629ChickenBridge.scm",(void*)f_23629},
{"f_23645ChickenBridge.scm",(void*)f_23645},
{"f_23554ChickenBridge.scm",(void*)f_23554},
{"f_23597ChickenBridge.scm",(void*)f_23597},
{"f_23586ChickenBridge.scm",(void*)f_23586},
{"f_23438ChickenBridge.scm",(void*)f_23438},
{"f_23552ChickenBridge.scm",(void*)f_23552},
{"f_23453ChickenBridge.scm",(void*)f_23453},
{"f_23483ChickenBridge.scm",(void*)f_23483},
{"f_23502ChickenBridge.scm",(void*)f_23502},
{"f_23487ChickenBridge.scm",(void*)f_23487},
{"f_23466ChickenBridge.scm",(void*)f_23466},
{"f_23316ChickenBridge.scm",(void*)f_23316},
{"f_23436ChickenBridge.scm",(void*)f_23436},
{"f_23331ChickenBridge.scm",(void*)f_23331},
{"f_23361ChickenBridge.scm",(void*)f_23361},
{"f_23380ChickenBridge.scm",(void*)f_23380},
{"f_23365ChickenBridge.scm",(void*)f_23365},
{"f_23344ChickenBridge.scm",(void*)f_23344},
{"f_23219ChickenBridge.scm",(void*)f_23219},
{"f_23314ChickenBridge.scm",(void*)f_23314},
{"f_23234ChickenBridge.scm",(void*)f_23234},
{"f_23280ChickenBridge.scm",(void*)f_23280},
{"f_23265ChickenBridge.scm",(void*)f_23265},
{"f_23247ChickenBridge.scm",(void*)f_23247},
{"f_23166ChickenBridge.scm",(void*)f_23166},
{"f_23204ChickenBridge.scm",(void*)f_23204},
{"f_23211ChickenBridge.scm",(void*)f_23211},
{"f_23189ChickenBridge.scm",(void*)f_23189},
{"f_23164ChickenBridge.scm",(void*)f_23164},
{"f_23145ChickenBridge.scm",(void*)f_23145},
{"f_23132ChickenBridge.scm",(void*)f_23132},
{"f_23114ChickenBridge.scm",(void*)f_23114},
{"f_23067ChickenBridge.scm",(void*)f_23067},
{"f_23071ChickenBridge.scm",(void*)f_23071},
{"f_23096ChickenBridge.scm",(void*)f_23096},
{"f_23083ChickenBridge.scm",(void*)f_23083},
{"f_23039ChickenBridge.scm",(void*)f_23039},
{"f_23020ChickenBridge.scm",(void*)f_23020},
{"f_22979ChickenBridge.scm",(void*)f_22979},
{"f_22960ChickenBridge.scm",(void*)f_22960},
{"f_22732ChickenBridge.scm",(void*)f_22732},
{"f_22937ChickenBridge.scm",(void*)f_22937},
{"f_22952ChickenBridge.scm",(void*)f_22952},
{"f_22944ChickenBridge.scm",(void*)f_22944},
{"f_22908ChickenBridge.scm",(void*)f_22908},
{"f_22912ChickenBridge.scm",(void*)f_22912},
{"f_22873ChickenBridge.scm",(void*)f_22873},
{"f_22877ChickenBridge.scm",(void*)f_22877},
{"f_22736ChickenBridge.scm",(void*)f_22736},
{"f_22837ChickenBridge.scm",(void*)f_22837},
{"f_22852ChickenBridge.scm",(void*)f_22852},
{"f_22844ChickenBridge.scm",(void*)f_22844},
{"f_22808ChickenBridge.scm",(void*)f_22808},
{"f_22812ChickenBridge.scm",(void*)f_22812},
{"f_22773ChickenBridge.scm",(void*)f_22773},
{"f_22777ChickenBridge.scm",(void*)f_22777},
{"f_22739ChickenBridge.scm",(void*)f_22739},
{"f_22742ChickenBridge.scm",(void*)f_22742},
{"f_22745ChickenBridge.scm",(void*)f_22745},
{"f_22690ChickenBridge.scm",(void*)f_22690},
{"f_22719ChickenBridge.scm",(void*)f_22719},
{"f_22704ChickenBridge.scm",(void*)f_22704},
{"f_22635ChickenBridge.scm",(void*)f_22635},
{"f_22646ChickenBridge.scm",(void*)f_22646},
{"f_22648ChickenBridge.scm",(void*)f_22648},
{"f_22676ChickenBridge.scm",(void*)f_22676},
{"f_22536ChickenBridge.scm",(void*)f_22536},
{"f_22540ChickenBridge.scm",(void*)f_22540},
{"f_22543ChickenBridge.scm",(void*)f_22543},
{"f_22608ChickenBridge.scm",(void*)f_22608},
{"f_22545ChickenBridge.scm",(void*)f_22545},
{"f_22561ChickenBridge.scm",(void*)f_22561},
{"f_22265ChickenBridge.scm",(void*)f_22265},
{"f_22298ChickenBridge.scm",(void*)f_22298},
{"f_22283ChickenBridge.scm",(void*)f_22283},
{"f_22244ChickenBridge.scm",(void*)f_22244},
{"f_22209ChickenBridge.scm",(void*)f_22209},
{"f_22213ChickenBridge.scm",(void*)f_22213},
{"f_22001ChickenBridge.scm",(void*)f_22001},
{"f_22014ChickenBridge.scm",(void*)f_22014},
{"f_22096ChickenBridge.scm",(void*)f_22096},
{"f_22099ChickenBridge.scm",(void*)f_22099},
{"f_22107ChickenBridge.scm",(void*)f_22107},
{"f_22119ChickenBridge.scm",(void*)f_22119},
{"f_22140ChickenBridge.scm",(void*)f_22140},
{"f_22148ChickenBridge.scm",(void*)f_22148},
{"f_22035ChickenBridge.scm",(void*)f_22035},
{"f_22040ChickenBridge.scm",(void*)f_22040},
{"f_22072ChickenBridge.scm",(void*)f_22072},
{"f_21894ChickenBridge.scm",(void*)f_21894},
{"f_21981ChickenBridge.scm",(void*)f_21981},
{"f_21901ChickenBridge.scm",(void*)f_21901},
{"f_21910ChickenBridge.scm",(void*)f_21910},
{"f_21957ChickenBridge.scm",(void*)f_21957},
{"f_21923ChickenBridge.scm",(void*)f_21923},
{"f_21949ChickenBridge.scm",(void*)f_21949},
{"f_21761ChickenBridge.scm",(void*)f_21761},
{"f_21765ChickenBridge.scm",(void*)f_21765},
{"f_21768ChickenBridge.scm",(void*)f_21768},
{"f_21872ChickenBridge.scm",(void*)f_21872},
{"f_21770ChickenBridge.scm",(void*)f_21770},
{"f_21777ChickenBridge.scm",(void*)f_21777},
{"f_21819ChickenBridge.scm",(void*)f_21819},
{"f_21826ChickenBridge.scm",(void*)f_21826},
{"f_21800ChickenBridge.scm",(void*)f_21800},
{"f_21694ChickenBridge.scm",(void*)f_21694},
{"f_21698ChickenBridge.scm",(void*)f_21698},
{"f_21744ChickenBridge.scm",(void*)f_21744},
{"f_21701ChickenBridge.scm",(void*)f_21701},
{"f_21737ChickenBridge.scm",(void*)f_21737},
{"f_21704ChickenBridge.scm",(void*)f_21704},
{"f_21717ChickenBridge.scm",(void*)f_21717},
{"f_21648ChickenBridge.scm",(void*)f_21648},
{"f_21652ChickenBridge.scm",(void*)f_21652},
{"f_21562ChickenBridge.scm",(void*)f_21562},
{"f_21566ChickenBridge.scm",(void*)f_21566},
{"f_21569ChickenBridge.scm",(void*)f_21569},
{"f_21578ChickenBridge.scm",(void*)f_21578},
{"f_21600ChickenBridge.scm",(void*)f_21600},
{"f_21547ChickenBridge.scm",(void*)f_21547},
{"f_21517ChickenBridge.scm",(void*)f_21517},
{"f_21281ChickenBridge.scm",(void*)f_21281},
{"f_21494ChickenBridge.scm",(void*)f_21494},
{"f_21509ChickenBridge.scm",(void*)f_21509},
{"f_21501ChickenBridge.scm",(void*)f_21501},
{"f_21465ChickenBridge.scm",(void*)f_21465},
{"f_21469ChickenBridge.scm",(void*)f_21469},
{"f_21430ChickenBridge.scm",(void*)f_21430},
{"f_21434ChickenBridge.scm",(void*)f_21434},
{"f_21285ChickenBridge.scm",(void*)f_21285},
{"f_21394ChickenBridge.scm",(void*)f_21394},
{"f_21409ChickenBridge.scm",(void*)f_21409},
{"f_21401ChickenBridge.scm",(void*)f_21401},
{"f_21365ChickenBridge.scm",(void*)f_21365},
{"f_21369ChickenBridge.scm",(void*)f_21369},
{"f_21330ChickenBridge.scm",(void*)f_21330},
{"f_21334ChickenBridge.scm",(void*)f_21334},
{"f_21288ChickenBridge.scm",(void*)f_21288},
{"f_21291ChickenBridge.scm",(void*)f_21291},
{"f_21302ChickenBridge.scm",(void*)f_21302},
{"f_21241ChickenBridge.scm",(void*)f_21241},
{"f_21245ChickenBridge.scm",(void*)f_21245},
{"f_21275ChickenBridge.scm",(void*)f_21275},
{"f_21256ChickenBridge.scm",(void*)f_21256},
{"f_21264ChickenBridge.scm",(void*)f_21264},
{"f_21220ChickenBridge.scm",(void*)f_21220},
{"f_21232ChickenBridge.scm",(void*)f_21232},
{"f_21177ChickenBridge.scm",(void*)f_21177},
{"f_21207ChickenBridge.scm",(void*)f_21207},
{"f_21134ChickenBridge.scm",(void*)f_21134},
{"f_21164ChickenBridge.scm",(void*)f_21164},
{"f_21065ChickenBridge.scm",(void*)f_21065},
{"f_21109ChickenBridge.scm",(void*)f_21109},
{"f_20996ChickenBridge.scm",(void*)f_20996},
{"f_21040ChickenBridge.scm",(void*)f_21040},
{"f_20990ChickenBridge.scm",(void*)f_20990},
{"f_20984ChickenBridge.scm",(void*)f_20984},
{"f_20963ChickenBridge.scm",(void*)f_20963},
{"f_20975ChickenBridge.scm",(void*)f_20975},
{"f_20948ChickenBridge.scm",(void*)f_20948},
{"f_20837ChickenBridge.scm",(void*)f_20837},
{"f_20912ChickenBridge.scm",(void*)f_20912},
{"f_20841ChickenBridge.scm",(void*)f_20841},
{"f_20881ChickenBridge.scm",(void*)f_20881},
{"f_20870ChickenBridge.scm",(void*)f_20870},
{"f_20855ChickenBridge.scm",(void*)f_20855},
{"f_20863ChickenBridge.scm",(void*)f_20863},
{"f_20803ChickenBridge.scm",(void*)f_20803},
{"f_20815ChickenBridge.scm",(void*)f_20815},
{"f_19756ChickenBridge.scm",(void*)f_19756},
{"f_20780ChickenBridge.scm",(void*)f_20780},
{"f_20795ChickenBridge.scm",(void*)f_20795},
{"f_20787ChickenBridge.scm",(void*)f_20787},
{"f_20751ChickenBridge.scm",(void*)f_20751},
{"f_20755ChickenBridge.scm",(void*)f_20755},
{"f_20716ChickenBridge.scm",(void*)f_20716},
{"f_20720ChickenBridge.scm",(void*)f_20720},
{"f_19766ChickenBridge.scm",(void*)f_19766},
{"f_20680ChickenBridge.scm",(void*)f_20680},
{"f_20695ChickenBridge.scm",(void*)f_20695},
{"f_20687ChickenBridge.scm",(void*)f_20687},
{"f_20651ChickenBridge.scm",(void*)f_20651},
{"f_20655ChickenBridge.scm",(void*)f_20655},
{"f_20616ChickenBridge.scm",(void*)f_20616},
{"f_20620ChickenBridge.scm",(void*)f_20620},
{"f_19769ChickenBridge.scm",(void*)f_19769},
{"f_19772ChickenBridge.scm",(void*)f_19772},
{"f_19777ChickenBridge.scm",(void*)f_19777},
{"f_20509ChickenBridge.scm",(void*)f_20509},
{"f_20532ChickenBridge.scm",(void*)f_20532},
{"f_20585ChickenBridge.scm",(void*)f_20585},
{"f_20567ChickenBridge.scm",(void*)f_20567},
{"f_20560ChickenBridge.scm",(void*)f_20560},
{"f_20542ChickenBridge.scm",(void*)f_20542},
{"f_20519ChickenBridge.scm",(void*)f_20519},
{"f_19971ChickenBridge.scm",(void*)f_19971},
{"f_20471ChickenBridge.scm",(void*)f_20471},
{"f_20493ChickenBridge.scm",(void*)f_20493},
{"f_20477ChickenBridge.scm",(void*)f_20477},
{"f_20485ChickenBridge.scm",(void*)f_20485},
{"f_20489ChickenBridge.scm",(void*)f_20489},
{"f_20475ChickenBridge.scm",(void*)f_20475},
{"f_20465ChickenBridge.scm",(void*)f_20465},
{"f_19974ChickenBridge.scm",(void*)f_19974},
{"f_20342ChickenBridge.scm",(void*)f_20342},
{"f_20366ChickenBridge.scm",(void*)f_20366},
{"f_20428ChickenBridge.scm",(void*)f_20428},
{"f_20369ChickenBridge.scm",(void*)f_20369},
{"f_20385ChickenBridge.scm",(void*)f_20385},
{"f_20410ChickenBridge.scm",(void*)f_20410},
{"f_20376ChickenBridge.scm",(void*)f_20376},
{"f_20353ChickenBridge.scm",(void*)f_20353},
{"f_19977ChickenBridge.scm",(void*)f_19977},
{"f_20328ChickenBridge.scm",(void*)f_20328},
{"f_19981ChickenBridge.scm",(void*)f_19981},
{"f_20025ChickenBridge.scm",(void*)f_20025},
{"f_20028ChickenBridge.scm",(void*)f_20028},
{"f_20309ChickenBridge.scm",(void*)f_20309},
{"f_20319ChickenBridge.scm",(void*)f_20319},
{"f_20031ChickenBridge.scm",(void*)f_20031},
{"f_20247ChickenBridge.scm",(void*)f_20247},
{"f_20257ChickenBridge.scm",(void*)f_20257},
{"f_20260ChickenBridge.scm",(void*)f_20260},
{"f_20280ChickenBridge.scm",(void*)f_20280},
{"f_20282ChickenBridge.scm",(void*)f_20282},
{"f_20292ChickenBridge.scm",(void*)f_20292},
{"f_20266ChickenBridge.scm",(void*)f_20266},
{"f_20269ChickenBridge.scm",(void*)f_20269},
{"f_20034ChickenBridge.scm",(void*)f_20034},
{"f_20042ChickenBridge.scm",(void*)f_20042},
{"f_20055ChickenBridge.scm",(void*)f_20055},
{"f_19929ChickenBridge.scm",(void*)f_19929},
{"f_19938ChickenBridge.scm",(void*)f_19938},
{"f_19960ChickenBridge.scm",(void*)f_19960},
{"f_19949ChickenBridge.scm",(void*)f_19949},
{"f_20058ChickenBridge.scm",(void*)f_20058},
{"f_20218ChickenBridge.scm",(void*)f_20218},
{"f_20220ChickenBridge.scm",(void*)f_20220},
{"f_20230ChickenBridge.scm",(void*)f_20230},
{"f_20064ChickenBridge.scm",(void*)f_20064},
{"f_20191ChickenBridge.scm",(void*)f_20191},
{"f_20193ChickenBridge.scm",(void*)f_20193},
{"f_20203ChickenBridge.scm",(void*)f_20203},
{"f_20067ChickenBridge.scm",(void*)f_20067},
{"f_20079ChickenBridge.scm",(void*)f_20079},
{"f_20105ChickenBridge.scm",(void*)f_20105},
{"f_20111ChickenBridge.scm",(void*)f_20111},
{"f_20117ChickenBridge.scm",(void*)f_20117},
{"f_20159ChickenBridge.scm",(void*)f_20159},
{"f_20171ChickenBridge.scm",(void*)f_20171},
{"f_20163ChickenBridge.scm",(void*)f_20163},
{"f_20120ChickenBridge.scm",(void*)f_20120},
{"f_20130ChickenBridge.scm",(void*)f_20130},
{"f_20132ChickenBridge.scm",(void*)f_20132},
{"f_20142ChickenBridge.scm",(void*)f_20142},
{"f_20123ChickenBridge.scm",(void*)f_20123},
{"f_20092ChickenBridge.scm",(void*)f_20092},
{"f_20070ChickenBridge.scm",(void*)f_20070},
{"f_20037ChickenBridge.scm",(void*)f_20037},
{"f_19984ChickenBridge.scm",(void*)f_19984},
{"f_20007ChickenBridge.scm",(void*)f_20007},
{"f_19996ChickenBridge.scm",(void*)f_19996},
{"f_19861ChickenBridge.scm",(void*)f_19861},
{"f_19909ChickenBridge.scm",(void*)f_19909},
{"f_19871ChickenBridge.scm",(void*)f_19871},
{"f_19899ChickenBridge.scm",(void*)f_19899},
{"f_19874ChickenBridge.scm",(void*)f_19874},
{"f_19779ChickenBridge.scm",(void*)f_19779},
{"f_8800ChickenBridge.scm",(void*)f_8800},
{"f_8820ChickenBridge.scm",(void*)f_8820},
{"f_8810ChickenBridge.scm",(void*)f_8810},
{"f_19851ChickenBridge.scm",(void*)f_19851},
{"f_19783ChickenBridge.scm",(void*)f_19783},
{"f_19801ChickenBridge.scm",(void*)f_19801},
{"f_19833ChickenBridge.scm",(void*)f_19833},
{"f_19662ChickenBridge.scm",(void*)f_19662},
{"f_19666ChickenBridge.scm",(void*)f_19666},
{"f_19695ChickenBridge.scm",(void*)f_19695},
{"f_19700ChickenBridge.scm",(void*)f_19700},
{"f_19725ChickenBridge.scm",(void*)f_19725},
{"f_19710ChickenBridge.scm",(void*)f_19710},
{"f_19144ChickenBridge.scm",(void*)f_19144},
{"f_19415ChickenBridge.scm",(void*)f_19415},
{"f_19419ChickenBridge.scm",(void*)f_19419},
{"f_19424ChickenBridge.scm",(void*)f_19424},
{"f_19630ChickenBridge.scm",(void*)f_19630},
{"f_19645ChickenBridge.scm",(void*)f_19645},
{"f_19637ChickenBridge.scm",(void*)f_19637},
{"f_19601ChickenBridge.scm",(void*)f_19601},
{"f_19605ChickenBridge.scm",(void*)f_19605},
{"f_19566ChickenBridge.scm",(void*)f_19566},
{"f_19570ChickenBridge.scm",(void*)f_19570},
{"f_19428ChickenBridge.scm",(void*)f_19428},
{"f_19530ChickenBridge.scm",(void*)f_19530},
{"f_19545ChickenBridge.scm",(void*)f_19545},
{"f_19537ChickenBridge.scm",(void*)f_19537},
{"f_19501ChickenBridge.scm",(void*)f_19501},
{"f_19505ChickenBridge.scm",(void*)f_19505},
{"f_19466ChickenBridge.scm",(void*)f_19466},
{"f_19470ChickenBridge.scm",(void*)f_19470},
{"f_19431ChickenBridge.scm",(void*)f_19431},
{"f_19434ChickenBridge.scm",(void*)f_19434},
{"f_19437ChickenBridge.scm",(void*)f_19437},
{"f_19406ChickenBridge.scm",(void*)f_19406},
{"f_19148ChickenBridge.scm",(void*)f_19148},
{"f_19375ChickenBridge.scm",(void*)f_19375},
{"f_19390ChickenBridge.scm",(void*)f_19390},
{"f_19382ChickenBridge.scm",(void*)f_19382},
{"f_19346ChickenBridge.scm",(void*)f_19346},
{"f_19350ChickenBridge.scm",(void*)f_19350},
{"f_19311ChickenBridge.scm",(void*)f_19311},
{"f_19315ChickenBridge.scm",(void*)f_19315},
{"f_19151ChickenBridge.scm",(void*)f_19151},
{"f_19275ChickenBridge.scm",(void*)f_19275},
{"f_19290ChickenBridge.scm",(void*)f_19290},
{"f_19282ChickenBridge.scm",(void*)f_19282},
{"f_19246ChickenBridge.scm",(void*)f_19246},
{"f_19250ChickenBridge.scm",(void*)f_19250},
{"f_19211ChickenBridge.scm",(void*)f_19211},
{"f_19215ChickenBridge.scm",(void*)f_19215},
{"f_19154ChickenBridge.scm",(void*)f_19154},
{"f_19157ChickenBridge.scm",(void*)f_19157},
{"f_19160ChickenBridge.scm",(void*)f_19160},
{"f_19172ChickenBridge.scm",(void*)f_19172},
{"f_19190ChickenBridge.scm",(void*)f_19190},
{"f_19178ChickenBridge.scm",(void*)f_19178},
{"f_19166ChickenBridge.scm",(void*)f_19166},
{"f_19081ChickenBridge.scm",(void*)f_19081},
{"f_18741ChickenBridge.scm",(void*)f_18741},
{"f_18923ChickenBridge.scm",(void*)f_18923},
{"f_18927ChickenBridge.scm",(void*)f_18927},
{"f_18929ChickenBridge.scm",(void*)f_18929},
{"f_18854ChickenBridge.scm",(void*)f_18854},
{"f_18864ChickenBridge.scm",(void*)f_18864},
{"f_18871ChickenBridge.scm",(void*)f_18871},
{"f_18939ChickenBridge.scm",(void*)f_18939},
{"f_18942ChickenBridge.scm",(void*)f_18942},
{"f_18946ChickenBridge.scm",(void*)f_18946},
{"f_18966ChickenBridge.scm",(void*)f_18966},
{"f_18982ChickenBridge.scm",(void*)f_18982},
{"f_18949ChickenBridge.scm",(void*)f_18949},
{"f_18744ChickenBridge.scm",(void*)f_18744},
{"f_18756ChickenBridge.scm",(void*)f_18756},
{"f_18792ChickenBridge.scm",(void*)f_18792},
{"f_18812ChickenBridge.scm",(void*)f_18812},
{"f_18817ChickenBridge.scm",(void*)f_18817},
{"f_18254ChickenBridge.scm",(void*)f_18254},
{"f_18181ChickenBridge.scm",(void*)f_18181},
{"f_18026ChickenBridge.scm",(void*)f_18026},
{"f_18032ChickenBridge.scm",(void*)f_18032},
{"f_18117ChickenBridge.scm",(void*)f_18117},
{"f_18044ChickenBridge.scm",(void*)f_18044},
{"f_18060ChickenBridge.scm",(void*)f_18060},
{"f_18064ChickenBridge.scm",(void*)f_18064},
{"f_18067ChickenBridge.scm",(void*)f_18067},
{"f_18047ChickenBridge.scm",(void*)f_18047},
{"f_18058ChickenBridge.scm",(void*)f_18058},
{"f_18198ChickenBridge.scm",(void*)f_18198},
{"f_18735ChickenBridge.scm",(void*)f_18735},
{"f_18258ChickenBridge.scm",(void*)f_18258},
{"f_18704ChickenBridge.scm",(void*)f_18704},
{"f_18719ChickenBridge.scm",(void*)f_18719},
{"f_18711ChickenBridge.scm",(void*)f_18711},
{"f_18675ChickenBridge.scm",(void*)f_18675},
{"f_18679ChickenBridge.scm",(void*)f_18679},
{"f_18640ChickenBridge.scm",(void*)f_18640},
{"f_18644ChickenBridge.scm",(void*)f_18644},
{"f_18605ChickenBridge.scm",(void*)f_18605},
{"f_18609ChickenBridge.scm",(void*)f_18609},
{"f_18261ChickenBridge.scm",(void*)f_18261},
{"f_18569ChickenBridge.scm",(void*)f_18569},
{"f_18584ChickenBridge.scm",(void*)f_18584},
{"f_18576ChickenBridge.scm",(void*)f_18576},
{"f_18540ChickenBridge.scm",(void*)f_18540},
{"f_18544ChickenBridge.scm",(void*)f_18544},
{"f_18505ChickenBridge.scm",(void*)f_18505},
{"f_18509ChickenBridge.scm",(void*)f_18509},
{"f_18470ChickenBridge.scm",(void*)f_18470},
{"f_18474ChickenBridge.scm",(void*)f_18474},
{"f_18264ChickenBridge.scm",(void*)f_18264},
{"f_18434ChickenBridge.scm",(void*)f_18434},
{"f_18449ChickenBridge.scm",(void*)f_18449},
{"f_18441ChickenBridge.scm",(void*)f_18441},
{"f_18405ChickenBridge.scm",(void*)f_18405},
{"f_18409ChickenBridge.scm",(void*)f_18409},
{"f_18370ChickenBridge.scm",(void*)f_18370},
{"f_18374ChickenBridge.scm",(void*)f_18374},
{"f_18335ChickenBridge.scm",(void*)f_18335},
{"f_18339ChickenBridge.scm",(void*)f_18339},
{"f_18267ChickenBridge.scm",(void*)f_18267},
{"f_18270ChickenBridge.scm",(void*)f_18270},
{"f_18273ChickenBridge.scm",(void*)f_18273},
{"f_18306ChickenBridge.scm",(void*)f_18306},
{"f_18314ChickenBridge.scm",(void*)f_18314},
{"f_18279ChickenBridge.scm",(void*)f_18279},
{"f_18292ChickenBridge.scm",(void*)f_18292},
{"f_18282ChickenBridge.scm",(void*)f_18282},
{"f_18285ChickenBridge.scm",(void*)f_18285},
{"f_17821ChickenBridge.scm",(void*)f_17821},
{"f_17825ChickenBridge.scm",(void*)f_17825},
{"f_17828ChickenBridge.scm",(void*)f_17828},
{"f_17831ChickenBridge.scm",(void*)f_17831},
{"f_18000ChickenBridge.scm",(void*)f_18000},
{"f_18013ChickenBridge.scm",(void*)f_18013},
{"f_18017ChickenBridge.scm",(void*)f_18017},
{"f_17837ChickenBridge.scm",(void*)f_17837},
{"f_17993ChickenBridge.scm",(void*)f_17993},
{"f_17974ChickenBridge.scm",(void*)f_17974},
{"f_17981ChickenBridge.scm",(void*)f_17981},
{"f_17985ChickenBridge.scm",(void*)f_17985},
{"f_17843ChickenBridge.scm",(void*)f_17843},
{"f_17849ChickenBridge.scm",(void*)f_17849},
{"f_17933ChickenBridge.scm",(void*)f_17933},
{"f_17935ChickenBridge.scm",(void*)f_17935},
{"f_17957ChickenBridge.scm",(void*)f_17957},
{"f_17964ChickenBridge.scm",(void*)f_17964},
{"f_17968ChickenBridge.scm",(void*)f_17968},
{"f_17954ChickenBridge.scm",(void*)f_17954},
{"f_17950ChickenBridge.scm",(void*)f_17950},
{"f_17891ChickenBridge.scm",(void*)f_17891},
{"f_17908ChickenBridge.scm",(void*)f_17908},
{"f_17918ChickenBridge.scm",(void*)f_17918},
{"f_17894ChickenBridge.scm",(void*)f_17894},
{"f_17853ChickenBridge.scm",(void*)f_17853},
{"f_17861ChickenBridge.scm",(void*)f_17861},
{"f_17863ChickenBridge.scm",(void*)f_17863},
{"f_17884ChickenBridge.scm",(void*)f_17884},
{"f_17721ChickenBridge.scm",(void*)f_17721},
{"f_17819ChickenBridge.scm",(void*)f_17819},
{"f_17778ChickenBridge.scm",(void*)f_17778},
{"f_17811ChickenBridge.scm",(void*)f_17811},
{"f_17807ChickenBridge.scm",(void*)f_17807},
{"f_17792ChickenBridge.scm",(void*)f_17792},
{"f_17728ChickenBridge.scm",(void*)f_17728},
{"f_17736ChickenBridge.scm",(void*)f_17736},
{"f_17769ChickenBridge.scm",(void*)f_17769},
{"f_17753ChickenBridge.scm",(void*)f_17753},
{"f_16954ChickenBridge.scm",(void*)f_16954},
{"f_17271ChickenBridge.scm",(void*)f_17271},
{"f_17278ChickenBridge.scm",(void*)f_17278},
{"f_17683ChickenBridge.scm",(void*)f_17683},
{"f_17698ChickenBridge.scm",(void*)f_17698},
{"f_17690ChickenBridge.scm",(void*)f_17690},
{"f_17654ChickenBridge.scm",(void*)f_17654},
{"f_17658ChickenBridge.scm",(void*)f_17658},
{"f_17619ChickenBridge.scm",(void*)f_17619},
{"f_17623ChickenBridge.scm",(void*)f_17623},
{"f_17584ChickenBridge.scm",(void*)f_17584},
{"f_17588ChickenBridge.scm",(void*)f_17588},
{"f_17281ChickenBridge.scm",(void*)f_17281},
{"f_17548ChickenBridge.scm",(void*)f_17548},
{"f_17563ChickenBridge.scm",(void*)f_17563},
{"f_17555ChickenBridge.scm",(void*)f_17555},
{"f_17519ChickenBridge.scm",(void*)f_17519},
{"f_17523ChickenBridge.scm",(void*)f_17523},
{"f_17484ChickenBridge.scm",(void*)f_17484},
{"f_17488ChickenBridge.scm",(void*)f_17488},
{"f_17449ChickenBridge.scm",(void*)f_17449},
{"f_17453ChickenBridge.scm",(void*)f_17453},
{"f_17284ChickenBridge.scm",(void*)f_17284},
{"f_17413ChickenBridge.scm",(void*)f_17413},
{"f_17428ChickenBridge.scm",(void*)f_17428},
{"f_17420ChickenBridge.scm",(void*)f_17420},
{"f_17384ChickenBridge.scm",(void*)f_17384},
{"f_17388ChickenBridge.scm",(void*)f_17388},
{"f_17349ChickenBridge.scm",(void*)f_17349},
{"f_17353ChickenBridge.scm",(void*)f_17353},
{"f_17314ChickenBridge.scm",(void*)f_17314},
{"f_17318ChickenBridge.scm",(void*)f_17318},
{"f_17287ChickenBridge.scm",(void*)f_17287},
{"f_17290ChickenBridge.scm",(void*)f_17290},
{"f_16958ChickenBridge.scm",(void*)f_16958},
{"f_16961ChickenBridge.scm",(void*)f_16961},
{"f_17235ChickenBridge.scm",(void*)f_17235},
{"f_17239ChickenBridge.scm",(void*)f_17239},
{"f_17242ChickenBridge.scm",(void*)f_17242},
{"f_17245ChickenBridge.scm",(void*)f_17245},
{"f_17248ChickenBridge.scm",(void*)f_17248},
{"f_17261ChickenBridge.scm",(void*)f_17261},
{"f_17251ChickenBridge.scm",(void*)f_17251},
{"f_16967ChickenBridge.scm",(void*)f_16967},
{"f_17230ChickenBridge.scm",(void*)f_17230},
{"f_16974ChickenBridge.scm",(void*)f_16974},
{"f_17205ChickenBridge.scm",(void*)f_17205},
{"f_17220ChickenBridge.scm",(void*)f_17220},
{"f_17212ChickenBridge.scm",(void*)f_17212},
{"f_17176ChickenBridge.scm",(void*)f_17176},
{"f_17180ChickenBridge.scm",(void*)f_17180},
{"f_17141ChickenBridge.scm",(void*)f_17141},
{"f_17145ChickenBridge.scm",(void*)f_17145},
{"f_16977ChickenBridge.scm",(void*)f_16977},
{"f_17105ChickenBridge.scm",(void*)f_17105},
{"f_17120ChickenBridge.scm",(void*)f_17120},
{"f_17112ChickenBridge.scm",(void*)f_17112},
{"f_17076ChickenBridge.scm",(void*)f_17076},
{"f_17080ChickenBridge.scm",(void*)f_17080},
{"f_17041ChickenBridge.scm",(void*)f_17041},
{"f_17045ChickenBridge.scm",(void*)f_17045},
{"f_16980ChickenBridge.scm",(void*)f_16980},
{"f_16983ChickenBridge.scm",(void*)f_16983},
{"f_16998ChickenBridge.scm",(void*)f_16998},
{"f_17020ChickenBridge.scm",(void*)f_17020},
{"f_17004ChickenBridge.scm",(void*)f_17004},
{"f_17012ChickenBridge.scm",(void*)f_17012},
{"f_16986ChickenBridge.scm",(void*)f_16986},
{"f_16989ChickenBridge.scm",(void*)f_16989},
{"f_16871ChickenBridge.scm",(void*)f_16871},
{"f_16862ChickenBridge.scm",(void*)f_16862},
{"f_16853ChickenBridge.scm",(void*)f_16853},
{"f_16835ChickenBridge.scm",(void*)f_16835},
{"f_16817ChickenBridge.scm",(void*)f_16817},
{"f_16799ChickenBridge.scm",(void*)f_16799},
{"f_16790ChickenBridge.scm",(void*)f_16790},
{"f_16781ChickenBridge.scm",(void*)f_16781},
{"f_16559ChickenBridge.scm",(void*)f_16559},
{"f_16609ChickenBridge.scm",(void*)f_16609},
{"f_16754ChickenBridge.scm",(void*)f_16754},
{"f_16635ChickenBridge.scm",(void*)f_16635},
{"f_16750ChickenBridge.scm",(void*)f_16750},
{"f_16735ChickenBridge.scm",(void*)f_16735},
{"f_16716ChickenBridge.scm",(void*)f_16716},
{"f_16689ChickenBridge.scm",(void*)f_16689},
{"f_16642ChickenBridge.scm",(void*)f_16642},
{"f_16612ChickenBridge.scm",(void*)f_16612},
{"f_16562ChickenBridge.scm",(void*)f_16562},
{"f_16568ChickenBridge.scm",(void*)f_16568},
{"f_16584ChickenBridge.scm",(void*)f_16584},
{"f_16587ChickenBridge.scm",(void*)f_16587},
{"f_16085ChickenBridge.scm",(void*)f_16085},
{"f_16549ChickenBridge.scm",(void*)f_16549},
{"f_16089ChickenBridge.scm",(void*)f_16089},
{"f_16521ChickenBridge.scm",(void*)f_16521},
{"f_16536ChickenBridge.scm",(void*)f_16536},
{"f_16528ChickenBridge.scm",(void*)f_16528},
{"f_16492ChickenBridge.scm",(void*)f_16492},
{"f_16496ChickenBridge.scm",(void*)f_16496},
{"f_16457ChickenBridge.scm",(void*)f_16457},
{"f_16461ChickenBridge.scm",(void*)f_16461},
{"f_16422ChickenBridge.scm",(void*)f_16422},
{"f_16426ChickenBridge.scm",(void*)f_16426},
{"f_16092ChickenBridge.scm",(void*)f_16092},
{"f_16386ChickenBridge.scm",(void*)f_16386},
{"f_16401ChickenBridge.scm",(void*)f_16401},
{"f_16393ChickenBridge.scm",(void*)f_16393},
{"f_16357ChickenBridge.scm",(void*)f_16357},
{"f_16361ChickenBridge.scm",(void*)f_16361},
{"f_16322ChickenBridge.scm",(void*)f_16322},
{"f_16326ChickenBridge.scm",(void*)f_16326},
{"f_16287ChickenBridge.scm",(void*)f_16287},
{"f_16291ChickenBridge.scm",(void*)f_16291},
{"f_16095ChickenBridge.scm",(void*)f_16095},
{"f_16251ChickenBridge.scm",(void*)f_16251},
{"f_16266ChickenBridge.scm",(void*)f_16266},
{"f_16258ChickenBridge.scm",(void*)f_16258},
{"f_16222ChickenBridge.scm",(void*)f_16222},
{"f_16226ChickenBridge.scm",(void*)f_16226},
{"f_16187ChickenBridge.scm",(void*)f_16187},
{"f_16191ChickenBridge.scm",(void*)f_16191},
{"f_16152ChickenBridge.scm",(void*)f_16152},
{"f_16156ChickenBridge.scm",(void*)f_16156},
{"f_16098ChickenBridge.scm",(void*)f_16098},
{"f_16101ChickenBridge.scm",(void*)f_16101},
{"f_16104ChickenBridge.scm",(void*)f_16104},
{"f_16119ChickenBridge.scm",(void*)f_16119},
{"f_16131ChickenBridge.scm",(void*)f_16131},
{"f_16110ChickenBridge.scm",(void*)f_16110},
{"f_16113ChickenBridge.scm",(void*)f_16113},
{"f_16009ChickenBridge.scm",(void*)f_16009},
{"f_16013ChickenBridge.scm",(void*)f_16013},
{"f_16032ChickenBridge.scm",(void*)f_16032},
{"f_16042ChickenBridge.scm",(void*)f_16042},
{"f_16044ChickenBridge.scm",(void*)f_16044},
{"f_16061ChickenBridge.scm",(void*)f_16061},
{"f_16064ChickenBridge.scm",(void*)f_16064},
{"f_16075ChickenBridge.scm",(void*)f_16075},
{"f_16016ChickenBridge.scm",(void*)f_16016},
{"f_15746ChickenBridge.scm",(void*)f_15746},
{"f_15999ChickenBridge.scm",(void*)f_15999},
{"f_15750ChickenBridge.scm",(void*)f_15750},
{"f_15971ChickenBridge.scm",(void*)f_15971},
{"f_15986ChickenBridge.scm",(void*)f_15986},
{"f_15978ChickenBridge.scm",(void*)f_15978},
{"f_15942ChickenBridge.scm",(void*)f_15942},
{"f_15946ChickenBridge.scm",(void*)f_15946},
{"f_15907ChickenBridge.scm",(void*)f_15907},
{"f_15911ChickenBridge.scm",(void*)f_15911},
{"f_15753ChickenBridge.scm",(void*)f_15753},
{"f_15871ChickenBridge.scm",(void*)f_15871},
{"f_15886ChickenBridge.scm",(void*)f_15886},
{"f_15878ChickenBridge.scm",(void*)f_15878},
{"f_15842ChickenBridge.scm",(void*)f_15842},
{"f_15846ChickenBridge.scm",(void*)f_15846},
{"f_15807ChickenBridge.scm",(void*)f_15807},
{"f_15811ChickenBridge.scm",(void*)f_15811},
{"f_15756ChickenBridge.scm",(void*)f_15756},
{"f_15759ChickenBridge.scm",(void*)f_15759},
{"f_15762ChickenBridge.scm",(void*)f_15762},
{"f_15774ChickenBridge.scm",(void*)f_15774},
{"f_15786ChickenBridge.scm",(void*)f_15786},
{"f_15768ChickenBridge.scm",(void*)f_15768},
{"f_15710ChickenBridge.scm",(void*)f_15710},
{"f_15714ChickenBridge.scm",(void*)f_15714},
{"f_15736ChickenBridge.scm",(void*)f_15736},
{"f_15730ChickenBridge.scm",(void*)f_15730},
{"f_15723ChickenBridge.scm",(void*)f_15723},
{"f_15463ChickenBridge.scm",(void*)f_15463},
{"f_15467ChickenBridge.scm",(void*)f_15467},
{"f_15680ChickenBridge.scm",(void*)f_15680},
{"f_15695ChickenBridge.scm",(void*)f_15695},
{"f_15687ChickenBridge.scm",(void*)f_15687},
{"f_15651ChickenBridge.scm",(void*)f_15651},
{"f_15655ChickenBridge.scm",(void*)f_15655},
{"f_15616ChickenBridge.scm",(void*)f_15616},
{"f_15620ChickenBridge.scm",(void*)f_15620},
{"f_15470ChickenBridge.scm",(void*)f_15470},
{"f_15580ChickenBridge.scm",(void*)f_15580},
{"f_15595ChickenBridge.scm",(void*)f_15595},
{"f_15587ChickenBridge.scm",(void*)f_15587},
{"f_15551ChickenBridge.scm",(void*)f_15551},
{"f_15555ChickenBridge.scm",(void*)f_15555},
{"f_15516ChickenBridge.scm",(void*)f_15516},
{"f_15520ChickenBridge.scm",(void*)f_15520},
{"f_15473ChickenBridge.scm",(void*)f_15473},
{"f_15476ChickenBridge.scm",(void*)f_15476},
{"f_15479ChickenBridge.scm",(void*)f_15479},
{"f_15487ChickenBridge.scm",(void*)f_15487},
{"f_15495ChickenBridge.scm",(void*)f_15495},
{"f_15485ChickenBridge.scm",(void*)f_15485},
{"f_15248ChickenBridge.scm",(void*)f_15248},
{"f_15252ChickenBridge.scm",(void*)f_15252},
{"f_15461ChickenBridge.scm",(void*)f_15461},
{"f_15414ChickenBridge.scm",(void*)f_15414},
{"f_15426ChickenBridge.scm",(void*)f_15426},
{"f_15282ChickenBridge.scm",(void*)f_15282},
{"f_15285ChickenBridge.scm",(void*)f_15285},
{"f_15291ChickenBridge.scm",(void*)f_15291},
{"f_15294ChickenBridge.scm",(void*)f_15294},
{"f_15382ChickenBridge.scm",(void*)f_15382},
{"f_15297ChickenBridge.scm",(void*)f_15297},
{"f_15376ChickenBridge.scm",(void*)f_15376},
{"f_15303ChickenBridge.scm",(void*)f_15303},
{"f_15306ChickenBridge.scm",(void*)f_15306},
{"f_15258ChickenBridge.scm",(void*)f_15258},
{"f_15261ChickenBridge.scm",(void*)f_15261},
{"f_15268ChickenBridge.scm",(void*)f_15268},
{"f_14778ChickenBridge.scm",(void*)f_14778},
{"f_14782ChickenBridge.scm",(void*)f_14782},
{"f_15218ChickenBridge.scm",(void*)f_15218},
{"f_15233ChickenBridge.scm",(void*)f_15233},
{"f_15225ChickenBridge.scm",(void*)f_15225},
{"f_15189ChickenBridge.scm",(void*)f_15189},
{"f_15193ChickenBridge.scm",(void*)f_15193},
{"f_15154ChickenBridge.scm",(void*)f_15154},
{"f_15158ChickenBridge.scm",(void*)f_15158},
{"f_15119ChickenBridge.scm",(void*)f_15119},
{"f_15123ChickenBridge.scm",(void*)f_15123},
{"f_14785ChickenBridge.scm",(void*)f_14785},
{"f_15083ChickenBridge.scm",(void*)f_15083},
{"f_15098ChickenBridge.scm",(void*)f_15098},
{"f_15090ChickenBridge.scm",(void*)f_15090},
{"f_15054ChickenBridge.scm",(void*)f_15054},
{"f_15058ChickenBridge.scm",(void*)f_15058},
{"f_15019ChickenBridge.scm",(void*)f_15019},
{"f_15023ChickenBridge.scm",(void*)f_15023},
{"f_14984ChickenBridge.scm",(void*)f_14984},
{"f_14988ChickenBridge.scm",(void*)f_14988},
{"f_14788ChickenBridge.scm",(void*)f_14788},
{"f_14948ChickenBridge.scm",(void*)f_14948},
{"f_14963ChickenBridge.scm",(void*)f_14963},
{"f_14955ChickenBridge.scm",(void*)f_14955},
{"f_14919ChickenBridge.scm",(void*)f_14919},
{"f_14923ChickenBridge.scm",(void*)f_14923},
{"f_14884ChickenBridge.scm",(void*)f_14884},
{"f_14888ChickenBridge.scm",(void*)f_14888},
{"f_14849ChickenBridge.scm",(void*)f_14849},
{"f_14853ChickenBridge.scm",(void*)f_14853},
{"f_14791ChickenBridge.scm",(void*)f_14791},
{"f_14794ChickenBridge.scm",(void*)f_14794},
{"f_14797ChickenBridge.scm",(void*)f_14797},
{"f_14820ChickenBridge.scm",(void*)f_14820},
{"f_14828ChickenBridge.scm",(void*)f_14828},
{"f_14803ChickenBridge.scm",(void*)f_14803},
{"f_14806ChickenBridge.scm",(void*)f_14806},
{"f_14698ChickenBridge.scm",(void*)f_14698},
{"f_14689ChickenBridge.scm",(void*)f_14689},
{"f_14617ChickenBridge.scm",(void*)f_14617},
{"f_14621ChickenBridge.scm",(void*)f_14621},
{"f_14624ChickenBridge.scm",(void*)f_14624},
{"f_14362ChickenBridge.scm",(void*)f_14362},
{"f_14366ChickenBridge.scm",(void*)f_14366},
{"f_14587ChickenBridge.scm",(void*)f_14587},
{"f_14602ChickenBridge.scm",(void*)f_14602},
{"f_14594ChickenBridge.scm",(void*)f_14594},
{"f_14558ChickenBridge.scm",(void*)f_14558},
{"f_14562ChickenBridge.scm",(void*)f_14562},
{"f_14523ChickenBridge.scm",(void*)f_14523},
{"f_14527ChickenBridge.scm",(void*)f_14527},
{"f_14369ChickenBridge.scm",(void*)f_14369},
{"f_14487ChickenBridge.scm",(void*)f_14487},
{"f_14502ChickenBridge.scm",(void*)f_14502},
{"f_14494ChickenBridge.scm",(void*)f_14494},
{"f_14458ChickenBridge.scm",(void*)f_14458},
{"f_14462ChickenBridge.scm",(void*)f_14462},
{"f_14423ChickenBridge.scm",(void*)f_14423},
{"f_14427ChickenBridge.scm",(void*)f_14427},
{"f_14372ChickenBridge.scm",(void*)f_14372},
{"f_14375ChickenBridge.scm",(void*)f_14375},
{"f_14378ChickenBridge.scm",(void*)f_14378},
{"f_14390ChickenBridge.scm",(void*)f_14390},
{"f_14402ChickenBridge.scm",(void*)f_14402},
{"f_14384ChickenBridge.scm",(void*)f_14384},
{"f_14247ChickenBridge.scm",(void*)f_14247},
{"f_14360ChickenBridge.scm",(void*)f_14360},
{"f_14257ChickenBridge.scm",(void*)f_14257},
{"f_14345ChickenBridge.scm",(void*)f_14345},
{"f_14356ChickenBridge.scm",(void*)f_14356},
{"f_14352ChickenBridge.scm",(void*)f_14352},
{"f_14260ChickenBridge.scm",(void*)f_14260},
{"f_14342ChickenBridge.scm",(void*)f_14342},
{"f_14268ChickenBridge.scm",(void*)f_14268},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14277ChickenBridge.scm",(void*)f_14277},
{"f_14296ChickenBridge.scm",(void*)f_14296},
{"f_14325ChickenBridge.scm",(void*)f_14325},
{"f_14306ChickenBridge.scm",(void*)f_14306},
{"f_14321ChickenBridge.scm",(void*)f_14321},
{"f_14309ChickenBridge.scm",(void*)f_14309},
{"f_14280ChickenBridge.scm",(void*)f_14280},
{"f_14290ChickenBridge.scm",(void*)f_14290},
{"f_14271ChickenBridge.scm",(void*)f_14271},
{"f_14274ChickenBridge.scm",(void*)f_14274},
{"f_14201ChickenBridge.scm",(void*)f_14201},
{"f_14192ChickenBridge.scm",(void*)f_14192},
{"f_13900ChickenBridge.scm",(void*)f_13900},
{"f_13907ChickenBridge.scm",(void*)f_13907},
{"f_13910ChickenBridge.scm",(void*)f_13910},
{"f_14181ChickenBridge.scm",(void*)f_14181},
{"f_14173ChickenBridge.scm",(void*)f_14173},
{"f_14165ChickenBridge.scm",(void*)f_14165},
{"f_14168ChickenBridge.scm",(void*)f_14168},
{"f_14136ChickenBridge.scm",(void*)f_14136},
{"f_14159ChickenBridge.scm",(void*)f_14159},
{"f_14142ChickenBridge.scm",(void*)f_14142},
{"f_14146ChickenBridge.scm",(void*)f_14146},
{"f_13913ChickenBridge.scm",(void*)f_13913},
{"f_13919ChickenBridge.scm",(void*)f_13919},
{"f_14011ChickenBridge.scm",(void*)f_14011},
{"f_14123ChickenBridge.scm",(void*)f_14123},
{"f_14130ChickenBridge.scm",(void*)f_14130},
{"f_14034ChickenBridge.scm",(void*)f_14034},
{"f_14036ChickenBridge.scm",(void*)f_14036},
{"f_14085ChickenBridge.scm",(void*)f_14085},
{"f_14120ChickenBridge.scm",(void*)f_14120},
{"f_14109ChickenBridge.scm",(void*)f_14109},
{"f_14245ChickenBridge.scm",(void*)f_14245},
{"f_14220ChickenBridge.scm",(void*)f_14220},
{"f_14241ChickenBridge.scm",(void*)f_14241},
{"f_14237ChickenBridge.scm",(void*)f_14237},
{"f_14229ChickenBridge.scm",(void*)f_14229},
{"f_14102ChickenBridge.scm",(void*)f_14102},
{"f_14095ChickenBridge.scm",(void*)f_14095},
{"f_14043ChickenBridge.scm",(void*)f_14043},
{"f_14083ChickenBridge.scm",(void*)f_14083},
{"f_14047ChickenBridge.scm",(void*)f_14047},
{"f_14079ChickenBridge.scm",(void*)f_14079},
{"f_14066ChickenBridge.scm",(void*)f_14066},
{"f_14074ChickenBridge.scm",(void*)f_14074},
{"f_14070ChickenBridge.scm",(void*)f_14070},
{"f_14050ChickenBridge.scm",(void*)f_14050},
{"f_14053ChickenBridge.scm",(void*)f_14053},
{"f_14027ChickenBridge.scm",(void*)f_14027},
{"f_14014ChickenBridge.scm",(void*)f_14014},
{"f_14023ChickenBridge.scm",(void*)f_14023},
{"f_14018ChickenBridge.scm",(void*)f_14018},
{"f_13925ChickenBridge.scm",(void*)f_13925},
{"f_14005ChickenBridge.scm",(void*)f_14005},
{"f_13985ChickenBridge.scm",(void*)f_13985},
{"f_13991ChickenBridge.scm",(void*)f_13991},
{"f_14002ChickenBridge.scm",(void*)f_14002},
{"f_13982ChickenBridge.scm",(void*)f_13982},
{"f_13970ChickenBridge.scm",(void*)f_13970},
{"f_13973ChickenBridge.scm",(void*)f_13973},
{"f_13928ChickenBridge.scm",(void*)f_13928},
{"f_13964ChickenBridge.scm",(void*)f_13964},
{"f_13959ChickenBridge.scm",(void*)f_13959},
{"f_13931ChickenBridge.scm",(void*)f_13931},
{"f_13944ChickenBridge.scm",(void*)f_13944},
{"f_13934ChickenBridge.scm",(void*)f_13934},
{"f_13937ChickenBridge.scm",(void*)f_13937},
{"f_13940ChickenBridge.scm",(void*)f_13940},
{"f_13777ChickenBridge.scm",(void*)f_13777},
{"f_13836ChickenBridge.scm",(void*)f_13836},
{"f_13846ChickenBridge.scm",(void*)f_13846},
{"f_13848ChickenBridge.scm",(void*)f_13848},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13882ChickenBridge.scm",(void*)f_13882},
{"f_13867ChickenBridge.scm",(void*)f_13867},
{"f_13798ChickenBridge.scm",(void*)f_13798},
{"f_13830ChickenBridge.scm",(void*)f_13830},
{"f_13758ChickenBridge.scm",(void*)f_13758},
{"f_13765ChickenBridge.scm",(void*)f_13765},
{"f_13772ChickenBridge.scm",(void*)f_13772},
{"f_13739ChickenBridge.scm",(void*)f_13739},
{"f_13746ChickenBridge.scm",(void*)f_13746},
{"f_13753ChickenBridge.scm",(void*)f_13753},
{"f_13559ChickenBridge.scm",(void*)f_13559},
{"f_13563ChickenBridge.scm",(void*)f_13563},
{"f_13566ChickenBridge.scm",(void*)f_13566},
{"f_13569ChickenBridge.scm",(void*)f_13569},
{"f_13572ChickenBridge.scm",(void*)f_13572},
{"f_13729ChickenBridge.scm",(void*)f_13729},
{"f_13736ChickenBridge.scm",(void*)f_13736},
{"f_13575ChickenBridge.scm",(void*)f_13575},
{"f_13727ChickenBridge.scm",(void*)f_13727},
{"f_13578ChickenBridge.scm",(void*)f_13578},
{"f_13720ChickenBridge.scm",(void*)f_13720},
{"f_13710ChickenBridge.scm",(void*)f_13710},
{"f_13584ChickenBridge.scm",(void*)f_13584},
{"f_13700ChickenBridge.scm",(void*)f_13700},
{"f_13690ChickenBridge.scm",(void*)f_13690},
{"f_13590ChickenBridge.scm",(void*)f_13590},
{"f_13653ChickenBridge.scm",(void*)f_13653},
{"f_13667ChickenBridge.scm",(void*)f_13667},
{"f_13683ChickenBridge.scm",(void*)f_13683},
{"f_13679ChickenBridge.scm",(void*)f_13679},
{"f_13675ChickenBridge.scm",(void*)f_13675},
{"f_13671ChickenBridge.scm",(void*)f_13671},
{"f_13661ChickenBridge.scm",(void*)f_13661},
{"f_13657ChickenBridge.scm",(void*)f_13657},
{"f_13593ChickenBridge.scm",(void*)f_13593},
{"f_13596ChickenBridge.scm",(void*)f_13596},
{"f_13637ChickenBridge.scm",(void*)f_13637},
{"f_13602ChickenBridge.scm",(void*)f_13602},
{"f_13615ChickenBridge.scm",(void*)f_13615},
{"f_13605ChickenBridge.scm",(void*)f_13605},
{"f_13608ChickenBridge.scm",(void*)f_13608},
{"f_13549ChickenBridge.scm",(void*)f_13549},
{"f_13490ChickenBridge.scm",(void*)f_13490},
{"f_13481ChickenBridge.scm",(void*)f_13481},
{"f_13364ChickenBridge.scm",(void*)f_13364},
{"f_13355ChickenBridge.scm",(void*)f_13355},
{"f_13346ChickenBridge.scm",(void*)f_13346},
{"f_13337ChickenBridge.scm",(void*)f_13337},
{"f_13328ChickenBridge.scm",(void*)f_13328},
{"f_13310ChickenBridge.scm",(void*)f_13310},
{"f_13301ChickenBridge.scm",(void*)f_13301},
{"f_13292ChickenBridge.scm",(void*)f_13292},
{"f_13274ChickenBridge.scm",(void*)f_13274},
{"f_13265ChickenBridge.scm",(void*)f_13265},
{"f_13256ChickenBridge.scm",(void*)f_13256},
{"f_13241ChickenBridge.scm",(void*)f_13241},
{"f_13196ChickenBridge.scm",(void*)f_13196},
{"f_13178ChickenBridge.scm",(void*)f_13178},
{"f_13169ChickenBridge.scm",(void*)f_13169},
{"f_13142ChickenBridge.scm",(void*)f_13142},
{"f_13124ChickenBridge.scm",(void*)f_13124},
{"f_13106ChickenBridge.scm",(void*)f_13106},
{"f_13097ChickenBridge.scm",(void*)f_13097},
{"f_13085ChickenBridge.scm",(void*)f_13085},
{"f_12747ChickenBridge.scm",(void*)f_12747},
{"f_12587ChickenBridge.scm",(void*)f_12587},
{"f_12622ChickenBridge.scm",(void*)f_12622},
{"f_12632ChickenBridge.scm",(void*)f_12632},
{"f_12636ChickenBridge.scm",(void*)f_12636},
{"f_12639ChickenBridge.scm",(void*)f_12639},
{"f_12700ChickenBridge.scm",(void*)f_12700},
{"f_12691ChickenBridge.scm",(void*)f_12691},
{"f_12642ChickenBridge.scm",(void*)f_12642},
{"f_12661ChickenBridge.scm",(void*)f_12661},
{"f_12668ChickenBridge.scm",(void*)f_12668},
{"f_12645ChickenBridge.scm",(void*)f_12645},
{"f_12651ChickenBridge.scm",(void*)f_12651},
{"f_12620ChickenBridge.scm",(void*)f_12620},
{"f_12595ChickenBridge.scm",(void*)f_12595},
{"f_12594ChickenBridge.scm",(void*)f_12594},
{"f_12755ChickenBridge.scm",(void*)f_12755},
{"f_12333ChickenBridge.scm",(void*)f_12333},
{"f_12355ChickenBridge.scm",(void*)f_12355},
{"f_12370ChickenBridge.scm",(void*)f_12370},
{"f_12373ChickenBridge.scm",(void*)f_12373},
{"f_12549ChickenBridge.scm",(void*)f_12549},
{"f_12543ChickenBridge.scm",(void*)f_12543},
{"f_12376ChickenBridge.scm",(void*)f_12376},
{"f_12525ChickenBridge.scm",(void*)f_12525},
{"f_12379ChickenBridge.scm",(void*)f_12379},
{"f_12382ChickenBridge.scm",(void*)f_12382},
{"f_12518ChickenBridge.scm",(void*)f_12518},
{"f_12506ChickenBridge.scm",(void*)f_12506},
{"f_12402ChickenBridge.scm",(void*)f_12402},
{"f_12409ChickenBridge.scm",(void*)f_12409},
{"f_12479ChickenBridge.scm",(void*)f_12479},
{"f_12465ChickenBridge.scm",(void*)f_12465},
{"f_12473ChickenBridge.scm",(void*)f_12473},
{"f_12412ChickenBridge.scm",(void*)f_12412},
{"f_12451ChickenBridge.scm",(void*)f_12451},
{"f_12415ChickenBridge.scm",(void*)f_12415},
{"f_12444ChickenBridge.scm",(void*)f_12444},
{"f_12421ChickenBridge.scm",(void*)f_12421},
{"f_12424ChickenBridge.scm",(void*)f_12424},
{"f_12428ChickenBridge.scm",(void*)f_12428},
{"f_12389ChickenBridge.scm",(void*)f_12389},
{"f_12392ChickenBridge.scm",(void*)f_12392},
{"f_12202ChickenBridge.scm",(void*)f_12202},
{"f_12211ChickenBridge.scm",(void*)f_12211},
{"f_12159ChickenBridge.scm",(void*)f_12159},
{"f_12165ChickenBridge.scm",(void*)f_12165},
{"f_12228ChickenBridge.scm",(void*)f_12228},
{"f_12314ChickenBridge.scm",(void*)f_12314},
{"f_12301ChickenBridge.scm",(void*)f_12301},
{"f_12309ChickenBridge.scm",(void*)f_12309},
{"f_12231ChickenBridge.scm",(void*)f_12231},
{"f_12235ChickenBridge.scm",(void*)f_12235},
{"f_12278ChickenBridge.scm",(void*)f_12278},
{"f_12240ChickenBridge.scm",(void*)f_12240},
{"f_12206ChickenBridge.scm",(void*)f_12206},
{"f_12101ChickenBridge.scm",(void*)f_12101},
{"f_12108ChickenBridge.scm",(void*)f_12108},
{"f_12139ChickenBridge.scm",(void*)f_12139},
{"f_12135ChickenBridge.scm",(void*)f_12135},
{"f_12127ChickenBridge.scm",(void*)f_12127},
{"f_12010ChickenBridge.scm",(void*)f_12010},
{"f_12017ChickenBridge.scm",(void*)f_12017},
{"f_12085ChickenBridge.scm",(void*)f_12085},
{"f_12028ChickenBridge.scm",(void*)f_12028},
{"f_12055ChickenBridge.scm",(void*)f_12055},
{"f_12039ChickenBridge.scm",(void*)f_12039},
{"f_11944ChickenBridge.scm",(void*)f_11944},
{"f_11955ChickenBridge.scm",(void*)f_11955},
{"f_11958ChickenBridge.scm",(void*)f_11958},
{"f_11965ChickenBridge.scm",(void*)f_11965},
{"f_11938ChickenBridge.scm",(void*)f_11938},
{"f_11392ChickenBridge.scm",(void*)f_11392},
{"f_11423ChickenBridge.scm",(void*)f_11423},
{"f_11887ChickenBridge.scm",(void*)f_11887},
{"f_11893ChickenBridge.scm",(void*)f_11893},
{"f_11434ChickenBridge.scm",(void*)f_11434},
{"f_11319ChickenBridge.scm",(void*)f_11319},
{"f_11344ChickenBridge.scm",(void*)f_11344},
{"f_11279ChickenBridge.scm",(void*)f_11279},
{"f_11292ChickenBridge.scm",(void*)f_11292},
{"f_11333ChickenBridge.scm",(void*)f_11333},
{"f_11438ChickenBridge.scm",(void*)f_11438},
{"f_11875ChickenBridge.scm",(void*)f_11875},
{"f_11871ChickenBridge.scm",(void*)f_11871},
{"f_11867ChickenBridge.scm",(void*)f_11867},
{"f_11441ChickenBridge.scm",(void*)f_11441},
{"f_11661ChickenBridge.scm",(void*)f_11661},
{"f_11770ChickenBridge.scm",(void*)f_11770},
{"f_11835ChickenBridge.scm",(void*)f_11835},
{"f_11777ChickenBridge.scm",(void*)f_11777},
{"f_11781ChickenBridge.scm",(void*)f_11781},
{"f_11785ChickenBridge.scm",(void*)f_11785},
{"f_11827ChickenBridge.scm",(void*)f_11827},
{"f_11823ChickenBridge.scm",(void*)f_11823},
{"f_11801ChickenBridge.scm",(void*)f_11801},
{"f_11664ChickenBridge.scm",(void*)f_11664},
{"f_11667ChickenBridge.scm",(void*)f_11667},
{"f_11566ChickenBridge.scm",(void*)f_11566},
{"f_11649ChickenBridge.scm",(void*)f_11649},
{"f_11616ChickenBridge.scm",(void*)f_11616},
{"f_11642ChickenBridge.scm",(void*)f_11642},
{"f_11624ChickenBridge.scm",(void*)f_11624},
{"f_11572ChickenBridge.scm",(void*)f_11572},
{"f_11612ChickenBridge.scm",(void*)f_11612},
{"f_11554ChickenBridge.scm",(void*)f_11554},
{"f_11525ChickenBridge.scm",(void*)f_11525},
{"f_11547ChickenBridge.scm",(void*)f_11547},
{"f_11533ChickenBridge.scm",(void*)f_11533},
{"f_11487ChickenBridge.scm",(void*)f_11487},
{"f_11444ChickenBridge.scm",(void*)f_11444},
{"f_11455ChickenBridge.scm",(void*)f_11455},
{"f_11459ChickenBridge.scm",(void*)f_11459},
{"f_11463ChickenBridge.scm",(void*)f_11463},
{"f_11467ChickenBridge.scm",(void*)f_11467},
{"f_11451ChickenBridge.scm",(void*)f_11451},
{"f_11411ChickenBridge.scm",(void*)f_11411},
{"f_11406ChickenBridge.scm",(void*)f_11406},
{"f_11401ChickenBridge.scm",(void*)f_11401},
{"f_11233ChickenBridge.scm",(void*)f_11233},
{"f_11244ChickenBridge.scm",(void*)f_11244},
{"f_11259ChickenBridge.scm",(void*)f_11259},
{"f_11195ChickenBridge.scm",(void*)f_11195},
{"f_11206ChickenBridge.scm",(void*)f_11206},
{"f_11221ChickenBridge.scm",(void*)f_11221},
{"f_11128ChickenBridge.scm",(void*)f_11128},
{"f_11148ChickenBridge.scm",(void*)f_11148},
{"f_11158ChickenBridge.scm",(void*)f_11158},
{"f_11171ChickenBridge.scm",(void*)f_11171},
{"f_11139ChickenBridge.scm",(void*)f_11139},
{"f_11146ChickenBridge.scm",(void*)f_11146},
{"f_10935ChickenBridge.scm",(void*)f_10935},
{"f_10995ChickenBridge.scm",(void*)f_10995},
{"f_11005ChickenBridge.scm",(void*)f_11005},
{"f_11119ChickenBridge.scm",(void*)f_11119},
{"f_11084ChickenBridge.scm",(void*)f_11084},
{"f_11076ChickenBridge.scm",(void*)f_11076},
{"f_11047ChickenBridge.scm",(void*)f_11047},
{"f_11025ChickenBridge.scm",(void*)f_11025},
{"f_11028ChickenBridge.scm",(void*)f_11028},
{"f_11016ChickenBridge.scm",(void*)f_11016},
{"f_10942ChickenBridge.scm",(void*)f_10942},
{"f_10993ChickenBridge.scm",(void*)f_10993},
{"f_10985ChickenBridge.scm",(void*)f_10985},
{"f_10945ChickenBridge.scm",(void*)f_10945},
{"f_10956ChickenBridge.scm",(void*)f_10956},
{"f_10960ChickenBridge.scm",(void*)f_10960},
{"f_10952ChickenBridge.scm",(void*)f_10952},
{"f_10793ChickenBridge.scm",(void*)f_10793},
{"f_10841ChickenBridge.scm",(void*)f_10841},
{"f_10851ChickenBridge.scm",(void*)f_10851},
{"f_10862ChickenBridge.scm",(void*)f_10862},
{"f_10899ChickenBridge.scm",(void*)f_10899},
{"f_10874ChickenBridge.scm",(void*)f_10874},
{"f_10865ChickenBridge.scm",(void*)f_10865},
{"f_10803ChickenBridge.scm",(void*)f_10803},
{"f_10839ChickenBridge.scm",(void*)f_10839},
{"f_10810ChickenBridge.scm",(void*)f_10810},
{"f_10442ChickenBridge.scm",(void*)f_10442},
{"f_10449ChickenBridge.scm",(void*)f_10449},
{"f_10683ChickenBridge.scm",(void*)f_10683},
{"f_10693ChickenBridge.scm",(void*)f_10693},
{"f_10704ChickenBridge.scm",(void*)f_10704},
{"f_10716ChickenBridge.scm",(void*)f_10716},
{"f_10719ChickenBridge.scm",(void*)f_10719},
{"f_10707ChickenBridge.scm",(void*)f_10707},
{"f_10455ChickenBridge.scm",(void*)f_10455},
{"f_10681ChickenBridge.scm",(void*)f_10681},
{"f_10677ChickenBridge.scm",(void*)f_10677},
{"f_10623ChickenBridge.scm",(void*)f_10623},
{"f_10588ChickenBridge.scm",(void*)f_10588},
{"f_10604ChickenBridge.scm",(void*)f_10604},
{"f_10559ChickenBridge.scm",(void*)f_10559},
{"f_10483ChickenBridge.scm",(void*)f_10483},
{"f_10486ChickenBridge.scm",(void*)f_10486},
{"f_10550ChickenBridge.scm",(void*)f_10550},
{"f_10546ChickenBridge.scm",(void*)f_10546},
{"f_10466ChickenBridge.scm",(void*)f_10466},
{"f_10477ChickenBridge.scm",(void*)f_10477},
{"f_10473ChickenBridge.scm",(void*)f_10473},
{"f_10395ChickenBridge.scm",(void*)f_10395},
{"f_10428ChickenBridge.scm",(void*)f_10428},
{"f_10410ChickenBridge.scm",(void*)f_10410},
{"f_10422ChickenBridge.scm",(void*)f_10422},
{"f_10013ChickenBridge.scm",(void*)f_10013},
{"f_10222ChickenBridge.scm",(void*)f_10222},
{"f_10232ChickenBridge.scm",(void*)f_10232},
{"f_10243ChickenBridge.scm",(void*)f_10243},
{"f_10363ChickenBridge.scm",(void*)f_10363},
{"f_10342ChickenBridge.scm",(void*)f_10342},
{"f_10321ChickenBridge.scm",(void*)f_10321},
{"f_10300ChickenBridge.scm",(void*)f_10300},
{"f_10279ChickenBridge.scm",(void*)f_10279},
{"f_10258ChickenBridge.scm",(void*)f_10258},
{"f_10246ChickenBridge.scm",(void*)f_10246},
{"f_10023ChickenBridge.scm",(void*)f_10023},
{"f_10026ChickenBridge.scm",(void*)f_10026},
{"f_10189ChickenBridge.scm",(void*)f_10189},
{"f_10029ChickenBridge.scm",(void*)f_10029},
{"f_10180ChickenBridge.scm",(void*)f_10180},
{"f_10160ChickenBridge.scm",(void*)f_10160},
{"f_10032ChickenBridge.scm",(void*)f_10032},
{"f_10125ChickenBridge.scm",(void*)f_10125},
{"f_10142ChickenBridge.scm",(void*)f_10142},
{"f_10035ChickenBridge.scm",(void*)f_10035},
{"f_10074ChickenBridge.scm",(void*)f_10074},
{"f_10108ChickenBridge.scm",(void*)f_10108},
{"f_10092ChickenBridge.scm",(void*)f_10092},
{"f_10077ChickenBridge.scm",(void*)f_10077},
{"f_10042ChickenBridge.scm",(void*)f_10042},
{"f_10053ChickenBridge.scm",(void*)f_10053},
{"f_10057ChickenBridge.scm",(void*)f_10057},
{"f_10049ChickenBridge.scm",(void*)f_10049},
{"f_9931ChickenBridge.scm",(void*)f_9931},
{"f_9935ChickenBridge.scm",(void*)f_9935},
{"f_9953ChickenBridge.scm",(void*)f_9953},
{"f_9771ChickenBridge.scm",(void*)f_9771},
{"f_9779ChickenBridge.scm",(void*)f_9779},
{"f_9789ChickenBridge.scm",(void*)f_9789},
{"f_9827ChickenBridge.scm",(void*)f_9827},
{"f_9830ChickenBridge.scm",(void*)f_9830},
{"f_9833ChickenBridge.scm",(void*)f_9833},
{"f_9908ChickenBridge.scm",(void*)f_9908},
{"f_9918ChickenBridge.scm",(void*)f_9918},
{"f_9836ChickenBridge.scm",(void*)f_9836},
{"f_9839ChickenBridge.scm",(void*)f_9839},
{"f_9842ChickenBridge.scm",(void*)f_9842},
{"f_9862ChickenBridge.scm",(void*)f_9862},
{"f_9872ChickenBridge.scm",(void*)f_9872},
{"f_9875ChickenBridge.scm",(void*)f_9875},
{"f_9878ChickenBridge.scm",(void*)f_9878},
{"f_9845ChickenBridge.scm",(void*)f_9845},
{"f_9848ChickenBridge.scm",(void*)f_9848},
{"f_9765ChickenBridge.scm",(void*)f_9765},
{"f_9759ChickenBridge.scm",(void*)f_9759},
{"f_9753ChickenBridge.scm",(void*)f_9753},
{"f_9682ChickenBridge.scm",(void*)f_9682},
{"f_9723ChickenBridge.scm",(void*)f_9723},
{"f_9727ChickenBridge.scm",(void*)f_9727},
{"f_9731ChickenBridge.scm",(void*)f_9731},
{"f_9735ChickenBridge.scm",(void*)f_9735},
{"f_9739ChickenBridge.scm",(void*)f_9739},
{"f_9743ChickenBridge.scm",(void*)f_9743},
{"f_9747ChickenBridge.scm",(void*)f_9747},
{"f_9751ChickenBridge.scm",(void*)f_9751},
{"f_9684ChickenBridge.scm",(void*)f_9684},
{"f_9690ChickenBridge.scm",(void*)f_9690},
{"f_9712ChickenBridge.scm",(void*)f_9712},
{"f_9701ChickenBridge.scm",(void*)f_9701},
{"f_9531ChickenBridge.scm",(void*)f_9531},
{"f_9546ChickenBridge.scm",(void*)f_9546},
{"f_9559ChickenBridge.scm",(void*)f_9559},
{"f_9519ChickenBridge.scm",(void*)f_9519},
{"f_9507ChickenBridge.scm",(void*)f_9507},
{"f_9495ChickenBridge.scm",(void*)f_9495},
{"f_9489ChickenBridge.scm",(void*)f_9489},
{"f_9483ChickenBridge.scm",(void*)f_9483},
{"f_9471ChickenBridge.scm",(void*)f_9471},
{"f_9459ChickenBridge.scm",(void*)f_9459},
{"f_9447ChickenBridge.scm",(void*)f_9447},
{"f_9435ChickenBridge.scm",(void*)f_9435},
{"f_9429ChickenBridge.scm",(void*)f_9429},
{"f_9120ChickenBridge.scm",(void*)f_9120},
{"f_9373ChickenBridge.scm",(void*)f_9373},
{"f_9406ChickenBridge.scm",(void*)f_9406},
{"f_9402ChickenBridge.scm",(void*)f_9402},
{"f_9391ChickenBridge.scm",(void*)f_9391},
{"f_9387ChickenBridge.scm",(void*)f_9387},
{"f_9281ChickenBridge.scm",(void*)f_9281},
{"f_9284ChickenBridge.scm",(void*)f_9284},
{"f_9287ChickenBridge.scm",(void*)f_9287},
{"f_9367ChickenBridge.scm",(void*)f_9367},
{"f_9192ChickenBridge.scm",(void*)f_9192},
{"f_9133ChickenBridge.scm",(void*)f_9133},
{"f_9290ChickenBridge.scm",(void*)f_9290},
{"f_9297ChickenBridge.scm",(void*)f_9297},
{"f_9357ChickenBridge.scm",(void*)f_9357},
{"f_9343ChickenBridge.scm",(void*)f_9343},
{"f_9309ChickenBridge.scm",(void*)f_9309},
{"f_9335ChickenBridge.scm",(void*)f_9335},
{"f_9270ChickenBridge.scm",(void*)f_9270},
{"f_9317ChickenBridge.scm",(void*)f_9317},
{"f_9313ChickenBridge.scm",(void*)f_9313},
{"f_9076ChickenBridge.scm",(void*)f_9076},
{"f_9110ChickenBridge.scm",(void*)f_9110},
{"f_9114ChickenBridge.scm",(void*)f_9114},
{"f_9118ChickenBridge.scm",(void*)f_9118},
{"f_9084ChickenBridge.scm",(void*)f_9084},
{"f_9102ChickenBridge.scm",(void*)f_9102},
{"f_9093ChickenBridge.scm",(void*)f_9093},
{"f_9101ChickenBridge.scm",(void*)f_9101},
{"f_9088ChickenBridge.scm",(void*)f_9088},
{"f_9032ChickenBridge.scm",(void*)f_9032},
{"f_9066ChickenBridge.scm",(void*)f_9066},
{"f_9070ChickenBridge.scm",(void*)f_9070},
{"f_9074ChickenBridge.scm",(void*)f_9074},
{"f_9040ChickenBridge.scm",(void*)f_9040},
{"f_9058ChickenBridge.scm",(void*)f_9058},
{"f_9049ChickenBridge.scm",(void*)f_9049},
{"f_9057ChickenBridge.scm",(void*)f_9057},
{"f_9044ChickenBridge.scm",(void*)f_9044},
{"f_8958ChickenBridge.scm",(void*)f_8958},
{"f_8962ChickenBridge.scm",(void*)f_8962},
{"f_8969ChickenBridge.scm",(void*)f_8969},
{"f_8971ChickenBridge.scm",(void*)f_8971},
{"f_8985ChickenBridge.scm",(void*)f_8985},
{"f_8998ChickenBridge.scm",(void*)f_8998},
{"f_8988ChickenBridge.scm",(void*)f_8988},
{"f_8872ChickenBridge.scm",(void*)f_8872},
{"f_8754ChickenBridge.scm",(void*)f_8754},
{"f_8760ChickenBridge.scm",(void*)f_8760},
{"f_8784ChickenBridge.scm",(void*)f_8784},
{"f_8770ChickenBridge.scm",(void*)f_8770},
{"f_8655ChickenBridge.scm",(void*)f_8655},
{"f_8659ChickenBridge.scm",(void*)f_8659},
{"f_8684ChickenBridge.scm",(void*)f_8684},
{"f_8701ChickenBridge.scm",(void*)f_8701},
{"f_8705ChickenBridge.scm",(void*)f_8705},
{"f_8661ChickenBridge.scm",(void*)f_8661},
{"f_8678ChickenBridge.scm",(void*)f_8678},
{"f_8493ChickenBridge.scm",(void*)f_8493},
{"f_8502ChickenBridge.scm",(void*)f_8502},
{"f_8540ChickenBridge.scm",(void*)f_8540},
{"f_8518ChickenBridge.scm",(void*)f_8518},
{"f_8403ChickenBridge.scm",(void*)f_8403},
{"f_8355ChickenBridge.scm",(void*)f_8355},
{"f_8389ChickenBridge.scm",(void*)f_8389},
{"f_8332ChickenBridge.scm",(void*)f_8332},
{"f_8326ChickenBridge.scm",(void*)f_8326},
{"f_8311ChickenBridge.scm",(void*)f_8311},
{"f_8297ChickenBridge.scm",(void*)f_8297},
{"f_8287ChickenBridge.scm",(void*)f_8287},
{"f_8277ChickenBridge.scm",(void*)f_8277},
{"f_8267ChickenBridge.scm",(void*)f_8267},
{"f_8257ChickenBridge.scm",(void*)f_8257},
{"f_8247ChickenBridge.scm",(void*)f_8247},
{"f_7261ChickenBridge.scm",(void*)f_7261},
{"f_8216ChickenBridge.scm",(void*)f_8216},
{"f_8226ChickenBridge.scm",(void*)f_8226},
{"f_8210ChickenBridge.scm",(void*)f_8210},
{"f_7219ChickenBridge.scm",(void*)f_7219},
{"f_8204ChickenBridge.scm",(void*)f_8204},
{"f_7875ChickenBridge.scm",(void*)f_7875},
{"f_7690ChickenBridge.scm",(void*)f_7690},
{"f_7699ChickenBridge.scm",(void*)f_7699},
{"f_7619ChickenBridge.scm",(void*)f_7619},
{"f_7609ChickenBridge.scm",(void*)f_7609},
{"f_7599ChickenBridge.scm",(void*)f_7599},
{"f_7579ChickenBridge.scm",(void*)f_7579},
{"f_7548ChickenBridge.scm",(void*)f_7548},
{"f_7545ChickenBridge.scm",(void*)f_7545},
{"f_7538ChickenBridge.scm",(void*)f_7538},
{"f_7535ChickenBridge.scm",(void*)f_7535},
{"f_7528ChickenBridge.scm",(void*)f_7528},
{"f_7510ChickenBridge.scm",(void*)f_7510},
{"f_7499ChickenBridge.scm",(void*)f_7499},
{"f_7496ChickenBridge.scm",(void*)f_7496},
{"f_7493ChickenBridge.scm",(void*)f_7493},
{"f_7490ChickenBridge.scm",(void*)f_7490},
{"f_7461ChickenBridge.scm",(void*)f_7461},
{"f_7454ChickenBridge.scm",(void*)f_7454},
{"f_7451ChickenBridge.scm",(void*)f_7451},
{"f_7430ChickenBridge.scm",(void*)f_7430},
{"f_7411ChickenBridge.scm",(void*)f_7411},
{"f_7392ChickenBridge.scm",(void*)f_7392},
{"f_7378ChickenBridge.scm",(void*)f_7378},
{"f_7371ChickenBridge.scm",(void*)f_7371},
{"f_7356ChickenBridge.scm",(void*)f_7356},
{"f_7345ChickenBridge.scm",(void*)f_7345},
{"f_7338ChickenBridge.scm",(void*)f_7338},
{"f_7284ChickenBridge.scm",(void*)f_7284},
{"f_7228ChickenBridge.scm",(void*)f_7228},
{"f_7233ChickenBridge.scm",(void*)f_7233},
{"f_7107ChickenBridge.scm",(void*)f_7107},
{"f_7101ChickenBridge.scm",(void*)f_7101},
{"f_7094ChickenBridge.scm",(void*)f_7094},
{"f_7088ChickenBridge.scm",(void*)f_7088},
{"f_7078ChickenBridge.scm",(void*)f_7078},
{"f_7058ChickenBridge.scm",(void*)f_7058},
{"f_7070ChickenBridge.scm",(void*)f_7070},
{"f_7052ChickenBridge.scm",(void*)f_7052},
{"f_7046ChickenBridge.scm",(void*)f_7046},
{"f_7040ChickenBridge.scm",(void*)f_7040},
{"f_7034ChickenBridge.scm",(void*)f_7034},
{"f_7028ChickenBridge.scm",(void*)f_7028},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
