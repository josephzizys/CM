/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2009-04-11 06:44
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: cm
*/

#include "chicken.h"


#include "juce.h"
#include "CmSupport.h"


static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[1081];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,115,104,32,97,48,32,98,49,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,16),40,108,111,103,97,110,100,32,46,32,97,114,103,115,50,41};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,16),40,108,111,103,110,111,116,32,46,32,97,114,103,115,51,41};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,16),40,108,111,103,120,111,114,32,46,32,97,114,103,115,52,41};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,16),40,108,111,103,105,111,114,32,46,32,97,114,103,115,53,41};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,15),40,108,111,103,116,101,115,116,32,97,54,32,98,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,27),40,108,105,115,116,45,115,101,116,33,32,108,105,115,56,32,112,111,115,57,32,118,97,108,49,48,41,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,23),40,109,97,107,101,45,101,113,117,97,108,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,20),40,109,97,107,101,45,101,113,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,22),40,104,97,115,104,45,114,101,102,32,116,97,98,49,50,32,118,97,108,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,24),40,114,101,97,100,45,102,114,111,109,45,115,116,114,105,110,103,32,115,116,114,49,52,41};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,112,114,105,110,116,95,111,117,116,112,117,116,32,97,53,52,53,56,32,97,53,51,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,49),40,102,102,105,95,114,101,115,99,97,108,101,32,97,56,52,56,55,32,97,56,51,56,56,32,97,56,50,56,57,32,97,56,49,57,48,32,97,56,48,57,49,32,97,55,57,57,50,41,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,102,108,111,97,116,95,116,111,95,102,105,120,110,117,109,32,97,49,48,56,49,49,49,41,0,0,0,0,0};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,113,117,97,110,116,105,122,101,32,97,49,49,51,49,49,54,32,97,49,49,50,49,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,47),40,102,102,105,95,114,104,121,116,104,109,95,116,111,95,115,101,99,111,110,100,115,32,97,49,50,49,49,50,52,32,97,49,50,48,49,50,53,32,97,49,49,57,49,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,99,101,110,116,115,95,116,111,95,115,99,97,108,101,114,32,97,49,50,56,49,51,49,41,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,115,99,97,108,101,114,95,116,111,95,99,101,110,116,115,32,97,49,51,51,49,51,54,41,0,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,45),40,102,102,105,95,101,120,112,108,115,101,103,32,97,49,52,53,49,52,56,32,97,49,52,52,49,52,57,32,97,49,52,51,49,53,48,32,97,49,52,50,49,53,49,41,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,44),40,102,102,105,95,103,101,111,115,101,103,32,97,49,53,54,49,53,57,32,97,49,53,53,49,54,48,32,97,49,53,52,49,54,49,32,97,49,53,51,49,54,50,41,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,107,101,121,110,117,109,95,116,111,95,104,101,114,116,122,32,97,49,54,52,49,54,55,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,21),40,102,102,105,95,114,97,110,115,101,101,100,32,97,49,55,56,49,56,49,41,0,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,105,110,116,32,97,49,56,50,49,56,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,102,108,111,97,116,32,97,49,56,54,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,12),40,102,102,105,95,114,97,110,108,111,119,41,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,104,105,103,104,41,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,114,97,110,103,97,117,115,115,32,97,50,49,52,50,49,55,32,97,50,49,51,50,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,101,120,112,32,97,50,50,48,50,50,51,41,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,103,97,109,109,97,32,97,50,51,50,50,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,114,97,110,112,111,105,115,115,111,110,32,97,50,52,48,50,52,51,41};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,112,105,110,107,41,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,14),40,102,102,105,95,114,97,110,98,114,111,119,110,41,0,0,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,42),40,102,102,105,95,115,99,104,101,100,95,115,112,114,111,117,116,32,97,50,55,50,50,55,53,32,97,50,55,49,50,55,54,32,97,50,55,48,50,55,55,41,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,115,99,104,101,100,95,115,116,111,112,32,97,50,56,52,50,56,55,41};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,115,99,104,101,100,95,115,99,111,114,101,95,109,111,100,101,95,112,41};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,115,99,104,101,100,95,115,99,111,114,101,95,116,105,109,101,41,0,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,27),40,102,102,105,95,112,97,116,104,110,97,109,101,95,116,121,112,101,32,97,51,50,56,51,51,50,41,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,58),40,102,102,105,95,109,112,95,115,101,110,100,95,100,97,116,97,32,97,52,48,56,52,49,49,32,97,52,48,55,52,49,50,32,97,52,48,54,52,49,51,32,97,52,48,53,52,49,52,32,97,52,48,52,52,49,53,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,6),40,113,117,105,116,41,0,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,20),40,112,114,105,110,116,45,101,114,114,111,114,32,109,115,103,54,51,48,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,30),40,112,114,105,110,116,45,111,117,116,112,117,116,32,109,115,103,54,51,49,32,46,32,113,117,111,54,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,14),40,115,104,101,108,108,32,115,116,114,54,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,54,51,55,41,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,54,51,56,41,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,54,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,54,52,48,41,0,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,54,52,49,41,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,54,52,50,41,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,54,52,51,41,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,54,52,52,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,54,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,54,52,54,41,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,12),40,100,111,54,54,52,32,116,54,54,54,41,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,12),40,100,111,54,53,57,32,97,54,54,49,41,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,18),40,99,111,110,99,97,116,32,46,32,97,114,103,115,54,53,54,41,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,54,56,57,32,98,54,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,54,57,49,32,98,54,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,54,56,53,32,46,32,111,98,106,54,56,54,41,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,25),40,100,111,54,57,56,32,116,97,105,108,55,48,48,32,105,55,48,49,32,102,55,48,50,41,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,54,57,54,32,108,54,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,55,50,56,32,112,114,111,112,55,50,57,32,46,32,100,101,102,55,51,48,41,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,32),40,100,111,55,52,52,32,105,55,52,54,32,108,55,52,55,32,101,55,52,56,32,102,55,52,57,32,114,55,53,48,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,53),40,37,109,97,112,115,101,113,32,102,117,110,99,55,51,52,32,115,101,113,55,51,53,32,101,108,101,109,101,110,116,115,63,55,51,54,32,115,116,97,114,116,55,51,55,32,101,110,100,55,51,56,41,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,13),40,102,95,56,56,55,57,32,97,55,54,51,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,13),40,102,95,56,56,56,56,32,97,55,54,52,41,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,28),40,102,105,110,100,32,120,55,54,48,32,115,101,113,55,54,49,32,46,32,97,114,103,115,55,54,50,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,13),40,102,95,56,57,50,51,32,97,55,54,56,41,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,13),40,102,95,56,57,51,50,32,97,55,54,57,41,0,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,32),40,112,111,115,105,116,105,111,110,32,120,55,54,53,32,115,101,113,55,54,54,32,46,32,97,114,103,115,55,54,55,41};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,12),40,97,57,49,54,52,32,105,56,48,50,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,12),40,97,57,49,56,54,32,105,56,48,49,41,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,12),40,97,57,49,57,54,32,105,56,48,48,41,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,57,50,48,50,32,118,55,57,54,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,40),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,55,55,48,32,115,112,101,99,55,55,49,32,98,111,100,121,55,55,50,41};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,30),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,56,52,56,32,120,56,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,56,53,48,41,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,56,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,56,53,54,41,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,56,53,57,41,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,56,54,50,41,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,29),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,56,54,51,32,120,56,54,52,41,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,56,54,53,41,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,56,54,56,41,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,56,55,49,41,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,12),40,100,111,56,55,54,32,97,56,55,56,41,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,26),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,56,55,52,41,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,12),40,100,111,56,56,56,32,108,56,57,48,41,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,38),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,56,56,54,32,97,99,99,101,115,115,111,114,56,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,37),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,56,56,51,32,99,108,97,117,115,101,115,56,56,52,41,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,111,112,63,32,120,56,57,52,32,111,112,115,56,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,56,57,54,41,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,28),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,56,57,55,32,118,97,108,56,57,56,41,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,15),40,100,111,57,50,48,32,116,97,105,108,57,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,15),40,100,111,57,49,53,32,116,97,105,108,57,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,17),40,100,111,57,48,53,32,104,57,48,55,32,108,57,48,56,41,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,36),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,56,57,57,32,102,111,114,109,115,57,48,48,32,97,114,103,115,57,48,49,41,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,38),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,57,51,52,32,99,108,97,117,115,101,115,57,51,53,32,111,112,115,57,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,100,111,57,53,52,32,110,101,120,116,57,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,48),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,57,52,48,32,99,108,97,117,115,101,115,57,52,49,32,111,112,115,57,52,50,41};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,8),40,97,49,48,50,51,57,41};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,30),40,97,49,48,50,53,55,32,99,108,97,117,115,101,49,48,51,53,32,105,103,110,111,114,101,49,48,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,49,48,51,50,32,99,108,97,117,115,101,115,49,48,51,51,32,111,112,115,49,48,51,52,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,17),40,100,111,49,48,53,51,32,110,101,120,116,49,48,53,53,41,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,48,51,56,32,99,108,97,117,115,101,115,49,48,51,57,32,111,112,115,49,48,52,48,41};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,17),40,100,111,49,49,50,48,32,110,101,120,116,49,49,50,50,41,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,49,49,48,32,99,108,97,117,115,101,115,49,49,49,49,32,111,112,115,49,49,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,26),40,100,111,49,49,53,56,32,110,101,101,100,49,49,54,48,32,110,101,120,116,49,49,54,49,41,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,49,49,52,56,32,99,108,97,117,115,101,115,49,49,52,57,32,111,112,115,49,49,53,48,41,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,8),40,100,111,49,50,48,50,41};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,49,49,57,51,32,99,108,97,117,115,101,115,49,49,57,52,32,111,112,115,49,49,57,53,41};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,49,50,49,50,32,99,108,97,117,115,101,115,49,50,49,51,32,111,112,115,49,50,49,52,41,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,49,50,50,54,32,99,108,97,117,115,101,115,49,50,50,55,32,111,112,115,49,50,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,49,50,57,51,32,116,121,112,101,49,50,57,52,32,97,99,99,49,50,57,53,32,104,101,97,100,49,50,57,54,41,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,49,50,57,55,41};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,49,50,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,14),40,100,111,49,50,52,53,32,97,49,50,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,14),40,100,111,49,50,53,51,32,99,49,50,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,49,50,55,50,32,99,108,97,117,115,101,115,49,50,55,51,32,111,112,115,49,50,55,52,41,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,49,51,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,49,51,55,52,32,99,108,97,117,115,101,115,49,51,55,53,32,111,112,115,49,51,55,54,41,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,49,51,57,53,32,99,108,97,117,115,101,115,49,51,57,54,32,111,112,115,49,51,57,55,41,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,49,52,49,49,32,99,108,97,117,115,101,115,49,52,49,50,32,111,112,115,49,52,49,51,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,8),40,97,49,50,49,51,48,41};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,20),40,97,49,50,49,52,51,32,97,49,52,51,56,32,98,49,52,51,57,41,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,38),40,100,111,49,52,51,49,32,111,112,49,52,51,51,32,99,108,97,117,115,101,49,52,51,52,32,114,101,109,97,105,110,115,49,52,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,49,52,50,53,32,99,108,97,117,115,101,115,49,52,50,54,32,111,112,115,49,52,50,55,41,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,8),40,97,49,50,50,57,52,41};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,20),40,97,49,50,51,48,56,32,97,49,52,54,55,32,98,49,52,54,56,41,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,8),40,97,49,50,51,55,50,41};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,20),40,97,49,50,51,55,56,32,97,49,52,54,52,32,98,49,52,54,53,41,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,49,52,53,49,32,99,108,97,117,115,101,115,49,52,53,50,32,111,112,115,49,52,53,51,41,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,49,52,57,52,32,116,121,112,101,49,52,57,53,41,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,8),40,97,49,50,53,50,48,41};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,20),40,97,49,50,53,50,57,32,97,49,53,48,55,32,98,49,53,48,56,41,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,47),40,100,111,49,52,57,56,32,111,112,49,53,48,48,32,99,108,97,117,115,101,49,53,48,49,32,114,101,109,97,105,110,115,49,53,48,50,32,98,111,100,121,49,53,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,49,53,50,48,32,102,111,114,109,115,49,53,50,49,32,111,112,115,49,53,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,53,57,48,32,108,101,110,103,116,104,49,53,57,49,32,115,116,114,101,97,109,49,53,57,50,32,100,101,102,97,117,108,116,49,53,57,51,32,111,109,105,116,49,53,57,52,32,114,101,112,115,49,53,57,53,41,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,57,55,32,118,97,108,49,53,57,56,41,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,54,48,48,41,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,54,48,54,41,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,54,49,50,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,54,50,49,32,118,97,108,49,54,50,50,41};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,54,50,52,41,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,54,51,48,41,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,54,53,53,41};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,54,53,57,41,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,54,54,50,32,118,97,108,49,54,54,51,41,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,54,54,53,41,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,54,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,54,55,52,32,118,97,108,49,54,55,53,41,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,54,55,55,41,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,54,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,54,56,54,32,118,97,108,49,54,56,55,41,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,15),40,102,95,49,51,49,55,54,32,120,49,54,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,54,57,50,32,118,97,108,49,54,57,51,41,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,54,57,53,41,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,55,51,52,32,118,97,108,49,55,51,53,41,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,55,51,55,41,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,14),40,97,49,51,53,53,56,32,120,49,55,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,55,53,54,32,100,97,116,97,49,55,53,55,32,102,111,114,49,55,53,56,32,114,101,112,49,55,53,57,32,102,108,97,103,115,49,55,54,48,32,108,101,110,49,55,54,49,32,100,112,101,114,49,55,54,50,32,103,101,116,114,49,55,54,51,32,109,97,112,114,49,55,54,52,41,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,55,57,49,41,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,55,57,50,41,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,20),40,100,111,49,55,57,55,32,105,49,55,57,57,32,101,49,56,48,48,41,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,48,52,32,110,49,56,48,54,32,101,49,56,48,55,32,102,49,56,48,56,41,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,55,57,51,32,46,32,97,114,103,115,49,55,57,52,41,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,51,50,41};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,50,56,32,100,121,110,63,49,56,51,48,32,115,116,111,112,49,56,51,49,41,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,56,49,52,41};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,56,53,50,41,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,56,53,51,32,111,98,106,49,56,53,52,41,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,14),40,97,49,52,49,50,53,32,120,49,56,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,56,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,23),40,97,49,52,50,49,57,32,102,110,49,57,49,53,32,111,98,106,49,57,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,56,55,50,32,46,32,97,114,103,115,49,56,55,51,41};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,57,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,57,52,50,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,57,52,53,32,118,97,108,49,57,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,23),40,97,49,52,54,52,57,32,102,110,50,48,52,51,32,111,98,106,50,48,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,57,55,49,32,46,32,97,114,103,115,49,57,55,50,41,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,50,48,53,50,41,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,23),40,97,49,53,51,49,54,32,102,110,50,49,49,52,32,111,98,106,50,49,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,48,55,49,32,46,32,97,114,103,115,50,48,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,49,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,23),40,97,49,53,54,48,51,32,102,110,50,49,54,57,32,111,98,106,50,49,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,49,50,54,32,46,32,97,114,103,115,50,49,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,26),40,100,111,50,49,56,48,32,105,50,49,56,50,32,106,50,49,56,51,32,118,50,49,56,52,41,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,49,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,23),40,97,49,53,57,52,56,32,102,110,50,50,54,52,32,111,98,106,50,50,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,49,57,50,32,46,32,97,114,103,115,50,49,57,51,41,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,56,48,32,105,50,50,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,50,55,53,32,115,116,97,114,116,50,50,55,54,32,115,116,101,112,50,50,55,55,32,119,105,100,116,104,50,50,55,56,32,101,110,100,50,50,55,57,41,0,0,0,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,50,55,51,41,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,51,48,55,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,51,49,48,32,118,97,108,50,51,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,51,49,51,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,51,49,57,41,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,51,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,51,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,51,51,52,32,118,97,108,50,51,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,51,51,55,41,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,14),40,97,49,54,56,51,51,32,105,50,52,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,23),40,97,49,54,56,50,55,32,102,110,50,52,49,55,32,111,98,106,50,52,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,17),40,97,49,55,48,54,52,32,105,116,101,109,50,51,55,50,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,52,51,48,41,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,51,54,50,32,46,32,97,114,103,115,50,51,54,51,41,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,37),40,100,111,50,53,49,55,32,116,97,105,108,50,53,49,57,32,105,110,100,101,120,50,53,50,48,32,116,111,116,97,108,50,53,50,49,41,0,0,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,49,49,32,116,97,105,108,50,53,49,51,41,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,53,48,55,32,102,105,120,63,50,53,48,56,41,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,27),40,100,111,50,53,51,57,32,116,97,105,108,50,53,52,49,32,105,110,100,101,120,50,53,52,50,41,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,53,51,55,32,114,50,53,51,56,41,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,52,56,32,116,97,105,108,50,53,53,48,41,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,52,52,32,105,116,101,109,50,53,52,54,41,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,53,50,55,41,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,23),40,97,49,56,49,51,53,32,102,110,50,54,55,54,32,111,98,106,50,54,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,14),40,97,49,55,56,56,57,32,115,50,53,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,55,48,41};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,41),40,100,111,50,53,57,50,32,116,97,105,108,50,53,57,52,32,111,114,100,101,114,50,53,57,53,32,108,105,115,50,53,57,54,32,112,50,53,57,55,41,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,54,48,52,32,46,32,97,114,103,115,50,54,48,53,41,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,48,49,32,116,97,105,108,50,55,48,51,41,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,33),40,100,111,50,54,57,49,32,116,97,105,108,50,54,57,51,32,111,117,116,50,54,57,52,32,115,117,109,50,54,57,53,41,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,54,56,57,32,111,117,116,112,117,116,115,50,54,57,48,41,0,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,51,49,32,108,97,115,116,50,55,51,51,41,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,26),40,100,111,50,55,48,55,32,105,50,55,48,57,32,106,50,55,49,48,32,102,50,55,49,49,41,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,35),40,100,111,50,55,50,50,32,116,97,105,108,50,55,50,52,32,112,97,115,116,50,55,50,53,32,105,116,101,109,50,55,50,54,41,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,54,56,54,41};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,55,53,49,41};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,14),40,97,49,57,48,48,55,32,110,50,56,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,23),40,97,49,57,48,48,49,32,102,110,50,56,49,53,32,111,98,106,50,56,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,28),40,97,49,57,50,53,51,32,105,116,101,109,50,56,50,55,32,46,32,97,114,103,115,50,56,50,56,41,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,56,50,54,41,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,55,55,50,32,46,32,97,114,103,115,50,55,55,51,41};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,56,49,32,116,97,105,108,50,56,56,51,41,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,56,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,14),40,97,49,57,54,56,48,32,120,50,57,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,25),40,100,111,55,48,57,32,116,97,105,108,55,49,49,32,120,55,49,50,32,102,55,49,51,41,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,57,52,52,32,110,101,120,116,50,57,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,14),40,97,49,57,55,50,56,32,122,50,57,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,14),40,97,49,57,55,51,56,32,122,50,57,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,57,52,57,32,121,50,57,53,48,32,108,50,57,53,49,41,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,16),40,97,49,57,56,51,54,32,114,111,119,51,48,56,49,41};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,53,52,32,105,51,48,53,54,32,109,51,48,53,55,41,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,52,53,32,108,51,48,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,51,56,32,105,51,48,52,48,32,109,51,48,52,49,41,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,51,50,32,105,51,48,51,52,32,109,51,48,51,53,41,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,53,56,32,120,50,57,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,50,54,32,116,97,105,108,51,48,50,56,41,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,49,54,32,105,51,48,49,56,32,109,51,48,49,57,41,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,49,49,32,108,51,48,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,48,54,32,105,51,48,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,20),40,97,50,48,49,53,55,32,120,51,48,48,50,32,121,51,48,48,51,41,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,57,51,32,101,50,57,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,56,55,32,101,50,57,56,57,32,115,50,57,57,48,41,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,25),40,100,111,50,57,55,57,32,116,97,105,108,50,57,56,49,32,108,101,110,50,57,56,50,41,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,20),40,97,50,48,51,48,54,32,120,50,57,55,55,32,121,50,57,55,56,41,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,29),40,100,111,50,57,54,54,32,112,114,101,118,50,57,54,56,32,106,50,57,54,57,32,120,50,57,55,48,41,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,54,51,32,105,50,57,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,56,56,57,32,46,32,97,114,103,115,50,56,57,48,41,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,97,50,48,54,52,52,32,122,51,49,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,51),40,114,101,115,99,97,108,101,32,120,51,49,50,53,32,120,49,51,49,50,54,32,120,50,51,49,50,55,32,121,49,51,49,50,56,32,121,50,51,49,50,57,32,46,32,98,51,49,51,48,41,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,14),40,97,50,48,54,56,52,32,122,51,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,97,50,48,55,49,48,32,122,51,49,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,48),40,100,105,115,99,114,101,116,101,32,120,51,49,51,50,32,120,49,51,49,51,51,32,120,50,51,49,51,52,32,105,49,51,49,51,53,32,46,32,97,114,103,115,51,49,51,54,41};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,11),40,105,110,116,32,102,51,49,52,54,41,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,48,52,32,120,51,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,13),40,102,108,111,97,116,32,110,51,49,52,55,41,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,13),40,108,111,103,49,48,32,110,51,49,52,57,41,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,12),40,108,111,103,50,32,110,51,49,53,48,41,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,54,57,32,120,51,49,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,17),40,112,108,117,115,32,46,32,97,114,103,115,51,49,53,49,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,14),40,97,50,48,57,51,56,32,120,51,49,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,18),40,116,105,109,101,115,32,46,32,97,114,103,115,51,49,53,51,41,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,50,48,57,57,51,32,120,51,49,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,26),40,109,105,110,117,115,32,97,114,103,51,49,53,53,32,46,32,97,114,103,115,51,49,53,54,41,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,14),40,97,50,49,48,51,54,32,120,51,49,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,27),40,100,105,118,105,100,101,32,97,114,103,51,49,53,56,32,46,32,97,114,103,115,51,49,53,57,41,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,14),40,97,50,49,48,54,49,32,110,51,49,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,28),40,113,117,97,110,116,105,122,101,32,110,117,109,51,49,54,49,32,115,116,101,112,115,51,49,54,50,41,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,14),40,97,50,49,48,56,53,32,118,51,49,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,31),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,51,49,54,52,32,112,108,97,99,101,115,51,49,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,14),40,97,50,49,49,51,49,32,120,51,50,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,38),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,49,54,56,32,46,32,97,114,103,115,51,49,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,22),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,51,50,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,51,50,49,52,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,50,51,32,116,97,105,108,51,50,50,53,41,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,35),40,105,110,116,101,114,112,49,32,120,51,50,49,53,32,99,111,111,114,100,115,51,50,49,54,32,98,97,115,101,51,50,49,55,41,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,25),40,105,110,116,101,114,112,32,120,51,50,51,51,32,46,32,97,114,103,115,51,50,51,52,41,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,44),40,116,101,110,100,101,110,99,121,32,120,51,50,51,54,32,108,111,119,51,50,51,55,32,104,105,103,104,51,50,51,56,32,46,32,97,114,103,115,51,50,51,57,41,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,37),40,102,105,116,49,32,110,117,109,51,50,53,50,32,108,98,51,50,53,51,32,117,98,51,50,53,52,32,109,111,100,101,51,50,53,53,41,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,14),40,97,50,49,55,48,49,32,110,51,50,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,38),40,102,105,116,32,110,117,109,51,50,52,53,32,108,98,51,50,52,54,32,117,98,51,50,52,55,32,46,32,109,111,100,101,51,50,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,32),40,100,111,51,50,55,50,32,105,51,50,55,52,32,107,51,50,55,53,32,108,51,50,55,54,32,116,51,50,55,55,41};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,37),40,115,99,97,108,101,32,108,101,110,51,50,54,52,32,107,101,121,110,117,109,51,50,54,53,32,46,32,97,114,103,115,51,50,54,54,41,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,57,53,32,105,51,50,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,49,49,32,116,97,105,108,51,51,49,51,41,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,20),40,100,111,51,51,48,55,32,105,51,51,48,57,32,110,51,51,49,48,41,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,33),40,115,101,103,115,32,110,117,109,51,50,56,52,32,115,117,109,51,50,56,53,32,46,32,97,114,103,115,51,50,56,54,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,110,117,109,51,51,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,21),40,98,101,116,119,101,101,110,32,97,51,51,50,53,32,98,51,51,50,54,41,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,17),40,112,105,99,107,32,46,32,97,114,103,115,51,51,50,55,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,33),40,118,97,114,121,49,32,118,97,108,51,51,55,53,32,118,97,114,105,51,51,55,54,32,109,111,100,101,51,51,55,55,41,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,14),40,97,50,50,52,51,55,32,118,51,51,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,34),40,118,97,114,121,32,118,97,108,51,51,55,49,32,118,97,114,105,51,51,55,50,32,46,32,109,111,100,101,51,51,55,51,41,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,56,56,32,105,51,51,57,48,32,106,51,51,57,49,32,118,51,51,57,50,41,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,16),40,115,104,117,102,102,108,101,33,32,108,51,51,56,54,41};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,20),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,51,51,57,55,41,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,20),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,51,57,56,41,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,19),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,52,52,49,41,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,52,52,50,41,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,23),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,52,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,52,52,52,41,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,44),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,51,52,56,54,32,111,99,116,51,52,56,55,32,101,114,114,51,52,56,56,41,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,37),40,110,111,116,101,45,97,117,120,32,102,114,101,113,51,53,48,48,32,100,111,99,116,51,53,48,49,32,101,114,114,63,51,53,48,50,41,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,48,53,32,116,97,105,108,51,53,48,55,32,100,101,102,111,51,53,48,56,32,116,104,105,115,51,53,48,57,32,114,101,115,108,51,53,49,48,41,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,15),40,110,111,116,101,32,102,114,101,113,51,53,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,49,57,32,116,97,105,108,51,53,50,49,32,100,101,102,111,51,53,50,50,32,116,104,105,115,51,53,50,51,32,114,101,115,108,51,53,50,52,41,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,14),40,107,101,121,32,102,114,101,113,51,53,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,51,53,32,116,97,105,108,51,53,51,55,32,100,101,102,111,51,53,51,56,32,116,104,105,115,51,53,51,57,32,114,101,115,108,51,53,52,48,41,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,13),40,104,122,32,102,114,101,113,51,53,51,51,41,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,10),40,112,99,32,120,51,53,52,57,41,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,26),40,100,111,51,53,53,53,32,116,97,105,108,51,53,53,55,32,108,97,115,116,51,53,53,56,41,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,18),40,105,110,118,107,101,121,115,32,107,101,121,115,51,53,53,50,41,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,14),40,97,50,51,53,50,56,32,122,51,53,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,14),40,105,110,118,101,114,116,32,120,51,53,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,26),40,100,111,51,53,55,48,32,116,97,105,108,51,53,55,50,32,108,97,115,116,51,53,55,51,41,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,30),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,51,53,54,55,32,111,114,105,103,51,53,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,14),40,97,50,51,54,56,49,32,122,51,53,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,23),40,116,114,97,110,115,112,111,115,101,32,120,51,53,54,51,32,121,51,53,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,20),40,97,50,51,55,52,52,32,97,51,53,56,48,32,98,51,53,56,49,41,0,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,20),40,97,50,51,56,48,50,32,97,51,53,56,50,32,98,51,53,56,51,41,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,51,53,55,56,32,46,32,109,111,100,101,51,53,55,57,41,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,31),40,114,115,121,109,32,112,114,101,51,53,56,57,32,114,97,119,51,53,57,48,32,112,111,115,116,51,53,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,25),40,97,100,100,114,121,116,104,32,115,116,114,51,53,57,50,32,118,97,108,51,53,57,51,41,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,22),40,100,111,51,54,51,49,32,111,112,115,51,54,51,51,32,105,51,54,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,41),40,110,101,120,116,45,116,111,107,101,110,45,115,116,97,114,116,32,115,116,114,51,54,50,56,32,108,98,51,54,50,57,32,108,101,110,51,54,51,48,41,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,45),40,100,111,51,54,52,49,32,110,117,109,51,54,52,51,32,118,97,108,51,54,52,52,32,116,111,107,51,54,52,53,32,111,112,51,54,52,54,32,105,51,54,52,55,41,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,14),40,97,50,51,57,53,56,32,120,51,54,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,27),40,114,104,121,116,104,109,32,118,97,108,51,54,49,51,32,46,32,97,114,103,115,51,54,49,52,41,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,26),40,105,110,45,116,101,109,112,111,32,110,51,54,54,55,32,116,101,109,112,111,51,54,54,56,41,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,115,116,114,51,54,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,24),40,112,97,116,104,110,97,109,101,45,116,121,112,101,32,112,97,116,104,51,56,48,50,41};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,24),40,102,117,108,108,45,112,97,116,104,110,97,109,101,32,112,97,116,104,51,56,48,54,41};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,52),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,51,56,56,49,32,115,105,122,101,51,56,56,50,32,102,114,101,113,115,51,56,56,51,32,97,109,112,115,51,56,56,52,41,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,17),40,115,112,101,99,116,114,117,109,63,32,120,51,56,56,53,41,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,51,56,56,57,41,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,51,56,57,50,32,118,97,108,51,56,57,51,41,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,51,56,57,53,41,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,35),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,51,56,57,56,32,118,97,108,51,56,57,57,41,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,22),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,51,57,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,51,57,48,52,32,118,97,108,51,57,48,53,41,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,51,57,48,55,41,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,51,57,49,53,41,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,50,50,32,105,51,57,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,51,57,49,54,41,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,51,57,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,51,57,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,14),40,97,50,53,52,48,51,32,97,51,57,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,51,57,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,14),40,97,50,53,52,51,52,32,97,51,57,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,51,57,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,8),40,100,111,51,57,54,48,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,8),40,100,111,51,57,54,53,41};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,14),40,103,101,116,107,101,121,32,104,51,57,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,11),40,97,100,100,32,107,51,57,55,48,41,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,14),40,97,100,100,107,101,121,32,104,51,57,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,20),40,97,100,100,117,110,105,113,117,101,107,101,121,32,104,51,57,55,51,41,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,22),40,100,111,54,55,53,32,105,54,55,55,32,106,54,55,56,32,116,54,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,20),40,97,50,53,54,52,54,32,97,51,57,55,55,32,98,51,57,55,56,41,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,20),40,97,50,53,54,54,49,32,97,51,57,55,57,32,98,51,57,56,48,41,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,51,57,56,56,32,46,32,97,114,103,115,51,57,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,35),40,100,111,52,50,52,55,32,116,97,105,108,52,50,52,57,32,115,105,122,101,52,50,53,48,32,97,109,112,108,52,50,53,49,41,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,50,53,32,105,52,50,50,55,32,102,52,50,50,56,32,120,52,50,50,57,41,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,24),40,100,111,52,50,49,57,32,110,101,103,52,50,50,49,32,112,111,115,52,50,50,50,41};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,48,55,32,107,52,50,48,57,32,102,52,50,49,48,32,97,52,50,49,49,41,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,52,49,57,57,32,109,114,97,116,105,111,52,50,48,48,32,105,110,100,101,120,52,50,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,47),40,100,111,52,50,56,53,32,102,114,101,113,115,52,50,56,55,32,97,109,112,115,52,50,56,56,32,108,97,115,116,102,52,50,56,57,32,108,97,115,116,97,52,50,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,52,50,56,50,32,102,114,101,113,52,50,56,51,32,97,109,112,52,50,56,52,41,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,52,51,49,50,41};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,52,51,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,52,51,49,52,32,102,49,52,51,49,53,32,102,50,52,51,49,55,41,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,50,56,32,108,49,52,51,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,50,53,32,108,50,52,51,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,51,53,32,108,49,52,51,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,52,48,32,115,50,52,51,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,52,51,48,55,32,115,112,101,99,50,52,51,48,56,41,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,44),40,100,111,52,51,52,55,32,109,97,120,102,52,51,52,57,32,109,105,110,102,52,51,53,48,32,116,97,105,108,52,51,53,49,32,102,108,105,112,52,51,53,50,41,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,52,51,52,54,41,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,54,54,32,116,97,105,108,52,51,54,56,41,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,55,49,32,116,97,105,108,52,51,55,51,41,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,54,57,32,116,97,105,108,52,50,55,49,32,97,109,112,108,52,50,55,50,41,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,20),40,97,50,55,53,51,49,32,97,52,50,54,53,32,98,52,50,54,54,41,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,20),40,97,50,55,53,52,53,32,97,52,50,54,51,32,98,52,50,54,52,41,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,57,51,32,116,97,105,108,52,51,57,53,41,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,57,56,32,116,97,105,108,52,52,48,48,41,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,56,52,32,116,97,105,108,52,51,56,54,41,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,23),40,100,111,55,50,48,32,116,97,105,108,55,50,50,32,102,108,97,103,55,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,52,51,53,54,32,109,111,100,101,52,51,53,55,32,46,32,97,114,103,115,52,51,53,56,41};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,52,52,51,57,41,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,52,52,49,56,41,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,50,49,32,105,52,52,50,51,32,97,52,52,50,52,32,102,52,52,50,53,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,53,50,32,108,105,110,101,52,52,53,52,32,115,112,101,99,52,52,53,53,41,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,8),40,100,111,52,52,52,50,41};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,8),40,97,50,56,53,50,54,41};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,52,52,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,36),40,100,111,52,52,55,55,32,102,114,101,113,115,52,52,55,57,32,97,109,112,115,52,52,56,48,32,115,105,122,101,52,52,56,49,41,0,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,27),40,100,111,52,52,55,49,32,116,97,105,108,52,52,55,51,32,99,111,117,110,116,52,52,55,52,41,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,8),40,97,50,56,54,54,49,41};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,54,53,32,116,97,105,108,52,52,54,55,41,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,41),40,101,120,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,114,97,109,101,115,52,52,54,49,32,102,105,108,101,52,52,54,50,41,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,52,53,49,50,32,115,116,114,105,110,103,52,53,49,51,32,112,111,115,105,116,105,111,110,52,53,49,52,41,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,52,53,49,57,41,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,52,53,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,52,53,51,56,41,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,52,53,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,52,53,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,52,53,52,50,32,116,121,112,101,52,53,52,51,32,112,97,116,116,101,114,110,52,53,52,52,32,112,97,114,115,101,114,52,53,52,53,32,101,109,105,116,101,114,52,53,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,18),40,103,101,116,45,114,117,108,101,32,116,121,112,52,53,57,51,41,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,52,53,57,56,41,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,52,53,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,52,54,48,49,41,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,52,54,48,50,41,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,52,54,48,51,32,105,52,54,48,52,41,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,52,54,48,56,41,0,0,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,52,54,49,48,32,112,111,115,105,116,105,111,110,52,54,49,49,41,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,52,54,50,56,32,112,97,114,115,101,100,52,54,50,57,32,112,111,115,105,116,105,111,110,52,54,51,48,41,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,52,54,51,49,41,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,52,54,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,52,54,52,49,41,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,52,54,52,55,41,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,52,54,53,52,41,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,52,54,53,53,32,116,121,112,52,54,53,54,41,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,54,53,56,32,105,110,102,111,52,54,53,57,41,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,54,54,49,32,100,97,116,97,52,54,54,50,32,105,110,102,111,52,54,54,51,41,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,52,54,55,52,32,100,97,116,97,52,54,55,53,32,105,110,102,111,52,54,55,54,41,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,52,54,55,57,32,105,110,102,111,52,54,56,48,32,101,114,114,102,52,54,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,52,54,56,50,32,105,110,102,111,52,54,56,51,32,101,114,114,102,52,54,56,52,41,0,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,52,54,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,27),40,102,95,50,57,55,48,48,32,97,114,103,115,52,54,57,55,32,101,114,114,102,52,54,57,56,41,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,52,54,57,54,41,0,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,17),40,100,111,52,55,48,54,32,116,97,105,108,52,55,48,56,41,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,36),40,102,95,50,57,55,48,56,32,117,110,105,116,52,55,48,48,32,105,110,102,111,52,55,48,49,32,101,114,114,102,52,55,48,50,41,0,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,52,54,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,8),40,97,50,57,57,48,54,41};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,26),40,97,50,57,57,49,54,32,97,52,55,51,56,32,98,52,55,51,57,32,99,52,55,52,48,41,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,8),40,97,51,48,48,49,50,41};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,26),40,97,51,48,48,50,54,32,97,52,55,53,52,32,98,52,55,53,53,32,99,52,55,53,54,41,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,14),40,100,111,52,55,52,57,32,105,52,55,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,8),40,97,51,48,48,55,57,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,26),40,97,51,48,48,57,51,32,97,52,55,55,54,32,98,52,55,55,55,32,99,52,55,55,56,41,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,14),40,100,111,52,55,55,49,32,105,52,55,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,8),40,97,51,48,49,54,56,41};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,26),40,97,51,48,49,55,52,32,97,52,55,57,53,32,98,52,55,57,54,32,99,52,55,57,55,41,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,8),40,100,111,52,55,57,49,41};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,8),40,97,51,48,50,48,55,41};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,26),40,97,51,48,50,49,51,32,97,52,56,49,51,32,98,52,56,49,52,32,99,52,56,49,53,41,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,52,55,50,53,32,116,111,107,101,110,115,52,55,50,54,32,102,111,114,99,101,45,97,110,100,52,55,50,55,32,108,101,118,101,108,52,55,50,56,32,116,114,97,99,101,52,55,50,57,32,101,114,114,102,52,55,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,52,57,57,48,41,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,52,57,57,52,41,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,53,48,48,51,41,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,53,48,48,52,32,116,121,112,50,53,48,48,53,41,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,53,52,32,116,111,107,115,53,48,53,54,41,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,53,48,53,48,32,116,121,112,53,48,53,49,41,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,53,48,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,29),40,100,111,53,48,57,48,32,119,50,53,48,57,50,32,111,107,53,48,57,51,32,108,105,53,48,57,52,41,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,8),40,100,111,53,48,56,56,41};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,53,48,56,51,41,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,53,50,52,56,32,101,114,114,102,53,50,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,14),40,100,111,53,53,51,49,32,102,53,53,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,14),40,100,111,53,53,50,52,32,102,53,53,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,8),40,97,50,57,55,55,55,41};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,44),40,97,50,57,55,56,52,32,115,117,99,99,101,115,115,52,55,50,48,32,114,101,115,117,108,116,115,52,55,50,49,32,114,101,109,97,105,110,115,52,55,50,50,41,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,17),40,97,50,57,55,55,49,32,101,114,114,102,52,55,49,56,41,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,24),40,115,97,108,32,115,116,114,53,52,51,55,32,46,32,97,114,103,115,53,52,51,56,41};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,105,122,101,32,105,110,112,117,116,53,53,49,53,41,0,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,17),40,100,111,53,53,53,50,32,116,97,105,108,53,53,53,52,41,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,35),40,112,114,105,110,116,101,114,32,116,104,105,110,103,53,53,52,57,32,108,101,118,53,53,53,48,32,113,117,111,53,53,53,49,41,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,17),40,100,111,53,53,54,48,32,116,97,105,108,53,53,54,50,41,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,53,53,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,53,53,54,55,41,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,53,53,54,57,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,53,53,55,51,41,0,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,7),40,112,111,114,116,115,41,0,0,0,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,30),40,111,112,101,110,45,102,105,108,101,32,115,116,114,53,54,57,51,32,46,32,97,114,103,115,53,54,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,20),40,109,112,58,111,112,101,110,32,46,32,97,114,103,115,53,55,48,52,41,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,24),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,32,100,101,118,53,55,52,54,41};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,23),40,109,112,58,111,112,101,110,45,105,110,112,117,116,32,100,101,118,53,55,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,53,55,53,48,32,46,32,97,114,103,115,53,55,53,49,41,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,20),40,109,112,58,109,105,100,105,32,46,32,97,114,103,115,53,55,53,50,41,0,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,19),40,109,112,58,111,102,102,32,46,32,97,114,103,115,53,57,48,56,41,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,18),40,109,112,58,111,110,32,46,32,97,114,103,115,53,57,56,48,41,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,21),40,109,112,58,116,111,117,99,104,32,46,32,97,114,103,115,54,48,57,48,41,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,20),40,109,112,58,99,116,114,108,32,46,32,97,114,103,115,54,50,48,48,41,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,20),40,109,112,58,112,114,111,103,32,46,32,97,114,103,115,54,51,49,48,41,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,21),40,109,112,58,112,114,101,115,115,32,46,32,97,114,103,115,54,51,56,50,41,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,20),40,109,112,58,98,101,110,100,32,46,32,97,114,103,115,54,52,53,52,41,0,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,53,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,53,50,56,41,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,18),40,97,55,49,48,53,32,36,101,114,114,97,114,103,36,50,52,41,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,7),40,97,55,49,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,15),40,97,55,48,57,57,32,37,99,111,110,116,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,36),40,102,95,55,48,57,52,32,36,111,112,36,49,57,32,36,99,104,36,50,48,32,36,100,49,36,50,49,32,36,100,50,36,50,50,41,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,20),40,109,112,58,105,110,104,111,111,107,32,104,111,111,107,54,53,51,48,41,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,51,51,32,97,54,53,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,99,104,97,110,115,32,46,32,97,114,103,115,54,53,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,52,49,32,97,54,53,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,111,112,115,32,46,32,97,114,103,115,54,53,51,57,41,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,42),40,115,110,100,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,102,105,108,101,54,53,52,57,32,46,32,97,114,103,115,54,53,53,48,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,26),40,100,111,54,53,54,54,32,116,97,105,108,54,53,54,56,32,97,114,103,110,54,53,54,57,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,41),40,99,115,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,54,53,54,51,32,46,32,97,114,103,115,54,53,54,52,41,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,26),40,100,111,54,53,56,54,32,116,97,105,108,54,53,56,56,32,100,101,108,109,54,53,56,57,41,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,27),40,99,115,58,115,101,110,100,32,116,121,112,101,54,53,55,57,32,97,114,103,115,54,53,56,48,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,53,57,53,41,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,53,57,54,41,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,46),40,101,120,112,97,110,100,45,115,101,110,100,32,112,108,97,99,101,54,54,48,54,32,97,114,103,115,54,54,48,55,32,46,32,101,114,114,99,111,110,116,54,54,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,18),40,100,111,54,54,53,49,32,99,104,101,99,107,54,54,53,51,41,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,8),40,100,111,54,54,52,51,41};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,8),40,100,111,54,54,51,55,41};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,17),40,100,111,54,54,50,57,32,116,97,105,108,54,54,51,49,41,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,19),40,97,51,57,51,48,54,32,114,101,116,117,114,110,54,54,50,54,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,18),40,102,95,51,57,51,48,49,32,97,114,103,115,54,54,50,53,41,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,26),40,100,111,54,54,49,56,32,116,97,105,108,54,54,50,48,32,109,111,100,101,54,54,50,49,41,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,109,101,115,115,97,103,101,45,112,97,114,115,101,114,32,116,101,109,112,108,97,116,101,54,54,49,50,41,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,55,57,48,32,99,108,97,117,115,101,115,54,55,57,49,32,111,112,115,54,55,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,56,50,48,32,115,116,111,112,54,56,50,49,41,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,26),40,101,120,112,97,110,100,45,112,114,111,99,101,115,115,32,102,111,114,109,115,54,56,50,52,41,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,14),40,100,111,54,56,56,57,32,112,54,56,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,55,56,32,116,97,105,108,54,56,56,48,41,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,54,55,32,116,97,105,108,54,56,54,57,41,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,26),40,100,111,54,56,53,53,32,116,97,105,108,54,56,53,55,32,97,114,103,110,54,56,53,56,41,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,53,48,32,116,97,105,108,54,56,53,50,41,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,56,52,49,32,46,32,97,114,103,115,54,56,52,50,41,0,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,10),40,99,111,110,116,105,110,117,101,41,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,17),40,100,111,54,57,48,49,32,116,97,105,108,54,57,48,51,41,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,57,48,48,41,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,31),40,97,52,48,54,52,48,32,102,111,114,109,97,108,115,54,56,51,56,32,46,32,98,111,100,121,54,56,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,17),40,97,52,48,54,54,57,32,97,114,103,115,54,56,51,55,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,16),40,100,111,54,56,49,51,32,111,112,115,54,56,49,53,41};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,25),40,97,52,48,57,49,52,32,109,115,103,54,54,48,51,32,112,97,114,115,54,54,48,52,41,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,29),40,97,52,48,57,52,51,32,112,108,97,99,101,54,54,48,49,32,46,32,97,114,103,115,54,54,48,50,41,0,0,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,26),40,97,52,48,57,53,55,32,97,114,103,115,53,52,51,50,32,101,114,114,102,53,52,51,51,41,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,35),40,97,52,48,57,55,49,32,117,110,105,116,53,52,51,52,32,105,110,102,111,53,52,51,53,32,101,114,114,102,53,52,51,54,41,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,26),40,97,52,49,48,55,55,32,97,114,103,115,53,51,56,49,32,101,114,114,102,53,51,56,50,41,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,57,51,32,114,101,115,116,53,51,57,53,41,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,26),40,100,111,53,52,49,57,32,97,114,103,115,53,52,50,49,32,116,97,105,108,53,52,50,50,41,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,35),40,97,52,49,49,49,54,32,117,110,105,116,53,51,56,54,32,105,110,102,111,53,51,56,55,32,101,114,114,102,53,51,56,56,41,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,26),40,97,52,49,53,51,52,32,97,114,103,115,53,51,55,52,32,101,114,114,102,53,51,55,53,41,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,26),40,97,52,49,54,55,57,32,97,114,103,115,53,51,54,48,32,101,114,114,102,53,51,54,49,41,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,51,57,32,116,97,105,108,53,51,52,49,41,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,51,50,32,116,97,105,108,53,51,51,52,41,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,20),40,100,111,53,51,50,49,32,99,108,97,117,115,101,115,53,51,50,51,41,0,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,49,56,32,116,97,105,108,53,51,50,48,41,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,35),40,97,52,49,55,50,53,32,117,110,105,116,53,51,55,48,32,105,110,102,111,53,51,55,49,32,101,114,114,102,53,51,55,50,41,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,26),40,97,52,50,49,55,57,32,97,114,103,115,53,50,51,50,32,101,114,114,102,53,50,51,51,41,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,35),40,97,52,50,50,52,55,32,117,110,105,116,53,50,52,52,32,105,110,102,111,53,50,52,53,32,101,114,114,102,53,50,52,54,41,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,26),40,97,52,50,52,51,56,32,97,114,103,115,53,50,50,48,32,101,114,114,102,53,50,50,49,41,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,35),40,97,52,50,52,54,52,32,117,110,105,116,53,50,50,53,32,105,110,102,111,53,50,50,54,32,101,114,114,102,53,50,50,55,41,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,26),40,97,52,50,53,53,50,32,97,114,103,115,53,49,57,56,32,101,114,114,102,53,49,57,57,41,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,48,54,32,105,116,101,114,53,50,48,56,41,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,35),40,97,52,50,53,57,53,32,117,110,105,116,53,50,48,48,32,105,110,102,111,53,50,48,49,32,101,114,114,102,53,50,48,50,41,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,26),40,97,52,50,56,51,50,32,97,114,103,115,53,49,57,53,32,101,114,114,102,53,49,57,54,41,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,26),40,97,52,50,57,49,56,32,97,114,103,115,53,49,56,55,32,101,114,114,102,53,49,56,56,41,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,14),40,97,52,50,57,55,48,32,101,53,49,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,35),40,97,52,50,57,54,49,32,117,110,105,116,53,49,56,57,32,105,110,102,111,53,49,57,48,32,101,114,114,102,53,49,57,49,41,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,26),40,97,52,51,48,50,48,32,97,114,103,115,53,49,56,48,32,101,114,114,102,53,49,56,49,41,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,14),40,97,52,51,48,54,49,32,101,53,49,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,35),40,97,52,51,48,53,53,32,117,110,105,116,53,49,56,50,32,105,110,102,111,53,49,56,51,32,101,114,114,102,53,49,56,52,41,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,35),40,97,52,51,49,49,53,32,117,110,105,116,53,49,55,51,32,105,110,102,111,53,49,55,52,32,101,114,114,102,53,49,55,53,41,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,35),40,97,52,51,49,55,54,32,117,110,105,116,53,49,54,55,32,105,110,102,111,53,49,54,56,32,101,114,114,102,53,49,54,57,41,0,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,26),40,97,52,51,50,51,48,32,97,114,103,115,53,49,54,49,32,101,114,114,102,53,49,54,50,41,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,35),40,97,52,51,50,54,48,32,117,110,105,116,53,49,54,51,32,105,110,102,111,53,49,54,52,32,101,114,114,102,53,49,54,53,41,0,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,26),40,97,52,51,52,55,57,32,97,114,103,115,53,49,53,52,32,101,114,114,102,53,49,53,53,41,0,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,26),40,97,52,51,53,48,53,32,97,114,103,115,53,49,52,50,32,101,114,114,102,53,49,52,51,41,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,16),40,97,52,51,54,48,48,32,115,116,114,53,49,53,50,41};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,35),40,97,52,51,53,56,48,32,117,110,105,116,53,49,52,55,32,105,110,102,111,53,49,52,56,32,101,114,114,102,53,49,52,57,41,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,26),40,97,52,51,55,49,52,32,97,114,103,115,53,49,51,53,32,101,114,114,102,53,49,51,54,41,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,35),40,97,52,51,55,52,56,32,117,110,105,116,53,49,51,55,32,105,110,102,111,53,49,51,56,32,101,114,114,102,53,49,51,57,41,0,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,26),40,97,52,51,56,50,53,32,97,114,103,115,53,49,50,49,32,101,114,114,102,53,49,50,50,41,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,50,56,32,97,114,103,115,53,49,51,48,41,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,35),40,97,52,51,56,52,55,32,117,110,105,116,53,49,50,51,32,105,110,102,111,53,49,50,52,32,101,114,114,102,53,49,50,53,41,0,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,26),40,97,52,51,57,55,57,32,97,114,103,115,53,49,49,52,32,101,114,114,102,53,49,49,53,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,35),40,97,52,52,48,48,53,32,117,110,105,116,53,49,49,54,32,105,110,102,111,53,49,49,55,32,101,114,114,102,53,49,49,56,41,0,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,26),40,97,52,52,49,49,53,32,97,114,103,115,53,49,49,48,32,101,114,114,102,53,49,49,49,41,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,97,52,52,50,55,49,32,97,114,103,115,53,48,55,51,32,101,114,114,102,53,48,55,52,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,35),40,97,52,52,50,56,57,32,117,110,105,116,53,48,55,53,32,105,110,102,111,53,48,55,54,32,101,114,114,102,53,48,55,55,41,0,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,26),40,97,52,52,51,52,50,32,97,114,103,115,53,48,54,55,32,101,114,114,102,53,48,54,56,41,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,52,52,52,57,52,32,97,114,103,115,53,48,54,52,32,101,114,114,102,53,48,54,53,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,26),40,97,52,52,54,51,51,32,97,114,103,115,53,48,54,49,32,101,114,114,102,53,48,54,50,41,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,26),40,97,52,52,55,53,51,32,97,114,103,115,53,48,52,48,32,101,114,114,102,53,48,52,49,41,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,35),40,97,52,52,55,56,52,32,117,110,105,116,53,48,52,51,32,105,110,102,111,53,48,52,52,32,101,114,114,102,53,48,52,53,41,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,26),40,97,52,52,56,55,54,32,97,114,103,115,53,48,51,52,32,101,114,114,102,53,48,51,53,41,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,35),40,97,52,52,56,57,52,32,117,110,105,116,53,48,51,54,32,105,110,102,111,53,48,51,55,32,101,114,114,102,53,48,51,56,41,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,17),40,100,111,52,54,54,56,32,100,97,116,97,52,54,55,48,41,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,35),40,97,52,52,57,54,56,32,117,110,105,116,53,48,50,51,32,105,110,102,111,53,48,50,52,32,101,114,114,102,53,48,50,53,41,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,26),40,97,52,53,48,54,56,32,97,114,103,115,53,48,49,49,32,101,114,114,102,53,48,49,50,41,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,35),40,97,52,53,48,55,56,32,117,110,105,116,53,48,49,51,32,105,110,102,111,53,48,49,52,32,101,114,114,102,53,48,49,53,41,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,52,53,56,57,41,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,35),40,97,52,53,50,53,52,32,116,121,112,52,53,56,53,32,112,97,116,52,53,56,54,32,46,32,97,114,103,115,52,53,56,55,41,0,0,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,17),40,97,52,53,51,53,55,32,101,120,112,114,51,54,54,57,41,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,32),40,100,111,51,53,57,57,32,105,51,54,48,49,32,120,51,54,48,50,32,100,51,54,48,51,32,114,51,54,48,52,41};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,14),40,97,52,53,51,54,51,32,101,51,53,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,84),40,100,111,51,52,53,52,32,100,51,52,53,54,32,107,51,52,53,55,32,112,51,52,53,56,32,107,60,51,52,53,57,32,107,62,51,52,54,48,32,102,51,52,54,49,32,102,62,51,52,54,50,32,102,60,51,52,54,51,32,111,51,52,54,52,32,120,51,52,54,53,32,110,51,52,54,54,32,101,51,52,54,55,41,0,0,0,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,16),40,100,111,51,52,52,56,32,107,101,121,51,52,53,48,41};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,17),40,97,52,53,54,56,54,32,97,114,103,115,49,53,51,51,41,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,15),40,97,52,53,56,50,56,32,115,121,109,56,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,15),40,97,52,53,56,51,49,32,115,121,109,56,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,22),40,97,52,53,56,54,48,32,118,97,108,56,52,50,32,115,121,109,56,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,16),40,97,52,53,56,55,52,32,97,114,103,115,56,52,49,41};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,26),40,97,52,53,56,56,48,32,115,112,101,99,56,48,54,32,46,32,98,111,100,121,56,48,55,41,0,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k8023 */
static C_word C_fcall stub533(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub533(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_xml(t0);
return C_r;}

/* from ffi_fms_run */
static C_word C_fcall stub530(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub530(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_run();
return C_r;}

/* from k8006 */
static C_word C_fcall stub525(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub525(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_load(t0);
return C_r;}

/* from k7999 */
static C_word C_fcall stub520(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub520(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
fms_act(t0,t1);
return C_r;}

/* from k7981 */
static C_word C_fcall stub511(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub511(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
char * t2=(char * )C_string_or_null(C_a2);
fms_sval(t0,t1,t2);
return C_r;}

/* from k7966 */
static C_word C_fcall stub503(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub503(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
fms_fval(t0,t1,t2);
return C_r;}

/* from k7951 */
static C_word C_fcall stub493(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub493(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
fms_mval(t0,t1,t2,t3,t4);
return C_r;}

/* from k7928 */
static C_word C_fcall stub482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
fms_rval(t0,t1,t2,t3);
return C_r;}

/* from k7909 */
static C_word C_fcall stub473(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub473(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
fms_ival(t0,t1,t2);
return C_r;}

/* from ffi_fms_clear */
static C_word C_fcall stub468(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub468(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_clear();
return C_r;}

/* from ffi_fms_free */
static C_word C_fcall stub466(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub466(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_free();
return C_r;}

/* from ffi_fms_new */
static C_word C_fcall stub464(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub464(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_new();
return C_r;}

/* from ffi_fms_init */
static C_word C_fcall stub462(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub462(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_init();
return C_r;}

/* from k7875 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
char * t3=(char * )C_string_or_null(C_a3);
cs_send_score(t0,t1,t2,t3);
return C_r;}

/* from k7849 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub445(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub445(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cs_init_score(t0);
return C_r;}

/* from ffi_mp_clear_midi_input_hook */
static C_word C_fcall stub442(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub442(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_midi_input_hook();
return C_r;}

/* from ffi_mp_set_midi_input_hook */
static C_word C_fcall stub439(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub439(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
mp_set_midi_input_hook(t0);
return C_r;}

/* from ffi_mp_clear_seq */
static C_word C_fcall stub436(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub436(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_seq();
return C_r;}

/* from ffi_mp_plot_seq */
static C_word C_fcall stub434(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub434(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plot_seq();
return C_r;}

/* from ffi_mp_copy_seq */
static C_word C_fcall stub432(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub432(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copy_seq();
return C_r;}

/* from ffi_mp_save_seq */
static C_word C_fcall stub430(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub430(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_save_seq();
return C_r;}

/* from ffi_mp_play_seq */
static C_word C_fcall stub428(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub428(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_play_seq();
return C_r;}

/* from k7821 */
static C_word C_fcall stub425(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub425(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_tuning(t0);
return C_r;}

/* from k7814 */
static C_word C_fcall stub421(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub421(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_message_mask(t0);
return C_r;}

/* from k7807 */
static C_word C_fcall stub417(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub417(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_channel_mask(t0);
return C_r;}

/* from k7800 */
static C_word C_fcall stub409(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub409(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
mp_send_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k7777 */
static C_word C_fcall stub397(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub397(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
mp_send_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k7747 in mp:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub387(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub387(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
mp_set_output_file(t0);
return C_r;}

/* from k7740 */
static C_word C_fcall stub383(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub383(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_input(t0);
return C_r;}

/* from k7733 */
static C_word C_fcall stub379(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub379(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_output(t0);
return C_r;}

/* from k7726 */
static C_word C_fcall stub375(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub375(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_input(t0));
return C_r;}

/* from k7719 */
static C_word C_fcall stub371(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub371(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_output(t0));
return C_r;}

/* from ffi_port_info */
static C_word C_fcall stub367(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub367(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_port_info());
return C_r;}

/* from k7699 in tokenize in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub361(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub361(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)sal_tokenize(t0));
return C_r;}

/* from k7681 */
static C_word C_fcall stub355(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub355(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_directory_p(t0));
return C_r;}

/* from k7667 in k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub349(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub349(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_writable_p(t0));
return C_r;}

/* from k7653 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub343(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub343(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_exists_p(t0));
return C_r;}

/* from k7639 in full-pathname in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub336(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub336(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_full_pathname(t0));
return C_r;}

/* from k7621 in ffi_pathname_type in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub329(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub329(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_type(t0));
return C_r;}

/* from k7603 */
static C_word C_fcall stub322(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub322(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_name(t0));
return C_r;}

/* from k7585 */
static C_word C_fcall stub315(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub315(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_directory(t0));
return C_r;}

/* from k7567 in chdir in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub309(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub309(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_set_current_directory(t0));
return C_r;}

/* from ffi_current_directory */
static C_word C_fcall stub305(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub305(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_current_directory());
return C_r;}

/* from ffi_temp_directory */
static C_word C_fcall stub302(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_temp_directory());
return C_r;}

/* from ffi_user_home_directory */
static C_word C_fcall stub299(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub299(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_user_home_directory());
return C_r;}

/* from ffi_sched_score_time in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub296(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_sched_score_time());
return C_r;}

/* from k7539 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_set_score_mode(t0);
return C_r;}

/* from ffi_sched_score_mode_p in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub290(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub290(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_score_mode_p());
return C_r;}

/* from ffi_sched_busy_p */
static C_word C_fcall stub288(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub288(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_busy_p());
return C_r;}

/* from k7526 */
static C_word C_fcall stub285(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub285(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_stop(t0);
return C_r;}

/* from ffi_sched_continue */
static C_word C_fcall stub282(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub282(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_continue();
return C_r;}

/* from ffi_sched_pause */
static C_word C_fcall stub280(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub280(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_pause();
return C_r;}

/* from ffi_sched_paused_p */
static C_word C_fcall stub278(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_paused_p());
return C_r;}

/* from k7510 */
static C_word C_fcall stub273(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub273(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
cm_sched_sprout(t0,t1,t2);
return C_r;}

/* from ffi_now */
static C_word C_fcall stub267(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub267(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_now());
return C_r;}

/* from k7496 */
static C_word C_fcall stub263(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub263(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_two(t0));
return C_r;}

/* from k7489 */
static C_word C_fcall stub258(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub258(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_ten(t0));
return C_r;}

/* from k7482 */
static C_word C_fcall stub252(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub252(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_bes_jn(t0,t1));
return C_r;}

/* from ffi_ranbrown in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub247(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub247(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranbrown());
return C_r;}

/* from ffi_ranpink in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub244(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub244(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranpink());
return C_r;}

/* from k7465 */
static C_word C_fcall stub241(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_ranpoisson(t0));
return C_r;}

/* from ffi_rancauchy in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub237(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_rancauchy());
return C_r;}

/* from k7455 */
static C_word C_fcall stub233(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub233(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_rangamma(t0));
return C_r;}

/* from k7448 */
static C_word C_fcall stub227(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub227(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranbeta(t0,t1));
return C_r;}

/* from k7437 */
static C_word C_fcall stub221(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub221(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranexp(t0));
return C_r;}

/* from k7430 */
static C_word C_fcall stub215(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub215(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_rangauss(t0,t1));
return C_r;}

/* from ffi_ranmiddle in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub210(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranmiddle());
return C_r;}

/* from ffi_ranhigh in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub207(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub207(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranhigh());
return C_r;}

/* from ffi_ranlow in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub204(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub204(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranlow());
return C_r;}

/* from k7410 */
static C_word C_fcall stub199(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub199(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranfloat2(t0,t1));
return C_r;}

/* from k7399 */
static C_word C_fcall stub193(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub193(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)cm_ranint2(t0,t1));
return C_r;}

/* from k7388 */
static C_word C_fcall stub187(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub187(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranfloat(t0));
return C_r;}

/* from k7381 */
static C_word C_fcall stub183(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub183(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)cm_ranint(t0));
return C_r;}

/* from ffi_ranseed in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub179(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub179(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
cm_ranseed(t0);
return C_r;}

/* from k7371 */
static C_word C_fcall stub174(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub174(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_hertz_to_keynum(t0));
return C_r;}

/* from k7364 */
static C_word C_fcall stub170(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub170(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_keynum_to_pc(t0));
return C_r;}

/* from k7357 */
static C_word C_fcall stub165(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub165(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_keynum_to_hertz(t0));
return C_r;}

/* from k7350 */
static C_word C_fcall stub157(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub157(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7331 */
static C_word C_fcall stub146(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub146(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_explseg(t0,t1,t2,t3));
return C_r;}

/* from k7312 */
static C_word C_fcall stub138(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub138(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_scaler_to_steps(t0));
return C_r;}

/* from k7305 */
static C_word C_fcall stub134(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub134(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_scaler_to_cents(t0));
return C_r;}

/* from k7298 */
static C_word C_fcall stub129(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub129(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,cm_cents_to_scaler(t0));
return C_r;}

/* from k7291 */
static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
C_r=C_flonum(&C_a,cm_rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7276 */
static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_quantize(t0,t1));
return C_r;}

/* from k7265 */
static C_word C_fcall stub109(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub109(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_float_to_fixnum(t0));
return C_r;}

/* from k7258 */
static C_word C_fcall stub100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
double t5=(double )C_c_double(C_a5);
C_r=C_fix((C_word)cm_discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7231 */
static C_word C_fcall stub85(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub85(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
double t5=(double )C_c_double(C_a5);
C_r=C_flonum(&C_a,cm_rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7197 */
static C_word C_fcall stub74(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub74(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_play(t0);
return C_r;}

/* from k7183 in shell in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub68(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub68(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_shell(t0);
return C_r;}

/* from k7169 */
static C_word C_fcall stub62(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub62(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_values(t0);
return C_r;}

/* from k7155 in ffi_print_output in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub55(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub55(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
int t1=(int )C_truep(C_a1);
cm_print_output(t0,t1);
return C_r;}

/* from k7141 in print-error in k7131 in k6948 in k6945 in k6942 in k6939 */
static C_word C_fcall stub48(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub48(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_error(t0);
return C_r;}

/* from ffi_quit */
static C_word C_fcall stub45(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub45(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_quit();
return C_r;}

C_noret_decl(C_cm_toplevel)
C_externexport void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6941)
static void C_ccall f_6941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6944)
static void C_ccall f_6944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6947)
static void C_ccall f_6947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6950)
static void C_ccall f_6950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7133)
static void C_ccall f_7133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45881)
static void C_ccall f_45881(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_45881)
static void C_ccall f_45881r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9239)
static void C_ccall f_9239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45875)
static void C_ccall f_45875(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12595)
static void C_ccall f_12595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12598)
static void C_ccall f_12598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12764)
static void C_ccall f_12764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12760)
static void C_ccall f_12760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12750)
static void C_fcall f_12750(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12605)
static void C_ccall f_12605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12609)
static void C_ccall f_12609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12612)
static void C_fcall f_12612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12623)
static void C_ccall f_12623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12631)
static void C_ccall f_12631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12703)
static void C_ccall f_12703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12711)
static void C_ccall f_12711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12707)
static void C_ccall f_12707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12699)
static void C_ccall f_12699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12695)
static void C_ccall f_12695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12667)
static void C_ccall f_12667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12663)
static void C_ccall f_12663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12627)
static void C_ccall f_12627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9242)
static void C_ccall f_9242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45861)
static void C_ccall f_45861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9245)
static void C_ccall f_9245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45832)
static void C_ccall f_45832(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45836)
static void C_ccall f_45836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9248)
static void C_ccall f_9248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45829)
static void C_ccall f_45829(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9251)
static void C_ccall f_9251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45687)
static void C_ccall f_45687(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12777)
static void C_ccall f_12777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12909)
static void C_ccall f_12909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12780)
static void C_ccall f_12780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12791)
static void C_ccall f_12791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12799)
static void C_ccall f_12799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12823)
static void C_ccall f_12823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12826)
static void C_fcall f_12826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12834)
static void C_ccall f_12834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12842)
static void C_ccall f_12842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12862)
static void C_ccall f_12862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12858)
static void C_ccall f_12858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12838)
static void C_ccall f_12838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12830)
static void C_ccall f_12830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12819)
static void C_ccall f_12819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12795)
static void C_ccall f_12795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12771)
static void C_ccall f_12771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22892)
static void C_ccall f_22892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45459)
static void C_fcall f_45459(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45685)
static void C_ccall f_45685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45493)
static void C_ccall f_45493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45505)
static void C_ccall f_45505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45509)
static void C_ccall f_45509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45513)
static void C_ccall f_45513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45669)
static void C_ccall f_45669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45519)
static void C_fcall f_45519(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_45539)
static void C_fcall f_45539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45542)
static void C_fcall f_45542(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45550)
static void C_ccall f_45550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45557)
static void C_ccall f_45557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45560)
static void C_ccall f_45560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45564)
static void C_ccall f_45564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45571)
static void C_ccall f_45571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45574)
static void C_ccall f_45574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45578)
static void C_ccall f_45578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45585)
static void C_ccall f_45585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45529)
static void C_ccall f_45529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45482)
static void C_ccall f_45482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45472)
static void C_ccall f_45472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45475)
static void C_ccall f_45475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22895)
static void C_ccall f_22895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23876)
static void C_ccall f_23876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45364)
static void C_ccall f_45364(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45377)
static void C_ccall f_45377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45453)
static void C_ccall f_45453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45380)
static void C_ccall f_45380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45385)
static void C_fcall f_45385(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_45437)
static void C_ccall f_45437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45407)
static void C_ccall f_45407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45421)
static void C_ccall f_45421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45433)
static void C_ccall f_45433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45410)
static void C_ccall f_45410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23896)
static void C_ccall f_23896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45358)
static void C_ccall f_45358(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24225)
static void C_ccall f_24225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28952)
static void C_ccall f_28952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45255)
static void C_ccall f_45255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_45255)
static void C_ccall f_45255r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_45318)
static void C_ccall f_45318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45322)
static void C_ccall f_45322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45336)
static void C_fcall f_45336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45258)
static void C_fcall f_45258(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45278)
static void C_ccall f_45278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45282)
static void C_ccall f_45282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29057)
static void C_ccall f_29057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45233)
static void C_ccall f_45233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30612)
static void C_ccall f_30612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45213)
static void C_ccall f_45213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30615)
static void C_ccall f_30615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45173)
static void C_ccall f_45173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30618)
static void C_ccall f_30618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45079)
static void C_ccall f_45079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_45083)
static void C_ccall f_45083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45086)
static void C_ccall f_45086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45104)
static void C_ccall f_45104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45107)
static void C_ccall f_45107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45138)
static void C_ccall f_45138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45110)
static void C_fcall f_45110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45116)
static void C_ccall f_45116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45069)
static void C_ccall f_45069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_45063)
static void C_ccall f_45063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30621)
static void C_ccall f_30621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44967)
static void C_ccall f_44967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44969)
static void C_ccall f_44969(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44973)
static void C_ccall f_44973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44976)
static void C_ccall f_44976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44979)
static void C_ccall f_44979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45023)
static void C_ccall f_45023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45015)
static void C_ccall f_45015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44982)
static void C_ccall f_44982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29391)
static void C_fcall f_29391(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29437)
static void C_ccall f_29437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29404)
static void C_fcall f_29404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45005)
static void C_ccall f_45005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44985)
static void C_ccall f_44985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44988)
static void C_ccall f_44988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44959)
static void C_ccall f_44959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30624)
static void C_ccall f_30624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44931)
static void C_ccall f_44931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30627)
static void C_ccall f_30627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44895)
static void C_ccall f_44895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44907)
static void C_ccall f_44907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44903)
static void C_ccall f_44903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44877)
static void C_ccall f_44877(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44871)
static void C_ccall f_44871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30630)
static void C_ccall f_30630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44785)
static void C_ccall f_44785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44789)
static void C_ccall f_44789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44792)
static void C_ccall f_44792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44795)
static void C_ccall f_44795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44808)
static void C_ccall f_44808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44754)
static void C_ccall f_44754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44758)
static void C_ccall f_44758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44773)
static void C_ccall f_44773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44748)
static void C_ccall f_44748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30633)
static void C_ccall f_30633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44634)
static void C_ccall f_44634(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44650)
static void C_ccall f_44650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44661)
static void C_ccall f_44661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44628)
static void C_ccall f_44628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30689)
static void C_ccall f_30689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44495)
static void C_ccall f_44495(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44518)
static void C_ccall f_44518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44515)
static void C_ccall f_44515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44489)
static void C_ccall f_44489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30692)
static void C_ccall f_30692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44343)
static void C_ccall f_44343(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44361)
static void C_ccall f_44361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44370)
static void C_ccall f_44370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44337)
static void C_ccall f_44337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30695)
static void C_ccall f_30695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44290)
static void C_ccall f_44290(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44294)
static void C_ccall f_44294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44297)
static void C_ccall f_44297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44313)
static void C_ccall f_44313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44272)
static void C_ccall f_44272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44266)
static void C_ccall f_44266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30698)
static void C_ccall f_30698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44190)
static void C_ccall f_44190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30837)
static void C_ccall f_30837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44116)
static void C_ccall f_44116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44123)
static void C_ccall f_44123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44110)
static void C_ccall f_44110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30840)
static void C_ccall f_30840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44006)
static void C_ccall f_44006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44014)
static void C_ccall f_44014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43980)
static void C_ccall f_43980(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43997)
static void C_ccall f_43997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43988)
static void C_fcall f_43988(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43974)
static void C_ccall f_43974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30843)
static void C_ccall f_30843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43930)
static void C_ccall f_43930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30846)
static void C_ccall f_30846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43848)
static void C_ccall f_43848(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43859)
static void C_ccall f_43859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43861)
static void C_fcall f_43861(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43890)
static void C_ccall f_43890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43826)
static void C_ccall f_43826(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43842)
static void C_ccall f_43842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43820)
static void C_ccall f_43820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30849)
static void C_ccall f_30849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43749)
static void C_ccall f_43749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43753)
static void C_ccall f_43753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43760)
static void C_ccall f_43760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43715)
static void C_ccall f_43715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43735)
static void C_ccall f_43735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43739)
static void C_ccall f_43739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43731)
static void C_ccall f_43731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43709)
static void C_ccall f_43709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30852)
static void C_ccall f_30852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43581)
static void C_ccall f_43581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43617)
static void C_ccall f_43617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43585)
static void C_ccall f_43585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43601)
static void C_ccall f_43601(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43613)
static void C_ccall f_43613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43609)
static void C_ccall f_43609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43506)
static void C_ccall f_43506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43549)
static void C_ccall f_43549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43553)
static void C_ccall f_43553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43513)
static void C_fcall f_43513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43524)
static void C_ccall f_43524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43500)
static void C_ccall f_43500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30855)
static void C_ccall f_30855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43480)
static void C_ccall f_43480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43474)
static void C_ccall f_43474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30858)
static void C_ccall f_30858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43454)
static void C_ccall f_43454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43458)
static void C_ccall f_43458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43446)
static void C_ccall f_43446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30861)
static void C_ccall f_30861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43426)
static void C_ccall f_43426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43430)
static void C_ccall f_43430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43418)
static void C_ccall f_43418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30864)
static void C_ccall f_30864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43398)
static void C_ccall f_43398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43402)
static void C_ccall f_43402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43390)
static void C_ccall f_43390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30867)
static void C_ccall f_30867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43370)
static void C_ccall f_43370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43374)
static void C_ccall f_43374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43362)
static void C_ccall f_43362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30870)
static void C_ccall f_30870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43261)
static void C_ccall f_43261(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43231)
static void C_ccall f_43231(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43255)
static void C_ccall f_43255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43225)
static void C_ccall f_43225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30873)
static void C_ccall f_30873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43175)
static void C_ccall f_43175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43177)
static void C_ccall f_43177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43181)
static void C_ccall f_43181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43209)
static void C_ccall f_43209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43201)
static void C_ccall f_43201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43197)
static void C_ccall f_43197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43184)
static void C_ccall f_43184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43167)
static void C_ccall f_43167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30876)
static void C_ccall f_30876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43114)
static void C_ccall f_43114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43116)
static void C_ccall f_43116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43120)
static void C_ccall f_43120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43151)
static void C_ccall f_43151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43143)
static void C_ccall f_43143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43139)
static void C_ccall f_43139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43123)
static void C_ccall f_43123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43126)
static void C_ccall f_43126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43106)
static void C_ccall f_43106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30879)
static void C_ccall f_30879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43056)
static void C_ccall f_43056(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43070)
static void C_ccall f_43070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43062)
static void C_ccall f_43062(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43021)
static void C_ccall f_43021(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43054)
static void C_ccall f_43054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43015)
static void C_ccall f_43015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30882)
static void C_ccall f_30882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42962)
static void C_ccall f_42962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42966)
static void C_ccall f_42966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42979)
static void C_ccall f_42979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42971)
static void C_ccall f_42971(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42919)
static void C_ccall f_42919(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42952)
static void C_ccall f_42952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42913)
static void C_ccall f_42913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30885)
static void C_ccall f_30885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42833)
static void C_ccall f_42833(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42827)
static void C_ccall f_42827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30888)
static void C_ccall f_30888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42596)
static void C_ccall f_42596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42600)
static void C_ccall f_42600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42608)
static void C_fcall f_42608(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42631)
static void C_ccall f_42631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42634)
static void C_ccall f_42634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42637)
static void C_ccall f_42637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42640)
static void C_ccall f_42640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42700)
static void C_ccall f_42700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42707)
static void C_ccall f_42707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42717)
static void C_ccall f_42717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42727)
static void C_ccall f_42727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42741)
static void C_ccall f_42741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42751)
static void C_ccall f_42751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42761)
static void C_ccall f_42761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42771)
static void C_ccall f_42771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42643)
static void C_fcall f_42643(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42667)
static void C_fcall f_42667(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42646)
static void C_fcall f_42646(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42553)
static void C_ccall f_42553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42586)
static void C_ccall f_42586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42547)
static void C_ccall f_42547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30891)
static void C_ccall f_30891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42465)
static void C_ccall f_42465(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42469)
static void C_ccall f_42469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42475)
static void C_ccall f_42475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42495)
static void C_ccall f_42495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42439)
static void C_ccall f_42439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42449)
static void C_fcall f_42449(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42433)
static void C_ccall f_42433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30894)
static void C_ccall f_30894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42248)
static void C_ccall f_42248(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42252)
static void C_ccall f_42252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42258)
static void C_ccall f_42258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42267)
static void C_ccall f_42267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42305)
static void C_ccall f_42305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42297)
static void C_ccall f_42297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42274)
static void C_ccall f_42274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42278)
static void C_ccall f_42278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42180)
static void C_ccall f_42180(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42199)
static void C_ccall f_42199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42234)
static void C_ccall f_42234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42205)
static void C_fcall f_42205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42209)
static void C_ccall f_42209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42223)
static void C_ccall f_42223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42212)
static void C_fcall f_42212(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42193)
static void C_fcall f_42193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42174)
static void C_ccall f_42174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30897)
static void C_ccall f_30897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41902)
static void C_ccall f_41902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31420)
static void C_ccall f_31420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41854)
static void C_ccall f_41854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41846)
static void C_ccall f_41846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31423)
static void C_ccall f_31423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41726)
static void C_ccall f_41726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31429)
static void C_ccall f_31429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31913)
static void C_ccall f_31913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31947)
static void C_ccall f_31947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31939)
static void C_ccall f_31939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31935)
static void C_ccall f_31935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31920)
static void C_ccall f_31920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31924)
static void C_ccall f_31924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31917)
static void C_ccall f_31917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31453)
static void C_fcall f_31453(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31906)
static void C_ccall f_31906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31902)
static void C_ccall f_31902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31460)
static void C_fcall f_31460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31777)
static void C_fcall f_31777(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31798)
static void C_ccall f_31798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31800)
static void C_fcall f_31800(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31814)
static void C_ccall f_31814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31867)
static void C_ccall f_31867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31817)
static void C_fcall f_31817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31852)
static void C_ccall f_31852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31820)
static void C_fcall f_31820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31833)
static void C_ccall f_31833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31845)
static void C_ccall f_31845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31837)
static void C_ccall f_31837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31823)
static void C_fcall f_31823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31787)
static void C_ccall f_31787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31463)
static void C_ccall f_31463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31741)
static void C_fcall f_31741(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31767)
static void C_ccall f_31767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31752)
static void C_ccall f_31752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31466)
static void C_ccall f_31466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31681)
static void C_fcall f_31681(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31691)
static void C_ccall f_31691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31694)
static void C_ccall f_31694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31715)
static void C_ccall f_31715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31697)
static void C_fcall f_31697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31701)
static void C_ccall f_31701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31649)
static void C_ccall f_31649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31652)
static void C_fcall f_31652(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31469)
static void C_fcall f_31469(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31472)
static void C_fcall f_31472(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31606)
static void C_ccall f_31606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31614)
static void C_ccall f_31614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31610)
static void C_ccall f_31610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31475)
static void C_fcall f_31475(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31569)
static void C_ccall f_31569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31565)
static void C_ccall f_31565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31561)
static void C_ccall f_31561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31514)
static void C_ccall f_31514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31510)
static void C_ccall f_31510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31592)
static void C_ccall f_31592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31576)
static void C_ccall f_31576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41680)
static void C_ccall f_41680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41696)
static void C_ccall f_41696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41699)
static void C_ccall f_41699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41702)
static void C_fcall f_41702(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41705)
static void C_fcall f_41705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41716)
static void C_ccall f_41716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41674)
static void C_ccall f_41674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31954)
static void C_ccall f_31954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41535)
static void C_ccall f_41535(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41574)
static void C_ccall f_41574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41548)
static void C_fcall f_41548(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41529)
static void C_ccall f_41529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31957)
static void C_ccall f_31957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41117)
static void C_ccall f_41117(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41121)
static void C_ccall f_41121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41133)
static void C_ccall f_41133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41191)
static void C_ccall f_41191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41194)
static void C_ccall f_41194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41197)
static void C_ccall f_41197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41409)
static void C_ccall f_41409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41347)
static void C_ccall f_41347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41381)
static void C_ccall f_41381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41356)
static void C_fcall f_41356(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41367)
static void C_ccall f_41367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41363)
static void C_ccall f_41363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41206)
static void C_fcall f_41206(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41284)
static void C_ccall f_41284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41325)
static void C_ccall f_41325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41329)
static void C_ccall f_41329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41333)
static void C_ccall f_41333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41288)
static void C_ccall f_41288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41292)
static void C_ccall f_41292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41319)
static void C_ccall f_41319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41295)
static void C_fcall f_41295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41209)
static void C_fcall f_41209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41281)
static void C_ccall f_41281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41223)
static void C_ccall f_41223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41225)
static void C_fcall f_41225(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41273)
static void C_ccall f_41273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41244)
static void C_ccall f_41244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41261)
static void C_ccall f_41261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41247)
static void C_fcall f_41247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41240)
static void C_ccall f_41240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41212)
static void C_ccall f_41212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41142)
static void C_fcall f_41142(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41152)
static void C_ccall f_41152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41158)
static void C_ccall f_41158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41130)
static void C_ccall f_41130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41078)
static void C_ccall f_41078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41095)
static void C_ccall f_41095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41111)
static void C_ccall f_41111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41089)
static void C_fcall f_41089(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41072)
static void C_ccall f_41072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31960)
static void C_ccall f_31960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40996)
static void C_ccall f_40996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31963)
static void C_ccall f_31963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40972)
static void C_ccall f_40972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40984)
static void C_ccall f_40984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40980)
static void C_ccall f_40980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40958)
static void C_ccall f_40958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40966)
static void C_ccall f_40966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40952)
static void C_ccall f_40952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31966)
static void C_ccall f_31966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40944)
static void C_ccall f_40944(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40944)
static void C_ccall f_40944r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39197)
static void C_ccall f_39197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39201)
static void C_ccall f_39201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40915)
static void C_ccall f_40915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40919)
static void C_ccall f_40919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39204)
static void C_ccall f_39204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40913)
static void C_ccall f_40913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39754)
static void C_ccall f_39754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40905)
static void C_ccall f_40905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39757)
static void C_ccall f_39757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40897)
static void C_ccall f_40897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39760)
static void C_ccall f_39760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40889)
static void C_ccall f_40889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39763)
static void C_ccall f_39763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40881)
static void C_ccall f_40881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39766)
static void C_ccall f_39766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40873)
static void C_ccall f_40873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39769)
static void C_ccall f_39769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40865)
static void C_ccall f_40865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39772)
static void C_ccall f_39772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40857)
static void C_ccall f_40857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39775)
static void C_ccall f_39775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40849)
static void C_ccall f_40849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39778)
static void C_ccall f_39778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40841)
static void C_ccall f_40841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39781)
static void C_ccall f_39781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40833)
static void C_ccall f_40833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39784)
static void C_ccall f_39784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40825)
static void C_ccall f_40825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39787)
static void C_ccall f_39787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40817)
static void C_ccall f_40817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39790)
static void C_ccall f_39790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40809)
static void C_ccall f_40809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39793)
static void C_ccall f_39793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40801)
static void C_ccall f_40801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39796)
static void C_ccall f_39796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40793)
static void C_ccall f_40793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39799)
static void C_ccall f_39799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40785)
static void C_ccall f_40785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39802)
static void C_ccall f_39802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40777)
static void C_ccall f_40777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39805)
static void C_ccall f_39805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40769)
static void C_ccall f_40769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39808)
static void C_ccall f_39808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40761)
static void C_ccall f_40761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39811)
static void C_ccall f_39811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40753)
static void C_ccall f_40753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39814)
static void C_ccall f_39814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40745)
static void C_ccall f_40745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39817)
static void C_ccall f_39817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40676)
static void C_fcall f_40676(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40704)
static void C_fcall f_40704(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39891)
static void C_ccall f_39891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40670)
static void C_ccall f_40670(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40169)
static void C_ccall f_40169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40641)
static void C_ccall f_40641(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40641)
static void C_ccall f_40641r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_40655)
static void C_fcall f_40655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40645)
static void C_ccall f_40645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40172)
static void C_ccall f_40172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40639)
static void C_ccall f_40639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40626)
static void C_ccall f_40626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40568)
static void C_ccall f_40568(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_40568)
static void C_ccall f_40568r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_40586)
static void C_fcall f_40586(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40596)
static void C_ccall f_40596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40572)
static void C_ccall f_40572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40562)
static void C_ccall f_40562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40556)
static void C_ccall f_40556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40550)
static void C_ccall f_40550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40544)
static void C_ccall f_40544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40174)
static void C_ccall f_40174(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40174)
static void C_ccall f_40174r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_40511)
static void C_fcall f_40511(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40521)
static void C_ccall f_40521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40497)
static void C_ccall f_40497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40181)
static void C_ccall f_40181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40435)
static void C_fcall f_40435(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40449)
static void C_ccall f_40449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40184)
static void C_ccall f_40184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40382)
static void C_fcall f_40382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40405)
static void C_fcall f_40405(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40392)
static void C_ccall f_40392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40368)
static void C_ccall f_40368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40190)
static void C_ccall f_40190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40330)
static void C_fcall f_40330(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40340)
static void C_ccall f_40340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40316)
static void C_ccall f_40316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40196)
static void C_ccall f_40196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40313)
static void C_ccall f_40313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40199)
static void C_fcall f_40199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40305)
static void C_ccall f_40305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40309)
static void C_ccall f_40309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40269)
static void C_fcall f_40269(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40294)
static void C_ccall f_40294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40298)
static void C_ccall f_40298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40279)
static void C_ccall f_40279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40258)
static void C_ccall f_40258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40228)
static void C_fcall f_40228(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40200)
static void C_fcall f_40200(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39932)
static void C_fcall f_39932(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39936)
static void C_ccall f_39936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39939)
static void C_ccall f_39939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39942)
static void C_ccall f_39942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39946)
static void C_ccall f_39946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40160)
static void C_ccall f_40160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40148)
static void C_ccall f_40148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40144)
static void C_ccall f_40144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39949)
static void C_fcall f_39949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40093)
static void C_fcall f_40093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40129)
static void C_ccall f_40129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40122)
static void C_ccall f_40122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39952)
static void C_ccall f_39952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40023)
static void C_ccall f_40023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40027)
static void C_ccall f_40027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40019)
static void C_ccall f_40019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7047)
static void C_ccall f_7047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39999)
static void C_ccall f_39999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39995)
static void C_ccall f_39995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39962)
static void C_fcall f_39962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39973)
static void C_ccall f_39973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39981)
static void C_ccall f_39981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39977)
static void C_ccall f_39977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39893)
static void C_fcall f_39893(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39909)
static void C_ccall f_39909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39820)
static void C_ccall f_39820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39831)
static void C_ccall f_39831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39834)
static void C_fcall f_39834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39841)
static void C_ccall f_39841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39280)
static void C_fcall f_39280(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39613)
static void C_fcall f_39613(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39633)
static void C_ccall f_39633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39702)
static void C_ccall f_39702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39698)
static void C_ccall f_39698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39659)
static void C_ccall f_39659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39671)
static void C_ccall f_39671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39667)
static void C_ccall f_39667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39623)
static void C_ccall f_39623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39284)
static void C_ccall f_39284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39288)
static void C_ccall f_39288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39292)
static void C_ccall f_39292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39296)
static void C_ccall f_39296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39300)
static void C_ccall f_39300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39301)
static void C_ccall f_39301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39307)
static void C_ccall f_39307(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39311)
static void C_ccall f_39311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39540)
static void C_fcall f_39540(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39587)
static void C_ccall f_39587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39577)
static void C_fcall f_39577(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39584)
static void C_ccall f_39584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39571)
static void C_ccall f_39571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39550)
static void C_ccall f_39550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39314)
static void C_ccall f_39314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39495)
static void C_fcall f_39495(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39500)
static void C_fcall f_39500(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39510)
static void C_ccall f_39510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39317)
static void C_ccall f_39317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39449)
static void C_fcall f_39449(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39454)
static void C_fcall f_39454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39464)
static void C_ccall f_39464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39320)
static void C_ccall f_39320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39346)
static void C_fcall f_39346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39355)
static void C_fcall f_39355(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39371)
static void C_ccall f_39371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39424)
static void C_ccall f_39424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39405)
static void C_ccall f_39405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39374)
static void C_ccall f_39374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39395)
static void C_ccall f_39395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39381)
static void C_ccall f_39381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39365)
static void C_ccall f_39365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39323)
static void C_ccall f_39323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39336)
static void C_ccall f_39336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39206)
static void C_ccall f_39206(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_39206)
static void C_ccall f_39206r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_39210)
static void C_fcall f_39210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39219)
static void C_ccall f_39219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39232)
static void C_ccall f_39232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39235)
static void C_ccall f_39235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39251)
static void C_ccall f_39251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39157)
static void C_ccall f_39157(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39157)
static void C_ccall f_39157r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_39151)
static void C_ccall f_39151(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39151)
static void C_ccall f_39151r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38958)
static void C_fcall f_38958(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39131)
static void C_fcall f_39131(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38962)
static void C_ccall f_38962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38965)
static void C_ccall f_38965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38968)
static void C_ccall f_38968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38973)
static void C_fcall f_38973(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39043)
static void C_ccall f_39043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39039)
static void C_ccall f_39039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39025)
static void C_ccall f_39025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39011)
static void C_ccall f_39011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39007)
static void C_ccall f_39007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38993)
static void C_ccall f_38993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7877)
static void C_ccall f_7877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38786)
static void C_ccall f_38786(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38786)
static void C_ccall f_38786r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_38790)
static void C_ccall f_38790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38793)
static void C_ccall f_38793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38798)
static void C_fcall f_38798(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38919)
static void C_ccall f_38919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38923)
static void C_ccall f_38923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38892)
static void C_ccall f_38892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38896)
static void C_ccall f_38896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38865)
static void C_ccall f_38865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38869)
static void C_ccall f_38869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38849)
static void C_ccall f_38849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38832)
static void C_ccall f_38832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38818)
static void C_ccall f_38818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7851)
static void C_ccall f_7851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38673)
static void C_ccall f_38673(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38673)
static void C_ccall f_38673r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_38678)
static void C_ccall f_38678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38682)
static void C_ccall f_38682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38733)
static void C_ccall f_38733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38729)
static void C_fcall f_38729(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38725)
static void C_ccall f_38725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38685)
static void C_fcall f_38685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38718)
static void C_ccall f_38718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38714)
static void C_fcall f_38714(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38710)
static void C_ccall f_38710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38688)
static void C_fcall f_38688(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38691)
static void C_ccall f_38691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38703)
static void C_ccall f_38703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38695)
static void C_ccall f_38695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38497)
static void C_ccall f_38497(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38497)
static void C_ccall f_38497r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38516)
static void C_fcall f_38516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38523)
static void C_fcall f_38523(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38529)
static void C_fcall f_38529(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38549)
static void C_ccall f_38549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38557)
static void C_ccall f_38557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38553)
static void C_ccall f_38553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38539)
static void C_ccall f_38539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38501)
static void C_ccall f_38501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38392)
static void C_ccall f_38392(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38392)
static void C_ccall f_38392r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38411)
static void C_fcall f_38411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38418)
static void C_fcall f_38418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38424)
static void C_fcall f_38424(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38444)
static void C_ccall f_38444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38452)
static void C_ccall f_38452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38448)
static void C_ccall f_38448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38434)
static void C_ccall f_38434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38396)
static void C_ccall f_38396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38373)
static void C_ccall f_38373(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7094)
static void C_ccall f_7094(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7100)
static void C_ccall f_7100(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7126)
static void C_ccall f_7126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7130)
static void C_ccall f_7130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7106)
static void C_ccall f_7106(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7124)
static void C_ccall f_7124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7121)
static void C_ccall f_7121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7117)
static void C_ccall f_7117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7110)
static void C_ccall f_7110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38358)
static void C_ccall f_38358(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38358)
static void C_ccall f_38358r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38352)
static void C_ccall f_38352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38346)
static void C_ccall f_38346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38340)
static void C_ccall f_38340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38334)
static void C_ccall f_38334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38328)
static void C_ccall f_38328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38298)
static void C_ccall f_38298(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38298)
static void C_ccall f_38298r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38308)
static void C_ccall f_38308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37869)
static void C_ccall f_37869(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37869)
static void C_ccall f_37869r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38275)
static void C_ccall f_38275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38290)
static void C_ccall f_38290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38282)
static void C_ccall f_38282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38246)
static void C_ccall f_38246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38250)
static void C_ccall f_38250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38211)
static void C_ccall f_38211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38215)
static void C_ccall f_38215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38176)
static void C_ccall f_38176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38180)
static void C_ccall f_38180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37873)
static void C_fcall f_37873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38140)
static void C_ccall f_38140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38155)
static void C_ccall f_38155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38147)
static void C_ccall f_38147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38111)
static void C_ccall f_38111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38115)
static void C_ccall f_38115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38076)
static void C_ccall f_38076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38080)
static void C_ccall f_38080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38041)
static void C_ccall f_38041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38045)
static void C_ccall f_38045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37876)
static void C_fcall f_37876(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38005)
static void C_ccall f_38005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38020)
static void C_ccall f_38020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38012)
static void C_ccall f_38012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37976)
static void C_ccall f_37976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37980)
static void C_ccall f_37980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37941)
static void C_ccall f_37941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37945)
static void C_ccall f_37945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37906)
static void C_ccall f_37906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37910)
static void C_ccall f_37910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37879)
static void C_fcall f_37879(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37882)
static void C_ccall f_37882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37440)
static void C_ccall f_37440(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37440)
static void C_ccall f_37440r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37846)
static void C_ccall f_37846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37861)
static void C_ccall f_37861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37853)
static void C_ccall f_37853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37817)
static void C_ccall f_37817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37821)
static void C_ccall f_37821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37782)
static void C_ccall f_37782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37786)
static void C_ccall f_37786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37747)
static void C_ccall f_37747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37751)
static void C_ccall f_37751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37444)
static void C_fcall f_37444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37711)
static void C_ccall f_37711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37726)
static void C_ccall f_37726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37718)
static void C_ccall f_37718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37682)
static void C_ccall f_37682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37686)
static void C_ccall f_37686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37647)
static void C_ccall f_37647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37651)
static void C_ccall f_37651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37612)
static void C_ccall f_37612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37616)
static void C_ccall f_37616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37447)
static void C_fcall f_37447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37576)
static void C_ccall f_37576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37591)
static void C_ccall f_37591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37583)
static void C_ccall f_37583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37547)
static void C_ccall f_37547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37551)
static void C_ccall f_37551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37512)
static void C_ccall f_37512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37516)
static void C_ccall f_37516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37477)
static void C_ccall f_37477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37481)
static void C_ccall f_37481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37450)
static void C_fcall f_37450(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37453)
static void C_ccall f_37453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37011)
static void C_ccall f_37011(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37011)
static void C_ccall f_37011r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37417)
static void C_ccall f_37417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37432)
static void C_ccall f_37432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37424)
static void C_ccall f_37424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37388)
static void C_ccall f_37388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37392)
static void C_ccall f_37392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37353)
static void C_ccall f_37353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37357)
static void C_ccall f_37357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37318)
static void C_ccall f_37318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37322)
static void C_ccall f_37322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37015)
static void C_fcall f_37015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37282)
static void C_ccall f_37282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37297)
static void C_ccall f_37297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37289)
static void C_ccall f_37289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37253)
static void C_ccall f_37253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37257)
static void C_ccall f_37257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37218)
static void C_ccall f_37218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37222)
static void C_ccall f_37222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37183)
static void C_ccall f_37183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37187)
static void C_ccall f_37187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37018)
static void C_fcall f_37018(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37147)
static void C_ccall f_37147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37162)
static void C_ccall f_37162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37154)
static void C_ccall f_37154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37118)
static void C_ccall f_37118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37122)
static void C_ccall f_37122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37083)
static void C_ccall f_37083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37087)
static void C_ccall f_37087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37048)
static void C_ccall f_37048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37052)
static void C_ccall f_37052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37021)
static void C_fcall f_37021(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37024)
static void C_ccall f_37024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36304)
static void C_ccall f_36304(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36304)
static void C_ccall f_36304r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36988)
static void C_ccall f_36988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37003)
static void C_ccall f_37003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36995)
static void C_ccall f_36995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36959)
static void C_ccall f_36959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36963)
static void C_ccall f_36963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36924)
static void C_ccall f_36924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36928)
static void C_ccall f_36928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36889)
static void C_ccall f_36889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36893)
static void C_ccall f_36893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36854)
static void C_ccall f_36854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36858)
static void C_ccall f_36858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36308)
static void C_fcall f_36308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36818)
static void C_ccall f_36818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36833)
static void C_ccall f_36833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36825)
static void C_ccall f_36825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36789)
static void C_ccall f_36789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36793)
static void C_ccall f_36793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36754)
static void C_ccall f_36754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36758)
static void C_ccall f_36758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36719)
static void C_ccall f_36719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36723)
static void C_ccall f_36723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36684)
static void C_ccall f_36684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36688)
static void C_ccall f_36688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36311)
static void C_fcall f_36311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36648)
static void C_ccall f_36648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36663)
static void C_ccall f_36663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36655)
static void C_ccall f_36655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36619)
static void C_ccall f_36619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36623)
static void C_ccall f_36623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36584)
static void C_ccall f_36584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36588)
static void C_ccall f_36588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36549)
static void C_ccall f_36549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36553)
static void C_ccall f_36553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36514)
static void C_ccall f_36514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36518)
static void C_ccall f_36518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36314)
static void C_fcall f_36314(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36478)
static void C_ccall f_36478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36493)
static void C_ccall f_36493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36485)
static void C_ccall f_36485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36449)
static void C_ccall f_36449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36453)
static void C_ccall f_36453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36414)
static void C_ccall f_36414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36418)
static void C_ccall f_36418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36379)
static void C_ccall f_36379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36383)
static void C_ccall f_36383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36344)
static void C_ccall f_36344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36348)
static void C_ccall f_36348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36317)
static void C_fcall f_36317(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36320)
static void C_ccall f_36320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35597)
static void C_ccall f_35597(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35597)
static void C_ccall f_35597r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36281)
static void C_ccall f_36281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36296)
static void C_ccall f_36296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36288)
static void C_ccall f_36288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36252)
static void C_ccall f_36252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36256)
static void C_ccall f_36256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36217)
static void C_ccall f_36217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36221)
static void C_ccall f_36221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36182)
static void C_ccall f_36182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36186)
static void C_ccall f_36186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36147)
static void C_ccall f_36147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36151)
static void C_ccall f_36151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35601)
static void C_fcall f_35601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36111)
static void C_ccall f_36111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36126)
static void C_ccall f_36126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36118)
static void C_ccall f_36118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36082)
static void C_ccall f_36082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36086)
static void C_ccall f_36086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36047)
static void C_ccall f_36047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36051)
static void C_ccall f_36051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36012)
static void C_ccall f_36012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36016)
static void C_ccall f_36016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35977)
static void C_ccall f_35977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35981)
static void C_ccall f_35981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35604)
static void C_fcall f_35604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35941)
static void C_ccall f_35941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35956)
static void C_ccall f_35956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35948)
static void C_ccall f_35948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35912)
static void C_ccall f_35912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35916)
static void C_ccall f_35916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35877)
static void C_ccall f_35877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35881)
static void C_ccall f_35881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35842)
static void C_ccall f_35842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35846)
static void C_ccall f_35846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35807)
static void C_ccall f_35807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35811)
static void C_ccall f_35811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35607)
static void C_fcall f_35607(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35771)
static void C_ccall f_35771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35786)
static void C_ccall f_35786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35778)
static void C_ccall f_35778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35742)
static void C_ccall f_35742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35746)
static void C_ccall f_35746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35707)
static void C_ccall f_35707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35711)
static void C_ccall f_35711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35672)
static void C_ccall f_35672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35676)
static void C_ccall f_35676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35637)
static void C_ccall f_35637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35641)
static void C_ccall f_35641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35610)
static void C_fcall f_35610(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35613)
static void C_ccall f_35613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34890)
static void C_ccall f_34890(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34890)
static void C_ccall f_34890r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35574)
static void C_ccall f_35574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35589)
static void C_ccall f_35589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35581)
static void C_ccall f_35581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35545)
static void C_ccall f_35545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35549)
static void C_ccall f_35549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35510)
static void C_ccall f_35510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35514)
static void C_ccall f_35514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35475)
static void C_ccall f_35475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35479)
static void C_ccall f_35479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35440)
static void C_ccall f_35440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35444)
static void C_ccall f_35444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34894)
static void C_fcall f_34894(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35404)
static void C_ccall f_35404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35419)
static void C_ccall f_35419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35411)
static void C_ccall f_35411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35375)
static void C_ccall f_35375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35379)
static void C_ccall f_35379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35340)
static void C_ccall f_35340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35344)
static void C_ccall f_35344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35305)
static void C_ccall f_35305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35309)
static void C_ccall f_35309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35270)
static void C_ccall f_35270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35274)
static void C_ccall f_35274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34897)
static void C_fcall f_34897(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35234)
static void C_ccall f_35234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35249)
static void C_ccall f_35249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35241)
static void C_ccall f_35241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35205)
static void C_ccall f_35205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35209)
static void C_ccall f_35209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35170)
static void C_ccall f_35170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35174)
static void C_ccall f_35174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35135)
static void C_ccall f_35135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35139)
static void C_ccall f_35139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35100)
static void C_ccall f_35100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35104)
static void C_ccall f_35104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34900)
static void C_fcall f_34900(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35064)
static void C_ccall f_35064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35079)
static void C_ccall f_35079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35071)
static void C_ccall f_35071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35035)
static void C_ccall f_35035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35039)
static void C_ccall f_35039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35000)
static void C_ccall f_35000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35004)
static void C_ccall f_35004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34965)
static void C_ccall f_34965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34969)
static void C_ccall f_34969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34930)
static void C_ccall f_34930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34934)
static void C_ccall f_34934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34903)
static void C_fcall f_34903(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34906)
static void C_ccall f_34906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34461)
static void C_ccall f_34461(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34461)
static void C_ccall f_34461r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34867)
static void C_ccall f_34867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34882)
static void C_ccall f_34882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34874)
static void C_ccall f_34874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34838)
static void C_ccall f_34838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34842)
static void C_ccall f_34842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34803)
static void C_ccall f_34803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34807)
static void C_ccall f_34807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34768)
static void C_ccall f_34768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34772)
static void C_ccall f_34772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34465)
static void C_fcall f_34465(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34732)
static void C_ccall f_34732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34747)
static void C_ccall f_34747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34739)
static void C_ccall f_34739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34703)
static void C_ccall f_34703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34707)
static void C_ccall f_34707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34668)
static void C_ccall f_34668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34672)
static void C_ccall f_34672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34633)
static void C_ccall f_34633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34637)
static void C_ccall f_34637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34468)
static void C_fcall f_34468(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34597)
static void C_ccall f_34597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34612)
static void C_ccall f_34612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34604)
static void C_ccall f_34604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34568)
static void C_ccall f_34568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34572)
static void C_ccall f_34572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34533)
static void C_ccall f_34533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34537)
static void C_ccall f_34537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34498)
static void C_ccall f_34498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34502)
static void C_ccall f_34502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34471)
static void C_fcall f_34471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34474)
static void C_ccall f_34474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33406)
static void C_ccall f_33406(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33406)
static void C_ccall f_33406r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34438)
static void C_ccall f_34438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34453)
static void C_ccall f_34453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34445)
static void C_ccall f_34445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34409)
static void C_ccall f_34409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34413)
static void C_ccall f_34413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34374)
static void C_ccall f_34374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34378)
static void C_ccall f_34378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34339)
static void C_ccall f_34339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34343)
static void C_ccall f_34343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34304)
static void C_ccall f_34304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34308)
static void C_ccall f_34308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34269)
static void C_ccall f_34269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34273)
static void C_ccall f_34273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33410)
static void C_fcall f_33410(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34233)
static void C_ccall f_34233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34248)
static void C_ccall f_34248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34240)
static void C_ccall f_34240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34204)
static void C_ccall f_34204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34208)
static void C_ccall f_34208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34169)
static void C_ccall f_34169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34173)
static void C_ccall f_34173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34134)
static void C_ccall f_34134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34138)
static void C_ccall f_34138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34099)
static void C_ccall f_34099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34103)
static void C_ccall f_34103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34064)
static void C_ccall f_34064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34068)
static void C_ccall f_34068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33413)
static void C_fcall f_33413(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34028)
static void C_ccall f_34028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34043)
static void C_ccall f_34043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34035)
static void C_ccall f_34035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33999)
static void C_ccall f_33999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34003)
static void C_ccall f_34003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33964)
static void C_ccall f_33964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33968)
static void C_ccall f_33968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33929)
static void C_ccall f_33929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33933)
static void C_ccall f_33933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33894)
static void C_ccall f_33894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33898)
static void C_ccall f_33898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33859)
static void C_ccall f_33859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33863)
static void C_ccall f_33863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33416)
static void C_fcall f_33416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33823)
static void C_ccall f_33823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33838)
static void C_ccall f_33838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33830)
static void C_ccall f_33830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33794)
static void C_ccall f_33794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33798)
static void C_ccall f_33798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33759)
static void C_ccall f_33759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33763)
static void C_ccall f_33763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33724)
static void C_ccall f_33724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33728)
static void C_ccall f_33728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33689)
static void C_ccall f_33689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33693)
static void C_ccall f_33693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33654)
static void C_ccall f_33654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33658)
static void C_ccall f_33658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33419)
static void C_fcall f_33419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33618)
static void C_ccall f_33618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33633)
static void C_ccall f_33633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33625)
static void C_ccall f_33625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33589)
static void C_ccall f_33589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33593)
static void C_ccall f_33593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33554)
static void C_ccall f_33554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33558)
static void C_ccall f_33558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33519)
static void C_ccall f_33519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33523)
static void C_ccall f_33523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33484)
static void C_ccall f_33484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33488)
static void C_ccall f_33488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33449)
static void C_ccall f_33449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33453)
static void C_ccall f_33453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33422)
static void C_fcall f_33422(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33425)
static void C_ccall f_33425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33400)
static void C_ccall f_33400(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7749)
static void C_ccall f_7749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33247)
static void C_fcall f_33247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33254)
static void C_fcall f_33254(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33192)
static void C_fcall f_33192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33199)
static void C_fcall f_33199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32945)
static void C_ccall f_32945(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32945)
static void C_ccall f_32945r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33169)
static void C_ccall f_33169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33184)
static void C_ccall f_33184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33176)
static void C_ccall f_33176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33140)
static void C_ccall f_33140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33144)
static void C_ccall f_33144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33105)
static void C_ccall f_33105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33109)
static void C_ccall f_33109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32949)
static void C_fcall f_32949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33069)
static void C_ccall f_33069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33084)
static void C_ccall f_33084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33076)
static void C_ccall f_33076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33040)
static void C_ccall f_33040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33044)
static void C_ccall f_33044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33005)
static void C_ccall f_33005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33009)
static void C_ccall f_33009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32952)
static void C_fcall f_32952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32955)
static void C_ccall f_32955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32968)
static void C_ccall f_32968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32972)
static void C_ccall f_32972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32874)
static void C_ccall f_32874(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32874)
static void C_ccall f_32874r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32878)
static void C_ccall f_32878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32881)
static void C_ccall f_32881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7669)
static void C_ccall f_7669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32884)
static void C_ccall f_32884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32916)
static void C_ccall f_32916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32906)
static void C_ccall f_32906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32896)
static void C_ccall f_32896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32887)
static void C_ccall f_32887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32846)
static void C_ccall f_32846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32850)
static void C_ccall f_32850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32822)
static void C_ccall f_32822(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32773)
static void C_ccall f_32773(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7655)
static void C_ccall f_7655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32777)
static void C_ccall f_32777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32793)
static void C_ccall f_32793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32820)
static void C_ccall f_32820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32796)
static void C_ccall f_32796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32816)
static void C_ccall f_32816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32812)
static void C_ccall f_32812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32780)
static void C_ccall f_32780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32764)
static void C_ccall f_32764(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32768)
static void C_ccall f_32768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32611)
static void C_ccall f_32611(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32611)
static void C_ccall f_32611r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32738)
static void C_fcall f_32738(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32751)
static void C_ccall f_32751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32733)
static void C_ccall f_32733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32614)
static void C_fcall f_32614(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32730)
static void C_ccall f_32730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32714)
static void C_ccall f_32714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32642)
static void C_ccall f_32642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32650)
static void C_fcall f_32650(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32660)
static void C_ccall f_32660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32663)
static void C_ccall f_32663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32645)
static void C_ccall f_32645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32452)
static void C_fcall f_32452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7701)
static void C_ccall f_7701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32474)
static void C_ccall f_32474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32478)
static void C_ccall f_32478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32456)
static void C_fcall f_32456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31968)
static void C_ccall f_31968(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31968)
static void C_ccall f_31968r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32429)
static void C_ccall f_32429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32444)
static void C_ccall f_32444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32436)
static void C_ccall f_32436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32400)
static void C_ccall f_32400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32404)
static void C_ccall f_32404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32365)
static void C_ccall f_32365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32369)
static void C_ccall f_32369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32330)
static void C_ccall f_32330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32334)
static void C_ccall f_32334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31972)
static void C_fcall f_31972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32294)
static void C_ccall f_32294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32309)
static void C_ccall f_32309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32301)
static void C_ccall f_32301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32265)
static void C_ccall f_32265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32269)
static void C_ccall f_32269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32230)
static void C_ccall f_32230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32234)
static void C_ccall f_32234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32195)
static void C_ccall f_32195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32199)
static void C_ccall f_32199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31975)
static void C_fcall f_31975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32159)
static void C_ccall f_32159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32174)
static void C_ccall f_32174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32166)
static void C_ccall f_32166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32130)
static void C_ccall f_32130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32134)
static void C_ccall f_32134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32095)
static void C_ccall f_32095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32099)
static void C_ccall f_32099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32060)
static void C_ccall f_32060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32064)
static void C_ccall f_32064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31978)
static void C_fcall f_31978(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31981)
static void C_ccall f_31981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32036)
static void C_ccall f_32036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32032)
static void C_ccall f_32032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31984)
static void C_fcall f_31984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29772)
static void C_ccall f_29772(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29785)
static void C_ccall f_29785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29792)
static void C_fcall f_29792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29799)
static void C_ccall f_29799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29778)
static void C_ccall f_29778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31996)
static void C_ccall f_31996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32018)
static void C_ccall f_32018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32580)
static void C_fcall f_32580(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32590)
static void C_fcall f_32590(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32493)
static void C_ccall f_32493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32550)
static void C_fcall f_32550(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32560)
static void C_fcall f_32560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32501)
static void C_ccall f_32501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32519)
static void C_ccall f_32519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32523)
static void C_ccall f_32523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32527)
static void C_ccall f_32527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32534)
static void C_ccall f_32534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32511)
static void C_ccall f_32511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32504)
static void C_ccall f_32504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31987)
static void C_ccall f_31987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30899)
static void C_ccall f_30899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30912)
static void C_ccall f_30912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30962)
static void C_ccall f_30962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31059)
static void C_ccall f_31059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31127)
static void C_ccall f_31127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31384)
static void C_ccall f_31384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31134)
static void C_fcall f_31134(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31372)
static void C_ccall f_31372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31323)
static void C_ccall f_31323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31329)
static void C_ccall f_31329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31353)
static void C_ccall f_31353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31349)
static void C_ccall f_31349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31337)
static void C_ccall f_31337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31137)
static void C_fcall f_31137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31299)
static void C_ccall f_31299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31303)
static void C_ccall f_31303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31140)
static void C_fcall f_31140(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31276)
static void C_ccall f_31276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31280)
static void C_ccall f_31280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31143)
static void C_fcall f_31143(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31253)
static void C_ccall f_31253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31257)
static void C_ccall f_31257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31146)
static void C_fcall f_31146(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31178)
static void C_ccall f_31178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31196)
static void C_ccall f_31196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31214)
static void C_ccall f_31214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31232)
static void C_ccall f_31232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31149)
static void C_fcall f_31149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31153)
static void C_ccall f_31153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31063)
static void C_ccall f_31063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31067)
static void C_ccall f_31067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31071)
static void C_ccall f_31071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30966)
static void C_ccall f_30966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30970)
static void C_ccall f_30970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30974)
static void C_ccall f_30974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30993)
static void C_ccall f_30993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30997)
static void C_ccall f_30997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30977)
static void C_fcall f_30977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30981)
static void C_ccall f_30981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30916)
static void C_ccall f_30916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30920)
static void C_ccall f_30920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30924)
static void C_ccall f_30924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30906)
static void C_fcall f_30906(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30721)
static void C_fcall f_30721(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30733)
static void C_fcall f_30733(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30752)
static void C_ccall f_30752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30770)
static void C_fcall f_30770(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30802)
static void C_ccall f_30802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30805)
static void C_fcall f_30805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30798)
static void C_ccall f_30798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30784)
static void C_ccall f_30784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30755)
static void C_ccall f_30755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30700)
static void C_fcall f_30700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30707)
static void C_ccall f_30707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30710)
static void C_ccall f_30710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30716)
static void C_ccall f_30716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30635)
static void C_fcall f_30635(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30644)
static void C_fcall f_30644(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30667)
static void C_ccall f_30667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30657)
static void C_fcall f_30657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30591)
static void C_fcall f_30591(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30599)
static void C_ccall f_30599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30603)
static void C_ccall f_30603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30579)
static void C_fcall f_30579(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30477)
static void C_fcall f_30477(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30429)
static void C_fcall f_30429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29810)
static void C_fcall f_29810(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29814)
static void C_ccall f_29814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29817)
static void C_ccall f_29817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30243)
static void C_ccall f_30243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30239)
static void C_ccall f_30239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30235)
static void C_ccall f_30235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29820)
static void C_fcall f_29820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29943)
static void C_ccall f_29943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29125)
static void C_ccall f_29125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29949)
static void C_fcall f_29949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29141)
static void C_ccall f_29141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30037)
static void C_fcall f_30037(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30107)
static void C_ccall f_30107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29157)
static void C_ccall f_29157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30110)
static void C_fcall f_30110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29189)
static void C_ccall f_29189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30188)
static void C_fcall f_30188(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30214)
static void C_ccall f_30214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30208)
static void C_ccall f_30208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30197)
static void C_ccall f_30197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30139)
static void C_fcall f_30139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30149)
static void C_ccall f_30149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30175)
static void C_ccall f_30175(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30169)
static void C_ccall f_30169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30152)
static void C_ccall f_30152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30162)
static void C_ccall f_30162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30155)
static void C_fcall f_30155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30116)
static void C_ccall f_30116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30125)
static void C_ccall f_30125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30119)
static void C_fcall f_30119(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30043)
static void C_ccall f_30043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30061)
static void C_fcall f_30061(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30094)
static void C_ccall f_30094(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30080)
static void C_ccall f_30080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30088)
static void C_ccall f_30088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30071)
static void C_ccall f_30071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30046)
static void C_ccall f_30046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29958)
static void C_ccall f_29958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29980)
static void C_fcall f_29980(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30027)
static void C_ccall f_30027(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30013)
static void C_ccall f_30013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30021)
static void C_ccall f_30021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29993)
static void C_ccall f_29993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29996)
static void C_fcall f_29996(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29961)
static void C_ccall f_29961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29978)
static void C_ccall f_29978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29964)
static void C_fcall f_29964(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29829)
static void C_ccall f_29829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29835)
static void C_ccall f_29835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29893)
static void C_ccall f_29893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29896)
static void C_ccall f_29896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29917)
static void C_ccall f_29917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29928)
static void C_ccall f_29928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29907)
static void C_ccall f_29907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29841)
static void C_ccall f_29841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29851)
static void C_ccall f_29851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29887)
static void C_ccall f_29887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29857)
static void C_ccall f_29857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29872)
static void C_ccall f_29872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29880)
static void C_ccall f_29880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29864)
static void C_ccall f_29864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29706)
static void C_fcall f_29706(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29708)
static void C_ccall f_29708(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29756)
static void C_ccall f_29756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29712)
static void C_ccall f_29712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29715)
static void C_fcall f_29715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29720)
static void C_fcall f_29720(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29741)
static void C_ccall f_29741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29698)
static void C_fcall f_29698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29700)
static void C_ccall f_29700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29521)
static void C_ccall f_29521(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29521)
static void C_ccall f_29521r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29529)
static void C_ccall f_29529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29490)
static void C_fcall f_29490(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29507)
static void C_ccall f_29507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29511)
static void C_ccall f_29511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29457)
static void C_fcall f_29457(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29464)
static void C_ccall f_29464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29351)
static void C_ccall f_29351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29358)
static void C_ccall f_29358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29473)
static void C_ccall f_29473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29696)
static void C_ccall f_29696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29673)
static void C_ccall f_29673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29689)
static void C_ccall f_29689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29535)
static void C_ccall f_29535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29538)
static void C_ccall f_29538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29562)
static void C_ccall f_29562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29619)
static void C_ccall f_29619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29625)
static void C_ccall f_29625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29634)
static void C_ccall f_29634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29643)
static void C_ccall f_29643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29652)
static void C_ccall f_29652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29661)
static void C_ccall f_29661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29613)
static void C_ccall f_29613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29568)
static void C_ccall f_29568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29574)
static void C_ccall f_29574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29580)
static void C_ccall f_29580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29586)
static void C_ccall f_29586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29592)
static void C_ccall f_29592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29598)
static void C_ccall f_29598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29439)
static void C_fcall f_29439(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29446)
static void C_ccall f_29446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29372)
static void C_fcall f_29372(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29360)
static void C_fcall f_29360(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29328)
static void C_fcall f_29328(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29335)
static void C_ccall f_29335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29342)
static void C_ccall f_29342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29312)
static void C_fcall f_29312(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29319)
static void C_ccall f_29319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29326)
static void C_ccall f_29326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29303)
static void C_fcall f_29303(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29285)
static void C_fcall f_29285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29267)
static void C_fcall f_29267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29252)
static void C_fcall f_29252(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29246)
static void C_fcall f_29246(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29198)
static void C_fcall f_29198(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29166)
static void C_fcall f_29166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29173)
static void C_ccall f_29173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29108)
static void C_fcall f_29108(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29116)
static void C_ccall f_29116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29098)
static void C_fcall f_29098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29106)
static void C_ccall f_29106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29092)
static void C_fcall f_29092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29080)
static void C_fcall f_29080(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29077)
static void C_ccall f_29077(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29059)
static void C_fcall f_29059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29063)
static void C_ccall f_29063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28954)
static void C_fcall f_28954(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28944)
static void C_fcall f_28944(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28932)
static void C_fcall f_28932(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28909)
static void C_ccall f_28909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28900)
static void C_fcall f_28900(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28864)
static void C_fcall f_28864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28843)
static void C_ccall f_28843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28647)
static void C_ccall f_28647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28651)
static void C_fcall f_28651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28800)
static void C_fcall f_28800(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28826)
static void C_ccall f_28826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28811)
static void C_ccall f_28811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28657)
static void C_ccall f_28657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28662)
static void C_ccall f_28662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28666)
static void C_ccall f_28666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28669)
static void C_ccall f_28669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28672)
static void C_ccall f_28672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28675)
static void C_ccall f_28675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28678)
static void C_ccall f_28678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28681)
static void C_ccall f_28681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28686)
static void C_fcall f_28686(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28780)
static void C_ccall f_28780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28787)
static void C_ccall f_28787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28696)
static void C_ccall f_28696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28717)
static void C_ccall f_28717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28721)
static void C_ccall f_28721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28725)
static void C_ccall f_28725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28727)
static void C_fcall f_28727(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28737)
static void C_ccall f_28737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28699)
static void C_ccall f_28699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28702)
static void C_ccall f_28702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28521)
static void C_ccall f_28521(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28527)
static void C_ccall f_28527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28531)
static void C_ccall f_28531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28549)
static void C_ccall f_28549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28552)
static void C_ccall f_28552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28556)
static void C_ccall f_28556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28559)
static void C_ccall f_28559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28611)
static void C_fcall f_28611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28622)
static void C_ccall f_28622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28562)
static void C_ccall f_28562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28572)
static void C_ccall f_28572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28574)
static void C_fcall f_28574(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28418)
static void C_ccall f_28418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28442)
static void C_ccall f_28442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28446)
static void C_ccall f_28446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28472)
static void C_fcall f_28472(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28482)
static void C_ccall f_28482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28519)
static void C_ccall f_28519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28511)
static void C_ccall f_28511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28449)
static void C_ccall f_28449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28419)
static void C_fcall f_28419(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28423)
static void C_ccall f_28423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28426)
static void C_ccall f_28426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28588)
static void C_ccall f_28588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28591)
static void C_fcall f_28591(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28598)
static void C_ccall f_28598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28532)
static void C_fcall f_28532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28536)
static void C_ccall f_28536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28539)
static void C_ccall f_28539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28008)
static void C_ccall f_28008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28008)
static void C_ccall f_28008r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_28387)
static void C_fcall f_28387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28381)
static void C_ccall f_28381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28012)
static void C_ccall f_28012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28365)
static void C_ccall f_28365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28015)
static void C_ccall f_28015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28351)
static void C_ccall f_28351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28347)
static void C_ccall f_28347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28018)
static void C_fcall f_28018(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28340)
static void C_ccall f_28340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28336)
static void C_ccall f_28336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28021)
static void C_fcall f_28021(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28024)
static void C_fcall f_28024(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8669)
static void C_fcall f_8669(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8692)
static void C_ccall f_8692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8682)
static void C_fcall f_8682(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28324)
static void C_ccall f_28324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28316)
static void C_ccall f_28316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28320)
static void C_ccall f_28320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28308)
static void C_ccall f_28308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28312)
static void C_ccall f_28312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28182)
static void C_fcall f_28182(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28297)
static void C_ccall f_28297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28301)
static void C_ccall f_28301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28289)
static void C_ccall f_28289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28293)
static void C_ccall f_28293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28185)
static void C_fcall f_28185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28189)
static void C_ccall f_28189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28194)
static void C_fcall f_28194(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28204)
static void C_fcall f_28204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28207)
static void C_ccall f_28207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28088)
static void C_ccall f_28088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28151)
static void C_fcall f_28151(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28172)
static void C_ccall f_28172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28113)
static void C_fcall f_28113(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28142)
static void C_ccall f_28142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28091)
static void C_ccall f_28091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28108)
static void C_ccall f_28108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28104)
static void C_ccall f_28104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27554)
static void C_ccall f_27554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27558)
static void C_ccall f_27558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27546)
static void C_ccall f_27546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27474)
static void C_ccall f_27474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27532)
static void C_ccall f_27532(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27478)
static void C_ccall f_27478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27486)
static void C_fcall f_27486(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27496)
static void C_ccall f_27496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27499)
static void C_ccall f_27499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28068)
static void C_fcall f_28068(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28038)
static void C_fcall f_28038(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28027)
static void C_ccall f_28027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27951)
static void C_ccall f_27951(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27959)
static void C_ccall f_27959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27963)
static void C_ccall f_27963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27967)
static void C_ccall f_27967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27973)
static void C_fcall f_27973(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27983)
static void C_ccall f_27983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27739)
static void C_ccall f_27739(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27807)
static void C_ccall f_27807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27810)
static void C_ccall f_27810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27813)
static void C_ccall f_27813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27816)
static void C_ccall f_27816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27819)
static void C_ccall f_27819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27917)
static void C_fcall f_27917(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27927)
static void C_ccall f_27927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27885)
static void C_fcall f_27885(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27895)
static void C_ccall f_27895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27836)
static void C_fcall f_27836(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27855)
static void C_fcall f_27855(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27865)
static void C_ccall f_27865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27846)
static void C_ccall f_27846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27822)
static void C_ccall f_27822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27775)
static void C_fcall f_27775(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27785)
static void C_ccall f_27785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27758)
static void C_fcall f_27758(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27765)
static void C_ccall f_27765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27741)
static void C_fcall f_27741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27748)
static void C_ccall f_27748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27560)
static void C_ccall f_27560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27568)
static void C_ccall f_27568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27572)
static void C_ccall f_27572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27574)
static void C_fcall f_27574(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27584)
static void C_fcall f_27584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27715)
static void C_ccall f_27715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27664)
static void C_ccall f_27664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27667)
static void C_ccall f_27667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27678)
static void C_ccall f_27678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27630)
static void C_ccall f_27630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27599)
static void C_ccall f_27599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27602)
static void C_ccall f_27602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27587)
static void C_ccall f_27587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27154)
static void C_ccall f_27154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27468)
static void C_ccall f_27468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27397)
static void C_ccall f_27397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27399)
static void C_fcall f_27399(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27421)
static void C_fcall f_27421(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27167)
static void C_ccall f_27167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27240)
static void C_fcall f_27240(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27393)
static void C_ccall f_27393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27377)
static void C_ccall f_27377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27329)
static void C_fcall f_27329(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27343)
static void C_fcall f_27343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27296)
static void C_ccall f_27296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27271)
static void C_fcall f_27271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27170)
static void C_ccall f_27170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27178)
static void C_fcall f_27178(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25681)
static void C_ccall f_25681(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_25681)
static void C_ccall f_25681r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_27131)
static void C_ccall f_27131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27146)
static void C_ccall f_27146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27138)
static void C_ccall f_27138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27102)
static void C_ccall f_27102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27106)
static void C_ccall f_27106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27067)
static void C_ccall f_27067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27071)
static void C_ccall f_27071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27032)
static void C_ccall f_27032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27036)
static void C_ccall f_27036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26997)
static void C_ccall f_26997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27001)
static void C_ccall f_27001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26962)
static void C_ccall f_26962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26966)
static void C_ccall f_26966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26927)
static void C_ccall f_26927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26931)
static void C_ccall f_26931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25685)
static void C_fcall f_25685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26891)
static void C_ccall f_26891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26906)
static void C_ccall f_26906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26898)
static void C_ccall f_26898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26862)
static void C_ccall f_26862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26866)
static void C_ccall f_26866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26827)
static void C_ccall f_26827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26831)
static void C_ccall f_26831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26792)
static void C_ccall f_26792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26796)
static void C_ccall f_26796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26757)
static void C_ccall f_26757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26761)
static void C_ccall f_26761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26722)
static void C_ccall f_26722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26726)
static void C_ccall f_26726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26687)
static void C_ccall f_26687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26691)
static void C_ccall f_26691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25688)
static void C_fcall f_25688(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26651)
static void C_ccall f_26651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26666)
static void C_ccall f_26666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26658)
static void C_ccall f_26658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26622)
static void C_ccall f_26622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26626)
static void C_ccall f_26626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26587)
static void C_ccall f_26587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26591)
static void C_ccall f_26591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26552)
static void C_ccall f_26552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26556)
static void C_ccall f_26556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26517)
static void C_ccall f_26517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26521)
static void C_ccall f_26521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26482)
static void C_ccall f_26482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26486)
static void C_ccall f_26486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26447)
static void C_ccall f_26447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26451)
static void C_ccall f_26451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25691)
static void C_fcall f_25691(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26411)
static void C_ccall f_26411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26426)
static void C_ccall f_26426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26418)
static void C_ccall f_26418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26382)
static void C_ccall f_26382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26386)
static void C_ccall f_26386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26347)
static void C_ccall f_26347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26351)
static void C_ccall f_26351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26312)
static void C_ccall f_26312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26316)
static void C_ccall f_26316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26277)
static void C_ccall f_26277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26281)
static void C_ccall f_26281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26242)
static void C_ccall f_26242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26246)
static void C_ccall f_26246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26207)
static void C_ccall f_26207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26211)
static void C_ccall f_26211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25694)
static void C_fcall f_25694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26171)
static void C_ccall f_26171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26186)
static void C_ccall f_26186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26178)
static void C_ccall f_26178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26142)
static void C_ccall f_26142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26146)
static void C_ccall f_26146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26107)
static void C_ccall f_26107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26111)
static void C_ccall f_26111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26072)
static void C_ccall f_26072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26076)
static void C_ccall f_26076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26037)
static void C_ccall f_26037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26041)
static void C_ccall f_26041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26002)
static void C_ccall f_26002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26006)
static void C_ccall f_26006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25967)
static void C_ccall f_25967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25971)
static void C_ccall f_25971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25697)
static void C_fcall f_25697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25931)
static void C_ccall f_25931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25946)
static void C_ccall f_25946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25938)
static void C_ccall f_25938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25902)
static void C_ccall f_25902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25906)
static void C_ccall f_25906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25867)
static void C_ccall f_25867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25871)
static void C_ccall f_25871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25832)
static void C_ccall f_25832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25836)
static void C_ccall f_25836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25797)
static void C_ccall f_25797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25801)
static void C_ccall f_25801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25762)
static void C_ccall f_25762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25766)
static void C_ccall f_25766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25727)
static void C_ccall f_25727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25731)
static void C_ccall f_25731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25700)
static void C_fcall f_25700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25703)
static void C_ccall f_25703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25449)
static void C_fcall f_25449(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25455)
static void C_ccall f_25455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25458)
static void C_ccall f_25458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25662)
static void C_ccall f_25662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25647)
static void C_ccall f_25647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25582)
static void C_ccall f_25582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8437)
static void C_fcall f_8437(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25558)
static void C_ccall f_25558(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25562)
static void C_ccall f_25562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25548)
static void C_ccall f_25548(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25556)
static void C_ccall f_25556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25534)
static void C_fcall f_25534(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25460)
static void C_fcall f_25460(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25529)
static void C_ccall f_25529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25464)
static void C_ccall f_25464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25501)
static void C_fcall f_25501(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25475)
static void C_fcall f_25475(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25420)
static void C_ccall f_25420(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25424)
static void C_ccall f_25424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25435)
static void C_ccall f_25435(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25433)
static void C_ccall f_25433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25389)
static void C_ccall f_25389(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25393)
static void C_ccall f_25393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25404)
static void C_ccall f_25404(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25402)
static void C_ccall f_25402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25371)
static void C_ccall f_25371(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25379)
static void C_ccall f_25379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25387)
static void C_ccall f_25387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25361)
static void C_ccall f_25361(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25369)
static void C_ccall f_25369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25302)
static void C_ccall f_25302(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25309)
static void C_ccall f_25309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25312)
static void C_ccall f_25312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25315)
static void C_ccall f_25315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25320)
static void C_fcall f_25320(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25264)
static void C_ccall f_25264(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25272)
static void C_ccall f_25272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25276)
static void C_ccall f_25276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25296)
static void C_ccall f_25296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25280)
static void C_ccall f_25280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25288)
static void C_ccall f_25288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25284)
static void C_ccall f_25284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25255)
static void C_ccall f_25255(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25246)
static void C_fcall f_25246(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25237)
static void C_ccall f_25237(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25228)
static void C_fcall f_25228(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25219)
static void C_ccall f_25219(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25210)
static void C_fcall f_25210(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25201)
static void C_ccall f_25201(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25186)
static void C_fcall f_25186(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25180)
static void C_fcall f_25180(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25135)
static void C_fcall f_25135(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7641)
static void C_ccall f_7641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25093)
static void C_fcall f_25093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25103)
static void C_ccall f_25103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24245)
static void C_ccall f_24245(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7569)
static void C_ccall f_7569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24239)
static void C_ccall f_24239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24214)
static void C_ccall f_24214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23898)
static void C_ccall f_23898(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_23898)
static void C_ccall f_23898r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23902)
static void C_fcall f_23902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23959)
static void C_ccall f_23959(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23931)
static void C_ccall f_23931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23996)
static void C_ccall f_23996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24033)
static void C_ccall f_24033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24036)
static void C_ccall f_24036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24196)
static void C_ccall f_24196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24043)
static void C_ccall f_24043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24046)
static void C_ccall f_24046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24048)
static void C_fcall f_24048(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24058)
static void C_ccall f_24058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24061)
static void C_ccall f_24061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24094)
static void C_ccall f_24094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24182)
static void C_ccall f_24182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24097)
static void C_ccall f_24097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24168)
static void C_ccall f_24168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24154)
static void C_ccall f_24154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24134)
static void C_ccall f_24134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24137)
static void C_ccall f_24137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24114)
static void C_ccall f_24114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24117)
static void C_ccall f_24117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24100)
static void C_ccall f_24100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23997)
static void C_fcall f_23997(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24003)
static void C_fcall f_24003(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24013)
static void C_fcall f_24013(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23882)
static void C_fcall f_23882(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23886)
static void C_ccall f_23886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23893)
static void C_ccall f_23893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23877)
static void C_fcall f_23877(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23730)
static void C_ccall f_23730(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_23730)
static void C_ccall f_23730r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23734)
static void C_fcall f_23734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23803)
static void C_ccall f_23803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23846)
static void C_ccall f_23846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23850)
static void C_ccall f_23850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23839)
static void C_ccall f_23839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23826)
static void C_ccall f_23826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23745)
static void C_ccall f_23745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23788)
static void C_ccall f_23788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23792)
static void C_ccall f_23792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23781)
static void C_ccall f_23781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23768)
static void C_ccall f_23768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23564)
static void C_ccall f_23564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23665)
static void C_ccall f_23665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23714)
static void C_ccall f_23714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23710)
static void C_ccall f_23710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23682)
static void C_ccall f_23682(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23617)
static void C_fcall f_23617(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23626)
static void C_fcall f_23626(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23610)
static void C_ccall f_23610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23429)
static void C_ccall f_23429(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23555)
static void C_ccall f_23555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23551)
static void C_ccall f_23551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23529)
static void C_ccall f_23529(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23459)
static void C_fcall f_23459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23475)
static void C_fcall f_23475(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23384)
static void C_ccall f_23384(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23427)
static void C_ccall f_23427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23416)
static void C_ccall f_23416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23268)
static void C_ccall f_23268(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23382)
static void C_ccall f_23382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23283)
static void C_fcall f_23283(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23313)
static void C_fcall f_23313(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23332)
static void C_ccall f_23332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23317)
static void C_ccall f_23317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23296)
static void C_fcall f_23296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23146)
static void C_ccall f_23146(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23266)
static void C_ccall f_23266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23161)
static void C_fcall f_23161(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23191)
static void C_fcall f_23191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23210)
static void C_ccall f_23210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23195)
static void C_ccall f_23195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23174)
static void C_fcall f_23174(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23049)
static void C_ccall f_23049(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23144)
static void C_ccall f_23144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23064)
static void C_fcall f_23064(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23110)
static void C_ccall f_23110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23095)
static void C_ccall f_23095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23077)
static void C_fcall f_23077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22996)
static void C_fcall f_22996(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23034)
static void C_ccall f_23034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23041)
static void C_ccall f_23041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23019)
static void C_ccall f_23019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22994)
static void C_ccall f_22994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22975)
static void C_fcall f_22975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22962)
static void C_ccall f_22962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22944)
static void C_ccall f_22944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22897)
static void C_fcall f_22897(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22901)
static void C_ccall f_22901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22926)
static void C_ccall f_22926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22913)
static void C_ccall f_22913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22869)
static void C_ccall f_22869(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22869)
static void C_ccall f_22869r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22850)
static void C_ccall f_22850(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22850)
static void C_ccall f_22850r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22809)
static void C_ccall f_22809(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22809)
static void C_ccall f_22809r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22790)
static void C_ccall f_22790(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22790)
static void C_ccall f_22790r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22562)
static void C_ccall f_22562(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22562)
static void C_ccall f_22562r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22767)
static void C_ccall f_22767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22782)
static void C_ccall f_22782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22774)
static void C_ccall f_22774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22738)
static void C_ccall f_22738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22742)
static void C_ccall f_22742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22703)
static void C_ccall f_22703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22707)
static void C_ccall f_22707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22566)
static void C_fcall f_22566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22667)
static void C_ccall f_22667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22682)
static void C_ccall f_22682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22674)
static void C_ccall f_22674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22638)
static void C_ccall f_22638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22642)
static void C_ccall f_22642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22603)
static void C_ccall f_22603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22607)
static void C_ccall f_22607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22569)
static void C_fcall f_22569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22572)
static void C_ccall f_22572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22575)
static void C_fcall f_22575(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22520)
static void C_ccall f_22520(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22520)
static void C_ccall f_22520r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22549)
static void C_ccall f_22549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22534)
static void C_ccall f_22534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22465)
static void C_ccall f_22465(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22476)
static void C_ccall f_22476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22478)
static void C_fcall f_22478(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22506)
static void C_ccall f_22506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22366)
static void C_ccall f_22366(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_22366)
static void C_ccall f_22366r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_22370)
static void C_fcall f_22370(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22373)
static void C_ccall f_22373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22438)
static void C_ccall f_22438(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22375)
static void C_fcall f_22375(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22391)
static void C_ccall f_22391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22095)
static void C_ccall f_22095(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22095)
static void C_ccall f_22095r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22128)
static void C_ccall f_22128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22113)
static void C_ccall f_22113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22074)
static void C_ccall f_22074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22039)
static void C_ccall f_22039(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22039)
static void C_ccall f_22039r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22043)
static void C_fcall f_22043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21831)
static void C_ccall f_21831(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21831)
static void C_ccall f_21831r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21844)
static void C_fcall f_21844(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21926)
static void C_fcall f_21926(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21929)
static void C_ccall f_21929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21937)
static void C_fcall f_21937(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21949)
static void C_fcall f_21949(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21970)
static void C_ccall f_21970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21978)
static void C_ccall f_21978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21865)
static void C_ccall f_21865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21870)
static void C_fcall f_21870(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21902)
static void C_ccall f_21902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21724)
static void C_ccall f_21724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21724)
static void C_ccall f_21724r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21811)
static void C_ccall f_21811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21731)
static void C_fcall f_21731(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21740)
static void C_fcall f_21740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21787)
static void C_ccall f_21787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21753)
static void C_fcall f_21753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21779)
static void C_ccall f_21779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21591)
static void C_ccall f_21591(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_21591)
static void C_ccall f_21591r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_21595)
static void C_fcall f_21595(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21598)
static void C_fcall f_21598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21702)
static void C_ccall f_21702(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21600)
static void C_fcall f_21600(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21607)
static void C_ccall f_21607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21649)
static void C_ccall f_21649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21656)
static void C_ccall f_21656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21630)
static void C_ccall f_21630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_21528)
static void C_fcall f_21528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21574)
static void C_ccall f_21574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21531)
static void C_fcall f_21531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21567)
static void C_ccall f_21567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21534)
static void C_fcall f_21534(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21547)
static void C_ccall f_21547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21478)
static void C_ccall f_21478(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21478)
static void C_ccall f_21478r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21482)
static void C_ccall f_21482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21392)
static void C_fcall f_21392(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21396)
static void C_ccall f_21396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21399)
static void C_ccall f_21399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21408)
static void C_fcall f_21408(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21430)
static void C_ccall f_21430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21377)
static void C_ccall f_21377(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21347)
static void C_ccall f_21347(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21111)
static void C_ccall f_21111(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21111)
static void C_ccall f_21111r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21324)
static void C_ccall f_21324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21339)
static void C_ccall f_21339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21331)
static void C_ccall f_21331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21295)
static void C_ccall f_21295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21299)
static void C_ccall f_21299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21260)
static void C_ccall f_21260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21264)
static void C_ccall f_21264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21115)
static void C_fcall f_21115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21224)
static void C_ccall f_21224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21239)
static void C_ccall f_21239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21231)
static void C_ccall f_21231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21195)
static void C_ccall f_21195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21199)
static void C_ccall f_21199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21160)
static void C_ccall f_21160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21164)
static void C_ccall f_21164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21118)
static void C_fcall f_21118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21121)
static void C_ccall f_21121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21132)
static void C_ccall f_21132(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21071)
static void C_ccall f_21071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21075)
static void C_ccall f_21075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21105)
static void C_ccall f_21105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21086)
static void C_ccall f_21086(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21094)
static void C_ccall f_21094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21050)
static void C_ccall f_21050(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21062)
static void C_ccall f_21062(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21007)
static void C_ccall f_21007(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21007)
static void C_ccall f_21007r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21037)
static void C_ccall f_21037(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20964)
static void C_ccall f_20964(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20964)
static void C_ccall f_20964r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20994)
static void C_ccall f_20994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20895)
static void C_ccall f_20895(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20895)
static void C_ccall f_20895r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20939)
static void C_ccall f_20939(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20826)
static void C_ccall f_20826(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20826)
static void C_ccall f_20826r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20870)
static void C_ccall f_20870(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20820)
static void C_ccall f_20820(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20814)
static void C_ccall f_20814(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20793)
static void C_ccall f_20793(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20805)
static void C_ccall f_20805(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20778)
static void C_ccall f_20778(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20667)
static void C_ccall f_20667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_20667)
static void C_ccall f_20667r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_20742)
static void C_ccall f_20742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20671)
static void C_fcall f_20671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20711)
static void C_ccall f_20711(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20700)
static void C_ccall f_20700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20685)
static void C_ccall f_20685(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20693)
static void C_ccall f_20693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20633)
static void C_ccall f_20633(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_20633)
static void C_ccall f_20633r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_20645)
static void C_ccall f_20645(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19586)
static void C_ccall f_19586(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19586)
static void C_ccall f_19586r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20610)
static void C_ccall f_20610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20625)
static void C_ccall f_20625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20617)
static void C_ccall f_20617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20581)
static void C_ccall f_20581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20585)
static void C_ccall f_20585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20546)
static void C_ccall f_20546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20550)
static void C_ccall f_20550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19596)
static void C_fcall f_19596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20510)
static void C_ccall f_20510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20525)
static void C_ccall f_20525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20517)
static void C_ccall f_20517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20481)
static void C_ccall f_20481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20485)
static void C_ccall f_20485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20446)
static void C_ccall f_20446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20450)
static void C_ccall f_20450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19599)
static void C_fcall f_19599(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19602)
static void C_ccall f_19602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19607)
static void C_ccall f_19607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20339)
static void C_fcall f_20339(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20362)
static void C_fcall f_20362(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20415)
static void C_ccall f_20415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20397)
static void C_fcall f_20397(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20390)
static void C_ccall f_20390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20372)
static void C_ccall f_20372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20349)
static void C_ccall f_20349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19801)
static void C_ccall f_19801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20301)
static void C_fcall f_20301(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20323)
static void C_ccall f_20323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20307)
static void C_ccall f_20307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20315)
static void C_ccall f_20315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20319)
static void C_ccall f_20319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20305)
static void C_ccall f_20305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20295)
static void C_ccall f_20295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19804)
static void C_fcall f_19804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20172)
static void C_fcall f_20172(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20196)
static void C_ccall f_20196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20258)
static void C_fcall f_20258(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20199)
static void C_ccall f_20199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20215)
static void C_fcall f_20215(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20240)
static void C_ccall f_20240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20206)
static void C_ccall f_20206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20183)
static void C_ccall f_20183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19807)
static void C_ccall f_19807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20158)
static void C_ccall f_20158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19811)
static void C_ccall f_19811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19855)
static void C_ccall f_19855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19858)
static void C_ccall f_19858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20139)
static void C_fcall f_20139(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20149)
static void C_ccall f_20149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19861)
static void C_ccall f_19861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20077)
static void C_fcall f_20077(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20087)
static void C_ccall f_20087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20090)
static void C_ccall f_20090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20110)
static void C_ccall f_20110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20112)
static void C_fcall f_20112(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20122)
static void C_ccall f_20122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20096)
static void C_ccall f_20096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20099)
static void C_ccall f_20099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19864)
static void C_ccall f_19864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19872)
static void C_fcall f_19872(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19885)
static void C_ccall f_19885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19759)
static void C_ccall f_19759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19768)
static void C_fcall f_19768(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19790)
static void C_ccall f_19790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19779)
static void C_ccall f_19779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19888)
static void C_ccall f_19888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20048)
static void C_ccall f_20048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20050)
static void C_fcall f_20050(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20060)
static void C_ccall f_20060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19894)
static void C_ccall f_19894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20021)
static void C_ccall f_20021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20023)
static void C_fcall f_20023(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20033)
static void C_ccall f_20033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19897)
static void C_ccall f_19897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19909)
static void C_fcall f_19909(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19935)
static void C_ccall f_19935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19941)
static void C_ccall f_19941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19947)
static void C_ccall f_19947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19989)
static void C_ccall f_19989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20001)
static void C_ccall f_20001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19993)
static void C_ccall f_19993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19950)
static void C_fcall f_19950(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19960)
static void C_ccall f_19960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19962)
static void C_fcall f_19962(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19972)
static void C_ccall f_19972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19953)
static void C_ccall f_19953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19922)
static void C_ccall f_19922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19900)
static void C_ccall f_19900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19867)
static void C_ccall f_19867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19814)
static void C_ccall f_19814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19837)
static void C_ccall f_19837(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19826)
static void C_ccall f_19826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19691)
static void C_fcall f_19691(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19739)
static void C_ccall f_19739(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19701)
static void C_ccall f_19701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19729)
static void C_ccall f_19729(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19704)
static void C_ccall f_19704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19609)
static void C_fcall f_19609(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8630)
static void C_fcall f_8630(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8650)
static void C_ccall f_8650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8640)
static void C_fcall f_8640(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19681)
static void C_fcall f_19681(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19613)
static void C_ccall f_19613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19631)
static void C_ccall f_19631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19663)
static void C_ccall f_19663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19492)
static void C_ccall f_19492(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19496)
static void C_ccall f_19496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19525)
static void C_ccall f_19525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19530)
static void C_fcall f_19530(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19555)
static void C_fcall f_19555(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19540)
static void C_ccall f_19540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18974)
static void C_ccall f_18974(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18974)
static void C_ccall f_18974r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19245)
static void C_ccall f_19245(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19249)
static void C_ccall f_19249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19254)
static void C_ccall f_19254(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19254)
static void C_ccall f_19254r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19460)
static void C_ccall f_19460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19475)
static void C_ccall f_19475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19467)
static void C_ccall f_19467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19431)
static void C_ccall f_19431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19435)
static void C_ccall f_19435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19396)
static void C_ccall f_19396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19400)
static void C_ccall f_19400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19258)
static void C_fcall f_19258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19360)
static void C_ccall f_19360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19375)
static void C_ccall f_19375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19367)
static void C_ccall f_19367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19331)
static void C_ccall f_19331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19335)
static void C_ccall f_19335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19296)
static void C_ccall f_19296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19300)
static void C_ccall f_19300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19261)
static void C_fcall f_19261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19264)
static void C_ccall f_19264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19267)
static void C_fcall f_19267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19236)
static void C_ccall f_19236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18978)
static void C_ccall f_18978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19205)
static void C_ccall f_19205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19220)
static void C_ccall f_19220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19212)
static void C_ccall f_19212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19176)
static void C_ccall f_19176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19180)
static void C_ccall f_19180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19141)
static void C_ccall f_19141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19145)
static void C_ccall f_19145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18981)
static void C_fcall f_18981(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19105)
static void C_ccall f_19105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19120)
static void C_ccall f_19120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19112)
static void C_ccall f_19112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19076)
static void C_ccall f_19076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19080)
static void C_ccall f_19080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19041)
static void C_ccall f_19041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19045)
static void C_ccall f_19045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18984)
static void C_fcall f_18984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18987)
static void C_ccall f_18987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18990)
static void C_ccall f_18990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19002)
static void C_ccall f_19002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19020)
static void C_ccall f_19020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19008)
static void C_ccall f_19008(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18996)
static void C_ccall f_18996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18911)
static void C_fcall f_18911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18571)
static void C_ccall f_18571(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18753)
static void C_ccall f_18753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18757)
static void C_ccall f_18757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18759)
static void C_fcall f_18759(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18684)
static void C_fcall f_18684(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18694)
static void C_fcall f_18694(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18701)
static void C_fcall f_18701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18769)
static void C_ccall f_18769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18772)
static void C_ccall f_18772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18776)
static void C_ccall f_18776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18796)
static void C_fcall f_18796(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18812)
static void C_ccall f_18812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18779)
static void C_ccall f_18779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18574)
static void C_fcall f_18574(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18586)
static void C_fcall f_18586(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18622)
static void C_ccall f_18622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18642)
static void C_ccall f_18642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18647)
static void C_fcall f_18647(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18084)
static void C_ccall f_18084(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18084)
static void C_ccall f_18084r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18011)
static void C_fcall f_18011(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17856)
static void C_ccall f_17856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17862)
static void C_ccall f_17862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17947)
static void C_fcall f_17947(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17874)
static void C_ccall f_17874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17890)
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17894)
static void C_fcall f_17894(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17897)
static void C_fcall f_17897(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17877)
static void C_ccall f_17877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17888)
static void C_ccall f_17888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18028)
static void C_ccall f_18028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18565)
static void C_ccall f_18565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18088)
static void C_ccall f_18088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18534)
static void C_ccall f_18534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18549)
static void C_ccall f_18549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18541)
static void C_ccall f_18541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18505)
static void C_ccall f_18505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18509)
static void C_ccall f_18509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18470)
static void C_ccall f_18470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18474)
static void C_ccall f_18474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18435)
static void C_ccall f_18435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18439)
static void C_ccall f_18439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18091)
static void C_fcall f_18091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18399)
static void C_ccall f_18399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18414)
static void C_ccall f_18414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18406)
static void C_ccall f_18406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18370)
static void C_ccall f_18370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18374)
static void C_ccall f_18374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18335)
static void C_ccall f_18335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18339)
static void C_ccall f_18339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18300)
static void C_ccall f_18300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18304)
static void C_ccall f_18304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18094)
static void C_fcall f_18094(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18264)
static void C_ccall f_18264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18279)
static void C_ccall f_18279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18271)
static void C_ccall f_18271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18235)
static void C_ccall f_18235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18239)
static void C_ccall f_18239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18200)
static void C_ccall f_18200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18204)
static void C_ccall f_18204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18165)
static void C_ccall f_18165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18169)
static void C_ccall f_18169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18097)
static void C_fcall f_18097(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18100)
static void C_ccall f_18100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18103)
static void C_ccall f_18103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18136)
static void C_ccall f_18136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18144)
static void C_ccall f_18144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18109)
static void C_ccall f_18109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18122)
static void C_ccall f_18122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18112)
static void C_fcall f_18112(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18115)
static void C_ccall f_18115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17651)
static void C_ccall f_17651(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17655)
static void C_ccall f_17655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17658)
static void C_ccall f_17658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17661)
static void C_ccall f_17661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17830)
static void C_ccall f_17830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17843)
static void C_ccall f_17843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17847)
static void C_ccall f_17847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17667)
static void C_ccall f_17667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17823)
static void C_ccall f_17823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17804)
static void C_ccall f_17804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17811)
static void C_ccall f_17811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17815)
static void C_ccall f_17815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17673)
static void C_fcall f_17673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17679)
static void C_ccall f_17679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17763)
static void C_ccall f_17763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17765)
static void C_fcall f_17765(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17787)
static void C_ccall f_17787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17794)
static void C_ccall f_17794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17798)
static void C_ccall f_17798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17784)
static void C_fcall f_17784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17780)
static void C_ccall f_17780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17721)
static void C_ccall f_17721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17738)
static void C_fcall f_17738(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17748)
static void C_ccall f_17748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17724)
static void C_ccall f_17724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17683)
static void C_fcall f_17683(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17691)
static void C_ccall f_17691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17693)
static void C_fcall f_17693(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17714)
static void C_ccall f_17714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17551)
static void C_fcall f_17551(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17649)
static void C_ccall f_17649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17608)
static void C_fcall f_17608(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17641)
static void C_ccall f_17641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17637)
static void C_ccall f_17637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17622)
static void C_ccall f_17622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17558)
static void C_ccall f_17558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17566)
static void C_fcall f_17566(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17599)
static void C_ccall f_17599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17583)
static void C_ccall f_17583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16784)
static void C_ccall f_16784(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16784)
static void C_ccall f_16784r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17101)
static void C_ccall f_17101(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17108)
static void C_fcall f_17108(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17513)
static void C_ccall f_17513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17528)
static void C_ccall f_17528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17520)
static void C_ccall f_17520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17484)
static void C_ccall f_17484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17488)
static void C_ccall f_17488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17449)
static void C_ccall f_17449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17453)
static void C_ccall f_17453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17414)
static void C_ccall f_17414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17418)
static void C_ccall f_17418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17111)
static void C_fcall f_17111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17378)
static void C_ccall f_17378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17393)
static void C_ccall f_17393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17385)
static void C_ccall f_17385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17349)
static void C_ccall f_17349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17353)
static void C_ccall f_17353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17314)
static void C_ccall f_17314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17318)
static void C_ccall f_17318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17279)
static void C_ccall f_17279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17283)
static void C_ccall f_17283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17114)
static void C_fcall f_17114(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17243)
static void C_ccall f_17243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17258)
static void C_ccall f_17258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17250)
static void C_ccall f_17250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17214)
static void C_ccall f_17214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17218)
static void C_ccall f_17218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17179)
static void C_ccall f_17179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17183)
static void C_ccall f_17183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17144)
static void C_ccall f_17144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17148)
static void C_ccall f_17148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17117)
static void C_fcall f_17117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17120)
static void C_ccall f_17120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16788)
static void C_ccall f_16788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16791)
static void C_ccall f_16791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17065)
static void C_ccall f_17065(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17069)
static void C_ccall f_17069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17072)
static void C_ccall f_17072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17075)
static void C_ccall f_17075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17078)
static void C_ccall f_17078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17091)
static void C_ccall f_17091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17081)
static void C_fcall f_17081(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16797)
static void C_ccall f_16797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17060)
static void C_ccall f_17060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16804)
static void C_fcall f_16804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17035)
static void C_ccall f_17035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17050)
static void C_ccall f_17050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17042)
static void C_ccall f_17042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17006)
static void C_ccall f_17006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17010)
static void C_ccall f_17010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16971)
static void C_ccall f_16971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16975)
static void C_ccall f_16975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16807)
static void C_fcall f_16807(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16935)
static void C_ccall f_16935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16950)
static void C_ccall f_16950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16942)
static void C_ccall f_16942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16906)
static void C_ccall f_16906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16910)
static void C_ccall f_16910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16871)
static void C_ccall f_16871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16875)
static void C_ccall f_16875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16810)
static void C_fcall f_16810(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16813)
static void C_ccall f_16813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16828)
static void C_ccall f_16828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16850)
static void C_ccall f_16850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16834)
static void C_ccall f_16834(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16842)
static void C_ccall f_16842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16816)
static void C_ccall f_16816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16819)
static void C_ccall f_16819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16701)
static void C_fcall f_16701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16692)
static void C_fcall f_16692(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16683)
static void C_fcall f_16683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16665)
static void C_fcall f_16665(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16647)
static void C_fcall f_16647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16629)
static void C_fcall f_16629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16620)
static void C_fcall f_16620(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16611)
static void C_fcall f_16611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16389)
static void C_ccall f_16389(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16439)
static void C_ccall f_16439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16584)
static void C_ccall f_16584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16465)
static void C_ccall f_16465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16580)
static void C_ccall f_16580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16565)
static void C_ccall f_16565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16546)
static void C_ccall f_16546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16519)
static void C_ccall f_16519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16472)
static void C_ccall f_16472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16442)
static void C_fcall f_16442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16392)
static void C_ccall f_16392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16398)
static void C_fcall f_16398(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16414)
static void C_ccall f_16414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16417)
static void C_ccall f_16417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15915)
static void C_ccall f_15915(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15915)
static void C_ccall f_15915r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16379)
static void C_ccall f_16379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15919)
static void C_fcall f_15919(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16351)
static void C_ccall f_16351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16366)
static void C_ccall f_16366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16358)
static void C_ccall f_16358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16322)
static void C_ccall f_16322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16326)
static void C_ccall f_16326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16287)
static void C_ccall f_16287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16291)
static void C_ccall f_16291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16252)
static void C_ccall f_16252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16256)
static void C_ccall f_16256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15922)
static void C_fcall f_15922(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16216)
static void C_ccall f_16216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16231)
static void C_ccall f_16231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16223)
static void C_ccall f_16223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16187)
static void C_ccall f_16187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16191)
static void C_ccall f_16191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16152)
static void C_ccall f_16152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16156)
static void C_ccall f_16156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16117)
static void C_ccall f_16117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16121)
static void C_ccall f_16121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15925)
static void C_fcall f_15925(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16081)
static void C_ccall f_16081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16096)
static void C_ccall f_16096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16088)
static void C_ccall f_16088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16052)
static void C_ccall f_16052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16056)
static void C_ccall f_16056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16017)
static void C_ccall f_16017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16021)
static void C_ccall f_16021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15982)
static void C_ccall f_15982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15986)
static void C_ccall f_15986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15928)
static void C_fcall f_15928(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15931)
static void C_ccall f_15931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15934)
static void C_ccall f_15934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15949)
static void C_ccall f_15949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15961)
static void C_ccall f_15961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15940)
static void C_ccall f_15940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15943)
static void C_ccall f_15943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15839)
static void C_ccall f_15839(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15843)
static void C_ccall f_15843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15862)
static void C_ccall f_15862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15872)
static void C_ccall f_15872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15874)
static void C_fcall f_15874(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15891)
static void C_ccall f_15891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15894)
static void C_ccall f_15894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15905)
static void C_ccall f_15905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15846)
static void C_ccall f_15846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15576)
static void C_ccall f_15576(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15576)
static void C_ccall f_15576r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15829)
static void C_ccall f_15829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15580)
static void C_fcall f_15580(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15801)
static void C_ccall f_15801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15816)
static void C_ccall f_15816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15808)
static void C_ccall f_15808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15772)
static void C_ccall f_15772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15776)
static void C_ccall f_15776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15737)
static void C_ccall f_15737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15741)
static void C_ccall f_15741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15583)
static void C_fcall f_15583(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15701)
static void C_ccall f_15701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15716)
static void C_ccall f_15716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15708)
static void C_ccall f_15708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15672)
static void C_ccall f_15672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15676)
static void C_ccall f_15676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15637)
static void C_ccall f_15637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15641)
static void C_ccall f_15641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15586)
static void C_fcall f_15586(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15589)
static void C_ccall f_15589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15592)
static void C_ccall f_15592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15604)
static void C_ccall f_15604(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15616)
static void C_ccall f_15616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15598)
static void C_ccall f_15598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15540)
static void C_ccall f_15540(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15544)
static void C_ccall f_15544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15566)
static void C_ccall f_15566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15560)
static void C_ccall f_15560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15553)
static void C_ccall f_15553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15293)
static void C_ccall f_15293(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15293)
static void C_ccall f_15293r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15297)
static void C_fcall f_15297(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15510)
static void C_ccall f_15510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15525)
static void C_ccall f_15525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15517)
static void C_ccall f_15517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15481)
static void C_ccall f_15481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15485)
static void C_ccall f_15485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15446)
static void C_ccall f_15446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15450)
static void C_ccall f_15450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15300)
static void C_fcall f_15300(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15410)
static void C_ccall f_15410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15425)
static void C_ccall f_15425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15417)
static void C_ccall f_15417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15381)
static void C_ccall f_15381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15385)
static void C_ccall f_15385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15346)
static void C_ccall f_15346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15350)
static void C_ccall f_15350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15303)
static void C_fcall f_15303(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15306)
static void C_ccall f_15306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15309)
static void C_ccall f_15309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15317)
static void C_ccall f_15317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15325)
static void C_ccall f_15325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15315)
static void C_ccall f_15315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15078)
static void C_ccall f_15078(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15082)
static void C_ccall f_15082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15291)
static void C_ccall f_15291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15244)
static void C_ccall f_15244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15256)
static void C_fcall f_15256(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15112)
static void C_ccall f_15112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15115)
static void C_ccall f_15115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15121)
static void C_ccall f_15121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15124)
static void C_ccall f_15124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15212)
static void C_fcall f_15212(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15127)
static void C_fcall f_15127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15206)
static void C_ccall f_15206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15133)
static void C_ccall f_15133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15136)
static void C_ccall f_15136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15088)
static void C_ccall f_15088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15091)
static void C_ccall f_15091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15098)
static void C_ccall f_15098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14608)
static void C_ccall f_14608(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14608)
static void C_ccall f_14608r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14612)
static void C_fcall f_14612(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15048)
static void C_ccall f_15048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15063)
static void C_ccall f_15063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15055)
static void C_ccall f_15055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15019)
static void C_ccall f_15019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15023)
static void C_ccall f_15023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14984)
static void C_ccall f_14984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14988)
static void C_ccall f_14988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14949)
static void C_ccall f_14949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14953)
static void C_ccall f_14953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14615)
static void C_fcall f_14615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14913)
static void C_ccall f_14913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14928)
static void C_ccall f_14928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14920)
static void C_ccall f_14920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14884)
static void C_ccall f_14884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14888)
static void C_ccall f_14888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14849)
static void C_ccall f_14849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14853)
static void C_ccall f_14853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14814)
static void C_ccall f_14814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14818)
static void C_ccall f_14818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14618)
static void C_fcall f_14618(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14778)
static void C_ccall f_14778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14793)
static void C_ccall f_14793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14785)
static void C_ccall f_14785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14749)
static void C_ccall f_14749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14753)
static void C_ccall f_14753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14714)
static void C_ccall f_14714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14718)
static void C_ccall f_14718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14679)
static void C_ccall f_14679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14683)
static void C_ccall f_14683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14621)
static void C_fcall f_14621(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14624)
static void C_ccall f_14624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14627)
static void C_ccall f_14627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14650)
static void C_ccall f_14650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14658)
static void C_ccall f_14658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14633)
static void C_ccall f_14633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14636)
static void C_ccall f_14636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14528)
static void C_fcall f_14528(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14519)
static void C_fcall f_14519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14447)
static void C_ccall f_14447(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14451)
static void C_ccall f_14451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14454)
static void C_fcall f_14454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14192)
static void C_ccall f_14192(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14192)
static void C_ccall f_14192r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14196)
static void C_fcall f_14196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14417)
static void C_ccall f_14417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14432)
static void C_ccall f_14432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14424)
static void C_ccall f_14424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14388)
static void C_ccall f_14388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14392)
static void C_ccall f_14392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14353)
static void C_ccall f_14353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14357)
static void C_ccall f_14357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14199)
static void C_fcall f_14199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14317)
static void C_ccall f_14317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14324)
static void C_ccall f_14324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14288)
static void C_ccall f_14288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14292)
static void C_ccall f_14292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14253)
static void C_ccall f_14253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14257)
static void C_ccall f_14257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14202)
static void C_fcall f_14202(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14205)
static void C_ccall f_14205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14208)
static void C_ccall f_14208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14220)
static void C_ccall f_14220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14232)
static void C_ccall f_14232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14214)
static void C_ccall f_14214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14077)
static void C_fcall f_14077(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14190)
static void C_ccall f_14190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14087)
static void C_ccall f_14087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14175)
static void C_ccall f_14175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14186)
static void C_ccall f_14186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14182)
static void C_ccall f_14182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14090)
static void C_ccall f_14090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14172)
static void C_ccall f_14172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14098)
static void C_ccall f_14098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14162)
static void C_ccall f_14162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14107)
static void C_ccall f_14107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14126)
static void C_ccall f_14126(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14155)
static void C_ccall f_14155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14136)
static void C_ccall f_14136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14151)
static void C_ccall f_14151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14139)
static void C_ccall f_14139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14110)
static void C_ccall f_14110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14120)
static void C_ccall f_14120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14101)
static void C_fcall f_14101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14104)
static void C_ccall f_14104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14031)
static void C_fcall f_14031(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14022)
static void C_fcall f_14022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13730)
static void C_fcall f_13730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13737)
static void C_ccall f_13737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13740)
static void C_ccall f_13740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14011)
static void C_ccall f_14011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14003)
static void C_ccall f_14003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13995)
static void C_ccall f_13995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13998)
static void C_ccall f_13998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13966)
static void C_fcall f_13966(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13989)
static void C_ccall f_13989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13972)
static void C_fcall f_13972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13976)
static void C_ccall f_13976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13743)
static void C_ccall f_13743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13749)
static void C_ccall f_13749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13841)
static void C_ccall f_13841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13953)
static void C_ccall f_13953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13960)
static void C_ccall f_13960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13864)
static void C_fcall f_13864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13866)
static void C_fcall f_13866(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13915)
static void C_fcall f_13915(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13950)
static void C_ccall f_13950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13939)
static void C_ccall f_13939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14075)
static void C_ccall f_14075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14050)
static void C_ccall f_14050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14071)
static void C_ccall f_14071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14067)
static void C_ccall f_14067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14059)
static void C_ccall f_14059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13932)
static void C_ccall f_13932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13925)
static void C_ccall f_13925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13873)
static void C_ccall f_13873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13913)
static void C_ccall f_13913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13877)
static void C_ccall f_13877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13909)
static void C_ccall f_13909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13896)
static void C_ccall f_13896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13904)
static void C_ccall f_13904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13900)
static void C_ccall f_13900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13880)
static void C_fcall f_13880(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13883)
static void C_ccall f_13883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13857)
static void C_ccall f_13857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13844)
static void C_ccall f_13844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13853)
static void C_ccall f_13853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13848)
static void C_ccall f_13848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13755)
static void C_ccall f_13755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13835)
static void C_ccall f_13835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13815)
static void C_ccall f_13815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13821)
static void C_ccall f_13821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13832)
static void C_ccall f_13832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13812)
static void C_ccall f_13812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13800)
static void C_ccall f_13800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13803)
static void C_ccall f_13803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13758)
static void C_ccall f_13758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13794)
static void C_ccall f_13794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13789)
static void C_ccall f_13789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13761)
static void C_ccall f_13761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13774)
static void C_ccall f_13774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13764)
static void C_fcall f_13764(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13767)
static void C_ccall f_13767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13770)
static void C_ccall f_13770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13607)
static void C_ccall f_13607(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13607)
static void C_ccall f_13607r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13666)
static void C_ccall f_13666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13676)
static void C_ccall f_13676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13678)
static void C_fcall f_13678(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13707)
static void C_ccall f_13707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13712)
static void C_ccall f_13712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13697)
static void C_fcall f_13697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13628)
static void C_fcall f_13628(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13660)
static void C_ccall f_13660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13588)
static void C_ccall f_13588(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13595)
static void C_ccall f_13595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13602)
static void C_ccall f_13602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13569)
static void C_ccall f_13569(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13576)
static void C_ccall f_13576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13583)
static void C_ccall f_13583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13389)
static void C_fcall f_13389(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_13393)
static void C_ccall f_13393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13396)
static void C_ccall f_13396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13399)
static void C_ccall f_13399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13402)
static void C_ccall f_13402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13559)
static void C_ccall f_13559(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13566)
static void C_ccall f_13566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13405)
static void C_ccall f_13405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13557)
static void C_ccall f_13557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13408)
static void C_fcall f_13408(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13550)
static void C_ccall f_13550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13540)
static void C_ccall f_13540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13414)
static void C_ccall f_13414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13530)
static void C_ccall f_13530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13520)
static void C_ccall f_13520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13420)
static void C_ccall f_13420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13483)
static void C_ccall f_13483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13497)
static void C_ccall f_13497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13513)
static void C_ccall f_13513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13509)
static void C_ccall f_13509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13505)
static void C_ccall f_13505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13501)
static void C_ccall f_13501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13491)
static void C_ccall f_13491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13487)
static void C_ccall f_13487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13423)
static void C_fcall f_13423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13426)
static void C_ccall f_13426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13467)
static void C_ccall f_13467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13432)
static void C_fcall f_13432(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13445)
static void C_ccall f_13445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13435)
static void C_ccall f_13435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13438)
static void C_ccall f_13438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13379)
static void C_fcall f_13379(C_word t0) C_noret;
C_noret_decl(f_13320)
static void C_fcall f_13320(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13311)
static void C_fcall f_13311(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13194)
static void C_fcall f_13194(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13185)
static void C_fcall f_13185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13176)
static void C_ccall f_13176(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13167)
static void C_fcall f_13167(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13158)
static void C_fcall f_13158(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13140)
static void C_fcall f_13140(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13131)
static void C_fcall f_13131(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13122)
static void C_fcall f_13122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13104)
static void C_fcall f_13104(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13095)
static void C_fcall f_13095(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13086)
static void C_fcall f_13086(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13071)
static void C_fcall f_13071(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13026)
static void C_fcall f_13026(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13008)
static void C_fcall f_13008(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12999)
static void C_fcall f_12999(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12972)
static void C_fcall f_12972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12954)
static void C_fcall f_12954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12936)
static void C_fcall f_12936(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12927)
static void C_fcall f_12927(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12915)
static void C_fcall f_12915(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12577)
static void C_fcall f_12577(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12417)
static void C_fcall f_12417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12452)
static void C_fcall f_12452(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12462)
static void C_fcall f_12462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12466)
static void C_ccall f_12466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12469)
static void C_ccall f_12469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12530)
static void C_ccall f_12530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12521)
static void C_ccall f_12521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12472)
static void C_ccall f_12472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12491)
static void C_ccall f_12491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12498)
static void C_ccall f_12498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12475)
static void C_ccall f_12475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12481)
static void C_ccall f_12481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12450)
static void C_ccall f_12450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12425)
static void C_fcall f_12425(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12424)
static void C_ccall f_12424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12585)
static void C_fcall f_12585(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12163)
static void C_ccall f_12163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12185)
static void C_ccall f_12185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12200)
static void C_ccall f_12200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12203)
static void C_fcall f_12203(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12379)
static void C_ccall f_12379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12373)
static void C_ccall f_12373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12206)
static void C_ccall f_12206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12355)
static void C_ccall f_12355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12209)
static void C_fcall f_12209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12212)
static void C_ccall f_12212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12348)
static void C_ccall f_12348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12336)
static void C_ccall f_12336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12232)
static void C_fcall f_12232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12239)
static void C_ccall f_12239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12309)
static void C_ccall f_12309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12295)
static void C_ccall f_12295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12303)
static void C_ccall f_12303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12242)
static void C_ccall f_12242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12281)
static void C_ccall f_12281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12245)
static void C_fcall f_12245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12274)
static void C_ccall f_12274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12251)
static void C_ccall f_12251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12254)
static void C_ccall f_12254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12258)
static void C_ccall f_12258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12219)
static void C_fcall f_12219(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12222)
static void C_ccall f_12222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12032)
static void C_fcall f_12032(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12041)
static void C_fcall f_12041(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11989)
static void C_ccall f_11989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11995)
static void C_fcall f_11995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12058)
static void C_ccall f_12058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12144)
static void C_ccall f_12144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12131)
static void C_ccall f_12131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12139)
static void C_ccall f_12139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12061)
static void C_ccall f_12061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12065)
static void C_ccall f_12065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12108)
static void C_ccall f_12108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12070)
static void C_ccall f_12070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12036)
static void C_ccall f_12036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11931)
static void C_ccall f_11931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11938)
static void C_ccall f_11938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11969)
static void C_ccall f_11969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11965)
static void C_ccall f_11965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11957)
static void C_ccall f_11957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11840)
static void C_ccall f_11840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11847)
static void C_ccall f_11847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11915)
static void C_ccall f_11915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11858)
static void C_fcall f_11858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11885)
static void C_ccall f_11885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11869)
static void C_ccall f_11869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11774)
static void C_ccall f_11774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11785)
static void C_ccall f_11785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11788)
static void C_fcall f_11788(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11795)
static void C_ccall f_11795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11768)
static void C_ccall f_11768(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11222)
static void C_ccall f_11222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11253)
static void C_ccall f_11253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11717)
static void C_ccall f_11717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11723)
static void C_ccall f_11723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11264)
static void C_ccall f_11264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11149)
static void C_fcall f_11149(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11174)
static void C_ccall f_11174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11109)
static void C_fcall f_11109(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11122)
static void C_fcall f_11122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11163)
static void C_ccall f_11163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11268)
static void C_ccall f_11268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11705)
static void C_ccall f_11705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11701)
static void C_fcall f_11701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11697)
static void C_ccall f_11697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11271)
static void C_ccall f_11271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11491)
static void C_fcall f_11491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11600)
static void C_ccall f_11600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11665)
static void C_ccall f_11665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11607)
static void C_fcall f_11607(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11611)
static void C_ccall f_11611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11615)
static void C_ccall f_11615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11657)
static void C_ccall f_11657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11653)
static void C_ccall f_11653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11631)
static void C_ccall f_11631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11494)
static void C_fcall f_11494(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11497)
static void C_fcall f_11497(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11396)
static void C_ccall f_11396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11479)
static void C_ccall f_11479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11446)
static void C_ccall f_11446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11472)
static void C_ccall f_11472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11454)
static void C_ccall f_11454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11402)
static void C_fcall f_11402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11442)
static void C_ccall f_11442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11384)
static void C_ccall f_11384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11355)
static void C_ccall f_11355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11377)
static void C_ccall f_11377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11363)
static void C_ccall f_11363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11317)
static void C_fcall f_11317(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11274)
static void C_fcall f_11274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11285)
static void C_ccall f_11285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11289)
static void C_ccall f_11289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11293)
static void C_ccall f_11293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11297)
static void C_ccall f_11297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11281)
static void C_ccall f_11281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11241)
static void C_fcall f_11241(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11236)
static void C_fcall f_11236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11231)
static void C_fcall f_11231(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11063)
static void C_ccall f_11063(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11074)
static void C_ccall f_11074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11089)
static void C_ccall f_11089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11025)
static void C_ccall f_11025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11036)
static void C_ccall f_11036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11051)
static void C_ccall f_11051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10958)
static void C_ccall f_10958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10978)
static void C_fcall f_10978(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10988)
static void C_ccall f_10988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11001)
static void C_ccall f_11001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10969)
static void C_ccall f_10969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10976)
static void C_ccall f_10976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10765)
static void C_ccall f_10765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10825)
static void C_fcall f_10825(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10835)
static void C_ccall f_10835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10949)
static void C_ccall f_10949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10914)
static void C_ccall f_10914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10906)
static void C_ccall f_10906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10877)
static void C_ccall f_10877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10855)
static void C_ccall f_10855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10858)
static void C_ccall f_10858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10846)
static void C_ccall f_10846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10772)
static void C_ccall f_10772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10823)
static void C_ccall f_10823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10815)
static void C_ccall f_10815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10775)
static void C_ccall f_10775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10786)
static void C_ccall f_10786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10790)
static void C_ccall f_10790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10782)
static void C_ccall f_10782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10623)
static void C_ccall f_10623(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10671)
static void C_fcall f_10671(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10681)
static void C_ccall f_10681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10692)
static void C_ccall f_10692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10729)
static void C_ccall f_10729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10704)
static void C_ccall f_10704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10695)
static void C_ccall f_10695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10633)
static void C_ccall f_10633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10669)
static void C_ccall f_10669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10640)
static void C_ccall f_10640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10272)
static void C_ccall f_10272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10279)
static void C_ccall f_10279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10513)
static void C_fcall f_10513(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10523)
static void C_ccall f_10523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10534)
static void C_ccall f_10534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10546)
static void C_fcall f_10546(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10549)
static void C_ccall f_10549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10537)
static void C_ccall f_10537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10285)
static void C_ccall f_10285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10511)
static void C_ccall f_10511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10507)
static void C_ccall f_10507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10453)
static void C_fcall f_10453(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10418)
static void C_fcall f_10418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10434)
static void C_fcall f_10434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10389)
static void C_fcall f_10389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10313)
static void C_ccall f_10313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10316)
static void C_ccall f_10316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10380)
static void C_ccall f_10380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10376)
static void C_ccall f_10376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10296)
static void C_fcall f_10296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10307)
static void C_ccall f_10307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10303)
static void C_ccall f_10303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10225)
static void C_ccall f_10225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10258)
static void C_ccall f_10258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10240)
static void C_ccall f_10240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10252)
static void C_ccall f_10252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9843)
static void C_ccall f_9843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10052)
static void C_fcall f_10052(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10062)
static void C_ccall f_10062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10073)
static void C_ccall f_10073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10193)
static void C_ccall f_10193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10172)
static void C_ccall f_10172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10151)
static void C_ccall f_10151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10130)
static void C_ccall f_10130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10109)
static void C_ccall f_10109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10088)
static void C_ccall f_10088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10076)
static void C_ccall f_10076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9853)
static void C_ccall f_9853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9856)
static void C_fcall f_9856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10019)
static void C_fcall f_10019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9859)
static void C_fcall f_9859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10010)
static void C_ccall f_10010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9990)
static void C_ccall f_9990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9862)
static void C_fcall f_9862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9955)
static void C_ccall f_9955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9972)
static void C_ccall f_9972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9865)
static void C_fcall f_9865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9904)
static void C_ccall f_9904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9938)
static void C_ccall f_9938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9922)
static void C_ccall f_9922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9907)
static void C_fcall f_9907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9872)
static void C_fcall f_9872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9883)
static void C_ccall f_9883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9887)
static void C_ccall f_9887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9879)
static void C_ccall f_9879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9761)
static void C_ccall f_9761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9765)
static void C_ccall f_9765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9783)
static void C_ccall f_9783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9601)
static void C_fcall f_9601(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9609)
static void C_fcall f_9609(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9619)
static void C_ccall f_9619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9657)
static void C_ccall f_9657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9660)
static void C_ccall f_9660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9663)
static void C_ccall f_9663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9738)
static void C_fcall f_9738(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9748)
static void C_ccall f_9748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9666)
static void C_ccall f_9666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9669)
static void C_ccall f_9669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9672)
static void C_ccall f_9672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9692)
static void C_fcall f_9692(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9702)
static void C_ccall f_9702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9705)
static void C_ccall f_9705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9708)
static void C_ccall f_9708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9675)
static void C_ccall f_9675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9678)
static void C_ccall f_9678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9595)
static void C_fcall f_9595(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9589)
static void C_fcall f_9589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9583)
static void C_fcall f_9583(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9512)
static void C_fcall f_9512(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9553)
static void C_ccall f_9553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9557)
static void C_ccall f_9557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9561)
static void C_ccall f_9561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9565)
static void C_ccall f_9565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9569)
static void C_ccall f_9569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9573)
static void C_ccall f_9573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9577)
static void C_ccall f_9577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9581)
static void C_ccall f_9581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9514)
static void C_fcall f_9514(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9520)
static void C_fcall f_9520(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9542)
static void C_ccall f_9542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9531)
static void C_ccall f_9531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9361)
static void C_fcall f_9361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9376)
static void C_fcall f_9376(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9389)
static void C_ccall f_9389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9349)
static void C_ccall f_9349(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9337)
static void C_ccall f_9337(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9325)
static void C_ccall f_9325(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9319)
static void C_fcall f_9319(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9313)
static void C_ccall f_9313(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9301)
static void C_ccall f_9301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9289)
static void C_ccall f_9289(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9277)
static void C_ccall f_9277(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9265)
static void C_ccall f_9265(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9259)
static void C_fcall f_9259(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8950)
static void C_ccall f_8950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9203)
static void C_ccall f_9203(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9236)
static void C_ccall f_9236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9232)
static void C_ccall f_9232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9221)
static void C_ccall f_9221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9217)
static void C_ccall f_9217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9111)
static void C_ccall f_9111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9114)
static void C_ccall f_9114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9117)
static void C_ccall f_9117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9197)
static void C_ccall f_9197(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9022)
static void C_ccall f_9022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8963)
static void C_ccall f_8963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9120)
static void C_ccall f_9120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9127)
static void C_ccall f_9127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9187)
static void C_ccall f_9187(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9173)
static void C_ccall f_9173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9139)
static void C_ccall f_9139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9165)
static void C_ccall f_9165(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9100)
static void C_ccall f_9100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9147)
static void C_ccall f_9147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9143)
static void C_ccall f_9143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8906)
static void C_ccall f_8906(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8906)
static void C_ccall f_8906r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8940)
static void C_ccall f_8940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8944)
static void C_ccall f_8944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8948)
static void C_ccall f_8948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8914)
static void C_ccall f_8914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8932)
static void C_ccall f_8932(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8923)
static void C_ccall f_8923(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8931)
static void C_ccall f_8931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8918)
static void C_ccall f_8918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8862)
static void C_ccall f_8862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8862)
static void C_ccall f_8862r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8896)
static void C_ccall f_8896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8900)
static void C_ccall f_8900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8904)
static void C_ccall f_8904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8870)
static void C_ccall f_8870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8888)
static void C_ccall f_8888(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8879)
static void C_ccall f_8879(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8887)
static void C_ccall f_8887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8874)
static void C_ccall f_8874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8788)
static void C_fcall f_8788(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8792)
static void C_ccall f_8792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8799)
static void C_ccall f_8799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8801)
static void C_fcall f_8801(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8815)
static void C_ccall f_8815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8828)
static void C_ccall f_8828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8818)
static void C_fcall f_8818(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8702)
static void C_ccall f_8702(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8702)
static void C_ccall f_8702r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8584)
static void C_fcall f_8584(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8590)
static void C_fcall f_8590(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8614)
static void C_ccall f_8614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8600)
static void C_fcall f_8600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8485)
static void C_ccall f_8485(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8485)
static void C_ccall f_8485r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8489)
static void C_ccall f_8489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8514)
static void C_fcall f_8514(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8531)
static void C_ccall f_8531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8535)
static void C_ccall f_8535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8491)
static void C_fcall f_8491(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8508)
static void C_ccall f_8508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8323)
static void C_ccall f_8323(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8323)
static void C_ccall f_8323r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8332)
static void C_fcall f_8332(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8370)
static void C_fcall f_8370(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8348)
static void C_ccall f_8348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8233)
static void C_ccall f_8233(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8185)
static void C_ccall f_8185(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8219)
static void C_ccall f_8219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8162)
static void C_ccall f_8162(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8156)
static void C_ccall f_8156(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8141)
static void C_ccall f_8141(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8127)
static void C_ccall f_8127(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8117)
static void C_ccall f_8117(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8107)
static void C_ccall f_8107(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8097)
static void C_ccall f_8097(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8087)
static void C_ccall f_8087(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8077)
static void C_ccall f_8077(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7185)
static void C_ccall f_7185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8046)
static void C_ccall f_8046(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8046)
static void C_ccall f_8046r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8056)
static void C_fcall f_8056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8040)
static void C_ccall f_8040(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7143)
static void C_ccall f_7143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8034)
static void C_ccall f_8034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7781)
static void C_fcall f_7781(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7614)
static void C_fcall f_7614(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7623)
static void C_ccall f_7623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7543)
static void C_ccall f_7543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7533)
static void C_ccall f_7533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7523)
static void C_fcall f_7523(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7503)
static void C_fcall f_7503(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7472)
static void C_ccall f_7472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7469)
static void C_ccall f_7469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7462)
static void C_fcall f_7462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7459)
static void C_ccall f_7459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7452)
static void C_fcall f_7452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7434)
static void C_fcall f_7434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7423)
static void C_fcall f_7423(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7420)
static void C_ccall f_7420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7417)
static void C_ccall f_7417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7414)
static void C_ccall f_7414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7385)
static void C_fcall f_7385(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7378)
static void C_fcall f_7378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7375)
static void C_ccall f_7375(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7354)
static void C_fcall f_7354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7335)
static void C_ccall f_7335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7316)
static void C_ccall f_7316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7302)
static void C_ccall f_7302(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7295)
static void C_ccall f_7295(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7280)
static void C_fcall f_7280(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7269)
static void C_fcall f_7269(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7262)
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7208)
static void C_fcall f_7208(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7152)
static void C_fcall f_7152(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7157)
static void C_ccall f_7157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7031)
static void C_fcall f_7031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7025)
static void C_ccall f_7025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7018)
static void C_ccall f_7018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7012)
static void C_ccall f_7012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7002)
static void C_ccall f_7002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6982)
static void C_ccall f_6982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6994)
static void C_ccall f_6994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6976)
static void C_ccall f_6976(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6976)
static void C_ccall f_6976r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6970)
static void C_ccall f_6970(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6970)
static void C_ccall f_6970r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6964)
static void C_ccall f_6964(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6964)
static void C_ccall f_6964r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6958)
static void C_ccall f_6958(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6958)
static void C_ccall f_6958r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6952)
static void C_ccall f_6952(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;

C_noret_decl(trf_12750)
static void C_fcall trf_12750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12750(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12750(t0,t1);}

C_noret_decl(trf_12612)
static void C_fcall trf_12612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12612(t0,t1);}

C_noret_decl(trf_12826)
static void C_fcall trf_12826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12826(t0,t1);}

C_noret_decl(trf_45459)
static void C_fcall trf_45459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45459(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_45459(t0,t1,t2);}

C_noret_decl(trf_45519)
static void C_fcall trf_45519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45519(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_45519(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_45539)
static void C_fcall trf_45539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45539(t0,t1);}

C_noret_decl(trf_45542)
static void C_fcall trf_45542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45542(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45542(t0,t1);}

C_noret_decl(trf_45385)
static void C_fcall trf_45385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45385(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_45385(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_45336)
static void C_fcall trf_45336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45336(t0,t1);}

C_noret_decl(trf_45258)
static void C_fcall trf_45258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45258(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_45258(t0,t1,t2);}

C_noret_decl(trf_45110)
static void C_fcall trf_45110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45110(t0,t1);}

C_noret_decl(trf_29391)
static void C_fcall trf_29391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29391(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29391(t0,t1,t2);}

C_noret_decl(trf_29404)
static void C_fcall trf_29404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29404(t0,t1);}

C_noret_decl(trf_43988)
static void C_fcall trf_43988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43988(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43988(t0,t1);}

C_noret_decl(trf_43861)
static void C_fcall trf_43861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43861(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_43861(t0,t1,t2);}

C_noret_decl(trf_43513)
static void C_fcall trf_43513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43513(t0,t1);}

C_noret_decl(trf_42608)
static void C_fcall trf_42608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42608(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_42608(t0,t1,t2);}

C_noret_decl(trf_42643)
static void C_fcall trf_42643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42643(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42643(t0,t1);}

C_noret_decl(trf_42667)
static void C_fcall trf_42667(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42667(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42667(t0,t1);}

C_noret_decl(trf_42646)
static void C_fcall trf_42646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42646(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42646(t0,t1);}

C_noret_decl(trf_42449)
static void C_fcall trf_42449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42449(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42449(t0,t1);}

C_noret_decl(trf_42205)
static void C_fcall trf_42205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42205(t0,t1);}

C_noret_decl(trf_42212)
static void C_fcall trf_42212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42212(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42212(t0,t1);}

C_noret_decl(trf_42193)
static void C_fcall trf_42193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42193(t0,t1);}

C_noret_decl(trf_31453)
static void C_fcall trf_31453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31453(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31453(t0,t1);}

C_noret_decl(trf_31460)
static void C_fcall trf_31460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31460(t0,t1);}

C_noret_decl(trf_31777)
static void C_fcall trf_31777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31777(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31777(t0,t1,t2);}

C_noret_decl(trf_31800)
static void C_fcall trf_31800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31800(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31800(t0,t1,t2);}

C_noret_decl(trf_31817)
static void C_fcall trf_31817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31817(t0,t1);}

C_noret_decl(trf_31820)
static void C_fcall trf_31820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31820(t0,t1);}

C_noret_decl(trf_31823)
static void C_fcall trf_31823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31823(t0,t1);}

C_noret_decl(trf_31741)
static void C_fcall trf_31741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31741(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31741(t0,t1,t2);}

C_noret_decl(trf_31681)
static void C_fcall trf_31681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31681(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31681(t0,t1,t2);}

C_noret_decl(trf_31697)
static void C_fcall trf_31697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31697(t0,t1);}

C_noret_decl(trf_31652)
static void C_fcall trf_31652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31652(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31652(t0,t1);}

C_noret_decl(trf_31469)
static void C_fcall trf_31469(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31469(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31469(t0,t1);}

C_noret_decl(trf_31472)
static void C_fcall trf_31472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31472(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31472(t0,t1);}

C_noret_decl(trf_31475)
static void C_fcall trf_31475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31475(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31475(t0,t1);}

C_noret_decl(trf_41702)
static void C_fcall trf_41702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41702(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41702(t0,t1);}

C_noret_decl(trf_41705)
static void C_fcall trf_41705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41705(t0,t1);}

C_noret_decl(trf_41548)
static void C_fcall trf_41548(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41548(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41548(t0,t1);}

C_noret_decl(trf_41356)
static void C_fcall trf_41356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41356(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41356(t0,t1);}

C_noret_decl(trf_41206)
static void C_fcall trf_41206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41206(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41206(t0,t1);}

C_noret_decl(trf_41295)
static void C_fcall trf_41295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41295(t0,t1);}

C_noret_decl(trf_41209)
static void C_fcall trf_41209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41209(t0,t1);}

C_noret_decl(trf_41225)
static void C_fcall trf_41225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41225(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_41225(t0,t1,t2,t3);}

C_noret_decl(trf_41247)
static void C_fcall trf_41247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41247(t0,t1);}

C_noret_decl(trf_41142)
static void C_fcall trf_41142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41142(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41142(t0,t1,t2);}

C_noret_decl(trf_41089)
static void C_fcall trf_41089(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41089(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41089(t0,t1);}

C_noret_decl(trf_40676)
static void C_fcall trf_40676(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40676(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40676(t0,t1,t2);}

C_noret_decl(trf_40704)
static void C_fcall trf_40704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40704(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40704(t0,t1);}

C_noret_decl(trf_40655)
static void C_fcall trf_40655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40655(t0,t1);}

C_noret_decl(trf_40586)
static void C_fcall trf_40586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40586(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40586(t0,t1,t2);}

C_noret_decl(trf_40511)
static void C_fcall trf_40511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40511(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40511(t0,t1,t2);}

C_noret_decl(trf_40435)
static void C_fcall trf_40435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40435(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_40435(t0,t1,t2,t3);}

C_noret_decl(trf_40382)
static void C_fcall trf_40382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40382(t0,t1,t2);}

C_noret_decl(trf_40405)
static void C_fcall trf_40405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40405(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40405(t0,t1);}

C_noret_decl(trf_40330)
static void C_fcall trf_40330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40330(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40330(t0,t1,t2);}

C_noret_decl(trf_40199)
static void C_fcall trf_40199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40199(t0,t1);}

C_noret_decl(trf_40269)
static void C_fcall trf_40269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40269(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40269(t0,t1,t2);}

C_noret_decl(trf_40228)
static void C_fcall trf_40228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40228(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40228(t0,t1);}

C_noret_decl(trf_40200)
static void C_fcall trf_40200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40200(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40200(t0,t1);}

C_noret_decl(trf_39932)
static void C_fcall trf_39932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39932(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39932(t0,t1);}

C_noret_decl(trf_39949)
static void C_fcall trf_39949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39949(t0,t1);}

C_noret_decl(trf_40093)
static void C_fcall trf_40093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40093(t0,t1);}

C_noret_decl(trf_39962)
static void C_fcall trf_39962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39962(t0,t1);}

C_noret_decl(trf_39893)
static void C_fcall trf_39893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39893(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39893(t0,t1,t2);}

C_noret_decl(trf_39834)
static void C_fcall trf_39834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39834(t0,t1);}

C_noret_decl(trf_39280)
static void C_fcall trf_39280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39280(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39280(t0,t1);}

C_noret_decl(trf_39613)
static void C_fcall trf_39613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39613(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_39613(t0,t1,t2,t3);}

C_noret_decl(trf_39540)
static void C_fcall trf_39540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39540(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39540(t0,t1,t2);}

C_noret_decl(trf_39577)
static void C_fcall trf_39577(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39577(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39577(t0,t1);}

C_noret_decl(trf_39495)
static void C_fcall trf_39495(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39495(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39495(t0,t1);}

C_noret_decl(trf_39500)
static void C_fcall trf_39500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39500(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39500(t0,t1);}

C_noret_decl(trf_39449)
static void C_fcall trf_39449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39449(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39449(t0,t1);}

C_noret_decl(trf_39454)
static void C_fcall trf_39454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39454(t0,t1);}

C_noret_decl(trf_39346)
static void C_fcall trf_39346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39346(t0,t1);}

C_noret_decl(trf_39355)
static void C_fcall trf_39355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39355(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39355(t0,t1,t2);}

C_noret_decl(trf_39210)
static void C_fcall trf_39210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39210(t0,t1);}

C_noret_decl(trf_38958)
static void C_fcall trf_38958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38958(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38958(t0,t1,t2);}

C_noret_decl(trf_39131)
static void C_fcall trf_39131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39131(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39131(t0,t1);}

C_noret_decl(trf_38973)
static void C_fcall trf_38973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38973(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38973(t0,t1,t2,t3);}

C_noret_decl(trf_38798)
static void C_fcall trf_38798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38798(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38798(t0,t1,t2,t3);}

C_noret_decl(trf_38729)
static void C_fcall trf_38729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38729(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38729(t0,t1);}

C_noret_decl(trf_38685)
static void C_fcall trf_38685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38685(t0,t1);}

C_noret_decl(trf_38714)
static void C_fcall trf_38714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38714(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38714(t0,t1);}

C_noret_decl(trf_38688)
static void C_fcall trf_38688(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38688(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38688(t0,t1);}

C_noret_decl(trf_38516)
static void C_fcall trf_38516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38516(t0,t1);}

C_noret_decl(trf_38523)
static void C_fcall trf_38523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38523(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38523(t0,t1);}

C_noret_decl(trf_38529)
static void C_fcall trf_38529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38529(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38529(t0,t1,t2);}

C_noret_decl(trf_38411)
static void C_fcall trf_38411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38411(t0,t1);}

C_noret_decl(trf_38418)
static void C_fcall trf_38418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38418(t0,t1);}

C_noret_decl(trf_38424)
static void C_fcall trf_38424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38424(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38424(t0,t1,t2);}

C_noret_decl(trf_37873)
static void C_fcall trf_37873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37873(t0,t1);}

C_noret_decl(trf_37876)
static void C_fcall trf_37876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37876(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37876(t0,t1);}

C_noret_decl(trf_37879)
static void C_fcall trf_37879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37879(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37879(t0,t1);}

C_noret_decl(trf_37444)
static void C_fcall trf_37444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37444(t0,t1);}

C_noret_decl(trf_37447)
static void C_fcall trf_37447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37447(t0,t1);}

C_noret_decl(trf_37450)
static void C_fcall trf_37450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37450(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37450(t0,t1);}

C_noret_decl(trf_37015)
static void C_fcall trf_37015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37015(t0,t1);}

C_noret_decl(trf_37018)
static void C_fcall trf_37018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37018(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37018(t0,t1);}

C_noret_decl(trf_37021)
static void C_fcall trf_37021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37021(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37021(t0,t1);}

C_noret_decl(trf_36308)
static void C_fcall trf_36308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36308(t0,t1);}

C_noret_decl(trf_36311)
static void C_fcall trf_36311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36311(t0,t1);}

C_noret_decl(trf_36314)
static void C_fcall trf_36314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36314(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36314(t0,t1);}

C_noret_decl(trf_36317)
static void C_fcall trf_36317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36317(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36317(t0,t1);}

C_noret_decl(trf_35601)
static void C_fcall trf_35601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35601(t0,t1);}

C_noret_decl(trf_35604)
static void C_fcall trf_35604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35604(t0,t1);}

C_noret_decl(trf_35607)
static void C_fcall trf_35607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35607(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35607(t0,t1);}

C_noret_decl(trf_35610)
static void C_fcall trf_35610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35610(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35610(t0,t1);}

C_noret_decl(trf_34894)
static void C_fcall trf_34894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34894(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34894(t0,t1);}

C_noret_decl(trf_34897)
static void C_fcall trf_34897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34897(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34897(t0,t1);}

C_noret_decl(trf_34900)
static void C_fcall trf_34900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34900(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34900(t0,t1);}

C_noret_decl(trf_34903)
static void C_fcall trf_34903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34903(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34903(t0,t1);}

C_noret_decl(trf_34465)
static void C_fcall trf_34465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34465(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34465(t0,t1);}

C_noret_decl(trf_34468)
static void C_fcall trf_34468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34468(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34468(t0,t1);}

C_noret_decl(trf_34471)
static void C_fcall trf_34471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34471(t0,t1);}

C_noret_decl(trf_33410)
static void C_fcall trf_33410(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33410(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33410(t0,t1);}

C_noret_decl(trf_33413)
static void C_fcall trf_33413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33413(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33413(t0,t1);}

C_noret_decl(trf_33416)
static void C_fcall trf_33416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33416(t0,t1);}

C_noret_decl(trf_33419)
static void C_fcall trf_33419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33419(t0,t1);}

C_noret_decl(trf_33422)
static void C_fcall trf_33422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33422(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33422(t0,t1);}

C_noret_decl(trf_33247)
static void C_fcall trf_33247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33247(t0,t1);}

C_noret_decl(trf_33254)
static void C_fcall trf_33254(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33254(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33254(t0,t1);}

C_noret_decl(trf_33192)
static void C_fcall trf_33192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33192(t0,t1);}

C_noret_decl(trf_33199)
static void C_fcall trf_33199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33199(t0,t1);}

C_noret_decl(trf_32949)
static void C_fcall trf_32949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32949(t0,t1);}

C_noret_decl(trf_32952)
static void C_fcall trf_32952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32952(t0,t1);}

C_noret_decl(trf_32738)
static void C_fcall trf_32738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32738(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32738(t0,t1,t2);}

C_noret_decl(trf_32614)
static void C_fcall trf_32614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32614(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_32614(t0,t1,t2,t3,t4);}

C_noret_decl(trf_32650)
static void C_fcall trf_32650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32650(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32650(t0,t1,t2);}

C_noret_decl(trf_32452)
static void C_fcall trf_32452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32452(t0,t1);}

C_noret_decl(trf_32456)
static void C_fcall trf_32456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32456(t0,t1);}

C_noret_decl(trf_31972)
static void C_fcall trf_31972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31972(t0,t1);}

C_noret_decl(trf_31975)
static void C_fcall trf_31975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31975(t0,t1);}

C_noret_decl(trf_31978)
static void C_fcall trf_31978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31978(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31978(t0,t1);}

C_noret_decl(trf_31984)
static void C_fcall trf_31984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31984(t0,t1);}

C_noret_decl(trf_29792)
static void C_fcall trf_29792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29792(t0,t1);}

C_noret_decl(trf_32580)
static void C_fcall trf_32580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32580(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32580(t0,t1,t2);}

C_noret_decl(trf_32590)
static void C_fcall trf_32590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32590(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32590(t0,t1);}

C_noret_decl(trf_32550)
static void C_fcall trf_32550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32550(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32550(t0,t1,t2);}

C_noret_decl(trf_32560)
static void C_fcall trf_32560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32560(t0,t1);}

C_noret_decl(trf_31134)
static void C_fcall trf_31134(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31134(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31134(t0,t1);}

C_noret_decl(trf_31137)
static void C_fcall trf_31137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31137(t0,t1);}

C_noret_decl(trf_31140)
static void C_fcall trf_31140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31140(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31140(t0,t1);}

C_noret_decl(trf_31143)
static void C_fcall trf_31143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31143(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31143(t0,t1);}

C_noret_decl(trf_31146)
static void C_fcall trf_31146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31146(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31146(t0,t1);}

C_noret_decl(trf_31149)
static void C_fcall trf_31149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31149(t0,t1);}

C_noret_decl(trf_30977)
static void C_fcall trf_30977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30977(t0,t1);}

C_noret_decl(trf_30906)
static void C_fcall trf_30906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30906(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30906(t0,t1);}

C_noret_decl(trf_30721)
static void C_fcall trf_30721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30721(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30721(t0,t1);}

C_noret_decl(trf_30733)
static void C_fcall trf_30733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30733(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30733(t0,t1);}

C_noret_decl(trf_30770)
static void C_fcall trf_30770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30770(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_30770(t0,t1,t2,t3,t4);}

C_noret_decl(trf_30805)
static void C_fcall trf_30805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30805(t0,t1);}

C_noret_decl(trf_30700)
static void C_fcall trf_30700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30700(t0,t1);}

C_noret_decl(trf_30635)
static void C_fcall trf_30635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30635(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30635(t0,t1,t2);}

C_noret_decl(trf_30644)
static void C_fcall trf_30644(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30644(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30644(t0,t1,t2);}

C_noret_decl(trf_30657)
static void C_fcall trf_30657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30657(t0,t1);}

C_noret_decl(trf_30591)
static void C_fcall trf_30591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30591(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30591(t0,t1,t2);}

C_noret_decl(trf_30579)
static void C_fcall trf_30579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30579(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30579(t0,t1);}

C_noret_decl(trf_30477)
static void C_fcall trf_30477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30477(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30477(t0,t1);}

C_noret_decl(trf_30429)
static void C_fcall trf_30429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30429(t0,t1);}

C_noret_decl(trf_29810)
static void C_fcall trf_29810(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29810(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_29810(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_29820)
static void C_fcall trf_29820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29820(t0,t1);}

C_noret_decl(trf_29949)
static void C_fcall trf_29949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29949(t0,t1);}

C_noret_decl(trf_30037)
static void C_fcall trf_30037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30037(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30037(t0,t1);}

C_noret_decl(trf_30110)
static void C_fcall trf_30110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30110(t0,t1);}

C_noret_decl(trf_30188)
static void C_fcall trf_30188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30188(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30188(t0,t1);}

C_noret_decl(trf_30139)
static void C_fcall trf_30139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30139(t0,t1);}

C_noret_decl(trf_30155)
static void C_fcall trf_30155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30155(t0,t1);}

C_noret_decl(trf_30119)
static void C_fcall trf_30119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30119(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30119(t0,t1);}

C_noret_decl(trf_30061)
static void C_fcall trf_30061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30061(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30061(t0,t1,t2);}

C_noret_decl(trf_29980)
static void C_fcall trf_29980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29980(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29980(t0,t1,t2);}

C_noret_decl(trf_29996)
static void C_fcall trf_29996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29996(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29996(t0,t1);}

C_noret_decl(trf_29964)
static void C_fcall trf_29964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29964(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29964(t0,t1);}

C_noret_decl(trf_29706)
static void C_fcall trf_29706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29706(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29706(t0,t1);}

C_noret_decl(trf_29715)
static void C_fcall trf_29715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29715(t0,t1);}

C_noret_decl(trf_29720)
static void C_fcall trf_29720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29720(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29720(t0,t1,t2);}

C_noret_decl(trf_29698)
static void C_fcall trf_29698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29698(t0,t1);}

C_noret_decl(trf_29490)
static void C_fcall trf_29490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29490(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29490(t0,t1,t2,t3);}

C_noret_decl(trf_29457)
static void C_fcall trf_29457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29457(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29457(t0,t1,t2,t3);}

C_noret_decl(trf_29439)
static void C_fcall trf_29439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29439(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29439(t0,t1,t2,t3);}

C_noret_decl(trf_29372)
static void C_fcall trf_29372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29372(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29372(t0,t1,t2,t3);}

C_noret_decl(trf_29360)
static void C_fcall trf_29360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29360(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29360(t0,t1,t2);}

C_noret_decl(trf_29328)
static void C_fcall trf_29328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29328(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29328(t0,t1,t2);}

C_noret_decl(trf_29312)
static void C_fcall trf_29312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29312(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29312(t0,t1);}

C_noret_decl(trf_29303)
static void C_fcall trf_29303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29303(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29303(t0,t1);}

C_noret_decl(trf_29285)
static void C_fcall trf_29285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29285(t0,t1);}

C_noret_decl(trf_29267)
static void C_fcall trf_29267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29267(t0,t1);}

C_noret_decl(trf_29252)
static void C_fcall trf_29252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29252(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29252(t0,t1);}

C_noret_decl(trf_29246)
static void C_fcall trf_29246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29246(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29246(t0,t1,t2,t3);}

C_noret_decl(trf_29198)
static void C_fcall trf_29198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29198(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29198(t0,t1,t2);}

C_noret_decl(trf_29166)
static void C_fcall trf_29166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29166(t0,t1);}

C_noret_decl(trf_29108)
static void C_fcall trf_29108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29108(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29108(t0,t1,t2);}

C_noret_decl(trf_29098)
static void C_fcall trf_29098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29098(t0,t1);}

C_noret_decl(trf_29092)
static void C_fcall trf_29092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29092(t0,t1);}

C_noret_decl(trf_29080)
static void C_fcall trf_29080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29080(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29080(t0,t1);}

C_noret_decl(trf_29059)
static void C_fcall trf_29059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29059(t0,t1);}

C_noret_decl(trf_28954)
static void C_fcall trf_28954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28954(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28954(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28944)
static void C_fcall trf_28944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28944(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28944(t0,t1);}

C_noret_decl(trf_28932)
static void C_fcall trf_28932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28932(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28932(t0,t1);}

C_noret_decl(trf_28900)
static void C_fcall trf_28900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28900(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28900(t0,t1);}

C_noret_decl(trf_28864)
static void C_fcall trf_28864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28864(t0,t1);}

C_noret_decl(trf_28651)
static void C_fcall trf_28651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28651(t0,t1);}

C_noret_decl(trf_28800)
static void C_fcall trf_28800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28800(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28800(t0,t1,t2);}

C_noret_decl(trf_28686)
static void C_fcall trf_28686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28686(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28686(t0,t1,t2,t3);}

C_noret_decl(trf_28727)
static void C_fcall trf_28727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28727(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28727(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28611)
static void C_fcall trf_28611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28611(t0,t1);}

C_noret_decl(trf_28574)
static void C_fcall trf_28574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28574(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28574(t0,t1,t2,t3);}

C_noret_decl(trf_28472)
static void C_fcall trf_28472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28472(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28472(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28419)
static void C_fcall trf_28419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28419(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28419(t0,t1,t2);}

C_noret_decl(trf_28591)
static void C_fcall trf_28591(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28591(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28591(t0,t1);}

C_noret_decl(trf_28532)
static void C_fcall trf_28532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28532(t0,t1);}

C_noret_decl(trf_28387)
static void C_fcall trf_28387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28387(t0,t1);}

C_noret_decl(trf_28018)
static void C_fcall trf_28018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28018(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28018(t0,t1);}

C_noret_decl(trf_28021)
static void C_fcall trf_28021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28021(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28021(t0,t1);}

C_noret_decl(trf_28024)
static void C_fcall trf_28024(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28024(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28024(t0,t1);}

C_noret_decl(trf_8669)
static void C_fcall trf_8669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8669(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8669(t0,t1,t2,t3);}

C_noret_decl(trf_8682)
static void C_fcall trf_8682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8682(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8682(t0,t1);}

C_noret_decl(trf_28182)
static void C_fcall trf_28182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28182(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28182(t0,t1);}

C_noret_decl(trf_28185)
static void C_fcall trf_28185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28185(t0,t1);}

C_noret_decl(trf_28194)
static void C_fcall trf_28194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28194(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28194(t0,t1,t2);}

C_noret_decl(trf_28204)
static void C_fcall trf_28204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28204(t0,t1);}

C_noret_decl(trf_28151)
static void C_fcall trf_28151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28151(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28151(t0,t1,t2);}

C_noret_decl(trf_28113)
static void C_fcall trf_28113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28113(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28113(t0,t1,t2);}

C_noret_decl(trf_27486)
static void C_fcall trf_27486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27486(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27486(t0,t1,t2,t3);}

C_noret_decl(trf_28068)
static void C_fcall trf_28068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28068(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28068(t0,t1,t2);}

C_noret_decl(trf_28038)
static void C_fcall trf_28038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28038(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28038(t0,t1,t2);}

C_noret_decl(trf_27973)
static void C_fcall trf_27973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27973(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_27973(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_27917)
static void C_fcall trf_27917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27917(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27917(t0,t1,t2);}

C_noret_decl(trf_27885)
static void C_fcall trf_27885(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27885(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27885(t0,t1,t2);}

C_noret_decl(trf_27836)
static void C_fcall trf_27836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27836(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27836(t0,t1,t2);}

C_noret_decl(trf_27855)
static void C_fcall trf_27855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27855(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27855(t0,t1,t2);}

C_noret_decl(trf_27775)
static void C_fcall trf_27775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27775(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27775(t0,t1,t2,t3);}

C_noret_decl(trf_27758)
static void C_fcall trf_27758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27758(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27758(t0,t1);}

C_noret_decl(trf_27741)
static void C_fcall trf_27741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27741(t0,t1);}

C_noret_decl(trf_27574)
static void C_fcall trf_27574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27574(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_27574(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_27584)
static void C_fcall trf_27584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27584(t0,t1);}

C_noret_decl(trf_27399)
static void C_fcall trf_27399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27399(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27399(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27421)
static void C_fcall trf_27421(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27421(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27421(t0,t1);}

C_noret_decl(trf_27240)
static void C_fcall trf_27240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27240(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27240(t0,t1,t2,t3);}

C_noret_decl(trf_27329)
static void C_fcall trf_27329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27329(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27329(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27343)
static void C_fcall trf_27343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27343(t0,t1);}

C_noret_decl(trf_27271)
static void C_fcall trf_27271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27271(t0,t1);}

C_noret_decl(trf_27178)
static void C_fcall trf_27178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27178(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27178(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25685)
static void C_fcall trf_25685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25685(t0,t1);}

C_noret_decl(trf_25688)
static void C_fcall trf_25688(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25688(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25688(t0,t1);}

C_noret_decl(trf_25691)
static void C_fcall trf_25691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25691(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25691(t0,t1);}

C_noret_decl(trf_25694)
static void C_fcall trf_25694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25694(t0,t1);}

C_noret_decl(trf_25697)
static void C_fcall trf_25697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25697(t0,t1);}

C_noret_decl(trf_25700)
static void C_fcall trf_25700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25700(t0,t1);}

C_noret_decl(trf_25449)
static void C_fcall trf_25449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25449(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25449(t0,t1);}

C_noret_decl(trf_8437)
static void C_fcall trf_8437(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8437(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8437(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25534)
static void C_fcall trf_25534(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25534(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25534(t0,t1,t2);}

C_noret_decl(trf_25460)
static void C_fcall trf_25460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25460(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25460(t0,t1,t2);}

C_noret_decl(trf_25501)
static void C_fcall trf_25501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25501(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25501(t0,t1);}

C_noret_decl(trf_25475)
static void C_fcall trf_25475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25475(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25475(t0,t1);}

C_noret_decl(trf_25320)
static void C_fcall trf_25320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25320(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25320(t0,t1,t2);}

C_noret_decl(trf_25246)
static void C_fcall trf_25246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25246(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25246(t0,t1,t2);}

C_noret_decl(trf_25228)
static void C_fcall trf_25228(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25228(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25228(t0,t1,t2);}

C_noret_decl(trf_25210)
static void C_fcall trf_25210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25210(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25210(t0,t1,t2);}

C_noret_decl(trf_25186)
static void C_fcall trf_25186(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25186(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25186(t0,t1);}

C_noret_decl(trf_25180)
static void C_fcall trf_25180(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25180(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25180(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25135)
static void C_fcall trf_25135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25135(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25135(t0,t1);}

C_noret_decl(trf_25093)
static void C_fcall trf_25093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25093(t0,t1);}

C_noret_decl(trf_23902)
static void C_fcall trf_23902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23902(t0,t1);}

C_noret_decl(trf_24048)
static void C_fcall trf_24048(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24048(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_24048(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23997)
static void C_fcall trf_23997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23997(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23997(t0,t1,t2,t3);}

C_noret_decl(trf_24003)
static void C_fcall trf_24003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24003(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24003(t0,t1,t2,t3);}

C_noret_decl(trf_24013)
static void C_fcall trf_24013(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24013(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24013(t0,t1);}

C_noret_decl(trf_23882)
static void C_fcall trf_23882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23882(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23882(t0,t1,t2);}

C_noret_decl(trf_23877)
static void C_fcall trf_23877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23877(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23877(t0,t1,t2,t3);}

C_noret_decl(trf_23734)
static void C_fcall trf_23734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23734(t0,t1);}

C_noret_decl(trf_23617)
static void C_fcall trf_23617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23617(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23617(t0,t1,t2);}

C_noret_decl(trf_23626)
static void C_fcall trf_23626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23626(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23626(t0,t1,t2,t3);}

C_noret_decl(trf_23459)
static void C_fcall trf_23459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23459(t0,t1);}

C_noret_decl(trf_23475)
static void C_fcall trf_23475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23475(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23475(t0,t1,t2,t3);}

C_noret_decl(trf_23283)
static void C_fcall trf_23283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23283(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23283(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23313)
static void C_fcall trf_23313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23313(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23313(t0,t1);}

C_noret_decl(trf_23296)
static void C_fcall trf_23296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23296(t0,t1);}

C_noret_decl(trf_23161)
static void C_fcall trf_23161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23161(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23161(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23191)
static void C_fcall trf_23191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23191(t0,t1);}

C_noret_decl(trf_23174)
static void C_fcall trf_23174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23174(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23174(t0,t1);}

C_noret_decl(trf_23064)
static void C_fcall trf_23064(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23064(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23064(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23077)
static void C_fcall trf_23077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23077(t0,t1);}

C_noret_decl(trf_22996)
static void C_fcall trf_22996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22996(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22996(t0,t1,t2,t3);}

C_noret_decl(trf_22975)
static void C_fcall trf_22975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22975(t0,t1);}

C_noret_decl(trf_22897)
static void C_fcall trf_22897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22897(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22897(t0,t1,t2,t3);}

C_noret_decl(trf_22566)
static void C_fcall trf_22566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22566(t0,t1);}

C_noret_decl(trf_22569)
static void C_fcall trf_22569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22569(t0,t1);}

C_noret_decl(trf_22575)
static void C_fcall trf_22575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22575(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22575(t0,t1);}

C_noret_decl(trf_22478)
static void C_fcall trf_22478(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22478(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22478(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22370)
static void C_fcall trf_22370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22370(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22370(t0,t1);}

C_noret_decl(trf_22375)
static void C_fcall trf_22375(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22375(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22375(t0,t1,t2,t3);}

C_noret_decl(trf_22043)
static void C_fcall trf_22043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22043(t0,t1);}

C_noret_decl(trf_21844)
static void C_fcall trf_21844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21844(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21844(t0,t1);}

C_noret_decl(trf_21926)
static void C_fcall trf_21926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21926(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21926(t0,t1);}

C_noret_decl(trf_21937)
static void C_fcall trf_21937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21937(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21937(t0,t1,t2,t3);}

C_noret_decl(trf_21949)
static void C_fcall trf_21949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21949(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21949(t0,t1,t2);}

C_noret_decl(trf_21870)
static void C_fcall trf_21870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21870(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21870(t0,t1,t2);}

C_noret_decl(trf_21731)
static void C_fcall trf_21731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21731(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21731(t0,t1);}

C_noret_decl(trf_21740)
static void C_fcall trf_21740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21740(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21740(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21753)
static void C_fcall trf_21753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21753(t0,t1);}

C_noret_decl(trf_21595)
static void C_fcall trf_21595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21595(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21595(t0,t1);}

C_noret_decl(trf_21598)
static void C_fcall trf_21598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21598(t0,t1);}

C_noret_decl(trf_21600)
static void C_fcall trf_21600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21600(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21600(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21528)
static void C_fcall trf_21528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21528(t0,t1);}

C_noret_decl(trf_21531)
static void C_fcall trf_21531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21531(t0,t1);}

C_noret_decl(trf_21534)
static void C_fcall trf_21534(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21534(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21534(t0,t1);}

C_noret_decl(trf_21392)
static void C_fcall trf_21392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21392(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21392(t0,t1,t2,t3);}

C_noret_decl(trf_21408)
static void C_fcall trf_21408(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21408(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21408(t0,t1,t2);}

C_noret_decl(trf_21115)
static void C_fcall trf_21115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21115(t0,t1);}

C_noret_decl(trf_21118)
static void C_fcall trf_21118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21118(t0,t1);}

C_noret_decl(trf_20671)
static void C_fcall trf_20671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20671(t0,t1);}

C_noret_decl(trf_19596)
static void C_fcall trf_19596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19596(t0,t1);}

C_noret_decl(trf_19599)
static void C_fcall trf_19599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19599(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19599(t0,t1);}

C_noret_decl(trf_20339)
static void C_fcall trf_20339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20339(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20339(t0,t1,t2);}

C_noret_decl(trf_20362)
static void C_fcall trf_20362(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20362(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20362(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20397)
static void C_fcall trf_20397(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20397(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20397(t0,t1);}

C_noret_decl(trf_20301)
static void C_fcall trf_20301(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20301(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20301(t0,t1);}

C_noret_decl(trf_19804)
static void C_fcall trf_19804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19804(t0,t1);}

C_noret_decl(trf_20172)
static void C_fcall trf_20172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20172(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20172(t0,t1,t2,t3);}

C_noret_decl(trf_20258)
static void C_fcall trf_20258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20258(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20258(t0,t1,t2,t3);}

C_noret_decl(trf_20215)
static void C_fcall trf_20215(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20215(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20215(t0,t1,t2);}

C_noret_decl(trf_20139)
static void C_fcall trf_20139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20139(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20139(t0,t1,t2);}

C_noret_decl(trf_20077)
static void C_fcall trf_20077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20077(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20077(t0,t1,t2);}

C_noret_decl(trf_20112)
static void C_fcall trf_20112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20112(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20112(t0,t1,t2,t3);}

C_noret_decl(trf_19872)
static void C_fcall trf_19872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19872(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19872(t0,t1,t2);}

C_noret_decl(trf_19768)
static void C_fcall trf_19768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19768(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19768(t0,t1,t2);}

C_noret_decl(trf_20050)
static void C_fcall trf_20050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20050(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20050(t0,t1,t2,t3);}

C_noret_decl(trf_20023)
static void C_fcall trf_20023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20023(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20023(t0,t1,t2,t3);}

C_noret_decl(trf_19909)
static void C_fcall trf_19909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19909(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19909(t0,t1,t2);}

C_noret_decl(trf_19950)
static void C_fcall trf_19950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19950(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19950(t0,t1);}

C_noret_decl(trf_19962)
static void C_fcall trf_19962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19962(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19962(t0,t1,t2,t3);}

C_noret_decl(trf_19691)
static void C_fcall trf_19691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19691(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19691(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19609)
static void C_fcall trf_19609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19609(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19609(t0,t1,t2,t3);}

C_noret_decl(trf_8630)
static void C_fcall trf_8630(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8630(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8630(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8640)
static void C_fcall trf_8640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8640(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8640(t0,t1);}

C_noret_decl(trf_19681)
static void C_fcall trf_19681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19681(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19681(t0,t1,t2);}

C_noret_decl(trf_19530)
static void C_fcall trf_19530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19530(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19530(t0,t1,t2);}

C_noret_decl(trf_19555)
static void C_fcall trf_19555(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19555(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19555(t0,t1);}

C_noret_decl(trf_19258)
static void C_fcall trf_19258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19258(t0,t1);}

C_noret_decl(trf_19261)
static void C_fcall trf_19261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19261(t0,t1);}

C_noret_decl(trf_19267)
static void C_fcall trf_19267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19267(t0,t1);}

C_noret_decl(trf_18981)
static void C_fcall trf_18981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18981(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18981(t0,t1);}

C_noret_decl(trf_18984)
static void C_fcall trf_18984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18984(t0,t1);}

C_noret_decl(trf_18911)
static void C_fcall trf_18911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18911(t0,t1);}

C_noret_decl(trf_18759)
static void C_fcall trf_18759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18759(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18759(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18684)
static void C_fcall trf_18684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18684(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18684(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18694)
static void C_fcall trf_18694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18694(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18694(t0,t1);}

C_noret_decl(trf_18701)
static void C_fcall trf_18701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18701(t0,t1);}

C_noret_decl(trf_18796)
static void C_fcall trf_18796(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18796(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18796(t0,t1,t2);}

C_noret_decl(trf_18574)
static void C_fcall trf_18574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18574(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18574(t0,t1,t2,t3);}

C_noret_decl(trf_18586)
static void C_fcall trf_18586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18586(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18586(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18647)
static void C_fcall trf_18647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18647(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18647(t0,t1,t2);}

C_noret_decl(trf_18011)
static void C_fcall trf_18011(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18011(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_18011(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17947)
static void C_fcall trf_17947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17947(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17947(t0,t1);}

C_noret_decl(trf_17894)
static void C_fcall trf_17894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17894(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17894(t0,t1);}

C_noret_decl(trf_17897)
static void C_fcall trf_17897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17897(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17897(t0,t1);}

C_noret_decl(trf_18091)
static void C_fcall trf_18091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18091(t0,t1);}

C_noret_decl(trf_18094)
static void C_fcall trf_18094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18094(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18094(t0,t1);}

C_noret_decl(trf_18097)
static void C_fcall trf_18097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18097(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18097(t0,t1);}

C_noret_decl(trf_18112)
static void C_fcall trf_18112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18112(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18112(t0,t1);}

C_noret_decl(trf_17673)
static void C_fcall trf_17673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17673(t0,t1);}

C_noret_decl(trf_17765)
static void C_fcall trf_17765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17765(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17765(t0,t1,t2);}

C_noret_decl(trf_17784)
static void C_fcall trf_17784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17784(t0,t1);}

C_noret_decl(trf_17738)
static void C_fcall trf_17738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17738(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17738(t0,t1,t2);}

C_noret_decl(trf_17683)
static void C_fcall trf_17683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17683(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17683(t0,t1,t2);}

C_noret_decl(trf_17693)
static void C_fcall trf_17693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17693(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17693(t0,t1,t2,t3);}

C_noret_decl(trf_17551)
static void C_fcall trf_17551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17551(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17551(t0,t1,t2);}

C_noret_decl(trf_17608)
static void C_fcall trf_17608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17608(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17608(t0,t1,t2);}

C_noret_decl(trf_17566)
static void C_fcall trf_17566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17566(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17566(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17108)
static void C_fcall trf_17108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17108(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17108(t0,t1);}

C_noret_decl(trf_17111)
static void C_fcall trf_17111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17111(t0,t1);}

C_noret_decl(trf_17114)
static void C_fcall trf_17114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17114(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17114(t0,t1);}

C_noret_decl(trf_17117)
static void C_fcall trf_17117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17117(t0,t1);}

C_noret_decl(trf_17081)
static void C_fcall trf_17081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17081(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17081(t0,t1);}

C_noret_decl(trf_16804)
static void C_fcall trf_16804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16804(t0,t1);}

C_noret_decl(trf_16807)
static void C_fcall trf_16807(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16807(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16807(t0,t1);}

C_noret_decl(trf_16810)
static void C_fcall trf_16810(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16810(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16810(t0,t1);}

C_noret_decl(trf_16701)
static void C_fcall trf_16701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16701(t0,t1);}

C_noret_decl(trf_16692)
static void C_fcall trf_16692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16692(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16692(t0,t1,t2);}

C_noret_decl(trf_16683)
static void C_fcall trf_16683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16683(t0,t1);}

C_noret_decl(trf_16665)
static void C_fcall trf_16665(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16665(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16665(t0,t1);}

C_noret_decl(trf_16647)
static void C_fcall trf_16647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16647(t0,t1);}

C_noret_decl(trf_16629)
static void C_fcall trf_16629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16629(t0,t1);}

C_noret_decl(trf_16620)
static void C_fcall trf_16620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16620(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16620(t0,t1,t2);}

C_noret_decl(trf_16611)
static void C_fcall trf_16611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16611(t0,t1);}

C_noret_decl(trf_16442)
static void C_fcall trf_16442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16442(t0,t1);}

C_noret_decl(trf_16398)
static void C_fcall trf_16398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16398(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16398(t0,t1,t2);}

C_noret_decl(trf_15919)
static void C_fcall trf_15919(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15919(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15919(t0,t1);}

C_noret_decl(trf_15922)
static void C_fcall trf_15922(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15922(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15922(t0,t1);}

C_noret_decl(trf_15925)
static void C_fcall trf_15925(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15925(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15925(t0,t1);}

C_noret_decl(trf_15928)
static void C_fcall trf_15928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15928(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15928(t0,t1);}

C_noret_decl(trf_15874)
static void C_fcall trf_15874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15874(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15874(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15580)
static void C_fcall trf_15580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15580(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15580(t0,t1);}

C_noret_decl(trf_15583)
static void C_fcall trf_15583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15583(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15583(t0,t1);}

C_noret_decl(trf_15586)
static void C_fcall trf_15586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15586(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15586(t0,t1);}

C_noret_decl(trf_15297)
static void C_fcall trf_15297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15297(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15297(t0,t1);}

C_noret_decl(trf_15300)
static void C_fcall trf_15300(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15300(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15300(t0,t1);}

C_noret_decl(trf_15303)
static void C_fcall trf_15303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15303(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15303(t0,t1);}

C_noret_decl(trf_15256)
static void C_fcall trf_15256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15256(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15256(t0,t1);}

C_noret_decl(trf_15212)
static void C_fcall trf_15212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15212(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15212(t0,t1);}

C_noret_decl(trf_15127)
static void C_fcall trf_15127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15127(t0,t1);}

C_noret_decl(trf_14612)
static void C_fcall trf_14612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14612(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14612(t0,t1);}

C_noret_decl(trf_14615)
static void C_fcall trf_14615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14615(t0,t1);}

C_noret_decl(trf_14618)
static void C_fcall trf_14618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14618(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14618(t0,t1);}

C_noret_decl(trf_14621)
static void C_fcall trf_14621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14621(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14621(t0,t1);}

C_noret_decl(trf_14528)
static void C_fcall trf_14528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14528(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14528(t0,t1,t2);}

C_noret_decl(trf_14519)
static void C_fcall trf_14519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14519(t0,t1);}

C_noret_decl(trf_14454)
static void C_fcall trf_14454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14454(t0,t1);}

C_noret_decl(trf_14196)
static void C_fcall trf_14196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14196(t0,t1);}

C_noret_decl(trf_14199)
static void C_fcall trf_14199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14199(t0,t1);}

C_noret_decl(trf_14202)
static void C_fcall trf_14202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14202(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14202(t0,t1);}

C_noret_decl(trf_14077)
static void C_fcall trf_14077(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14077(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14077(t0,t1);}

C_noret_decl(trf_14101)
static void C_fcall trf_14101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14101(t0,t1);}

C_noret_decl(trf_14031)
static void C_fcall trf_14031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14031(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14031(t0,t1,t2);}

C_noret_decl(trf_14022)
static void C_fcall trf_14022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14022(t0,t1);}

C_noret_decl(trf_13730)
static void C_fcall trf_13730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13730(t0,t1);}

C_noret_decl(trf_13966)
static void C_fcall trf_13966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13966(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13966(t0,t1);}

C_noret_decl(trf_13972)
static void C_fcall trf_13972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13972(t0,t1);}

C_noret_decl(trf_13864)
static void C_fcall trf_13864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13864(t0,t1);}

C_noret_decl(trf_13866)
static void C_fcall trf_13866(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13866(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13866(t0,t1,t2,t3);}

C_noret_decl(trf_13915)
static void C_fcall trf_13915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13915(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13915(t0,t1);}

C_noret_decl(trf_13880)
static void C_fcall trf_13880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13880(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13880(t0,t1);}

C_noret_decl(trf_13764)
static void C_fcall trf_13764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13764(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13764(t0,t1);}

C_noret_decl(trf_13678)
static void C_fcall trf_13678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13678(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13678(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13697)
static void C_fcall trf_13697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13697(t0,t1);}

C_noret_decl(trf_13628)
static void C_fcall trf_13628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13628(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13628(t0,t1,t2,t3);}

C_noret_decl(trf_13389)
static void C_fcall trf_13389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13389(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_13389(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_13408)
static void C_fcall trf_13408(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13408(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13408(t0,t1);}

C_noret_decl(trf_13423)
static void C_fcall trf_13423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13423(t0,t1);}

C_noret_decl(trf_13432)
static void C_fcall trf_13432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13432(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13432(t0,t1);}

C_noret_decl(trf_13379)
static void C_fcall trf_13379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13379(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_13379(t0);}

C_noret_decl(trf_13320)
static void C_fcall trf_13320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13320(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13320(t0,t1);}

C_noret_decl(trf_13311)
static void C_fcall trf_13311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13311(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13311(t0,t1,t2);}

C_noret_decl(trf_13194)
static void C_fcall trf_13194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13194(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13194(t0,t1);}

C_noret_decl(trf_13185)
static void C_fcall trf_13185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13185(t0,t1,t2);}

C_noret_decl(trf_13167)
static void C_fcall trf_13167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13167(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13167(t0,t1,t2);}

C_noret_decl(trf_13158)
static void C_fcall trf_13158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13158(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13158(t0,t1);}

C_noret_decl(trf_13140)
static void C_fcall trf_13140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13140(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13140(t0,t1);}

C_noret_decl(trf_13131)
static void C_fcall trf_13131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13131(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13131(t0,t1,t2);}

C_noret_decl(trf_13122)
static void C_fcall trf_13122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13122(t0,t1);}

C_noret_decl(trf_13104)
static void C_fcall trf_13104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13104(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13104(t0,t1);}

C_noret_decl(trf_13095)
static void C_fcall trf_13095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13095(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13095(t0,t1,t2);}

C_noret_decl(trf_13086)
static void C_fcall trf_13086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13086(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13086(t0,t1);}

C_noret_decl(trf_13071)
static void C_fcall trf_13071(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13071(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13071(t0,t1);}

C_noret_decl(trf_13026)
static void C_fcall trf_13026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13026(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13026(t0,t1);}

C_noret_decl(trf_13008)
static void C_fcall trf_13008(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13008(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13008(t0,t1);}

C_noret_decl(trf_12999)
static void C_fcall trf_12999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12999(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12999(t0,t1,t2);}

C_noret_decl(trf_12972)
static void C_fcall trf_12972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12972(t0,t1);}

C_noret_decl(trf_12954)
static void C_fcall trf_12954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12954(t0,t1);}

C_noret_decl(trf_12936)
static void C_fcall trf_12936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12936(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12936(t0,t1);}

C_noret_decl(trf_12927)
static void C_fcall trf_12927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12927(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12927(t0,t1,t2);}

C_noret_decl(trf_12915)
static void C_fcall trf_12915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12915(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_12915(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_12577)
static void C_fcall trf_12577(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12577(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12577(t0,t1,t2,t3);}

C_noret_decl(trf_12417)
static void C_fcall trf_12417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12417(t0,t1);}

C_noret_decl(trf_12452)
static void C_fcall trf_12452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12452(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_12452(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_12462)
static void C_fcall trf_12462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12462(t0,t1);}

C_noret_decl(trf_12425)
static void C_fcall trf_12425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12425(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12425(t0,t1,t2);}

C_noret_decl(trf_12585)
static void C_fcall trf_12585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12585(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12585(t0,t1);}

C_noret_decl(trf_12203)
static void C_fcall trf_12203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12203(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12203(t0,t1);}

C_noret_decl(trf_12209)
static void C_fcall trf_12209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12209(t0,t1);}

C_noret_decl(trf_12232)
static void C_fcall trf_12232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12232(t0,t1);}

C_noret_decl(trf_12245)
static void C_fcall trf_12245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12245(t0,t1);}

C_noret_decl(trf_12219)
static void C_fcall trf_12219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12219(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12219(t0,t1);}

C_noret_decl(trf_12032)
static void C_fcall trf_12032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12032(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12032(t0,t1,t2,t3);}

C_noret_decl(trf_12041)
static void C_fcall trf_12041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12041(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12041(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11995)
static void C_fcall trf_11995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11995(t0,t1);}

C_noret_decl(trf_11858)
static void C_fcall trf_11858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11858(t0,t1);}

C_noret_decl(trf_11788)
static void C_fcall trf_11788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11788(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11788(t0,t1);}

C_noret_decl(trf_11149)
static void C_fcall trf_11149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11149(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11149(t0,t1,t2);}

C_noret_decl(trf_11109)
static void C_fcall trf_11109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11109(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11109(t0,t1,t2);}

C_noret_decl(trf_11122)
static void C_fcall trf_11122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11122(t0,t1);}

C_noret_decl(trf_11701)
static void C_fcall trf_11701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11701(t0,t1);}

C_noret_decl(trf_11491)
static void C_fcall trf_11491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11491(t0,t1);}

C_noret_decl(trf_11607)
static void C_fcall trf_11607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11607(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11607(t0,t1);}

C_noret_decl(trf_11494)
static void C_fcall trf_11494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11494(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11494(t0,t1);}

C_noret_decl(trf_11497)
static void C_fcall trf_11497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11497(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11497(t0,t1);}

C_noret_decl(trf_11402)
static void C_fcall trf_11402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11402(t0,t1);}

C_noret_decl(trf_11317)
static void C_fcall trf_11317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11317(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11317(t0,t1);}

C_noret_decl(trf_11274)
static void C_fcall trf_11274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11274(t0,t1);}

C_noret_decl(trf_11241)
static void C_fcall trf_11241(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11241(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11241(t0,t1);}

C_noret_decl(trf_11236)
static void C_fcall trf_11236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11236(t0,t1);}

C_noret_decl(trf_11231)
static void C_fcall trf_11231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11231(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11231(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10978)
static void C_fcall trf_10978(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10978(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10978(t0,t1);}

C_noret_decl(trf_10825)
static void C_fcall trf_10825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10825(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10825(t0,t1,t2,t3);}

C_noret_decl(trf_10671)
static void C_fcall trf_10671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10671(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10671(t0,t1,t2);}

C_noret_decl(trf_10513)
static void C_fcall trf_10513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10513(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10513(t0,t1,t2);}

C_noret_decl(trf_10546)
static void C_fcall trf_10546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10546(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10546(t0,t1);}

C_noret_decl(trf_10453)
static void C_fcall trf_10453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10453(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10453(t0,t1);}

C_noret_decl(trf_10418)
static void C_fcall trf_10418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10418(t0,t1);}

C_noret_decl(trf_10434)
static void C_fcall trf_10434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10434(t0,t1);}

C_noret_decl(trf_10389)
static void C_fcall trf_10389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10389(t0,t1);}

C_noret_decl(trf_10296)
static void C_fcall trf_10296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10296(t0,t1);}

C_noret_decl(trf_10052)
static void C_fcall trf_10052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10052(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10052(t0,t1,t2);}

C_noret_decl(trf_9856)
static void C_fcall trf_9856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9856(t0,t1);}

C_noret_decl(trf_10019)
static void C_fcall trf_10019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10019(t0,t1);}

C_noret_decl(trf_9859)
static void C_fcall trf_9859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9859(t0,t1);}

C_noret_decl(trf_9862)
static void C_fcall trf_9862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9862(t0,t1);}

C_noret_decl(trf_9865)
static void C_fcall trf_9865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9865(t0,t1);}

C_noret_decl(trf_9907)
static void C_fcall trf_9907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9907(t0,t1);}

C_noret_decl(trf_9872)
static void C_fcall trf_9872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9872(t0,t1);}

C_noret_decl(trf_9601)
static void C_fcall trf_9601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9601(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9601(t0,t1,t2,t3);}

C_noret_decl(trf_9609)
static void C_fcall trf_9609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9609(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9609(t0,t1,t2,t3);}

C_noret_decl(trf_9738)
static void C_fcall trf_9738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9738(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9738(t0,t1,t2);}

C_noret_decl(trf_9692)
static void C_fcall trf_9692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9692(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9692(t0,t1,t2);}

C_noret_decl(trf_9595)
static void C_fcall trf_9595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9595(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9595(t0,t1,t2);}

C_noret_decl(trf_9589)
static void C_fcall trf_9589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9589(t0,t1);}

C_noret_decl(trf_9583)
static void C_fcall trf_9583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9583(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9583(t0,t1,t2);}

C_noret_decl(trf_9512)
static void C_fcall trf_9512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9512(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9512(t0,t1,t2);}

C_noret_decl(trf_9514)
static void C_fcall trf_9514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9514(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9514(t0,t1,t2);}

C_noret_decl(trf_9520)
static void C_fcall trf_9520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9520(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9520(t0,t1,t2);}

C_noret_decl(trf_9361)
static void C_fcall trf_9361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9361(t0,t1);}

C_noret_decl(trf_9376)
static void C_fcall trf_9376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9376(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9376(t0,t1,t2);}

C_noret_decl(trf_9319)
static void C_fcall trf_9319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9319(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9319(t0,t1,t2);}

C_noret_decl(trf_9259)
static void C_fcall trf_9259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9259(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9259(t0,t1,t2);}

C_noret_decl(trf_8788)
static void C_fcall trf_8788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8788(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8788(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8801)
static void C_fcall trf_8801(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8801(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8801(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8818)
static void C_fcall trf_8818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8818(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8818(t0,t1);}

C_noret_decl(trf_8584)
static void C_fcall trf_8584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8584(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8584(t0,t1,t2);}

C_noret_decl(trf_8590)
static void C_fcall trf_8590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8590(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8590(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8600)
static void C_fcall trf_8600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8600(t0,t1);}

C_noret_decl(trf_8514)
static void C_fcall trf_8514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8514(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8514(t0,t1,t2,t3);}

C_noret_decl(trf_8491)
static void C_fcall trf_8491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8491(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8491(t0,t1,t2,t3);}

C_noret_decl(trf_8332)
static void C_fcall trf_8332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8332(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8332(t0,t1,t2);}

C_noret_decl(trf_8370)
static void C_fcall trf_8370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8370(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8370(t0,t1,t2);}

C_noret_decl(trf_8056)
static void C_fcall trf_8056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8056(t0,t1);}

C_noret_decl(trf_7781)
static void C_fcall trf_7781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7781(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7781(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7614)
static void C_fcall trf_7614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7614(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7614(t0,t1);}

C_noret_decl(trf_7523)
static void C_fcall trf_7523(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7523(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7523(t0,t1);}

C_noret_decl(trf_7503)
static void C_fcall trf_7503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7503(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7503(t0,t1,t2,t3);}

C_noret_decl(trf_7462)
static void C_fcall trf_7462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7462(t0,t1);}

C_noret_decl(trf_7452)
static void C_fcall trf_7452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7452(t0,t1);}

C_noret_decl(trf_7434)
static void C_fcall trf_7434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7434(t0,t1);}

C_noret_decl(trf_7423)
static void C_fcall trf_7423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7423(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7423(t0,t1,t2);}

C_noret_decl(trf_7385)
static void C_fcall trf_7385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7385(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7385(t0,t1);}

C_noret_decl(trf_7378)
static void C_fcall trf_7378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7378(t0,t1);}

C_noret_decl(trf_7354)
static void C_fcall trf_7354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7354(t0,t1);}

C_noret_decl(trf_7280)
static void C_fcall trf_7280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7280(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7280(t0,t1,t2,t3);}

C_noret_decl(trf_7269)
static void C_fcall trf_7269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7269(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7269(t0,t1,t2);}

C_noret_decl(trf_7208)
static void C_fcall trf_7208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7208(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7208(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7152)
static void C_fcall trf_7152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7152(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7152(t0,t1,t2);}

C_noret_decl(trf_7031)
static void C_fcall trf_7031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7031(t0,t1);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_cm_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("cm_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(6052)){
C_save(t1);
C_rereclaim2(6052*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,1081);
lf[0]=C_h_intern(&lf[0],3,"ash");
lf[1]=C_h_intern(&lf[1],6,"logand");
lf[2]=C_h_intern(&lf[2],11,"bitwise-and");
lf[3]=C_h_intern(&lf[3],6,"lognot");
lf[4]=C_h_intern(&lf[4],11,"bitwise-not");
lf[5]=C_h_intern(&lf[5],6,"logxor");
lf[6]=C_h_intern(&lf[6],11,"bitwise-xor");
lf[7]=C_h_intern(&lf[7],6,"logior");
lf[8]=C_h_intern(&lf[8],11,"bitwise-ior");
lf[9]=C_h_intern(&lf[9],7,"logtest");
lf[10]=C_h_intern(&lf[10],20,"most-positive-fixnum");
lf[11]=C_h_intern(&lf[11],20,"most-negative-fixnum");
lf[12]=C_h_intern(&lf[12],2,"pi");
lf[13]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[14]=C_h_intern(&lf[14],9,"list-set!");
lf[15]=C_h_intern(&lf[15],21,"make-equal-hash-table");
lf[16]=C_h_intern(&lf[16],15,"make-hash-table");
lf[17]=C_h_intern(&lf[17],6,"equal\077");
lf[18]=C_h_intern(&lf[18],18,"make-eq-hash-table");
lf[19]=C_h_intern(&lf[19],3,"eq\077");
lf[20]=C_h_intern(&lf[20],9,"hash-set!");
lf[21]=C_h_intern(&lf[21],15,"hash-table-set!");
lf[22]=C_h_intern(&lf[22],8,"hash-ref");
lf[23]=C_h_intern(&lf[23],22,"hash-table-ref/default");
lf[25]=C_h_intern(&lf[25],22,"call-with-input-string");
lf[26]=C_h_intern(&lf[26],4,"read");
lf[28]=C_h_intern(&lf[28],17,"\003sysmake-c-string");
lf[53]=C_h_intern(&lf[53],22,"ffi_sched_score_mode_p");
lf[54]=C_h_intern(&lf[54],20,"ffi_sched_score_time");
lf[56]=C_h_intern(&lf[56],17,"\003syspeek-c-string");
lf[58]=C_h_intern(&lf[58],4,"quit");
lf[59]=C_h_intern(&lf[59],11,"print-error");
lf[60]=C_h_intern(&lf[60],12,"print-output");
lf[61]=C_h_intern(&lf[61],5,"shell");
lf[62]=C_h_intern(&lf[62],5,"first");
lf[63]=C_h_intern(&lf[63],3,"car");
lf[64]=C_h_intern(&lf[64],6,"second");
lf[65]=C_h_intern(&lf[65],4,"cadr");
lf[66]=C_h_intern(&lf[66],5,"third");
lf[67]=C_h_intern(&lf[67],5,"caddr");
lf[68]=C_h_intern(&lf[68],6,"fourth");
lf[69]=C_h_intern(&lf[69],6,"cadddr");
lf[70]=C_h_intern(&lf[70],5,"fifth");
lf[71]=C_h_intern(&lf[71],5,"sixth");
lf[72]=C_h_intern(&lf[72],7,"seventh");
lf[73]=C_h_intern(&lf[73],6,"eighth");
lf[74]=C_h_intern(&lf[74],5,"ninth");
lf[75]=C_h_intern(&lf[75],5,"tenth");
lf[76]=C_h_intern(&lf[76],3,"nth");
lf[77]=C_h_intern(&lf[77],8,"list-ref");
lf[78]=C_h_intern(&lf[78],4,"rest");
lf[79]=C_h_intern(&lf[79],4,"last");
lf[80]=C_h_intern(&lf[80],7,"butlast");
lf[81]=C_h_intern(&lf[81],4,"tail");
lf[82]=C_h_intern(&lf[82],6,"concat");
lf[83]=C_h_intern(&lf[83],9,"make-list");
lf[84]=C_h_intern(&lf[84],5,"error");
lf[85]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[89]=C_h_intern(&lf[89],6,"length");
lf[90]=C_h_intern(&lf[90],10,"string-ref");
lf[91]=C_h_intern(&lf[91],13,"string-length");
lf[92]=C_h_intern(&lf[92],10,"vector-ref");
lf[93]=C_h_intern(&lf[93],13,"vector-length");
lf[94]=C_decode_literal(C_heaptop,"\376B\000\000\034not a list, string or vector");
lf[95]=C_h_intern(&lf[95],4,"find");
lf[96]=C_h_intern(&lf[96],12,"with-optkeys");
lf[97]=C_h_intern(&lf[97],3,"key");
lf[98]=C_h_intern(&lf[98],5,"start");
lf[99]=C_h_intern(&lf[99],3,"end");
lf[100]=C_h_intern(&lf[100],8,"position");
lf[101]=C_h_intern(&lf[101],14,"expand-optkeys");
lf[102]=C_h_intern(&lf[102],3,"let");
lf[103]=C_h_intern(&lf[103],4,"let*");
lf[104]=C_h_intern(&lf[104],5,"null\077");
lf[105]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[106]=C_h_intern(&lf[106],6,"unless");
lf[107]=C_h_intern(&lf[107],10,"\003sysappend");
lf[108]=C_h_intern(&lf[108],4,"case");
lf[109]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[110]=C_h_intern(&lf[110],4,"when");
lf[111]=C_h_intern(&lf[111],4,"set!");
lf[112]=C_h_intern(&lf[112],8,"keyword\077");
lf[113]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[114]=C_h_intern(&lf[114],3,"cdr");
lf[115]=C_h_intern(&lf[115],4,"else");
lf[116]=C_h_intern(&lf[116],7,"\003sysmap");
lf[117]=C_h_intern(&lf[117],6,"append");
lf[118]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[119]=C_h_intern(&lf[119],2,"if");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[121]=C_h_intern(&lf[121],4,"cddr");
lf[122]=C_h_intern(&lf[122],15,"string->keyword");
lf[123]=C_h_intern(&lf[123],14,"symbol->string");
lf[124]=C_h_intern(&lf[124],6,"gensym");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[126]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[138]=C_h_intern(&lf[138],8,"operator");
lf[139]=C_h_intern(&lf[139],8,"bindings");
lf[140]=C_h_intern(&lf[140],10,"collectors");
lf[141]=C_h_intern(&lf[141],9,"initially");
lf[142]=C_h_intern(&lf[142],9,"end-tests");
lf[143]=C_h_intern(&lf[143],7,"looping");
lf[144]=C_h_intern(&lf[144],8,"stepping");
lf[145]=C_h_intern(&lf[145],7,"finally");
lf[146]=C_h_intern(&lf[146],9,"returning");
lf[152]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[153]=C_h_intern(&lf[153],7,"newline");
lf[154]=C_h_intern(&lf[154],7,"display");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[158]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[161]=C_h_intern(&lf[161],7,"reverse");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[168]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[169]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[171]=C_h_intern(&lf[171],3,"for");
lf[172]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[174]=C_h_intern(&lf[174],8,"downfrom");
lf[175]=C_h_intern(&lf[175],1,"-");
lf[176]=C_h_intern(&lf[176],5,"above");
lf[177]=C_h_intern(&lf[177],2,"<=");
lf[178]=C_h_intern(&lf[178],1,"<");
lf[179]=C_h_intern(&lf[179],1,"+");
lf[180]=C_h_intern(&lf[180],5,"below");
lf[181]=C_h_intern(&lf[181],2,">=");
lf[182]=C_h_intern(&lf[182],1,">");
lf[183]=C_h_intern(&lf[183],6,"downto");
lf[184]=C_h_intern(&lf[184],4,"from");
lf[185]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[187]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[188]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[191]=C_h_intern(&lf[191],2,"to");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[195]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[196]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[199]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[200]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[201]=C_h_intern(&lf[201],2,"by");
lf[202]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[203]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[204]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[207]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[208]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[210]=C_h_intern(&lf[210],6,"across");
lf[211]=C_h_intern(&lf[211],3,"not");
lf[212]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[213]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[214]=C_h_intern(&lf[214],4,"over");
lf[215]=C_h_intern(&lf[215],4,"eod\077");
lf[216]=C_h_intern(&lf[216],5,"begin");
lf[217]=C_h_intern(&lf[217],4,"next");
lf[218]=C_h_intern(&lf[218],2,"in");
lf[219]=C_h_intern(&lf[219],5,"quote");
lf[220]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[221]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[222]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[223]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[224]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[225]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[226]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[227]=C_h_intern(&lf[227],2,"on");
lf[228]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[229]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[231]=C_h_intern(&lf[231],1,"=");
lf[232]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[233]=C_h_intern(&lf[233],4,"then");
lf[234]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[235]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[236]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[237]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[239]=C_h_intern(&lf[239],4,"with");
lf[240]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[241]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[242]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[243]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[244]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[245]=C_h_intern(&lf[245],3,"and");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[248]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[249]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[260]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[261]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[263]=C_h_intern(&lf[263],3,"sum");
lf[264]=C_h_intern(&lf[264],5,"count");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[266]=C_h_intern(&lf[266],8,"minimize");
lf[267]=C_h_intern(&lf[267],8,"maximize");
lf[268]=C_h_intern(&lf[268],2,"or");
lf[269]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[270]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[271]=C_h_intern(&lf[271],4,"list");
lf[272]=C_h_intern(&lf[272],8,"set-cdr!");
lf[273]=C_h_intern(&lf[273],9,"last-pair");
lf[274]=C_h_intern(&lf[274],7,"collect");
lf[275]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[276]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[278]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[279]=C_h_intern(&lf[279],5,"nconc");
lf[280]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[281]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[282]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[283]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[284]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[285]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[286]=C_h_intern(&lf[286],4,"into");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[293]=C_h_intern(&lf[293],6,"return");
lf[295]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[296]=C_h_intern(&lf[296],5,"until");
lf[297]=C_h_intern(&lf[297],5,"while");
lf[298]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[299]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[301]=C_h_intern(&lf[301],7,"thereis");
lf[302]=C_h_intern(&lf[302],6,"always");
lf[303]=C_h_intern(&lf[303],5,"never");
lf[304]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[307]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[310]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[311]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[312]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[313]=C_h_intern(&lf[313],4,"task");
lf[314]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[316]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[319]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[320]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[322]=C_h_intern(&lf[322],2,"do");
lf[323]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[325]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[326]=C_h_intern(&lf[326],4,"iter");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[329]=C_h_intern(&lf[329],6,"repeat");
lf[330]=C_h_intern(&lf[330],2,"as");
lf[333]=C_h_intern(&lf[333],6,"period");
lf[335]=C_h_intern(&lf[335],14,"\003sysblock-set!");
lf[343]=C_h_intern(&lf[343],7,"pattern");
lf[358]=C_h_intern(&lf[358],4,"\000nad");
lf[359]=C_h_intern(&lf[359],8,"\000periods");
lf[360]=C_h_intern(&lf[360],12,"\000depth-first");
lf[362]=C_h_intern(&lf[362],14,"\000breadth-first");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[364]=C_h_intern(&lf[364],7,"\000values");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[367]=C_h_intern(&lf[367],4,"eop\077");
lf[368]=C_h_intern(&lf[368],4,"\000eop");
lf[369]=C_h_intern(&lf[369],4,"\000eod");
lf[373]=C_h_intern(&lf[373],3,"max");
lf[374]=C_h_intern(&lf[374],10,"make-cycle");
lf[375]=C_h_intern(&lf[375],12,"\003sysfor-each");
lf[377]=C_h_intern(&lf[377],4,"\000for");
lf[378]=C_h_intern(&lf[378],7,"\000repeat");
lf[380]=C_h_intern(&lf[380],5,"palin");
lf[382]=C_h_intern(&lf[382],15,"make-palindrome");
lf[384]=C_h_intern(&lf[384],6,"\000elide");
lf[385]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[386]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[387]=C_h_intern(&lf[387],9,"make-line");
lf[389]=C_h_intern(&lf[389],9,"make-heap");
lf[391]=C_h_intern(&lf[391],13,"make-rotation");
lf[393]=C_h_intern(&lf[393],7,"\000rotate");
lf[395]=C_h_intern(&lf[395],11,"random-item");
lf[403]=C_h_intern(&lf[403],14,"make-weighting");
lf[406]=C_h_intern(&lf[406],7,"\000weight");
lf[407]=C_h_intern(&lf[407],4,"\000min");
lf[408]=C_h_intern(&lf[408],4,"\000max");
lf[409]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[410]=C_h_intern(&lf[410],11,"make-markov");
lf[411]=C_h_intern(&lf[411],1,"*");
lf[413]=C_h_intern(&lf[413],5,"\000past");
lf[414]=C_h_intern(&lf[414],2,"->");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[416]=C_h_intern(&lf[416],3,"\000->");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[422]=C_h_intern(&lf[422],10,"graph-node");
lf[423]=C_h_intern(&lf[423],10,"make-graph");
lf[425]=C_h_intern(&lf[425],3,"\000to");
lf[426]=C_h_intern(&lf[426],3,"\000id");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[428]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[430]=C_h_intern(&lf[430],14,"markov-analyze");
lf[431]=C_h_intern(&lf[431],6,"format");
lf[432]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[433]=C_h_intern(&lf[433],19,"\003sysundefined-value");
lf[434]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[436]=C_h_intern(&lf[436],19,"\003syswrite-char/port");
lf[437]=C_h_intern(&lf[437],19,"\003sysstandard-output");
lf[438]=C_h_intern(&lf[438],9,"substring");
lf[439]=C_h_intern(&lf[439],3,"min");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[441]=C_h_intern(&lf[441],13,"string-append");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[445]=C_h_intern(&lf[445],11,"make-string");
lf[446]=C_h_intern(&lf[446],4,"sort");
lf[447]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[448]=C_h_intern(&lf[448],8,"decimals");
lf[449]=C_h_intern(&lf[449],11,"string-ci<\077");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[452]=C_h_intern(&lf[452],6,"modulo");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[454]=C_h_intern(&lf[454],6,"\000order");
lf[455]=C_h_intern(&lf[455],5,"\000mode");
lf[456]=C_h_intern(&lf[456],7,"rescale");
lf[457]=C_h_intern(&lf[457],8,"discrete");
lf[458]=C_h_intern(&lf[458],12,"ffi_discrete");
lf[459]=C_h_intern(&lf[459],4,"not\077");
lf[460]=C_h_intern(&lf[460],3,"int");
lf[461]=C_h_intern(&lf[461],5,"float");
lf[462]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[463]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[464]=C_h_intern(&lf[464],5,"log10");
lf[465]=C_h_intern(&lf[465],4,"log2");
lf[466]=C_h_intern(&lf[466],4,"plus");
lf[467]=C_h_intern(&lf[467],5,"times");
lf[468]=C_h_intern(&lf[468],5,"minus");
lf[469]=C_h_intern(&lf[469],6,"divide");
lf[470]=C_h_intern(&lf[470],1,"/");
lf[471]=C_h_intern(&lf[471],8,"quantize");
lf[472]=C_h_intern(&lf[472],5,"round");
lf[473]=C_h_intern(&lf[473],4,"expt");
lf[474]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[475]=C_h_intern(&lf[475],15,"rhythm->seconds");
lf[476]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[477]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[478]=C_h_intern(&lf[478],6,"\000tempo");
lf[479]=C_h_intern(&lf[479],5,"\000beat");
lf[480]=C_h_intern(&lf[480],12,"ratio->cents");
lf[481]=C_h_intern(&lf[481],12,"cents->ratio");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[484]=C_h_intern(&lf[484],3,"err");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[487]=C_h_intern(&lf[487],6,"interp");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[489]=C_h_intern(&lf[489],8,"tendency");
lf[490]=C_h_intern(&lf[490],3,"ran");
lf[491]=C_h_intern(&lf[491],3,"fit");
lf[492]=C_h_intern(&lf[492],9,"remainder");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[494]=C_h_intern(&lf[494],5,"scale");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[496]=C_h_intern(&lf[496],4,"segs");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[499]=C_h_intern(&lf[499],8,"ran-set!");
lf[500]=C_h_intern(&lf[500],7,"between");
lf[501]=C_h_intern(&lf[501],4,"pick");
lf[502]=C_h_intern(&lf[502],4,"vary");
lf[503]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[505]=C_h_intern(&lf[505],8,"shuffle!");
lf[506]=C_h_intern(&lf[506],7,"shuffle");
lf[507]=C_h_intern(&lf[507],6,"ranlow");
lf[508]=C_h_intern(&lf[508],7,"ranhigh");
lf[509]=C_h_intern(&lf[509],9,"ranmiddle");
lf[510]=C_h_intern(&lf[510],7,"ranbeta");
lf[511]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[512]=C_h_intern(&lf[512],2,"\000a");
lf[513]=C_h_intern(&lf[513],2,"\000b");
lf[514]=C_h_intern(&lf[514],6,"ranexp");
lf[515]=C_h_intern(&lf[515],8,"rangauss");
lf[516]=C_h_intern(&lf[516],9,"rancauchy");
lf[517]=C_h_intern(&lf[517],10,"ranpoisson");
lf[518]=C_h_intern(&lf[518],8,"rangamma");
lf[519]=C_h_intern(&lf[519],8,"ranbrown");
lf[520]=C_h_intern(&lf[520],7,"ranpink");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[528]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[529]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[530]=C_h_intern(&lf[530],5,"floor");
lf[531]=C_h_intern(&lf[531],15,"keyword->string");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[533]=C_h_intern(&lf[533],4,"note");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[536]=C_h_intern(&lf[536],2,"hz");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[538]=C_h_intern(&lf[538],2,"pc");
lf[539]=C_h_intern(&lf[539],6,"invert");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[542]=C_h_intern(&lf[542],9,"transpose");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[544]=C_h_intern(&lf[544],10,"retrograde");
lf[545]=C_h_intern(&lf[545],11,"scale-order");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[547]=C_h_intern(&lf[547],7,"*tempo*");
lf[548]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[549]=C_h_intern(&lf[549],6,"*beat*");
lf[550]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[552]=C_h_intern(&lf[552],14,"string->symbol");
lf[553]=C_h_intern(&lf[553],6,"rhythm");
lf[554]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\012\000\000+\376\003\000\000\002\376\377\012\000\000-\376\003\000\000\002\376\377\012\000\000*\376\003\000\000\002\376\377\012\000\000/\376\377\016");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[562]=C_h_intern(&lf[562],8,"in-tempo");
lf[563]=C_h_intern(&lf[563],3,"cwd");
lf[564]=C_h_intern(&lf[564],5,"chdir");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[571]=C_h_intern(&lf[571],8,"spectrum");
lf[573]=C_h_intern(&lf[573],13,"spectrum-time");
lf[575]=C_h_intern(&lf[575],13,"spectrum-size");
lf[577]=C_h_intern(&lf[577],14,"spectrum-freqs");
lf[579]=C_h_intern(&lf[579],13,"spectrum-amps");
lf[580]=C_h_intern(&lf[580],13,"spectrum-copy");
lf[581]=C_h_intern(&lf[581],14,"spectrum-pairs");
lf[582]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[583]=C_h_intern(&lf[583],16,"spectrum-minfreq");
lf[584]=C_h_intern(&lf[584],16,"spectrum-maxfreq");
lf[585]=C_h_intern(&lf[585],15,"spectrum-minamp");
lf[586]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[587]=C_h_intern(&lf[587],15,"spectrum-maxamp");
lf[588]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[589]=C_h_intern(&lf[589],13,"spectrum-keys");
lf[590]=C_h_intern(&lf[590],5,"sort!");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\022mode not -1 0 or 1");
lf[592]=C_h_intern(&lf[592],4,"mode");
lf[593]=C_h_intern(&lf[593],8,"for-each");
lf[594]=C_h_intern(&lf[594],7,"\000thresh");
lf[595]=C_h_intern(&lf[595],6,"\000quant");
lf[596]=C_h_intern(&lf[596],7,"\000unique");
lf[597]=C_h_intern(&lf[597],11,"fm-spectrum");
lf[598]=C_h_intern(&lf[598],4,"caar");
lf[599]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[600]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[601]=C_h_intern(&lf[601],13,"spectrum-add!");
lf[602]=C_h_intern(&lf[602],11,"rm-spectrum");
lf[603]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[604]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[605]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[606]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[607]=C_h_intern(&lf[607],14,"spectrum-flip!");
lf[608]=C_h_intern(&lf[608],17,"spectrum-rescale!");
lf[609]=C_h_intern(&lf[609],3,"map");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[611]=C_h_intern(&lf[611],7,"number\077");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[615]=C_h_intern(&lf[615],19,"import-spear-frames");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[617]=C_h_intern(&lf[617],9,"read-line");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[619]=C_h_intern(&lf[619],17,"open-input-string");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[625]=C_h_intern(&lf[625],18,"current-input-port");
lf[626]=C_h_intern(&lf[626],20,"with-input-from-file");
lf[627]=C_h_intern(&lf[627],19,"export-spear-frames");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000\011 ~S ~S ~S");
lf[630]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[631]=C_decode_literal(C_heaptop,"\376B\000\000\005~S ~S");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\014frame-data~%");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\020frame-count ~S~%");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\023partials-count ~S~%");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000&point-type index frequency amplitude~%");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\027par-text-frame-format~%");
lf[637]=C_h_intern(&lf[637],19,"current-output-port");
lf[638]=C_h_intern(&lf[638],19,"with-output-to-file");
lf[640]=C_h_intern(&lf[640],5,"token");
lf[644]=C_h_intern(&lf[644],1,"t");
lf[649]=C_h_intern(&lf[649],4,"rule");
lf[651]=C_decode_literal(C_heaptop,"\376B\000\000\012not a rule");
lf[658]=C_h_intern(&lf[658],11,"parse-error");
lf[660]=C_h_intern(&lf[660],10,"parse-unit");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[680]=C_h_intern(&lf[680],2,"!=");
lf[685]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[687]=C_h_intern(&lf[687],1,"@");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[689]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[699]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[701]=C_h_intern(&lf[701],3,"sal");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[703]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[704]=C_h_intern(&lf[704],4,"eval");
lf[705]=C_h_intern(&lf[705],23,"interaction-environment");
lf[706]=C_h_intern(&lf[706],7,"\000syntax");
lf[707]=C_h_intern(&lf[707],7,"\000scheme");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[709]=C_h_intern(&lf[709],7,"call/cc");
lf[711]=C_h_intern(&lf[711],7,"\000tokens");
lf[712]=C_h_intern(&lf[712],8,"\000expand\077");
lf[713]=C_h_intern(&lf[713],5,"\000rule");
lf[714]=C_h_intern(&lf[714],9,"sal:print");
lf[715]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[721]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[723]=C_h_intern(&lf[723],9,"sal:chdir");
lf[724]=C_h_intern(&lf[724],8,"sal:load");
lf[725]=C_decode_literal(C_heaptop,"\376B\000\000\003sal");
lf[726]=C_h_intern(&lf[726],13,"load-sal-file");
lf[727]=C_h_intern(&lf[727],4,"load");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[731]=C_decode_literal(C_heaptop,"\376B\000\000\021\042 does not exist\012");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[733]=C_h_intern(&lf[733],8,"sal:open");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[735]=C_h_intern(&lf[735],5,"ports");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\003mid");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\003sco");
lf[744]=C_h_intern(&lf[744],19,"cs:open-output-file");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000\026don\047t know how to open");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\021file not writable");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\033Scheduler busy, cannot open");
lf[748]=C_h_intern(&lf[748],6,"mm:off");
lf[749]=C_h_intern(&lf[749],5,"mm:on");
lf[750]=C_h_intern(&lf[750],8,"mm:touch");
lf[751]=C_h_intern(&lf[751],7,"mm:ctrl");
lf[752]=C_h_intern(&lf[752],7,"mm:prog");
lf[753]=C_h_intern(&lf[753],8,"mm:press");
lf[754]=C_h_intern(&lf[754],7,"mm:bend");
lf[755]=C_h_intern(&lf[755],7,"mp:open");
lf[758]=C_h_intern(&lf[758],4,"\000out");
lf[759]=C_h_intern(&lf[759],3,"\000in");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[762]=C_h_intern(&lf[762],7,"mp:midi");
lf[763]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[764]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[765]=C_h_intern(&lf[765],5,"\000time");
lf[766]=C_h_intern(&lf[766],4,"\000dur");
lf[767]=C_h_intern(&lf[767],4,"\000key");
lf[768]=C_h_intern(&lf[768],4,"\000amp");
lf[769]=C_h_intern(&lf[769],5,"\000chan");
lf[770]=C_h_intern(&lf[770],6,"mp:off");
lf[771]=C_h_intern(&lf[771],5,"mp:on");
lf[772]=C_h_intern(&lf[772],4,"\000vel");
lf[773]=C_h_intern(&lf[773],8,"mp:touch");
lf[774]=C_h_intern(&lf[774],4,"\000val");
lf[775]=C_h_intern(&lf[775],7,"mp:ctrl");
lf[776]=C_h_intern(&lf[776],4,"\000num");
lf[777]=C_h_intern(&lf[777],7,"mp:prog");
lf[778]=C_h_intern(&lf[778],8,"mp:press");
lf[779]=C_h_intern(&lf[779],7,"mp:bend");
lf[780]=C_h_intern(&lf[780],9,"mp:tuning");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\035not a tuning division 1 to 16");
lf[782]=C_h_intern(&lf[782],10,"mp:playseq");
lf[783]=C_h_intern(&lf[783],10,"mp:saveseq");
lf[784]=C_h_intern(&lf[784],10,"mp:copyseq");
lf[785]=C_h_intern(&lf[785],10,"mp:plotseq");
lf[786]=C_h_intern(&lf[786],11,"mp:clearseq");
lf[787]=C_h_intern(&lf[787],12,"mp:recordseq");
lf[788]=C_h_intern(&lf[788],21,"ffi_mp_set_record_seq");
lf[789]=C_h_intern(&lf[789],9,"mp:inhook");
lf[790]=C_h_intern(&lf[790],7,"sprintf");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[792]=C_h_intern(&lf[792],27,"condition-property-accessor");
lf[793]=C_h_intern(&lf[793],3,"exn");
lf[794]=C_h_intern(&lf[794],7,"message");
lf[795]=C_h_intern(&lf[795],22,"with-exception-handler");
lf[796]=C_h_intern(&lf[796],30,"call-with-current-continuation");
lf[797]=C_h_intern(&lf[797],10,"mp:inchans");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\031missing a channel 0 to 15");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\025not a channel 0 to 15");
lf[800]=C_h_intern(&lf[800],8,"mp:inops");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000(missing message type (mm:off to mm:bend)");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000$not a message type mm:off to mm:bend");
lf[804]=C_h_intern(&lf[804],9,"\000channels");
lf[805]=C_h_intern(&lf[805],14,"*clm-channels*");
lf[806]=C_h_intern(&lf[806],15,"init-with-sound");
lf[807]=C_h_intern(&lf[807],7,"\000output");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[809]=C_h_intern(&lf[809],12,"\000header-type");
lf[810]=C_h_intern(&lf[810],8,"mus-aifc");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[812]=C_h_intern(&lf[812],8,"mus-riff");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[814]=C_h_intern(&lf[814],8,"mus-next");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[816]=C_h_intern(&lf[816],12,"\000data-format");
lf[817]=C_h_intern(&lf[817],10,"mus-bshort");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[819]=C_h_intern(&lf[819],10,"mus-lshort");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[821]=C_h_intern(&lf[821],5,"\000play");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\007 :play ");
lf[825]=C_h_intern(&lf[825],6,"\000write");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\010 :write ");
lf[829]=C_h_intern(&lf[829],8,"\000options");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\013 :options \042");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\024options not a string");
lf[833]=C_h_intern(&lf[833],7,"\000header");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\012 :header \042");
lf[835]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\023header not a string");
lf[837]=C_h_intern(&lf[837],10,"\000orchestra");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\015 :orchestra \042");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\026orchestra not a string");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\025unknown Csound option");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\023uneven options list");
lf[843]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[847]=C_h_intern(&lf[847],1,"i");
lf[848]=C_h_intern(&lf[848],14,"cs:f_statement");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000#pfield not number, string or symbol");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\027missing pfield 2 (time)");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\025pfield 2 not a number");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\027pfield 1 not an integer");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\023missing pfield data");
lf[856]=C_h_intern(&lf[856],4,"cs:i");
lf[857]=C_h_intern(&lf[857],4,"cs:f");
lf[858]=C_h_intern(&lf[858],1,"f");
lf[860]=C_h_intern(&lf[860],11,"expand-send");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\022not a send message");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\030too many arguments in ~S");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\036Uneven keyword arguments in ~S");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000%~A not a valid keyword argument in ~S");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\031~A not a keyword argument");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[869]=C_h_intern(&lf[869],4,"\000opt");
lf[870]=C_h_intern(&lf[870],7,"\000optkey");
lf[871]=C_h_intern(&lf[871],5,"\000rest");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\012not a mode");
lf[873]=C_h_intern(&lf[873],9,"\000optional");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\010shouldnt");
lf[875]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003out\376\003\000\000\002\376\001\000\000\002in\376\377\016");
lf[876]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003dur\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003amp\376\003\000\000\002\376\001\000\000\004"
"chan\376\377\016");
lf[877]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[878]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003vel\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[879]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[880]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003num\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[881]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[882]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[883]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[884]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\002mm\376\377\016");
lf[885]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004func\376\377\016");
lf[886]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003div\376\377\016");
lf[887]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003rec\376\377\016");
lf[888]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[889]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[890]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[891]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[892]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\003arg\376\377\016");
lf[894]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005throw\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[896]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[901]=C_h_intern(&lf[901],4,"args");
lf[902]=C_h_intern(&lf[902],6,"lambda");
lf[903]=C_h_intern(&lf[903],7,"elapsed");
lf[904]=C_h_intern(&lf[904],1,"x");
lf[905]=C_h_intern(&lf[905],4,"wait");
lf[906]=C_h_intern(&lf[906],5,"throw");
lf[907]=C_h_intern(&lf[907],18,"current-error-port");
lf[908]=C_h_intern(&lf[908],19,"print-error-message");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\006errvar");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[913]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[914]=C_h_intern(&lf[914],7,"process");
lf[915]=C_h_intern(&lf[915],6,"sprout");
lf[916]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[918]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[920]=C_decode_literal(C_heaptop,"\376B\000\000\021illegal arguments");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[923]=C_h_intern(&lf[923],3,"now");
lf[924]=C_h_intern(&lf[924],5,"pause");
lf[925]=C_h_intern(&lf[925],7,"paused\077");
lf[926]=C_h_intern(&lf[926],8,"continue");
lf[927]=C_h_intern(&lf[927],4,"stop");
lf[928]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[929]=C_h_intern(&lf[929],4,"hush");
lf[930]=C_h_intern(&lf[930],14,"ffi_sched_hush");
lf[931]=C_h_intern(&lf[931],14,"return-to-host");
lf[932]=C_h_intern(&lf[932],6,"define");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[934]=C_h_intern(&lf[934],18,"\003sysregister-macro");
lf[935]=C_h_intern(&lf[935],14,"define-process");
lf[936]=C_h_intern(&lf[936],20,"\003sysregister-macro-2");
lf[937]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:data");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:inops");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:inchans");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[943]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[944]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[945]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[946]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[951]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[953]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[954]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[955]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[956]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[957]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[958]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:open");
lf[959]=C_h_intern(&lf[959],19,"make-message-parser");
lf[960]=C_h_intern(&lf[960],4,"cons");
lf[961]=C_h_intern(&lf[961],10,"*messages*");
lf[962]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[963]=C_h_intern(&lf[963],19,"define-send-message");
lf[964]=C_h_intern(&lf[964],4,"send");
lf[965]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[966]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[967]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[968]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[969]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[970]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[971]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[972]=C_h_intern(&lf[972],7,"\000return");
lf[973]=C_h_intern(&lf[973],9,"\000function");
lf[974]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[975]=C_h_intern(&lf[975],8,"\000process");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[977]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[978]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[979]=C_h_intern(&lf[979],2,"go");
lf[980]=C_h_intern(&lf[980],4,"void");
lf[981]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\000\376\377\016");
lf[982]=C_h_intern(&lf[982],5,"\000loop");
lf[983]=C_h_intern(&lf[983],4,"\000run");
lf[984]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[985]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[986]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[987]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[988]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[989]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[990]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[991]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[992]=C_h_intern(&lf[992],9,"list-tail");
lf[993]=C_h_intern(&lf[993],8,"set-car!");
lf[994]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[995]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[996]=C_h_intern(&lf[996],9,"\000bindings");
lf[997]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[998]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[999]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[1000]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[1001]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[1002]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[1003]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[1004]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[1005]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[1006]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[1007]=C_h_intern(&lf[1007],10,"sal:output");
lf[1008]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[1009]=C_h_intern(&lf[1009],10,"sal:system");
lf[1010]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[1011]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[1012]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[1013]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[1014]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[1015]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[1016]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[1017]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[1018]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[1019]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[1020]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[1021]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[1022]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[1023]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[1024]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[1025]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[1026]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[1027]=C_h_intern(&lf[1027],7,"unquote");
lf[1028]=C_h_intern(&lf[1028],16,"unquote-splicing");
lf[1029]=C_h_intern(&lf[1029],5,"\000list");
lf[1030]=C_h_intern(&lf[1030],8,"\000unquote");
lf[1031]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[1032]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[1033]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[1034]=C_h_intern(&lf[1034],10,"quasiquote");
lf[1035]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[1036]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[1037]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[1038]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[1039]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[1040]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[1041]=C_h_intern(&lf[1041],6,"ruleid");
lf[1042]=C_h_intern(&lf[1042],9,"make-rule");
lf[1043]=C_h_intern(&lf[1043],7,"*rules*");
lf[1044]=C_h_intern(&lf[1044],7,"defrule");
lf[1045]=C_h_intern(&lf[1045],7,"promise");
lf[1046]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001.\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002..\376\003\000\000\002\376U0.75\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\003..."
"\376\003\000\000\002\376U0.875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\004....\376\003\000\000\002\376U0.9375\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\005.....\376\003\000\000\002\376U0"
".96875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\006......\376\003\000\000\002\376U0.984375\000\376\377\016\376\377\016");
lf[1047]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1048]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1049]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1050]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1051]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1052]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1053]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1054]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376U0.015625\000\376\003\000\000\002\376B\000\000\001x\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.03125\000\376\003\000\000\002\376B\000\000\001t\376\003"
"\000\000\002\376\377\001\000\000\000\001\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.0625\000\376\003\000\000\002\376B\000\000\001s\376\003\000\000\002\376\377\001\000\000\000\002\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.125\000\376\003\000\000"
"\002\376B\000\000\001e\376\003\000\000\002\376\377\001\000\000\000\003\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.25\000\376\003\000\000\002\376B\000\000\001q\376\003\000\000\002\376\377\001\000\000\000\004\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.5"
"\000\376\003\000\000\002\376B\000\000\001h\376\003\000\000\002\376\377\001\000\000\000\005\376\377\016\376\003\000\000\002\376\003\000\000\002\376\377\001\000\000\000\001\376\003\000\000\002\376B\000\000\001w\376\003\000\000\002\376\377\001\000\000\000\006\376\377\016\376\377\016");
lf[1055]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1056]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[1057]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1058]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[1059]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1060]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1061]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[1062]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[1063]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[1064]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1065]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[1066]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1067]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1068]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1069]=C_h_intern(&lf[1069],5,":loop");
lf[1070]=C_h_intern(&lf[1070],7,"tagbody");
lf[1071]=C_h_intern(&lf[1071],5,"block");
lf[1072]=C_h_intern(&lf[1072],3,"nil");
lf[1073]=C_h_intern(&lf[1073],8,"function");
lf[1074]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[1075]=C_h_intern(&lf[1075],3,"pop");
lf[1076]=C_h_intern(&lf[1076],4,"push");
lf[1077]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[1078]=C_h_intern(&lf[1078],4,"loop");
lf[1079]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[1080]=C_h_intern(&lf[1080],15,"enable-warnings");
C_register_lf2(lf,1081,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6941,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6939 */
static void C_ccall f_6941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6944,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6942 in k6939 */
static void C_ccall f_6944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6947,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6945 in k6942 in k6939 */
static void C_ccall f_6947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6950,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6950,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6952,a[2]=((C_word)li0),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[1]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6958,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[3]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6964,a[2]=((C_word)li2),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[5]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6970,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[7]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6976,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[9]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6982,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=C_set_block_item(lf[10],0,C_fix(1073741823));
t9=C_set_block_item(lf[11],0,C_fix(-1073741823));
t10=C_mutate((C_word*)lf[12]+1,lf[13]);
t11=C_mutate((C_word*)lf[14]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7002,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[15]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7012,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[18]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7018,a[2]=((C_word)li8),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[20]+1,C_retrieve(lf[21]));
t15=C_mutate((C_word*)lf[22]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7025,a[2]=((C_word)li9),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[24],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7031,a[2]=((C_word)li10),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7133,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   enable-warnings");
t18=C_retrieve(lf[1080]);
((C_proc3)C_retrieve_proc(t18))(3,t18,t17,C_SCHEME_FALSE);}

/* k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[159],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7133,2,t0,t1);}
t2=C_mutate(&lf[27],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7152,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[29],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7208,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[30],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7262,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[31],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7269,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[32],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7280,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[33],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7295,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[34],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7302,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[35],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7316,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[36],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7335,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[37],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7354,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[38],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7375,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[39],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7378,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[40],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7385,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[41],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7414,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[42],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7417,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[43],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7420,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[44],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7423,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[45],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7434,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[46],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7452,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[47],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7459,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[48],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7462,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[49],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7469,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[50],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7472,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[51],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7503,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[52],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7523,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7533,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7543,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[55],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7614,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[57],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7781,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8034,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8040,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8046,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8077,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[62]+1,*((C_word*)lf[63]+1));
t36=C_mutate((C_word*)lf[64]+1,*((C_word*)lf[65]+1));
t37=C_mutate((C_word*)lf[66]+1,*((C_word*)lf[67]+1));
t38=C_mutate((C_word*)lf[68]+1,*((C_word*)lf[69]+1));
t39=C_mutate((C_word*)lf[70]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8087,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8097,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8107,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8117,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[74]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8127,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[75]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8141,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[76]+1,*((C_word*)lf[77]+1));
t46=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8156,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[79]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8162,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8185,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8233,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[82]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8323,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8485,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8584,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8702,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8788,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8862,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8906,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8950,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t58=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9239,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t59=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45881,a[2]=((C_word)li621),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   ##sys#register-macro");
t60=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t60))(4,t60,t58,lf[96],t59);}

/* a45880 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45881(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_45881r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_45881r(t0,t1,t2,t3);}}

static void C_ccall f_45881r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   expand-optkeys");
t6=C_retrieve(lf[101]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9242,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45875,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro-2");
t4=C_retrieve(lf[936]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1078],t3);}

/* a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45875(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45875,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12595,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[1079]);}

/* k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12598,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   parse-iteration");
f_12577(t2,lf[1078],((C_word*)t0)[2],C_retrieve2(lf[331],"*loop-operators*"));}

/* k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12598,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[293],C_retrieve2(lf[331],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12605,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12750,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12764,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-returning");
t11=C_retrieve2(lf[136],"loop-returning");
f_9349(3,t11,t10,t1);}

/* k12762 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12764,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_12750(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12760,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   loop-returning");
t3=C_retrieve2(lf[136],"loop-returning");
f_9349(3,t3,t2,((C_word*)t0)[2]);}}

/* k12758 in k12762 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_12750(t2,(C_word)C_i_car(t1));}

/* k12748 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12750(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12605,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12609,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-end-tests");
t4=C_retrieve2(lf[131],"loop-end-tests");
f_9301(3,t4,t3,((C_word*)t0)[2]);}

/* k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_12612(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[268],t1));
t6=(C_word)C_a_i_list(&a,4,lf[119],t5,lf[1077],C_SCHEME_FALSE);
t7=t2;
f_12612(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12612(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12612,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12623,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-bindings");
t4=C_retrieve2(lf[128],"loop-bindings");
f_9265(3,t4,t3,((C_word*)t0)[2]);}

/* k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12627,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12631,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-initially");
t4=C_retrieve2(lf[130],"loop-initially");
f_9289(3,t4,t3,((C_word*)t0)[3]);}

/* k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12631,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[293]);
t3=(C_word)C_a_i_list(&a,1,lf[979]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12695,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12699,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12703,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t7=C_retrieve2(lf[132],"loop-looping");
f_9313(3,t7,t6,((C_word*)t0)[3]);}

/* k12701 in k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12707,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12711,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-stepping");
t4=C_retrieve2(lf[134],"loop-stepping");
f_9325(3,t4,t3,((C_word*)t0)[2]);}

/* k12709 in k12701 in k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12711,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 83   ##sys#append");
t4=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k12705 in k12701 in k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12697 in k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k12693 in k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12695,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[102],t3);
t5=(C_word)C_a_i_list(&a,3,lf[902],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[796],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12663,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12667,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-finally");
t9=C_retrieve2(lf[135],"loop-finally");
f_9337(3,t9,t8,((C_word*)t0)[2]);}

/* k12665 in k12693 in k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12667,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   ##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k12661 in k12693 in k12629 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12663,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[902],t3);
t5=(C_word)C_a_i_list(&a,2,lf[796],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 83   ##sys#append");
t7=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k12625 in k12621 in k12610 in k12607 in k12603 in k12596 in k12593 in a45874 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12627,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[102],t2));}

/* k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9245,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45861,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1076],t3);}

/* a45860 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45861,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[960],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[111],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[216],t5,t3));}

/* k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9248,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45832,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1075],t3);}

/* a45831 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45832(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45832,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45836,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[1074]);}

/* k45834 in a45831 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45836,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[63],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[102],t4,t6,t1));}

/* k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9251,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45829,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1073],t3);}

/* a45828 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45829(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45829,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9251,2,t0,t1);}
t2=C_mutate(&lf[127],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9259,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[128],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9265,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[129],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9277,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[130],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9289,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[131],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9301,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[132],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9313,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[133],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9319,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[134],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9325,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[135],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9337,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[136],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9349,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[137],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9361,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[147],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9512,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[148],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9583,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[149],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9589,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[150],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9595,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[151],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9601,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[162],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9761,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9843,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[206],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10225,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10272,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10623,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10765,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[253],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10958,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[256],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11025,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11063,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11222,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11768,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11774,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11840,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11931,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12032,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12163,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12577,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[239],C_retrieve2(lf[238],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[141],C_retrieve2(lf[259],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[329],C_retrieve2(lf[206],"parse-repeat"),lf[326]);
t38=(C_word)C_a_i_list(&a,2,lf[184],C_retrieve2(lf[170],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[174],C_retrieve2(lf[170],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[180],C_retrieve2(lf[170],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[191],C_retrieve2(lf[170],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[176],C_retrieve2(lf[170],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[183],C_retrieve2(lf[170],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[218],C_retrieve2(lf[209],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[227],C_retrieve2(lf[209],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[210],C_retrieve2(lf[209],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[231],C_retrieve2(lf[230],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[214],C_retrieve2(lf[209],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[171],C_retrieve2(lf[162],"parse-for"),lf[326],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[330],C_retrieve2(lf[162],"parse-for"),lf[326]);
t51=(C_word)C_a_i_list(&a,3,lf[322],C_retrieve2(lf[253],"parse-do"),lf[313]);
t52=(C_word)C_a_i_list(&a,3,lf[274],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t53=(C_word)C_a_i_list(&a,3,lf[117],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t54=(C_word)C_a_i_list(&a,3,lf[279],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t55=(C_word)C_a_i_list(&a,3,lf[263],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t56=(C_word)C_a_i_list(&a,3,lf[264],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t57=(C_word)C_a_i_list(&a,3,lf[266],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t58=(C_word)C_a_i_list(&a,3,lf[267],C_retrieve2(lf[262],"parse-accumulation"),lf[313]);
t59=(C_word)C_a_i_list(&a,4,lf[301],C_retrieve2(lf[300],"parse-thereis"),lf[313],C_retrieve2(lf[292],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[302],C_retrieve2(lf[300],"parse-thereis"),lf[313],C_retrieve2(lf[292],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[303],C_retrieve2(lf[300],"parse-thereis"),lf[313],C_retrieve2(lf[292],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[293],C_retrieve2(lf[306],"parse-return"),lf[313],C_retrieve2(lf[292],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[297],C_retrieve2(lf[294],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[296],C_retrieve2(lf[294],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[110],C_retrieve2(lf[315],"parse-conditional"),lf[313]);
t66=(C_word)C_a_i_list(&a,3,lf[106],C_retrieve2(lf[315],"parse-conditional"),lf[313]);
t67=(C_word)C_a_i_list(&a,3,lf[119],C_retrieve2(lf[315],"parse-conditional"),lf[313]);
t68=(C_word)C_a_i_list(&a,3,lf[145],C_retrieve2(lf[256],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[331],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12771,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45687,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   ##sys#register-macro-2");
t73=C_retrieve(lf[936]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[326],t72);}

/* a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45687(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45687,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12777,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   parse-iteration");
f_12577(t3,lf[326],t2,C_retrieve2(lf[331],"*loop-operators*"));}

/* k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12780,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[293],C_retrieve2(lf[331],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12909,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-returning");
t6=C_retrieve2(lf[136],"loop-returning");
f_9349(3,t6,t5,t1);}

/* k12907 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12909,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12791,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-bindings");
t3=C_retrieve2(lf[128],"loop-bindings");
f_9265(3,t3,t2,((C_word*)t0)[2]);}

/* k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12791,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12795,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-initially");
t4=C_retrieve2(lf[130],"loop-initially");
f_9289(3,t4,t3,((C_word*)t0)[2]);}

/* k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12819,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12823,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-end-tests");
t4=C_retrieve2(lf[131],"loop-end-tests");
f_9301(3,t4,t3,((C_word*)t0)[2]);}

/* k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12826,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[268],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[979],lf[644]);
t6=(C_word)C_a_i_list(&a,3,lf[119],t4,t5);
t7=t2;
f_12826(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_12826(t3,C_SCHEME_END_OF_LIST);}}

/* k12824 in k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12826(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12826,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12830,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t4=C_retrieve2(lf[132],"loop-looping");
f_9313(3,t4,t3,((C_word*)t0)[2]);}

/* k12832 in k12824 in k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12834,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12838,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-stepping");
t4=C_retrieve2(lf[134],"loop-stepping");
f_9325(3,t4,t3,((C_word*)t0)[2]);}

/* k12840 in k12832 in k12824 in k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12842,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[979],lf[1069]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12858,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12862,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   loop-finally");
t5=C_retrieve2(lf[135],"loop-finally");
f_9337(3,t5,t4,((C_word*)t0)[2]);}

/* k12860 in k12840 in k12832 in k12824 in k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12862,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k12856 in k12840 in k12832 in k12824 in k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12858,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[644],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12836 in k12832 in k12824 in k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12828 in k12824 in k12821 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12817 in k12797 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12819,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[1069],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1070],t2);
t4=(C_word)C_a_i_list(&a,3,lf[1071],lf[1072],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k12793 in k12789 in k12778 in k12775 in a45686 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12795,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[102],t2));}

/* k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word t96;
C_word t97;
C_word t98;
C_word t99;
C_word t100;
C_word t101;
C_word t102;
C_word ab[279],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12771,2,t0,t1);}
t2=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12915,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12927,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[336],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12936,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12954,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12972,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12999,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[340],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13008,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[341],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13026,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13071,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13086,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13095,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13104,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13122,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13131,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13140,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13158,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13167,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13176,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[353],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13185,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13194,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[355],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13311,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13320,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[357],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13379,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[361],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13389,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[367]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13569,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[215]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13588,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[217]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13607,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13730,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14022,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14031,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14077,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[374]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14192,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14447,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14519,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[381],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14528,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[382]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14608,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15078,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[387]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15293,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15540,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[389]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15576,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15839,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[391]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15915,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16389,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16611,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16620,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16629,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16647,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16665,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16683,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[401],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16692,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16701,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[403]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16784,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17551,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17651,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[410]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18084,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18571,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[421],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18911,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[423]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18974,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[424],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19492,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[430]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19586,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[456]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20633,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[457]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20667,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[460]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20778,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[461]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20793,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[464]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20814,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20820,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20826,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[467]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20895,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[468]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20964,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[469]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21007,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[471]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21050,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[448]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21071,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[475]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21111,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[480]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21347,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[481]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21377,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[482],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21392,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[487]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21478,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate((C_word*)lf[489]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21524,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[491]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21591,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21724,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[496]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21831,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t83=C_mutate((C_word*)lf[499]+1,C_retrieve2(lf[38],"ffi_ranseed"));
t84=C_mutate((C_word*)lf[490]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22039,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t85=C_mutate((C_word*)lf[500]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22074,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t86=C_mutate((C_word*)lf[501]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22095,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t87=C_mutate((C_word*)lf[502]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22366,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t88=C_mutate((C_word*)lf[505]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22465,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t89=C_mutate((C_word*)lf[506]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22520,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t90=C_mutate((C_word*)lf[507]+1,C_retrieve2(lf[41],"ffi_ranlow"));
t91=C_mutate((C_word*)lf[508]+1,C_retrieve2(lf[42],"ffi_ranhigh"));
t92=C_mutate((C_word*)lf[509]+1,C_retrieve2(lf[43],"ffi_ranmiddle"));
t93=C_mutate((C_word*)lf[510]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22562,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t94=C_mutate((C_word*)lf[514]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22790,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t95=C_mutate((C_word*)lf[515]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22809,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t96=C_mutate((C_word*)lf[516]+1,C_retrieve2(lf[47],"ffi_rancauchy"));
t97=C_mutate((C_word*)lf[517]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22850,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t98=C_mutate((C_word*)lf[518]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22869,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t99=C_mutate((C_word*)lf[519]+1,C_retrieve2(lf[50],"ffi_ranbrown"));
t100=C_mutate((C_word*)lf[520]+1,C_retrieve2(lf[49],"ffi_ranpink"));
t101=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22892,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   make-equal-hash-table");
t102=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t102))(2,t102,t101);}

/* k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22892,2,t0,t1);}
t2=C_mutate(&lf[521],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22895,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45459,a[2]=t7,a[3]=t4,a[4]=((C_word)li615),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_45459(t9,t5,C_fix(0));}

/* do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45459(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45459,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[1055],C_fix(-1),lf[1056],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45472,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t5=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[521],"*notes*"),lf[1057],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45685,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45685,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1058],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45482,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45493,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   modulo");
t6=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45493,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[1059]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[1060]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45505,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7354(t4,((C_word*)t0)[4]);}

/* k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_45509,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],lf[1068]);
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7354(t2,t3);}

/* k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_45513,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],lf[1067]);
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7354(t2,t3);}

/* k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45669,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[8],C_fix(12));
C_trace("ChickenBridge.scm: 85   floor");
t4=*((C_word*)lf[530]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45669,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45519,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=t4,a[5]=((C_word)li614),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_45519(t6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45519(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[41],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45519,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_45529,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[4],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_45539,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t8,a[6]=t6,a[7]=t9,a[8]=t5,a[9]=t17,a[10]=t4,a[11]=t7,a[12]=t3,a[13]=t16,a[14]=t15,a[15]=t14,a[16]=t18,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_45539(t21,(C_word)C_i_string_equal_p(t20,lf[1066]));}
else{
t20=t19;
f_45539(t20,C_SCHEME_FALSE);}}}

/* k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45539,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[16];
f_45529(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_45542,a[2]=((C_word*)t0)[16],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[15],tmp=(C_word)a,a+=17,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[1064]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[15])+1,t4);
t6=t2;
f_45542(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[1065]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[15])+1,t5);
t7=t2;
f_45542(t7,t6);}
else{
t5=t2;
f_45542(t5,C_SCHEME_UNDEFINED);}}}}

/* k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45542(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45542,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1061],((C_word*)((C_word*)t0)[16])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,t2);
t4=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_45550,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[15],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 85   string-append");
t6=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[15])[1]);}

/* k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45550,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[15])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[15])[1],((C_word*)t0)[14],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_45557,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[15],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[521],"*notes*"),((C_word*)((C_word*)t0)[15])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k45555 in k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_45560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 85   hash-set!");
t4=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[521],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[9])[1]);}
else{
t4=t2;
f_45560(2,t4,C_SCHEME_UNDEFINED);}}

/* k45558 in k45555 in k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_45564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 85   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1063],((C_word*)((C_word*)t0)[9])[1]);}

/* k45562 in k45558 in k45555 in k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45564,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[12])[1],((C_word*)t0)[11],((C_word*)t0)[10],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45571,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[521],"*notes*"),((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[8])[1]);}

/* k45569 in k45562 in k45558 in k45555 in k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45574,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(1));
t5=(C_word)C_a_i_plus(&a,2,t4,C_fix(1000));
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t2,C_retrieve2(lf[521],"*notes*"),t5,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_45574(2,t4,C_SCHEME_UNDEFINED);}}

/* k45572 in k45569 in k45562 in k45558 in k45555 in k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45578,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 85   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1062],((C_word*)((C_word*)t0)[7])[1]);}

/* k45576 in k45572 in k45569 in k45562 in k45558 in k45555 in k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45578,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[8],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45585,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[521],"*notes*"),((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k45583 in k45576 in k45572 in k45569 in k45562 in k45558 in k45555 in k45548 in k45540 in k45537 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45585,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1000));
C_trace("ChickenBridge.scm: 85   hash-set!");
t4=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],C_retrieve2(lf[521],"*notes*"),t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[3];
f_45529(2,t3,C_SCHEME_UNDEFINED);}}

/* k45527 in do3454 in k45667 in k45511 in k45507 in k45503 in k45491 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_45519(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k45480 in k45683 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45482,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_45459(t3,((C_word*)t0)[2],t2);}

/* k45470 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45475,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[521],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k45473 in k45470 in do3448 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22895,2,t0,t1);}
t2=C_mutate(&lf[522],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22897,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[525],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22996,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[533]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23049,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23146,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[536]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23268,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[538]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23384,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[539]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23429,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[542]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23564,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[544]+1,*((C_word*)lf[161]+1));
t11=C_mutate((C_word*)lf[545]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23730,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[547]+1,lf[548]);
t13=C_mutate((C_word*)lf[549]+1,lf[550]);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23876,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   make-equal-hash-table");
t15=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t15))(2,t15,t14);}

/* k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23876,2,t0,t1);}
t2=C_mutate(&lf[551],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23877,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23882,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23896,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45364,a[2]=t3,a[3]=t4,a[4]=((C_word)li613),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t7=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,lf[1054]);}

/* a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45364(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45364,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_i_caddr(t2);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45377,a[2]=t1,a[3]=t4,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=t3,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   addryth");
f_23882(t6,t4,t3);}

/* k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45453,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   rsym");
f_23877(t3,lf[1052],((C_word*)t0)[3],lf[1053]);}

/* k45451 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45453,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[1051]);
C_trace("ChickenBridge.scm: 85   addryth");
f_23882(((C_word*)t0)[2],t1,t2);}

/* k45378 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45380,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_45385,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word)li612),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_45385(t5,((C_word*)t0)[2],C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3599 in k45378 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45385(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45385,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t9=(C_word)C_i_list_ref(lf[1046],t2);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
t12=C_set_block_item(t7,0,t11);
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
t14=C_set_block_item(t8,0,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_45407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t7,a[8]=t6,a[9]=t1,a[10]=((C_word*)t0)[6],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t16=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45437,a[2]=t15,a[3]=((C_word*)t0)[4],a[4]=t8,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   rsym");
f_23877(t16,lf[1050],((C_word*)t0)[2],((C_word*)t7)[1]);}
else{
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,C_SCHEME_FALSE);}}

/* k45435 in do3599 in k45378 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45437,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t2);
C_trace("ChickenBridge.scm: 85   addryth");
f_23882(((C_word*)t0)[2],t1,t3);}

/* k45405 in do3599 in k45378 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45410,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45421,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   rsym");
f_23877(t3,lf[1049],((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1]);}

/* k45419 in k45405 in do3599 in k45378 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45421,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[1047]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45433,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   *");
C_times(5,0,t3,((C_word*)t0)[5],lf[1048],((C_word*)((C_word*)t0)[2])[1]);}

/* k45431 in k45419 in k45405 in do3599 in k45378 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45433,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t1);
C_trace("ChickenBridge.scm: 85   addryth");
f_23882(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k45408 in k45405 in do3599 in k45378 in k45375 in a45363 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45410,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t3=((C_word*)((C_word*)t0)[6])[1];
f_45385(t3,((C_word*)t0)[5],t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23896,2,t0,t1);}
t2=C_mutate((C_word*)lf[553]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23898,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[562]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24214,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24225,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45358,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   ##sys#register-macro");
t6=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[1045],t5);}

/* a45357 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45358(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45358,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[902],C_SCHEME_END_OF_LIST,t2));}

/* k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word ab[102],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24225,2,t0,t1);}
t2=C_mutate((C_word*)lf[563]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24239,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[564]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24245,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[565],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25093,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[568],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25135,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[570],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25180,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[572],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25186,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[573]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25201,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[574],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25210,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[575]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25219,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[576],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25228,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[577]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25237,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[578],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25246,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25255,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[580]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25264,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[581]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25302,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25361,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25371,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25389,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[587]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25420,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[589]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25681,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27154,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27560,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27739,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[607]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27951,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[608]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28008,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[615]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28521,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[627]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28647,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[639],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28843,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[641],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28864,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[642],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28900,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[643],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28909,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[645],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28932,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[646],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28944,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t35=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28952,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-eq-hash-table");
t36=C_retrieve(lf[18]);
((C_proc2)C_retrieve_proc(t36))(2,t36,t35);}

/* k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28952,2,t0,t1);}
t2=C_mutate(&lf[647],t1);
t3=C_mutate(&lf[648],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28954,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29057,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45255,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   ##sys#register-macro");
t6=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[1044],t5);}

/* a45254 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_45255r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_45255r(t0,t1,t2,t3,t4);}}

static void C_ccall f_45255r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45258,a[2]=t6,a[3]=((C_word)li609),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[1041],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45318,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   symbol->string");
t11=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k45316 in a45254 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45322,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_45258(t3,t2,((C_word*)t0)[2]);}

/* k45320 in k45316 in a45254 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45322,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_45336(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_45336(t7,(C_word)C_i_nullp(t6));}}

/* k45334 in k45320 in k45316 in a45254 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45336(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45336,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[1042],((C_word*)t0)[6],lf[1041],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[20],lf[1043],lf[1041],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[102],((C_word*)t0)[2],t4));}

/* ppat in a45254 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45258(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_45258,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[1039]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45278,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[1040]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[219],t2):t2));}}}

/* k45276 in ppat in a45254 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45282,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_45258(t4,t2,t3);}

/* k45280 in k45276 in ppat in a45254 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45282,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[960],((C_word*)t0)[2],t1));}

/* k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word ab[102],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29057,2,t0,t1);}
t2=C_mutate(&lf[650],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29059,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29077,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[652],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29080,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[653],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29092,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[654],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29098,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[655],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29108,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[656],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29166,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[657],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29198,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[659],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29246,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[661],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29252,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[662],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29267,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[663],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29285,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[664],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29303,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[665],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29312,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[667],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29328,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[669],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29360,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[670],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29372,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[671],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29439,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[673],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29457,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[677],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29490,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[680]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29521,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[681],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29698,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[682],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29706,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t25=lf[683]=C_SCHEME_FALSE;;
t26=C_mutate(&lf[684],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29810,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[666],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30429,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[676],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30477,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[679],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30579,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[668],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30591,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp));
t31=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30612,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t32=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45233,a[2]=t31,tmp=(C_word)a,a+=3,tmp);
t33=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,C_fix(3328),t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(2816),t34);
t36=(C_word)C_a_i_cons(&a,2,lf[268],t35);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t32,lf[1038],C_fix(25856),t36,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45231 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(25856),t1);}

/* k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30615,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45213,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1037],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45211 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(26112),t1);}

/* k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30618,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45173,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[268],t10);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1036],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45171 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(26368),t1);}

/* k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30621,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45063,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[411],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45069,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45079,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1035],C_fix(26624),t9,t10,t11);}

/* a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45079(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_45079,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45083,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t5,lf[1029],t3);}

/* k45081 in a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45086,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t2,((C_word*)t0)[2]);}

/* k45084 in k45081 in a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45086,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[271]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45104,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29372(t3,lf[1029],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k45102 in k45084 in k45081 in a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45107,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k45105 in k45102 in k45084 in k45081 in a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45107,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45110,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45138,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t5,lf[1029],((C_word*)t0)[2]);}

/* k45136 in k45105 in k45102 in k45084 in k45081 in a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45138,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[1030]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[1034],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_45110(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[219],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_45110(t5,t4);}}

/* k45108 in k45105 in k45102 in k45084 in k45081 in a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_45110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45110,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45116,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t2,lf[996],((C_word*)t0)[2]);}

/* k45114 in k45108 in k45105 in k45102 in k45084 in k45081 in a45078 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45116,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[271]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a45068 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45069,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k45061 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(26624),t1);}

/* k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30624,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44959,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44967,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t10,C_fix(27648));}

/* k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44969,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[3],lf[1033],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44969(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44969,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44973,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44976,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,t3,C_fix(5376));}

/* k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t2,lf[1029],((C_word*)t0)[4]);}

/* k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_44982(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45015,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[1031]:lf[1032]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45023,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t5,t6);}}

/* k45021 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29198(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k45013 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k44980 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44985,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45005,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=lf[1029];
t6=((C_word*)t0)[4];
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29391,a[2]=t9,a[3]=t5,a[4]=t11,a[5]=t7,a[6]=((C_word)li605),tmp=(C_word)a,a+=7,tmp));
t13=((C_word*)t11)[1];
f_29391(t13,t4,t6);}

/* do4668 in k44980 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29391(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29391,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29404,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29437,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t3,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   caar");
t5=*((C_word*)lf[598]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k29435 in do4668 in k44980 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29437,2,t0,t1);}
t2=(C_word)C_eqp(t1,((C_word*)t0)[5]);
if(C_truep(t2)){
t3=((C_word*)t0)[4];
f_29404(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=((C_word*)t0)[4];
f_29404(t8,t7);}}

/* k29402 in do4668 in k44980 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_29391(t3,((C_word*)t0)[2],t2);}

/* k45003 in k44980 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_45005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k44983 in k44980 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44988,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   set-emit-info!");
f_29439(t2,lf[1029],lf[1030],((C_word*)t0)[2]);}

/* k44986 in k44983 in k44980 in k44977 in k44974 in k44971 in a44968 in k44965 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44988,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[1027],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[1028],((C_word*)t0)[2])));}

/* k44957 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(27648),t1);}

/* k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30627,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44931,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[268],t7);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1026],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44929 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(26880),t1);}

/* k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30627,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30630,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44871,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[245],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44877,a[2]=((C_word)li603),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44895,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1025],C_fix(27136),t8,t9,t10);}

/* a44894 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44895(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44895,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44903,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44907,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t6,t2);}

/* k44905 in a44894 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44901 in a44894 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44903,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[77],t1));}

/* a44876 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44877(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44877,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k44869 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(27136),t1);}

/* k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30633,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44748,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[687],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44754,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44785,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1024],C_fix(27392),t14,t15,t16);}

/* a44784 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44785,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44789,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k44787 in a44784 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44790 in k44787 in a44784 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44795,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44793 in k44790 in k44787 in a44784 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44795,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44808,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[119],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k44806 in k44793 in k44790 in k44787 in a44784 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44808,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[119],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a44753 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44754,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44758,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   sixth");
t5=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k44756 in a44753 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44758,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44773,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k44771 in k44756 in a44753 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44773,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k44746 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(27392),t1);}

/* k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30633,2,t0,t1);}
t2=C_mutate(&lf[690],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30635,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30689,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44628,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[179],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[268],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44634,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t4,lf[1023],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a44633 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44634(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44634,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44650,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t4,t8,C_fix(256));}
else{
t7=t4;
f_44650(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_44650(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k44648 in a44633 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44650,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44661,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k44659 in k44648 in a44633 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44661,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k44626 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(28416),t1);}

/* k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30692,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44489,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[179],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[245],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[268],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44495,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1022],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a44494 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44495(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44495,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44515,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44518,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t7,t11,C_fix(256));}
else{
t10=t7;
f_44518(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_44518(2,t9,C_SCHEME_FALSE);}}

/* k44516 in a44494 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_44515(2,t2,C_SCHEME_END_OF_LIST);}}

/* k44513 in a44494 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44515,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k44487 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(28672),t1);}

/* k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30695,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44337,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[245],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[268],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44343,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1021],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a44342 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44343(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44343,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44361,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t10,t7,C_fix(768));}

/* k44359 in a44342 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44361,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,t3,C_fix(256));}}

/* k44368 in k44359 in a44342 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k44335 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(28160),t1);}

/* k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30698,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44266,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44272,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44290,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1020],C_fix(27904),t6,t7,t8);}

/* a44289 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44290(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44290,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44294,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k44292 in a44289 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44295 in k44292 in a44289 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44313,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44311 in k44295 in k44292 in a44289 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44313,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a44271 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44272,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k44264 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(27904),t1);}

/* k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30698,2,t0,t1);}
t2=C_mutate(&lf[691],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30700,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[692],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30721,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30837,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44190,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[268],t21);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t5,lf[1019],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44188 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(28928),t1);}

/* k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30840,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44110,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44116,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1018],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a44115 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44116,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44123,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 87   is-op?");
f_30700(t4,t7);}
else{
t6=t4;
f_44123(2,t6,C_SCHEME_FALSE);}}

/* k44121 in a44115 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44123,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 87   inf->pre");
f_30721(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k44108 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(29184),t1);}

/* k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30843,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43974,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[245],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[268],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43980,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44006,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1017],C_fix(29440),t23,t24,t25);}

/* a44005 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44006,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44014,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k44012 in a44005 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_44014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a43979 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43980(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43980,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43988,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43997,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t5,t6,C_fix(512));}
else{
t5=t4;
f_43988(t5,t2);}}

/* k43995 in a43979 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_43988(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k43986 in a43979 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_43988(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k43972 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(29440),t1);}

/* k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30846,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43930,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[268],t11);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1016],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43928 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(29696),t1);}

/* k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30849,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43820,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43826,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43848,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1015],C_fix(33536),t10,t11,t12);}

/* a43847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43848(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43848,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[714]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43859,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t8,t2);}

/* k43857 in a43847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43859,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li591),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_43861(t5,((C_word*)t0)[2],t1);}

/* do5128 in k43857 in a43847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_43861(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43861,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43890,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k43888 in do5128 in k43857 in a43847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43890,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_43861(t7,((C_word*)t0)[2],t6);}

/* a43825 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43826(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43826,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43842,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t5,t6,C_fix(256));}

/* k43840 in a43825 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43842,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k43818 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(33536),t1);}

/* k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30852,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43709,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(6144),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(256),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[411],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t6,t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(16896),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[245],t14);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43715,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43749,a[2]=((C_word)li589),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1014],C_fix(34560),t15,t16,t17);}

/* a43748 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43749(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43749,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43753,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k43751 in a43748 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43760,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43758 in k43751 in a43748 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43760,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[915],t1));}

/* a43714 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43715,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43731,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43735,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t6,t7,C_fix(256));}

/* k43733 in a43714 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43739,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t2,t3,C_fix(256));}

/* k43737 in k43733 in a43714 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43729 in a43714 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43731,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k43707 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(34560),t1);}

/* k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30855,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43500,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[268],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[687],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[245],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43506,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43581,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1013],C_fix(34304),t21,t22,t23);}

/* a43580 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43581,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43585,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43617,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t6,t2);}

/* k43615 in a43580 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43583 in a43580 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43585,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43601,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li586),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   expand-send");
t6=C_retrieve(lf[860]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a43600 in k43583 in a43580 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43601(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_43601,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43609,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43613,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t4,((C_word*)t0)[2]);}

/* k43611 in a43600 in k43583 in a43580 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29198(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43607 in a43600 in k43583 in a43580 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a43505 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43506,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43513,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43549,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_43549(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_43513(t10,t9);}}

/* k43547 in a43505 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43549,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_43513(t2,C_SCHEME_UNDEFINED);}}

/* k43551 in k43547 in a43505 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_43513(t3,t2);}

/* k43511 in a43505 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_43513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43513,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43524,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t4,t5);}

/* k43522 in k43511 in a43505 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k43498 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(34304),t1);}

/* k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30858,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43474,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43480,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1012],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a43479 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43480,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k43472 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(33792),t1);}

/* k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30861,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43446,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43454,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t7,C_fix(35072));}

/* k43452 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43454,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43458,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29706(t2,lf[724]);}

/* k43456 in k43452 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[4],lf[1011],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43444 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(35072),t1);}

/* k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30864,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43418,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43426,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t7,C_fix(35584));}

/* k43424 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43430,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29706(t2,lf[723]);}

/* k43428 in k43424 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[4],lf[1010],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43416 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(35584),t1);}

/* k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30867,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43390,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43398,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t7,C_fix(35328));}

/* k43396 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43402,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29706(t2,lf[1009]);}

/* k43400 in k43396 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[4],lf[1008],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43388 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(35328),t1);}

/* k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30870,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43362,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43370,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t7,C_fix(34816));}

/* k43368 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43374,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-emitter");
f_29706(t2,lf[1007]);}

/* k43372 in k43368 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[4],lf[1006],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43360 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(34816),t1);}

/* k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30873,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43225,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[268],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[245],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[268],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[411],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[245],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43231,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43261,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[1005],C_fix(36096),t22,t23,t24);}

/* a43260 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43261(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43261,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[1004]);}

/* a43230 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43231(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43231,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43255,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t6,t7,C_fix(256));}

/* k43253 in a43230 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43255,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k43223 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(36096),t1);}

/* k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30876,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43167,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43175,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t7,C_fix(31744));}

/* k43173 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43177,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[3],lf[1003],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a43176 in k43173 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43177,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43181,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k43179 in a43176 in k43173 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43209,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t3,lf[983],((C_word*)t0)[3]);}

/* k43207 in k43179 in a43176 in k43173 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43209,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_43184(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43197,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43201,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t3,t4);}}

/* k43199 in k43207 in k43179 in a43176 in k43173 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29198(((C_word*)t0)[2],lf[1002],t1);}

/* k43195 in k43207 in k43179 in a43176 in k43173 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k43182 in k43179 in a43176 in k43173 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43165 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(31744),t1);}

/* k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30879,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43106,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43114,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t7,C_fix(31488));}

/* k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43116,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[3],lf[1001],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a43115 in k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43116,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43120,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k43118 in a43115 in k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43151,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t3,lf[973],((C_word*)t0)[3]);}

/* k43149 in k43118 in a43115 in k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43151,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_43123(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43139,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43143,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t3,t4);}}

/* k43141 in k43149 in k43118 in a43115 in k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29198(((C_word*)t0)[2],lf[1000],t1);}

/* k43137 in k43149 in k43118 in a43115 in k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k43121 in k43118 in a43115 in k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   set-emit-info!");
f_29439(t2,lf[973],lf[972],((C_word*)t0)[3]);}

/* k43124 in k43121 in k43118 in a43115 in k43112 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43104 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(31488),t1);}

/* k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30879,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30882,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43015,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[245],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[268],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43021,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43056,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[999],C_fix(30208),t10,t11,t12);}

/* a43055 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43056(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43056,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43062,a[2]=t4,a[3]=t3,a[4]=((C_word)li578),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43070,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t6,t2);}

/* k43068 in a43055 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a43061 in a43055 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43062(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_43062,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a43020 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43021(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43021,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43054,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t4,C_fix(4608),lf[998],C_SCHEME_FALSE);}}

/* k43052 in a43020 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43054,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k43013 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_43015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(30208),t1);}

/* k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30885,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42913,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42919,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42962,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[997],C_fix(29952),t10,t11,t12);}

/* a42961 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42962(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42962,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42966,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29372(t5,lf[996],C_SCHEME_TRUE,t3);}

/* k42964 in a42961 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42971,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li575),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42979,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t3,((C_word*)t0)[2]);}

/* k42977 in k42964 in a42961 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a42970 in k42964 in a42961 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42971(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_42971,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a42918 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42919(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42919,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42952,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k42950 in a42918 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42952,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k42911 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(29952),t1);}

/* k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30888,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42827,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[268],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[245],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42833,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[995],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a42832 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42833(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42833,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k42825 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(30720),t1);}

/* k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30891,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42547,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42553,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42596,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[994],C_fix(30464),t10,t11,t12);}

/* a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42596,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42600,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42600,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[216]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42608,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li571),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_42608(t8,((C_word*)t0)[2],t1);}

/* do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42608(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42608,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42631,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t3,t4);}}

/* k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42637,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29267(t2,t3);}

/* k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42640,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42640,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42643,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t5,((C_word*)t0)[2],C_fix(10756));}

/* k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42700,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_42643(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42707,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k42705 in k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42707,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42643(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42717,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k42715 in k42705 in k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42717,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[411],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42643(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42727,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k42725 in k42715 in k42705 in k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42727,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[271],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_42643(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42741,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k42739 in k42725 in k42715 in k42705 in k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42741,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[960],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42643(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k42749 in k42739 in k42725 in k42715 in k42705 in k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42751,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42643(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42761,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k42759 in k42749 in k42739 in k42725 in k42715 in k42705 in k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42761,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[439],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42643(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k42769 in k42759 in k42749 in k42739 in k42725 in k42715 in k42705 in k42698 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42771,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[373],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_42643(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_42643(t2,C_SCHEME_UNDEFINED);}}

/* k42641 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42643(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42643,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42667,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_42667(t5,(C_word)C_eqp(t4,lf[77]));}
else{
t4=t3;
f_42667(t4,C_SCHEME_FALSE);}}

/* k42665 in k42641 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42667(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42667,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[992],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[993],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_42646(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_42646(t4,t3);}}

/* k42644 in k42641 in k42638 in k42635 in k42632 in k42629 in do5206 in k42598 in a42595 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42646(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42646,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_42608(t7,((C_word*)t0)[2],t6);}

/* a42552 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42553,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42586,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k42584 in a42552 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42586,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k42545 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(30464),t1);}

/* k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30894,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42433,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[687],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[411],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[245],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42439,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42465,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[991],C_fix(32000),t12,t13,t14);}

/* a42464 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42465(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42465,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42469,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k42467 in a42464 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42469,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42473 in k42467 in a42464 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42475,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42495,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[216],t1));}}

/* k42493 in k42473 in k42467 in a42464 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42495,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[103],t2));}

/* a42438 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42439,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42449,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_42449(t12,t11);}
else{
t10=t8;
f_42449(t10,C_SCHEME_FALSE);}}

/* k42447 in a42438 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42449(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42449,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k42431 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(32000),t1);}

/* k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30897,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42174,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[687],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[687],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[245],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[245],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[268],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42180,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42248,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[990],C_fix(32256),t26,t27,t28);}

/* a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42248(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42248,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42252,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t5,t2);}

/* k42250 in a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,t3,C_fix(14336));}

/* k42256 in k42250 in a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42258,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,t3,C_fix(19968));}}

/* k42265 in k42256 in k42250 in a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42267,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k42303 in k42265 in k42256 in k42250 in a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42305,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[211],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42297,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42295 in k42303 in k42265 in k42256 in k42250 in a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42297,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[119],((C_word*)t0)[2],t1));}

/* k42272 in k42265 in k42256 in k42250 in a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42278,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42276 in k42272 in k42265 in k42256 in k42250 in a42247 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42278,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[119],((C_word*)t0)[2],t1));}

/* a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42180(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42180,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42193,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42199,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t9,t4,C_fix(14336));}

/* k42197 in a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42199,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42205,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_42205(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42234,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t11,C_fix(4608),lf[989],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_42193(t5,t4);}}

/* k42232 in k42197 in a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42205(t3,t2);}

/* k42203 in k42197 in a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42205,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42209,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t3=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k42207 in k42203 in k42197 in a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42209,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_42212(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42223,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t5,C_fix(4608),lf[988],C_SCHEME_FALSE);}}

/* k42221 in k42207 in k42203 in k42197 in a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42212(t3,t2);}

/* k42210 in k42207 in k42203 in k42197 in a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42212(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42212,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_42193(t4,t3);}

/* k42191 in a42179 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_42193(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k42172 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_42174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(32256),t1);}

/* k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30897,2,t0,t1);}
t2=C_mutate(&lf[693],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30899,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31420,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41902,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[245],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[687],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[245],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[245],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[268],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[687],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[687],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[245],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[268],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[687],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[245],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[268],t58);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t4,lf[987],C_fix(33024),t59,C_retrieve2(lf[693],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k41900 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(33024),t1);}

/* k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31423,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41846,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[245],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[268],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41854,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   simple-unit-parser");
f_29698(t13,C_fix(33280));}

/* k41852 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(((C_word*)t0)[3],lf[986],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k41844 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(33280),t1);}

/* k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31954,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41674,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[268],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[687],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[411],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[411],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[179],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[687],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[245],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41680,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41726,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[985],C_fix(32512),t25,t26,t27);}

/* a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41726(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41726,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31429,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t7,t2);}

/* k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31429,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_END_OF_LIST;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_END_OF_LIST;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t17,a[5]=t19,a[6]=t9,a[7]=t11,a[8]=t7,a[9]=t15,a[10]=t13,a[11]=((C_word*)t0)[4],a[12]=t5,a[13]=t3,tmp=(C_word)a,a+=14,tmp);
t21=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31913,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t20,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t22=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t21,t22,C_fix(14864));}

/* k31911 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31913,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31917,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29372(t2,lf[982],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31920,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t3,lf[975],((C_word*)((C_word*)t0)[6])[1]);}}

/* k31945 in k31911 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31947,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31920(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31935,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31939,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t3,t4);}}

/* k31937 in k31945 in k31911 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29198(((C_word*)t0)[2],lf[984],t1);}

/* k31933 in k31945 in k31911 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31918 in k31911 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29372(t2,lf[983],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k31922 in k31918 in k31911 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_31453(t4,t3);}

/* k31915 in k31911 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31453(t3,t2);}

/* k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31453(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31453,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31460,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31902,a[2]=t4,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31906,a[2]=((C_word*)t0)[8],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t6,t7,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}
else{
t5=t4;
f_31460(t5,C_SCHEME_UNDEFINED);}}

/* k31904 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31900 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31460(t3,t2);}

/* k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31460(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31460,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31463,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31777,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],a[6]=t5,a[7]=((C_word)li564),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_31777(t7,t2,t3);}

/* do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31777(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31777,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31787,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31798,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t4,t5);}}

/* k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31798,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li563),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31800(t5,((C_word*)t0)[2],t1);}

/* do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31800(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31800,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 87   append");
t9=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31814,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31817,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31867,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 87   append");
t7=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_31817(t4,C_SCHEME_UNDEFINED);}}

/* k31865 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31817(t3,t2);}

/* k31815 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31817,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31852,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 87   append");
t6=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_31820(t3,C_SCHEME_UNDEFINED);}}

/* k31850 in k31815 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31820(t3,t2);}

/* k31818 in k31815 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31820(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31820,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31823,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31833,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k31831 in k31818 in k31815 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31833,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31845,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_31823(t2,C_SCHEME_UNDEFINED);}}

/* k31843 in k31831 in k31818 in k31815 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31845,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31835 in k31831 in k31818 in k31815 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31823(t3,t2);}

/* k31821 in k31818 in k31815 in k31812 in do5321 in k31796 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31800(t3,((C_word*)t0)[2],t2);}

/* k31785 in do5318 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31777(t3,((C_word*)t0)[2],t2);}

/* k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li562),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_31741(t7,t2,t3);}

/* do5332 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31741(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31741,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31752,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31767,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k31765 in do5332 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31767,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31750 in do5332 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_31741(t4,((C_word*)t0)[2],t3);}

/* k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t3))){
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_truep(((C_word*)((C_word*)t0)[13])[1])?C_retrieve2(lf[893],"*process-stop*"):lf[981]);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31649,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=t6,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
t8=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31681,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t10,a[5]=t5,a[6]=((C_word)li561),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_31681(t12,t7,t8);}
else{
t4=t2;
f_31469(t4,C_SCHEME_UNDEFINED);}}

/* do5339 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31681(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31681,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t3,t4);}}

/* k31689 in do5339 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31694,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k31692 in k31689 in do5339 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31694,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31697,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31715,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t5,t6,C_fix(20224));}

/* k31713 in k31692 in k31689 in do5339 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31715,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31697(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31697(t2,C_SCHEME_UNDEFINED);}}

/* k31695 in k31692 in k31689 in do5339 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31697,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 87   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k31699 in k31695 in k31692 in k31689 in do5339 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_31681(t4,((C_word*)t0)[2],t3);}

/* k31647 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_31652(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[268],((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_31652(t6,t5);}}

/* k31650 in k31647 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31652(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31652,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31469(t5,t4);}

/* k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31469(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31469,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[11])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_31472(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[268],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_31472(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[11],0,C_SCHEME_FALSE);
t4=t2;
f_31472(t4,t3);}}

/* k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31472(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31472,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_31475,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k31604 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31606,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31610,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_31475(t3,t2);}}

/* k31612 in k31604 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k31608 in k31604 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31475(t3,t2);}

/* k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31475(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31475,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31576,a[2]=((C_word*)t0)[9],tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31592,a[2]=((C_word*)t0)[5],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   append");
t6=*((C_word*)lf[117]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[7])[1]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31510,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31514,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ##sys#append");
t6=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t5,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(C_word)C_a_i_list(&a,1,lf[979]);
t4=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31561,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31565,a[2]=((C_word*)t0)[4],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31569,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ##sys#append");
t8=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t7,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}}}

/* k31567 in k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31563 in k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31559 in k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31561,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[6],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[322],t3);
t5=(C_word)C_a_i_list(&a,3,lf[902],((C_word*)t0)[5],t4);
t6=(C_word)C_a_i_list(&a,2,lf[796],t5);
t7=(C_word)C_a_i_list(&a,1,lf[980]);
t8=(C_word)C_a_i_list(&a,5,lf[103],((C_word*)((C_word*)t0)[4])[1],t6,((C_word*)((C_word*)t0)[3])[1],t7);
t9=(C_word)C_a_i_list(&a,3,lf[902],C_SCHEME_END_OF_LIST,t8);
t10=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,1,t9));}

/* k31512 in k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   ##sys#append");
t2=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31508 in k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31510,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[322],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[103],((C_word*)((C_word*)t0)[2])[1],t4));}

/* k31590 in k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31592,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[6])[1];
t3=(C_truep(t2)?t2:C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 87   make-loop-clause");
f_9361(((C_word*)t0)[5],(C_word)C_a_i_list(&a,18,lf[138],lf[914],lf[139],((C_word*)((C_word*)t0)[4])[1],lf[140],C_SCHEME_END_OF_LIST,lf[141],C_SCHEME_END_OF_LIST,lf[142],((C_word*)t0)[3],lf[143],t1,lf[144],((C_word*)((C_word*)t0)[2])[1],lf[145],t3,lf[146],C_SCHEME_END_OF_LIST));}

/* k31574 in k31473 in k31470 in k31467 in k31464 in k31461 in k31458 in k31451 in k31427 in a41725 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   expand-process");
f_39932(((C_word*)t0)[2],t1);}

/* a41679 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41680(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41680,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41696,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t11=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k41694 in a41679 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41699,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   sixth");
t3=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k41697 in k41694 in a41679 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41699,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41702,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_41702(t7,t6);}
else{
t5=t4;
f_41702(t5,C_SCHEME_UNDEFINED);}}

/* k41700 in k41697 in k41694 in a41679 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41702(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41702,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_41705(t5,t4);}
else{
t3=t2;
f_41705(t3,C_SCHEME_UNDEFINED);}}

/* k41703 in k41700 in k41697 in k41694 in a41679 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41705,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41716,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t3,((C_word*)t0)[8]);}

/* k41714 in k41703 in k41700 in k41697 in k41694 in a41679 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k41672 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(32512),t1);}

/* k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31957,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41529,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[245],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[411],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[245],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[268],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[245],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41535,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[978],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a41534 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41535(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41535,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41548,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_41548(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41574,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t12,t13,C_fix(256));}}

/* k41572 in a41534 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41574,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41548(t4,t3);}

/* k41546 in a41534 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41548(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41548,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k41527 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(37632),t1);}

/* k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31960,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41072,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[411],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[245],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[245],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[245],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[268],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[245],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41078,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41117,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[977],C_fix(36352),t23,t24,t25);}

/* a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41117(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41117,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41121,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t6,t2);}

/* k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41121,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[216]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41130,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41133,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t7,t2,C_fix(24576));}

/* k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41133,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41142,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li556),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_41142(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t2,t3);}}

/* k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41197,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 87   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41409,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_41206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_41206(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41347,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 87   symbol->string");
t15=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k41345 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41347,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41356,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41381,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 87   substring");
t6=*((C_word*)lf[438]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_41356(t4,C_SCHEME_FALSE);}}

/* k41379 in k41345 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_41356(t2,(C_word)C_i_string_equal_p(t1,lf[976]));}

/* k41354 in k41345 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41356(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41356,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41363,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41367,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 87   substring");
t5=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_41206(t2,C_SCHEME_UNDEFINED);}}

/* k41365 in k41354 in k41345 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k41361 in k41354 in k41345 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_41206(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41206(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41206,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41209,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41284,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t3,((C_word*)t0)[2],C_fix(24064));}

/* k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41284,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29372(t2,lf[973],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41325,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k41323 in k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41325,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29372(t2,lf[975],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_41209(t2,C_SCHEME_UNDEFINED);}}

/* k41327 in k41323 in k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41329,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41333,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k41331 in k41327 in k41323 in k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41333,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[932],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[974]);
t6=((C_word*)t0)[2];
f_41209(t6,t5);}

/* k41286 in k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41288,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41292,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k41290 in k41286 in k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41292,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41319,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   get-emit-info");
f_29360(t4,lf[973],((C_word*)((C_word*)t0)[2])[1]);}

/* k41317 in k41290 in k41286 in k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41319,2,t0,t1);}
t2=(C_word)C_eqp(lf[972],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[293]);
t4=(C_word)C_a_i_list(&a,3,lf[902],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[796],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_41295(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_41295(t3,C_SCHEME_UNDEFINED);}}

/* k41293 in k41290 in k41286 in k41282 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41295,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[932],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[971]);
t5=((C_word*)t0)[2];
f_41209(t5,t4);}

/* k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41209,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41212,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41223,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41281,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   symbol->string");
t5=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k41279 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[970]);}

/* k41221 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41223,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41225,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li557),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_41225(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do5419 in k41221 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41225(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41225,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41240,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t6=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[968]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41244,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41273,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 87   symbol->string");
t8=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k41271 in do5419 in k41221 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k41242 in do5419 in k41221 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41244,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41247,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_41247(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41261,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t6=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[969]);}}

/* k41259 in k41242 in do5419 in k41221 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41247(t3,t2);}

/* k41245 in k41242 in do5419 in k41221 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41247(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_41225(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k41238 in do5419 in k41221 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41240,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[60],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k41210 in k41207 in k41204 in k41407 in k41195 in k41192 in k41189 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41212,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_41130(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do5393 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41142(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41142,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41152,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k41150 in do5393 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41152,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41158,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[967],t2);}

/* k41156 in k41150 in do5393 in k41131 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41158,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[932],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[714],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_41142(t9,((C_word*)t0)[2],t8);}

/* k41128 in k41119 in a41116 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a41077 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41078,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41089,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41095,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t9,t7,C_fix(24576));}

/* k41093 in a41077 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41095,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 87   remove-token-type");
f_30635(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_41089(t2,C_SCHEME_UNDEFINED);}}

/* k41109 in k41093 in a41077 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41111,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41089(t5,t4);}

/* k41087 in a41077 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_41089(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k41070 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_41072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(36352),t1);}

/* k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31960,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31963,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40996,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[268],t19);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[966],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40994 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(36608),t1);}

/* k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31966,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40952,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[179],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40958,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40972,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   make-rule");
f_28954(t3,lf[965],C_fix(36864),t5,t6,t7);}

/* a40971 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40972,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40980,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40984,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t6,t2);}

/* k40982 in a40971 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40978 in a40971 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40980,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[216],t1));}

/* a40957 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40958,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40966,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   parse-unit-position");
f_29303(t4,t5);}

/* k40964 in a40957 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k40950 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[647],"*rules*"),C_fix(36864),t1);}

/* k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word ab[111],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31966,2,t0,t1);}
t2=C_mutate((C_word*)lf[701]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31968,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[710],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32452,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32611,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[723]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32764,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[724]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32773,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[733]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32822,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[735]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32846,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[736],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32874,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t10=C_set_block_item(lf[748],0,C_fix(8));
t11=C_set_block_item(lf[749],0,C_fix(9));
t12=C_set_block_item(lf[750],0,C_fix(10));
t13=C_set_block_item(lf[751],0,C_fix(11));
t14=C_set_block_item(lf[752],0,C_fix(12));
t15=C_set_block_item(lf[753],0,C_fix(13));
t16=C_set_block_item(lf[754],0,C_fix(14));
t17=C_mutate((C_word*)lf[755]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32945,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[757],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33192,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[756],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33247,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[738],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33400,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[762]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33406,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[770]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34461,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[771]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34890,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[773]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35597,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[775]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36304,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[777]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37011,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[778]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37440,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[779]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37869,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[780]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38298,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[782]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38328,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[783]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38334,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[784]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38340,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[785]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38346,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[786]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38352,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[787]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38358,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[789]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38373,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[797]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38392,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[800]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38497,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp));
t39=lf[803]=C_SCHEME_FALSE;;
t40=C_mutate(&lf[742],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38673,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[744]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38786,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[845],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38958,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[856]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39151,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[857]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39157,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp));
t45=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39197,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t46=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40944,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   ##sys#register-macro");
t47=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t47))(4,t47,t45,lf[964],t46);}

/* a40943 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40944(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_40944r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40944r(t0,t1,t2,t3);}}

static void C_ccall f_40944r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 88   expand-send");
t4=C_retrieve(lf[860]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39201,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   make-equal-hash-table");
t3=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39201,2,t0,t1);}
t2=C_mutate(&lf[859],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39204,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40915,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   ##sys#register-macro");
t5=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[963],t4);}

/* a40914 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40915,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40919,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   gensym");
t5=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[962]);}

/* k40917 in a40914 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40919,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,t1,((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[959],t1);
t5=(C_word)C_a_i_list(&a,3,lf[960],t4,t1);
t6=(C_word)C_a_i_list(&a,4,lf[20],lf[961],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[102],t3,t6));}

/* k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39204,2,t0,t1);}
t2=C_mutate((C_word*)lf[860]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39206,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[862],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39280,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t4=lf[875];
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39754,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40913,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t6,t4);}

/* k40911 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40913,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[958],t2);}

/* k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39754,2,t0,t1);}
t2=lf[876];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39757,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40905,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40903 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40905,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[957],t2);}

/* k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39757,2,t0,t1);}
t2=lf[877];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39760,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40897,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40895 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40897,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[956],t2);}

/* k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39760,2,t0,t1);}
t2=lf[878];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39763,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40889,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40887 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40889,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[955],t2);}

/* k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39763,2,t0,t1);}
t2=lf[879];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39766,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40881,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40879 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40881,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[954],t2);}

/* k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39766,2,t0,t1);}
t2=lf[880];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39769,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40873,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40871 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40873,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[953],t2);}

/* k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39769,2,t0,t1);}
t2=lf[881];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39772,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40865,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40863 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40865,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[952],t2);}

/* k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39772,2,t0,t1);}
t2=lf[882];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39775,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40857,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40855 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40857,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[951],t2);}

/* k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39775,2,t0,t1);}
t2=lf[883];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39778,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40849,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40847 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40849,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[950],t2);}

/* k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39778,2,t0,t1);}
t2=lf[884];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39781,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40841,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40839 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40841,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[949],t2);}

/* k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39781,2,t0,t1);}
t2=lf[885];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39784,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40833,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40831 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40833,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[948],t2);}

/* k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39784,2,t0,t1);}
t2=lf[886];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39787,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40825,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40823 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40825,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[947],t2);}

/* k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39787,2,t0,t1);}
t2=lf[887];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39790,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40817,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40815 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40817,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[946],t2);}

/* k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39790,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39793,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40809,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40807 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40809,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[945],t2);}

/* k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39793,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39796,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40801,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40799 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40801,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[944],t2);}

/* k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39796,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39799,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40793,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40791 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40793,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[943],t2);}

/* k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39799,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39802,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40785,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40783 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40785,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[942],t2);}

/* k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39802,2,t0,t1);}
t2=lf[888];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39805,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40777,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40775 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40777,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[941],t2);}

/* k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39805,2,t0,t1);}
t2=lf[889];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39808,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40769,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40767 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40769,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[940],t2);}

/* k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39808,2,t0,t1);}
t2=lf[890];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39811,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40761,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40759 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40761,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[939],t2);}

/* k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39811,2,t0,t1);}
t2=lf[891];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39814,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40753,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40751 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40753,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[938],t2);}

/* k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39814,2,t0,t1);}
t2=lf[892];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39817,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40745,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   make-message-parser");
f_39280(t4,t2);}

/* k40743 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40745,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 88   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[859],"*messages*"),lf[937],t2);}

/* k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39817,2,t0,t1);}
t2=C_mutate(&lf[893],lf[894]);
t3=C_mutate(&lf[895],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39820,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp));
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39891,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40676,a[2]=t9,a[3]=t4,a[4]=t6,a[5]=((C_word)li550),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_40676(t11,t7,C_retrieve2(lf[331],"*loop-operators*"));}

/* do6813 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40676(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40676,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[297],C_retrieve2(lf[895],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[296],C_retrieve2(lf[895],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40704,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[274]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[117]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[279]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[263]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[264]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[266]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[267]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[301]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[302]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[303]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[293]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[297]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[296]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_40704(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_40704(t11,t10);}}}

/* k40702 in do6813 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40704(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40676(t3,((C_word*)t0)[2],t2);}

/* k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39891,2,t0,t1);}
t2=C_mutate(&lf[898],t1);
t3=C_mutate(&lf[899],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39893,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[900],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39932,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40169,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40670,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 89   ##sys#register-macro-2");
t7=C_retrieve(lf[936]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[914],t6);}

/* a40669 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40670(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_40670,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 89   expand-process");
f_39932(t1,t2);}

/* k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40172,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40641,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 89   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[935],t3);}

/* a40640 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40641(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_40641r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40641r(t0,t1,t2,t3);}}

static void C_ccall f_40641r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40645,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40655,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_40655(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_40655(t6,C_SCHEME_FALSE);}}

/* k40653 in a40640 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40645(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[933],((C_word*)t0)[2]);}}

/* k40643 in a40640 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40645,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[932],t2));}

/* k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40172,2,t0,t1);}
t2=C_mutate((C_word*)lf[915]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40174,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[923]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40544,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[924]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40550,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[925]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40556,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[926]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40562,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[927]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40568,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[929]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40626,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp));
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40639,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 95   return-to-host");
t10=C_retrieve(lf[931]);
((C_proc2)C_retrieve_proc(t10))(2,t10,t9);}

/* k40637 in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40626,2,t0,t1);}
C_trace("ChickenBridge.scm: 89   ffi_sched_hush");
t2=C_retrieve(lf[930]);
((C_proc2)C_retrieve_proc(t2))(2,t2,t1);}

/* stop in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40568(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_40568r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_40568r(t0,t1,t2);}}

static void C_ccall f_40568r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40572,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 89   ffi_sched_stop");
f_7523(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40586,a[2]=t5,a[3]=((C_word)li545),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_40586(t7,t3,t2);}}

/* do6901 in stop in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40586(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40586,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40596,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   ffi_sched_stop");
f_7523(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[928],t5);}}}

/* k40594 in do6901 in stop in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40586(t3,((C_word*)t0)[2],t2);}

/* k40570 in stop in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}

/* continue in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40562,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub282(C_SCHEME_UNDEFINED));}

/* paused? in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40556,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub278(C_SCHEME_UNDEFINED));}

/* pause in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40550,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub280(C_SCHEME_UNDEFINED));}

/* now in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40544,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub267(t2));}

/* sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40174(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+27)){
C_save_and_reclaim((void*)tr3r,(void*)f_40174r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40174r(t0,t1,t2,t3);}}

static void C_ccall f_40174r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(27);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(-1);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(C_word)C_i_closurep(t2);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40181,a[2]=t4,a[3]=t10,a[4]=t2,a[5]=t1,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(t11)){
t13=t12;
f_40181(2,t13,t11);}
else{
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40497,a[2]=t2,a[3]=t12,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40511,a[2]=t2,a[3]=t15,a[4]=((C_word)li539),tmp=(C_word)a,a+=5,tmp));
t17=((C_word*)t15)[1];
f_40511(t17,t13,t2);}
else{
t14=t13;
f_40497(2,t14,C_SCHEME_FALSE);}}}

/* do6850 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40511(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40511,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40521,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_40521(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 89   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[922],((C_word*)t0)[2]);}}}

/* k40519 in do6850 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40511(t3,((C_word*)t0)[2],t2);}

/* k40495 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40181(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[921],((C_word*)t0)[2]);}}

/* k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40435,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=t4,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word)li538),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_40435(t6,t2,((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do6855 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40435(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40435,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nullp(t2);
t5=(C_truep(t4)?t4:((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t5)){
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40449,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t7))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[6])+1,t8);
t10=t6;
f_40449(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t6;
f_40449(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[2])+1,t8);
t10=t6;
f_40449(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 89   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,lf[920],((C_word*)((C_word*)t0)[5])[1]);}}}}}

/* k40447 in do6855 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40449,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_40435(t4,((C_word*)t0)[2],t2,t3);}

/* k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40184,2,t0,t1);}
t2=(C_word)C_i_numberp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?(C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[7])[1],C_fix(0)):C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t3)){
t5=t4;
f_40190(2,t5,t3);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40368,a[2]=((C_word*)t0)[7],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40382,a[2]=t7,a[3]=((C_word)li537),tmp=(C_word)a,a+=4,tmp));
t9=((C_word*)t7)[1];
f_40382(t9,t5,((C_word*)((C_word*)t0)[7])[1]);}
else{
t6=t5;
f_40368(2,t6,C_SCHEME_FALSE);}}}

/* do6867 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40382(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40382,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40392,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_numberp(t4);
t6=(C_word)C_i_not(t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40405,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t8=t7;
f_40405(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_40405(t9,(C_word)C_i_lessp(t8,C_fix(0)));}}}

/* k40403 in do6867 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40405(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 89   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[919],t2);}
else{
t2=((C_word*)t0)[2];
f_40392(2,t2,C_SCHEME_UNDEFINED);}}

/* k40390 in do6867 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40382(t3,((C_word*)t0)[2],t2);}

/* k40366 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40190(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[918],((C_word*)((C_word*)t0)[2])[1]);}}

/* k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40190,2,t0,t1);}
t2=(C_word)C_i_integerp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_40196(2,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40316,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40330,a[2]=t6,a[3]=((C_word)li536),tmp=(C_word)a,a+=4,tmp));
t8=((C_word*)t6)[1];
f_40330(t8,t4,((C_word*)((C_word*)t0)[7])[1]);}
else{
t5=t4;
f_40316(2,t5,C_SCHEME_FALSE);}}}

/* do6878 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40330(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40330,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40340,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t4))){
t5=t3;
f_40340(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[917],t5);}}}

/* k40338 in do6878 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40330(t3,((C_word*)t0)[2],t2);}

/* k40314 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40196(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 89   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[916],((C_word*)((C_word*)t0)[2])[1]);}}

/* k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40199,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40313,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[736],"open-file"),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_40199(t3,C_SCHEME_UNDEFINED);}}

/* k40311 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40199(t3,t2);}

/* k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40199,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40200,a[2]=((C_word*)t0)[5],a[3]=((C_word)li533),tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40228,a[2]=((C_word*)t0)[4],a[3]=((C_word)li534),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40258,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40269,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word)li535),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_40269(t8,t4,((C_word*)t0)[2]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40305,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextstart");
t6=t2;
f_40200(t6,t5);}}

/* k40303 in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40309,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextid");
t3=((C_word*)t0)[2];
f_40228(t3,t2);}

/* k40307 in k40303 in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   ffi_sched_sprout");
f_7503(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do6889 in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40269(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40269,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40279,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40294,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextstart");
t6=((C_word*)t0)[2];
f_40200(t6,t5);}}

/* k40292 in do6889 in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40298,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   nextid");
t3=((C_word*)t0)[2];
f_40228(t3,t2);}

/* k40296 in k40292 in do6889 in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   ffi_sched_sprout");
f_7503(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40277 in do6889 in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40269(t3,((C_word*)t0)[2],t2);}

/* k40256 in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}

/* nextid in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40228(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40228,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in k40197 in k40194 in k40188 in k40182 in k40179 in sprout in k40170 in k40167 in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40200(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40200,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39932(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39932,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39936,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_vectorp(t2))){
t4=t3;
f_39936(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 89   parse-iteration");
f_12577(t3,lf[914],t2,C_retrieve2(lf[898],"*run-operators*"));}}

/* k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39936,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[893],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39939,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 89   gensym");
t9=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[913]);}

/* k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 89   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[912]);}

/* k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 89   loop-end-tests");
t3=C_retrieve2(lf[131],"loop-end-tests");
f_9301(3,t3,t2,((C_word*)t0)[3]);}

/* k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39946,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   loop-finally");
t5=C_retrieve2(lf[135],"loop-finally");
f_9337(3,t5,t4,((C_word*)t0)[3]);}

/* k40158 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40160,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[4];
f_39949(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40144,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40148,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-finally");
t4=C_retrieve2(lf[135],"loop-finally");
f_9337(3,t4,t3,((C_word*)t0)[2]);}}

/* k40146 in k40158 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40148,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 89   ##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k40142 in k40158 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40144,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[216],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39949(t4,t3);}

/* k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39949,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39952,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40122,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40129,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-looping");
t5=C_retrieve2(lf[132],"loop-looping");
f_9313(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40093,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_40093(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[268],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_40093(t7,t6);}}}

/* k40091 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_40093(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40093,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_39952(2,t5,t4);}

/* k40127 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   process-code-terminates?");
f_39893(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k40120 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_39952(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 89   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[911]);}}

/* k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[124],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39952,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,2,lf[104],lf[901]);
t5=(C_word)C_a_i_list(&a,2,lf[63],lf[901]);
t6=(C_word)C_a_i_list(&a,1,lf[53]);
t7=(C_word)C_a_i_list(&a,3,lf[245],t5,t6);
t8=(C_word)C_a_i_list(&a,1,lf[54]);
t9=(C_word)C_a_i_list(&a,4,lf[119],t7,t8,((C_word*)t0)[7]);
t10=(C_word)C_a_i_list(&a,4,lf[119],t4,((C_word*)t0)[7],t9);
t11=(C_word)C_a_i_list(&a,3,lf[902],lf[901],t10);
t12=(C_word)C_a_i_list(&a,2,lf[903],t11);
t13=(C_word)C_a_i_list(&a,1,lf[904]);
t14=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],lf[904]);
t15=(C_word)C_a_i_list(&a,3,lf[902],t13,t14);
t16=(C_word)C_a_i_list(&a,2,lf[905],t15);
t17=(C_word)C_a_i_list(&a,3,t3,t12,t16);
t18=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t17,tmp=(C_word)a,a+=7,tmp);
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40023,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t18,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 89   loop-looping");
t20=C_retrieve2(lf[132],"loop-looping");
f_9313(3,t20,t19,((C_word*)t0)[3]);}

/* k40021 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40027,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 89   loop-stepping");
t3=C_retrieve2(lf[134],"loop-stepping");
f_9325(3,t3,t2,((C_word*)t0)[2]);}

/* k40025 in k40021 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40027,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 89   append");
t3=*((C_word*)lf[117]+1);
((C_proc6)C_retrieve_proc(t3))(6,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1,t2);}

/* k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_40019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[910]);}

/* k7045 in k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[96],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7047,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[906]);
t3=(C_word)C_a_i_list(&a,1,t1);
t4=(C_word)C_a_i_list(&a,1,lf[907]);
t5=(C_word)C_a_i_list(&a,4,lf[908],t1,t4,lf[909]);
t6=(C_word)C_a_i_list(&a,2,lf[906],C_fix(-2));
t7=(C_word)C_a_i_list(&a,4,lf[902],t3,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t9=(C_word)C_a_i_cons(&a,2,lf[902],t8);
t10=(C_word)C_a_i_list(&a,3,lf[795],t7,t9);
t11=(C_word)C_a_i_list(&a,3,lf[902],t2,t10);
t12=(C_word)C_a_i_list(&a,2,lf[796],t11);
t13=(C_word)C_a_i_list(&a,3,lf[103],((C_word*)t0)[6],t12);
t14=(C_word)C_a_i_list(&a,3,lf[902],((C_word*)t0)[5],t13);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t17=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39999,a[2]=((C_word*)t0)[2],a[3]=t16,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-bindings");
t18=C_retrieve2(lf[128],"loop-bindings");
f_9265(3,t18,t17,((C_word*)t0)[2]);}

/* k39997 in k7045 in k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39999,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39995,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 89   loop-initially");
t3=C_retrieve2(lf[130],"loop-initially");
f_9289(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_39962(t2,C_SCHEME_FALSE);}}

/* k39993 in k39997 in k7045 in k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_39962(t2,(C_word)C_i_nullp(t1));}

/* k39960 in k7045 in k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39962(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39962,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 89   loop-bindings");
t3=C_retrieve2(lf[128],"loop-bindings");
f_9265(3,t3,t2,((C_word*)t0)[2]);}}

/* k39971 in k39960 in k7045 in k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39977,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39981,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 89   loop-initially");
t4=C_retrieve2(lf[130],"loop-initially");
f_9289(3,t4,t3,((C_word*)t0)[2]);}

/* k39979 in k39971 in k39960 in k7045 in k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39981,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 89   ##sys#append");
t3=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k39975 in k39971 in k39960 in k7045 in k40017 in k39950 in k39947 in k39944 in k39940 in k39937 in k39934 in expand-process in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39977,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[103],t2));}

/* process-code-terminates? in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39893(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_39893,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39909,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 89   process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_equalp(t2,t4));}}}

/* k39907 in process-code-terminates? in k39889 in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 89   process-code-terminates?");
f_39893(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39820,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39831,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 89   loop-error");
f_9601(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[896],t7,lf[897]));}
else{
t13=t12;
f_39831(2,t13,C_SCHEME_UNDEFINED);}}

/* k39829 in run-while-until in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[296]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_39834(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[297]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[211],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_39834(t10,t9);}
else{
t5=t2;
f_39834(t5,C_SCHEME_UNDEFINED);}}}

/* k39832 in k39829 in run-while-until in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39834,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39841,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[893],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 89   make-loop-clause");
f_9361(t2,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[143],t4));}

/* k39839 in k39832 in k39829 in run-while-until in k39815 in k39812 in k39809 in k39806 in k39803 in k39800 in k39797 in k39794 in k39791 in k39788 in k39785 in k39782 in k39779 in k39776 in k39773 in k39770 in k39767 in k39764 in k39761 in k39758 in k39755 in k39752 in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 89   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39280(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39280,NULL,2,t1,t2);}
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39284,a[2]=t12,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39613,a[2]=t4,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t8,a[7]=t15,a[8]=((C_word)li528),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_39613(t17,t13,t2,C_SCHEME_FALSE);}

/* do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39613(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39613,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39623,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[7],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t5,a[8]=t4,a[9]=t2,tmp=(C_word)a,a+=10,tmp);
t7=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   keyword?");
t8=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k39631 in do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39633,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_truep((C_word)C_i_equalp(t2,lf[869]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[767]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[870]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[871]))?C_SCHEME_TRUE:C_SCHEME_FALSE)))))){
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=((C_word*)t0)[7];
f_39623(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[872],((C_word*)((C_word*)t0)[8])[1]);}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[767]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39659,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_word)C_i_pairp(t3))){
C_trace("ChickenBridge.scm: 88   caar");
t4=*((C_word*)lf[598]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,((C_word*)t0)[9]);}
else{
t4=t2;
f_39659(2,t4,(C_word)C_i_car(((C_word*)t0)[9]));}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[870]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39698,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39702,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 88   symbol->string");
t5=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[873]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[7];
f_39623(2,t5,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[871]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[7];
f_39623(2,t4,t3);}
else{
t2=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[874],((C_word*)((C_word*)t0)[8])[1]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[7];
f_39623(2,t6,t5);}}}}}}}

/* k39700 in k39631 in do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39696 in k39631 in do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39698,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39623(2,t4,t3);}

/* k39657 in k39631 in do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39671,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 88   symbol->string");
t4=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t1);}

/* k39669 in k39657 in k39631 in do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39665 in k39657 in k39631 in do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39667,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39623(2,t4,t3);}

/* k39621 in do6618 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_39613(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k39282 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[7])[1]);}

/* k39286 in k39282 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39288,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39292,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39290 in k39286 in k39282 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39292,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39294 in k39290 in k39286 in k39282 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39296,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39300,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 88   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39298 in k39294 in k39290 in k39286 in k39282 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39300,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word)li527),tmp=(C_word)a,a+=8,tmp));}

/* f_39301 in k39298 in k39294 in k39290 in k39286 in k39282 in make-message-parser in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39301,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t3,a[8]=((C_word)li526),tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 88   call-with-current-continuation");
t5=*((C_word*)lf[796]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* a39306 */
static void C_ccall f_39307(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39307,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[7])[1];
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=t2,a[8]=t1,a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 88   return");
t5=t2;
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_TRUE);}
else{
t5=t4;
f_39311(2,t5,C_SCHEME_UNDEFINED);}}

/* k39309 in a39306 */
static void C_ccall f_39311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39540,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t4,a[7]=((C_word*)t0)[9],a[8]=((C_word)li525),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_39540(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do6629 in k39309 in a39306 */
static void C_fcall f_39540(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39540,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39550,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39571,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t5=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[867],((C_word*)t0)[4]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39577,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39587,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t7=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}}

/* k39585 in do6629 in k39309 in a39306 */
static void C_ccall f_39587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_member(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=((C_word*)t0)[3];
f_39577(t4,t3);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=((C_word*)t0)[3];
f_39577(t5,(C_word)C_i_member(t4,((C_word*)((C_word*)t0)[2])[1]));}}
else{
t2=((C_word*)t0)[3];
f_39577(t2,C_SCHEME_FALSE);}}

/* k39575 in do6629 in k39309 in a39306 */
static void C_fcall f_39577(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39577,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[868],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_39550(2,t2,C_SCHEME_UNDEFINED);}}

/* k39582 in k39575 in do6629 in k39309 in a39306 */
static void C_ccall f_39584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39569 in do6629 in k39309 in a39306 */
static void C_ccall f_39571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39548 in do6629 in k39309 in a39306 */
static void C_ccall f_39550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_39540(t5,((C_word*)t0)[2],t4);}

/* k39312 in k39309 in a39306 */
static void C_ccall f_39314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39495,a[2]=t2,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t3;
f_39495(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_39495(t5,(C_word)C_i_not(t4));}}

/* k39493 in k39312 in k39309 in a39306 */
static void C_fcall f_39495(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39495,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39500,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li524),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39500(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_39317(2,t2,C_SCHEME_UNDEFINED);}}

/* do6637 in k39493 in k39312 in k39309 in a39306 */
static void C_fcall f_39500(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39500,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39510,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_39510(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t5=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k39508 in do6637 in k39493 in k39312 in k39309 in a39306 */
static void C_ccall f_39510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_39500(t4,((C_word*)t0)[4]);}}

/* k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39449,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=t3;
f_39449(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_39449(t5,(C_word)C_i_not(t4));}}

/* k39447 in k39315 in k39312 in k39309 in a39306 */
static void C_fcall f_39449(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39449,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39454,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li523),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39454(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_39320(2,t2,C_SCHEME_UNDEFINED);}}

/* do6643 in k39447 in k39315 in k39312 in k39309 in a39306 */
static void C_fcall f_39454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39454,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39464,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_39464(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t5=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k39462 in do6643 in k39447 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_39454(t4,((C_word*)t0)[4]);}}

/* k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39323,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_not(t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39346,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_39346(t6,t4);}
else{
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t7=t5;
f_39346(t7,(C_word)C_i_not(t6));}}

/* k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_fcall f_39346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39346,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?((C_word*)((C_word*)t0)[6])[1]:((C_word*)((C_word*)t0)[7])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39355,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li522),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_39355(t7,((C_word*)t0)[2],t3);}
else{
t2=((C_word*)t0)[2];
f_39323(2,t2,C_SCHEME_UNDEFINED);}}

/* do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_fcall f_39355(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39355,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39365,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39371,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 88   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k39369 in do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39371,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
if(C_truep((C_word)C_i_member(t3,((C_word*)t0)[2]))){
t4=t2;
f_39374(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39405,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 88   format");
t6=C_retrieve(lf[431]);
((C_proc6)C_retrieve_proc(t6))(6,t6,t4,C_SCHEME_FALSE,lf[865],t5,((C_word*)t0)[3]);}}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39424,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 88   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[866],t3);}}

/* k39422 in k39369 in do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39403 in k39369 in do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39372 in k39369 in do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39374,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39381,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39395,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t6=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_SCHEME_FALSE,lf[864],((C_word*)t0)[2]);}
else{
t5=t4;
f_39381(2,t5,C_SCHEME_UNDEFINED);}}

/* k39393 in k39372 in k39369 in do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39379 in k39372 in k39369 in do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39365(2,t4,t3);}

/* k39363 in do6651 in k39344 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_39355(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39321 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39323,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39336,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[863],((C_word*)t0)[2]);}}

/* k39334 in k39321 in k39318 in k39315 in k39312 in k39309 in a39306 */
static void C_ccall f_39336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-send in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39206(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_39206r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_39206r(t0,t1,t2,t3,t4);}}

static void C_ccall f_39206r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39210,a[2]=t3,a[3]=t1,a[4]=t5,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,*((C_word*)lf[84]+1));
t8=t6;
f_39210(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_39210(t9,t8);}}

/* k39208 in expand-send in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39210,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39219,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 88   hash-ref");
t3=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_retrieve2(lf[859],"*messages*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t0)[5]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[861],((C_word*)t0)[5]);}}}

/* k39217 in k39208 in expand-send in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39219,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t1);
t5=t4;
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39232,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   string->symbol");
t4=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k39230 in k39217 in k39208 in expand-send in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39232,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k39233 in k39217 in k39208 in expand-send in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39235,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(t1))){
C_trace("ChickenBridge.scm: 88   errcont");
t2=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],t1);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   string->symbol");
t3=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k39249 in k39233 in k39217 in k39208 in expand-send in k39202 in k39199 in k39195 in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39251,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* cs:f in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39157(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_39157r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39157r(t0,t1,t2);}}

static void C_ccall f_39157r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 88   cs:send");
f_38958(t1,lf[858],t2);}

/* cs:i in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39151(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_39151r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39151r(t0,t1,t2);}}

static void C_ccall f_39151r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 88   cs:send");
f_38958(t1,lf[847],t2);}

/* cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38958(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38958,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[846];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38962,a[2]=t4,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t2,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
C_trace("ChickenBridge.scm: 88   error");
t12=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[855]);}
else{
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39131,a[2]=t11,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_cdr(((C_word*)t4)[1]);
if(C_truep((C_word)C_i_nullp(t13))){
t14=(C_word)C_i_car(((C_word*)t4)[1]);
t15=t12;
f_39131(t15,(C_word)C_i_pairp(t14));}
else{
t14=t12;
f_39131(t14,C_SCHEME_FALSE);}}}

/* k39129 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_39131(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38962(2,t4,t3);}
else{
t2=((C_word*)t0)[2];
f_38962(2,t2,C_SCHEME_UNDEFINED);}}

/* k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_integerp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_38965(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 88   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[854],t4);}}

/* k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38968,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]))){
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[852]);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_38968(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 88   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[853],t4);}}}

/* k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38968,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38973,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li517),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_38973(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],lf[851]);}

/* do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38973(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38973,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(C_word)C_eqp(((C_word*)t0)[6],lf[847]);
t5=(C_truep(t4)?C_fix(1):C_retrieve(lf[848]));
t6=t1;
t7=((C_word*)((C_word*)t0)[5])[1];
t8=((C_word*)((C_word*)t0)[4])[1];
t9=((C_word*)((C_word*)t0)[3])[1];
t10=(C_word)C_i_foreign_fixnum_argumentp(t5);
t11=(C_word)C_i_foreign_fixnum_argumentp(t7);
t12=(C_word)C_i_foreign_flonum_argumentp(t8);
t13=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7877,a[2]=t12,a[3]=t11,a[4]=t10,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t9)){
t14=(C_word)C_i_foreign_string_argumentp(t9);
C_trace("##sys#make-c-string");
t15=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}
else{
t14=t13;
f_7877(2,t14,C_SCHEME_FALSE);}}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38993,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39007,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39011,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t6))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39025,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   string-append");
t9=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t7,((C_word*)((C_word*)t0)[3])[1],t3,t8);}
else{
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_symbolp(t7))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39039,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39043,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   symbol->string");
t11=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}
else{
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,lf[850],t8);}}}}}

/* k39041 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k39037 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38993(2,t3,t2);}

/* k39023 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38993(2,t3,t2);}

/* k39009 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k39005 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_39007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38993(2,t3,t2);}

/* k38991 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38973(t3,((C_word*)t0)[2],t2,lf[849]);}

/* k7875 in do6586 in k38966 in k38963 in k38960 in cs:send in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub454(C_SCHEME_UNDEFINED,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38786(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_38786r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38786r(t0,t1,t2,t3);}}

static void C_ccall f_38786r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38790,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[843],t2,lf[844]);}

/* k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38790,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_length(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_evenp(t5))){
t6=t4;
f_38793(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[842],((C_word*)t0)[2]);}}

/* k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38793,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38798,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li515),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38798(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38798(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38798,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
t6=((C_word*)((C_word*)t0)[3])[1];
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7851,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t6)){
t8=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t9=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t7,t8);}
else{
t8=t7;
f_7851(2,t8,C_SCHEME_FALSE);}}
else{
t5=(C_word)C_i_cadr(t2);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(t2);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38818,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t9=(C_word)C_eqp(t7,lf[821]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38832,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_cadr(t2);
t12=(C_truep(t11)?lf[822]:lf[823]);
C_trace("ChickenBridge.scm: 88   string-append");
t13=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t10,((C_word*)((C_word*)t0)[3])[1],lf[824],t12);}
else{
t10=(C_word)C_eqp(t7,lf[825]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38849,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cadr(t2);
t13=(C_truep(t12)?lf[826]:lf[827]);
C_trace("ChickenBridge.scm: 88   string-append");
t14=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t14))(5,t14,t11,((C_word*)((C_word*)t0)[3])[1],lf[828],t13);}
else{
t11=(C_word)C_eqp(t7,lf[829]);
if(C_truep(t11)){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38865,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t13=t12;
f_38865(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t13=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[832],((C_word*)t4)[1]);}}
else{
t12=(C_word)C_eqp(t7,lf[833]);
if(C_truep(t12)){
t13=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38892,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t14=t13;
f_38892(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t14=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[836],((C_word*)t4)[1]);}}
else{
t13=(C_word)C_eqp(t7,lf[837]);
if(C_truep(t13)){
t14=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38919,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t15=t14;
f_38919(2,t15,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t15=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[840],((C_word*)t4)[1]);}}
else{
t14=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   error");
t15=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t8,lf[841],t14);}}}}}}}

/* k38917 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38923,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[838],t3,lf[839]);}

/* k38921 in k38917 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38818(2,t3,t2);}

/* k38890 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[834],t3,lf[835]);}

/* k38894 in k38890 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38818(2,t3,t2);}

/* k38863 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38869,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[830],t3,lf[831]);}

/* k38867 in k38863 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38818(2,t3,t2);}

/* k38847 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38818(2,t3,t2);}

/* k38830 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38818(2,t3,t2);}

/* k38816 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_38798(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k7849 in do6566 in k38791 in k38788 in cs:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub445(C_SCHEME_UNDEFINED,t1));}

/* snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38673(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_38673r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38673r(t0,t1,t2,t3);}}

static void C_ccall f_38673r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38678,a[2]=t5,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   full-pathname");
f_25135(t6,((C_word*)t4)[1]);}

/* k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38678,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=lf[803]=C_SCHEME_FALSE;;
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38682,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   pathname-type");
f_25093(t4,((C_word*)((C_word*)t0)[4])[1]);}

/* k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38685,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38733,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   list-prop");
t4=C_retrieve2(lf[87],"list-prop");
f_8702(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],lf[816]);}

/* k38731 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38733,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_38685(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38725,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38729,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[815]))){
t5=t3;
f_38729(t5,(C_word)C_a_i_list(&a,2,lf[816],C_retrieve(lf[817])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[818]))){
t5=t3;
f_38729(t5,(C_word)C_a_i_list(&a,2,lf[816],C_retrieve(lf[819])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[820]);
t6=t3;
f_38729(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[816],C_retrieve(lf[817])):C_SCHEME_END_OF_LIST));}}}}

/* k38727 in k38731 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38729(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38723 in k38731 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38685(t3,t2);}

/* k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38685(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38685,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38688,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   list-prop");
t4=C_retrieve2(lf[87],"list-prop");
f_8702(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],lf[809]);}

/* k38716 in k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38718,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_38688(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38710,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38714,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[808]))){
t5=t3;
f_38714(t5,(C_word)C_a_i_list(&a,2,lf[809],C_retrieve(lf[810])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[811]))){
t5=t3;
f_38714(t5,(C_word)C_a_i_list(&a,2,lf[809],C_retrieve(lf[812])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[813]);
t6=t3;
f_38714(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[809],C_retrieve(lf[814])):C_SCHEME_END_OF_LIST));}}}}

/* k38712 in k38716 in k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38714(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38708 in k38716 in k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38688(t3,t2);}

/* k38686 in k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38688(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38688,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_apply(6,0,t2,C_retrieve(lf[806]),lf[807],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);}

/* k38689 in k38686 in k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38695,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38703,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   list-prop");
t4=C_retrieve2(lf[87],"list-prop");
f_8702(5,t4,t3,((C_word*)((C_word*)t0)[2])[1],lf[804],C_retrieve(lf[805]));}

/* k38701 in k38689 in k38686 in k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38703,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 88   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k38693 in k38689 in k38686 in k38683 in k38680 in k38676 in snd:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[803],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_retrieve2(lf[803],"*sndfileinfo*"));}

/* mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38497(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_38497r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38497r(t0,t1,t2);}}

static void C_ccall f_38497r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38501,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 88   error");
t6=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[801]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38516,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_38516(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_38516(t8,C_SCHEME_FALSE);}}}

/* k38514 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38516(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38516,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_38501(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_38523(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_38523(t4,C_SCHEME_FALSE);}}}

/* k38521 in k38514 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38523(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38523,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(127));
t3=((C_word*)t0)[3];
f_38501(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38529,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li512),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38529(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6541 in k38521 in k38514 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38529(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38529,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38539,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38549,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   <=");
C_less_or_equal_p(5,0,t4,C_retrieve(lf[748]),t5,C_retrieve(lf[754]));}}

/* k38547 in do6541 in k38521 in k38514 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38549,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38557,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=(C_word)C_a_i_minus(&a,2,t4,C_retrieve(lf[748]));
C_trace("ChickenBridge.scm: 88   ash");
t6=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,C_fix(1),t5);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[802],t2);}}

/* k38555 in k38547 in do6541 in k38521 in k38514 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38551 in k38547 in do6541 in k38521 in k38514 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38539(2,t3,t2);}

/* k38537 in do6541 in k38521 in k38514 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38529(t3,((C_word*)t0)[2],t2);}

/* k38499 in mp:inops in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub421(C_SCHEME_UNDEFINED,t4));}

/* mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38392(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_38392r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38392r(t0,t1,t2);}}

static void C_ccall f_38392r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38396,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 88   error");
t6=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[798]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38411,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_38411(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_38411(t8,C_SCHEME_FALSE);}}}

/* k38409 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38411,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_38396(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_38418(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_38418(t4,C_SCHEME_FALSE);}}}

/* k38416 in k38409 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38418,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(65535));
t3=((C_word*)t0)[3];
f_38396(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38424,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li510),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38424(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6533 in k38416 in k38409 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_38424(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38424,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38434,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38444,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 88   <=");
C_less_or_equal_p(5,0,t4,C_fix(0),t5,C_fix(15));}}

/* k38442 in do6533 in k38416 in k38409 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38444,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38448,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38452,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   ash");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,C_fix(1),t4);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 88   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[799],t2);}}

/* k38450 in k38442 in do6533 in k38416 in k38409 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38446 in k38442 in do6533 in k38416 in k38409 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38434(2,t3,t2);}

/* k38432 in do6533 in k38416 in k38409 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38424(t3,((C_word*)t0)[2],t2);}

/* k38394 in mp:inchans in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub417(C_SCHEME_UNDEFINED,t4));}

/* mp:inhook in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38373(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38373,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=t2;
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7094,a[2]=t3,a[3]=((C_word)li508),tmp=(C_word)a,a+=4,tmp);
t5=t1;
t6=t5;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub439(C_SCHEME_UNDEFINED,t4));}
else{
t3=t1;
t4=t3;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub442(C_SCHEME_UNDEFINED));}}

/* f_7094 in mp:inhook in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7094(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7094,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7100,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[2],a[7]=((C_word)li507),tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   call-with-current-continuation");
t7=*((C_word*)lf[796]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,t6);}

/* a7099 */
static void C_ccall f_7100(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7100,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7106,a[2]=t2,a[3]=((C_word)li505),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li506),tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   with-exception-handler");
t5=C_retrieve(lf[795]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a7125 in a7099 */
static void C_ccall f_7126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7130,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   $hook$");
t3=((C_word*)t0)[6];
((C_proc6)C_retrieve_proc(t3))(6,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7128 in a7125 in a7099 */
static void C_ccall f_7130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a7105 in a7099 */
static void C_ccall f_7106(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7106,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7110,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7117,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7121,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7124,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   condition-property-accessor");
t7=C_retrieve(lf[792]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[793],lf[794]);}

/* k7122 in a7105 in a7099 */
static void C_ccall f_7124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7119 in a7105 in a7099 */
static void C_ccall f_7121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   sprintf");
t2=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[791],t1);}

/* k7115 in a7105 in a7099 */
static void C_ccall f_7117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7108 in a7105 in a7099 */
static void C_ccall f_7110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:recordseq in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38358(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_38358r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_38358r(t0,t1,t2);}}

static void C_ccall f_38358r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
C_trace("ChickenBridge.scm: 88   ffi_mp_set_record_seq");
t5=C_retrieve(lf[788]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* mp:clearseq in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38352,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub436(C_SCHEME_UNDEFINED));}

/* mp:plotseq in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38346,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub434(C_SCHEME_UNDEFINED));}

/* mp:copyseq in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38340,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub432(C_SCHEME_UNDEFINED));}

/* mp:saveseq in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38334,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub430(C_SCHEME_UNDEFINED));}

/* mp:playseq in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38328,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub428(C_SCHEME_UNDEFINED));}

/* mp:tuning in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38298(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2rv,(void*)f_38298r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_38298r(t0,t1,t2);}}

static void C_ccall f_38298r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38308,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 88   <");
C_lessp(5,0,t5,C_fix(0),t4,C_fix(17));}
else{
t6=t5;
f_38308(2,t6,C_SCHEME_FALSE);}}

/* k38306 in mp:tuning in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[2]);
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub425(C_SCHEME_UNDEFINED,t3));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[781],((C_word*)t0)[2]);}}

/* mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37869(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37869r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37869r(t0,t1,t2);}}

static void C_ccall f_37869r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37873,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37873(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[765]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38176,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[765]);}
else{
t23=t22;
f_38176(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[774]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38211,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[774]);}
else{
t24=t23;
f_38211(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[769]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38246,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[769]);}
else{
t25=t24;
f_38246(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38275,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_38275(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k38273 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38275,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38290,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38288 in k38273 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38282(2,t2,C_SCHEME_UNDEFINED);}}

/* k38280 in k38273 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37873(t5,t4);}

/* k38244 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38246,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38250,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38250(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38248 in k38244 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37873(t7,t6);}

/* k38209 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38215,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38215(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38213 in k38209 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37873(t7,t6);}

/* k38174 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38180(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38178 in k38174 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37873(t7,t6);}

/* k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37873,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37876(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38041,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_38041(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38076,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[774]);}
else{
t7=t6;
f_38076(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38111,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_38111(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38140,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_38140(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k38138 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38140,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38147,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38155,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38153 in k38138 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38147(2,t2,C_SCHEME_UNDEFINED);}}

/* k38145 in k38138 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37876(t5,t4);}

/* k38109 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38115(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38113 in k38109 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37876(t7,t6);}

/* k38074 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38080(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38078 in k38074 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37876(t7,t6);}

/* k38039 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38045,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_38045(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38043 in k38039 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37876(t7,t6);}

/* k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37876(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37876,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37879,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37879(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37906,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_37906(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37941,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[774]);}
else{
t7=t6;
f_37941(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37976,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_37976(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38005,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_38005(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k38003 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38005,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38020,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38018 in k38003 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38012(2,t2,C_SCHEME_UNDEFINED);}}

/* k38010 in k38003 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_38012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37879(t5,t4);}

/* k37974 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37980(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37978 in k37974 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37879(t7,t6);}

/* k37939 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37945(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37943 in k37939 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37879(t7,t6);}

/* k37904 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37908 in k37904 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37879(t7,t6);}

/* k37877 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37879(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37879,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37882(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k37880 in k37877 in k37874 in k37871 in mp:bend in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7781(((C_word*)t0)[5],C_retrieve(lf[754]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37440(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37440r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37440r(t0,t1,t2);}}

static void C_ccall f_37440r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37444,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37444(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[765]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37747,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[765]);}
else{
t23=t22;
f_37747(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[774]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37782,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[774]);}
else{
t24=t23;
f_37782(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[769]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37817,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[769]);}
else{
t25=t24;
f_37817(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37846,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_37846(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37844 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37846,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37861,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37859 in k37844 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37853(2,t2,C_SCHEME_UNDEFINED);}}

/* k37851 in k37844 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37444(t5,t4);}

/* k37815 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37821(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37819 in k37815 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37444(t7,t6);}

/* k37780 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37786(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37784 in k37780 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37444(t7,t6);}

/* k37745 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37751(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37749 in k37745 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37444(t7,t6);}

/* k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37444(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37444,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37447(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37612,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_37612(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37647,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[774]);}
else{
t7=t6;
f_37647(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37682,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_37682(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37711,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37711(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37709 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37711,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37726,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37724 in k37709 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37718(2,t2,C_SCHEME_UNDEFINED);}}

/* k37716 in k37709 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37447(t5,t4);}

/* k37680 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37686,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37686(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37684 in k37680 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37447(t7,t6);}

/* k37645 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37647,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37651,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37651(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37649 in k37645 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37447(t7,t6);}

/* k37610 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37616,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37616(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37614 in k37610 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37447(t7,t6);}

/* k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37447,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37450,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37450(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37477,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_37477(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37512,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[774]);}
else{
t7=t6;
f_37512(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37547,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_37547(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37576,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37576(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37574 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37576,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37591,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37589 in k37574 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37583(2,t2,C_SCHEME_UNDEFINED);}}

/* k37581 in k37574 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37450(t5,t4);}

/* k37545 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37551(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37549 in k37545 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37450(t7,t6);}

/* k37510 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37516,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37516(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37514 in k37510 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37450(t7,t6);}

/* k37475 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37481,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37481(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37479 in k37475 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37450(t7,t6);}

/* k37448 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37450(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37450,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37453,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37453(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k37451 in k37448 in k37445 in k37442 in mp:press in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7781(((C_word*)t0)[5],C_retrieve(lf[753]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37011(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37011r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37011r(t0,t1,t2);}}

static void C_ccall f_37011r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37015,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37015(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[765]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37318,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[765]);}
else{
t23=t22;
f_37318(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[774]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37353,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[774]);}
else{
t24=t23;
f_37353(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[769]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37388,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[769]);}
else{
t25=t24;
f_37388(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37417,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_37417(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37415 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37417,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37432,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37430 in k37415 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37424(2,t2,C_SCHEME_UNDEFINED);}}

/* k37422 in k37415 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37015(t5,t4);}

/* k37386 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37392(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37390 in k37386 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37015(t7,t6);}

/* k37351 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37357(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37355 in k37351 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37015(t7,t6);}

/* k37316 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37322,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37322(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37320 in k37316 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37015(t7,t6);}

/* k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37015,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37018,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37018(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37183,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_37183(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37218,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[774]);}
else{
t7=t6;
f_37218(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37253,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_37253(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37282,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37282(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37280 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37282,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37289,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37297,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37295 in k37280 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37289(2,t2,C_SCHEME_UNDEFINED);}}

/* k37287 in k37280 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37018(t5,t4);}

/* k37251 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37257(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37255 in k37251 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37018(t7,t6);}

/* k37216 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37222(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37220 in k37216 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37018(t7,t6);}

/* k37181 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37187,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37187(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37185 in k37181 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37018(t7,t6);}

/* k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37018(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37018,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37021,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37021(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37048,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_37048(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37083,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[774]);}
else{
t7=t6;
f_37083(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37118,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_37118(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37147,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_37147(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37145 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37147,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37162,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37160 in k37145 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37154(2,t2,C_SCHEME_UNDEFINED);}}

/* k37152 in k37145 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37021(t5,t4);}

/* k37116 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37122,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37122(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37120 in k37116 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37021(t7,t6);}

/* k37081 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37087(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37085 in k37081 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37021(t7,t6);}

/* k37046 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37052,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_37052(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37050 in k37046 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37021(t7,t6);}

/* k37019 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_37021(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37021,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37024,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37024(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k37022 in k37019 in k37016 in k37013 in mp:prog in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7781(((C_word*)t0)[5],C_retrieve(lf[752]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36304(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_36304r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36304r(t0,t1,t2);}}

static void C_ccall f_36304r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36308,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_36308(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[765]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36854,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[118],lf[765]);}
else{
t27=t26;
f_36854(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[776]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36889,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[118],lf[776]);}
else{
t28=t27;
f_36889(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[774]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36924,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[118],lf[774]);}
else{
t29=t28;
f_36924(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[769]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36959,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[118],lf[769]);}
else{
t30=t29;
f_36959(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36988,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[109],t2);}
else{
t30=t29;
f_36988(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k36986 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36988,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36995,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37003,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37001 in k36986 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_37003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36995(2,t2,C_SCHEME_UNDEFINED);}}

/* k36993 in k36986 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36308(t5,t4);}

/* k36957 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36963(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36961 in k36957 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36308(t7,t6);}

/* k36922 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36928(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36926 in k36922 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36308(t7,t6);}

/* k36887 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36889,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36893(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36891 in k36887 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36308(t7,t6);}

/* k36852 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36858(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36856 in k36852 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36308(t7,t6);}

/* k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_36308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36308,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36311(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36684,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_36684(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36719,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_36719(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36754,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_36754(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36789,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_36789(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36818,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36818(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36816 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36818,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36833,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36831 in k36816 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36825(2,t2,C_SCHEME_UNDEFINED);}}

/* k36823 in k36816 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36311(t5,t4);}

/* k36787 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36793,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36793(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36791 in k36787 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36311(t7,t6);}

/* k36752 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36758,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36758(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36756 in k36752 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36311(t7,t6);}

/* k36717 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36723,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36723(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36721 in k36717 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36311(t7,t6);}

/* k36682 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36684,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36688,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36688(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36686 in k36682 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36311(t7,t6);}

/* k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_36311(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36311,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36314(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36514,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_36514(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36549,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_36549(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36584,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_36584(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36619,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_36619(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36648,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36648(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36646 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36648,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36663,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36661 in k36646 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36655(2,t2,C_SCHEME_UNDEFINED);}}

/* k36653 in k36646 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36314(t5,t4);}

/* k36617 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36623(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36621 in k36617 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36314(t7,t6);}

/* k36582 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36588(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36586 in k36582 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36314(t7,t6);}

/* k36547 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36553(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36551 in k36547 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36314(t7,t6);}

/* k36512 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36514,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36518,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36518(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36516 in k36512 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36314(t7,t6);}

/* k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_36314(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36314,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36317,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36317(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36344,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_36344(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[776]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36379,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[776]);}
else{
t7=t6;
f_36379(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36414,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_36414(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36449,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_36449(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36478,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36478(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36476 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36478,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36493,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36491 in k36476 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36485(2,t2,C_SCHEME_UNDEFINED);}}

/* k36483 in k36476 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36317(t5,t4);}

/* k36447 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36451 in k36447 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36317(t7,t6);}

/* k36412 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36418(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36416 in k36412 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36317(t7,t6);}

/* k36377 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36383,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36383(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36381 in k36377 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36317(t7,t6);}

/* k36342 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36344,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36348,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36348(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36346 in k36342 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36317(t7,t6);}

/* k36315 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_36317(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36317,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36320,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_36320(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k36318 in k36315 in k36312 in k36309 in k36306 in mp:ctrl in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7781(((C_word*)t0)[6],C_retrieve(lf[751]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35597(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_35597r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35597r(t0,t1,t2);}}

static void C_ccall f_35597r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35601,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_35601(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[765]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36147,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[118],lf[765]);}
else{
t27=t26;
f_36147(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36182,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[118],lf[767]);}
else{
t28=t27;
f_36182(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[774]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36217,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[118],lf[774]);}
else{
t29=t28;
f_36217(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[769]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36252,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[118],lf[769]);}
else{
t30=t29;
f_36252(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36281,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[109],t2);}
else{
t30=t29;
f_36281(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k36279 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36281,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36296,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36294 in k36279 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36288(2,t2,C_SCHEME_UNDEFINED);}}

/* k36286 in k36279 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35601(t5,t4);}

/* k36250 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36256,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36256(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36254 in k36250 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35601(t7,t6);}

/* k36215 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36221(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36219 in k36215 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35601(t7,t6);}

/* k36180 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36186(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36184 in k36180 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35601(t7,t6);}

/* k36145 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36151(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36149 in k36145 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35601(t7,t6);}

/* k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_35601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35601,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35604,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35604(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35977,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_35977(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36012,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_36012(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36047,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_36047(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36082,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_36082(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36111,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_36111(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36109 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36111,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36118,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36126,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36124 in k36109 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36118(2,t2,C_SCHEME_UNDEFINED);}}

/* k36116 in k36109 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35604(t5,t4);}

/* k36080 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36082,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36086,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36086(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36084 in k36080 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35604(t7,t6);}

/* k36045 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36051,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36051(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36049 in k36045 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35604(t7,t6);}

/* k36010 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36016,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_36016(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36014 in k36010 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_36016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35604(t7,t6);}

/* k35975 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35981,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35981(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35979 in k35975 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35604(t7,t6);}

/* k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_35604(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35604,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35607,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35607(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35807,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_35807(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35842,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_35842(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35877,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_35877(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35912,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_35912(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35941,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35941(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35939 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35941,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35956,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35954 in k35939 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35948(2,t2,C_SCHEME_UNDEFINED);}}

/* k35946 in k35939 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35607(t5,t4);}

/* k35910 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35916,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35916(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35914 in k35910 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35607(t7,t6);}

/* k35875 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35881,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35881(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35879 in k35875 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35607(t7,t6);}

/* k35840 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35846(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35844 in k35840 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35607(t7,t6);}

/* k35805 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35811(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35809 in k35805 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35607(t7,t6);}

/* k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_35607(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35607,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35610,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35610(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35637,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_35637(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35672,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_35672(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35707,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[774]);}
else{
t8=t7;
f_35707(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35742,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_35742(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35771,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35771(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35769 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35771,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35778,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35786,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35784 in k35769 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35778(2,t2,C_SCHEME_UNDEFINED);}}

/* k35776 in k35769 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35610(t5,t4);}

/* k35740 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35746,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35746(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35744 in k35740 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35610(t7,t6);}

/* k35705 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35711,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35711(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35709 in k35705 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35610(t7,t6);}

/* k35670 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35676,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35676(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35674 in k35670 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35610(t7,t6);}

/* k35635 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35641(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35639 in k35635 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35610(t7,t6);}

/* k35608 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_35610(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35610,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35613,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35613(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k35611 in k35608 in k35605 in k35602 in k35599 in mp:touch in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7781(((C_word*)t0)[6],C_retrieve(lf[750]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34890(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_34890r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34890r(t0,t1,t2);}}

static void C_ccall f_34890r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34894,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_34894(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[765]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35440,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[118],lf[765]);}
else{
t27=t26;
f_35440(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35475,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[118],lf[767]);}
else{
t28=t27;
f_35475(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[772]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35510,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[118],lf[772]);}
else{
t29=t28;
f_35510(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[769]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35545,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[118],lf[769]);}
else{
t30=t29;
f_35545(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35574,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[109],t2);}
else{
t30=t29;
f_35574(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k35572 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35574,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35589,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35587 in k35572 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35581(2,t2,C_SCHEME_UNDEFINED);}}

/* k35579 in k35572 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34894(t5,t4);}

/* k35543 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35549(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35547 in k35543 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34894(t7,t6);}

/* k35508 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35514(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35512 in k35508 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34894(t7,t6);}

/* k35473 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35479,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35479(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35477 in k35473 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34894(t7,t6);}

/* k35438 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35440,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35444(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35442 in k35438 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34894(t7,t6);}

/* k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_34894(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34894,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34897,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34897(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35270,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_35270(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35305,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_35305(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35340,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[772]);}
else{
t8=t7;
f_35340(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35375,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_35375(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35404,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35404(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35402 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35404,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35411,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35419,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35417 in k35402 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35411(2,t2,C_SCHEME_UNDEFINED);}}

/* k35409 in k35402 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34897(t5,t4);}

/* k35373 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35379(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35377 in k35373 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34897(t7,t6);}

/* k35338 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35344,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35344(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35342 in k35338 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34897(t7,t6);}

/* k35303 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35309(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35307 in k35303 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34897(t7,t6);}

/* k35268 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35274(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35272 in k35268 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34897(t7,t6);}

/* k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_34897(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34897,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34900(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35100,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_35100(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35135,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_35135(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35170,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[772]);}
else{
t8=t7;
f_35170(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35205,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_35205(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35234,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35234(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35232 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35234,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35241,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35249,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35247 in k35232 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35241(2,t2,C_SCHEME_UNDEFINED);}}

/* k35239 in k35232 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34900(t5,t4);}

/* k35203 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35209,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35209(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35207 in k35203 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34900(t7,t6);}

/* k35168 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35174,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35174(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35172 in k35168 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34900(t7,t6);}

/* k35133 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35139,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35139(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35137 in k35133 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34900(t7,t6);}

/* k35098 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35104,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35104(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35102 in k35098 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34900(t7,t6);}

/* k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_34900(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34900,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34903,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34903(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34930,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_34930(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34965,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_34965(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35000,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[772]);}
else{
t8=t7;
f_35000(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35035,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[769]);}
else{
t9=t8;
f_35035(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35064,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[109],((C_word*)t0)[7]);}
else{
t9=t8;
f_35064(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35062 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35064,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35079,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35077 in k35062 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35071(2,t2,C_SCHEME_UNDEFINED);}}

/* k35069 in k35062 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34903(t5,t4);}

/* k35033 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35039(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35037 in k35033 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34903(t7,t6);}

/* k34998 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_35004(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35002 in k34998 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_35004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34903(t7,t6);}

/* k34963 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34969(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34967 in k34963 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34903(t7,t6);}

/* k34928 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34934,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34934(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34932 in k34928 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34903(t7,t6);}

/* k34901 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_34903(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34903,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34906,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34906(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k34904 in k34901 in k34898 in k34895 in k34892 in mp:on in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7781(((C_word*)t0)[6],C_retrieve(lf[749]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34461(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_34461r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34461r(t0,t1,t2);}}

static void C_ccall f_34461r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34465,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_34465(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[765]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34768,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[765]);}
else{
t23=t22;
f_34768(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34803,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[767]);}
else{
t24=t23;
f_34803(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[769]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34838,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[769]);}
else{
t25=t24;
f_34838(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34867,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[109],t2);}
else{
t25=t24;
f_34867(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k34865 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34867,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34874,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34882,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34880 in k34865 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34874(2,t2,C_SCHEME_UNDEFINED);}}

/* k34872 in k34865 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34465(t5,t4);}

/* k34836 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34842(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34840 in k34836 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34465(t7,t6);}

/* k34801 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34807,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34807(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34805 in k34801 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34465(t7,t6);}

/* k34766 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34772,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34772(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34770 in k34766 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34465(t7,t6);}

/* k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_34465(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34465,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34468(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34633,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_34633(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34668,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_34668(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34703,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_34703(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34732,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_34732(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34730 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34732,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34747,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34745 in k34730 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34739(2,t2,C_SCHEME_UNDEFINED);}}

/* k34737 in k34730 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34468(t5,t4);}

/* k34701 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34707(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34705 in k34701 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34468(t7,t6);}

/* k34666 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34672(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34670 in k34666 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34468(t7,t6);}

/* k34631 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34637,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34637(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34635 in k34631 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34468(t7,t6);}

/* k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_34468(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34468,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34471,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34471(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34498,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_34498(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34533,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[767]);}
else{
t7=t6;
f_34533(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34568,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[769]);}
else{
t8=t7;
f_34568(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34597,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_34597(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34595 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34597,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34604,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34612,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34610 in k34595 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34604(2,t2,C_SCHEME_UNDEFINED);}}

/* k34602 in k34595 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34471(t5,t4);}

/* k34566 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34572,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34572(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34570 in k34566 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34471(t7,t6);}

/* k34531 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34537(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34535 in k34531 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34471(t7,t6);}

/* k34496 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34502,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34502(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34500 in k34496 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34471(t7,t6);}

/* k34469 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_34471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34471,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34474,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34474(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k34472 in k34469 in k34466 in k34463 in mp:off in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   ffi_mp_send_data");
f_7781(((C_word*)t0)[5],C_retrieve(lf[748]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33406(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+86)){
C_save_and_reclaim((void*)tr2r,(void*)f_33406r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33406r(t0,t1,t2);}}

static void C_ccall f_33406r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word *a=C_alloc(86);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=lf[763];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(60);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[764];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t2;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33410,a[2]=t22,a[3]=t20,a[4]=t18,a[5]=t16,a[6]=t26,a[7]=t14,a[8]=t2,a[9]=t24,a[10]=t12,a[11]=t10,a[12]=t8,a[13]=t6,a[14]=t4,a[15]=t1,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_33410(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[765]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34269,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t14,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t31=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[118],lf[765]);}
else{
t31=t30;
f_34269(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[766]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34304,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t16,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t32=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[118],lf[766]);}
else{
t32=t31;
f_34304(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(C_word)C_eqp(t28,lf[767]);
if(C_truep(t31)){
t32=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34339,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t18,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t33=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t33))(4,t33,t32,lf[118],lf[767]);}
else{
t33=t32;
f_34339(2,t33,C_SCHEME_UNDEFINED);}}
else{
t32=(C_word)C_eqp(t28,lf[768]);
if(C_truep(t32)){
t33=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34374,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t34=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t34))(4,t34,t33,lf[118],lf[768]);}
else{
t34=t33;
f_34374(2,t34,C_SCHEME_UNDEFINED);}}
else{
t33=(C_word)C_eqp(t28,lf[769]);
if(C_truep(t33)){
t34=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34409,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t12,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t35=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[118],lf[769]);}
else{
t35=t34;
f_34409(2,t35,C_SCHEME_UNDEFINED);}}
else{
t34=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34438,a[2]=t27,a[3]=t14,a[4]=t4,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t35=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[109],t2);}
else{
t35=t34;
f_34438(2,t35,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34436 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34438,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34453,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34451 in k34436 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34445(2,t2,C_SCHEME_UNDEFINED);}}

/* k34443 in k34436 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33410(t5,t4);}

/* k34407 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34413,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34413(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34411 in k34407 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33410(t7,t6);}

/* k34372 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34378(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34376 in k34372 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33410(t7,t6);}

/* k34337 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34343(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34341 in k34337 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33410(t7,t6);}

/* k34302 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34308,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34308(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34306 in k34302 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33410(t7,t6);}

/* k34267 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34273(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34271 in k34267 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33410(t7,t6);}

/* k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33410(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33410,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33413(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34064,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_34064(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34099,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[766]);}
else{
t7=t6;
f_34099(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34134,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[767]);}
else{
t8=t7;
f_34134(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34169,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[768]);}
else{
t9=t8;
f_34169(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34204,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[769]);}
else{
t10=t9;
f_34204(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34233,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_34233(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34231 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34233,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34240,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34248,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34246 in k34231 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34240(2,t2,C_SCHEME_UNDEFINED);}}

/* k34238 in k34231 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33413(t5,t4);}

/* k34202 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34208,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34208(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34206 in k34202 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33413(t7,t6);}

/* k34167 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34173(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34171 in k34167 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33413(t7,t6);}

/* k34132 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34138,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34138(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34136 in k34132 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33413(t7,t6);}

/* k34097 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34103(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34101 in k34097 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33413(t7,t6);}

/* k34062 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34068(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34066 in k34062 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33413(t7,t6);}

/* k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33413(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33413,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33416(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33859,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_33859(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33894,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[766]);}
else{
t7=t6;
f_33894(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33929,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[767]);}
else{
t8=t7;
f_33929(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33964,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[768]);}
else{
t9=t8;
f_33964(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33999,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[769]);}
else{
t10=t9;
f_33999(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34028,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_34028(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34026 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34028,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34043,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34041 in k34026 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34035(2,t2,C_SCHEME_UNDEFINED);}}

/* k34033 in k34026 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33416(t5,t4);}

/* k33997 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_34003(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34001 in k33997 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_34003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33416(t7,t6);}

/* k33962 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33968,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33968(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33966 in k33962 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33416(t7,t6);}

/* k33927 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33933(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33931 in k33927 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33416(t7,t6);}

/* k33892 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33898,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33898(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33896 in k33892 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33416(t7,t6);}

/* k33857 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33863,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33863(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33861 in k33857 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33416(t7,t6);}

/* k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33416(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33416,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33419,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33419(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33654,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_33654(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33689,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[766]);}
else{
t7=t6;
f_33689(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33724,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[767]);}
else{
t8=t7;
f_33724(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33759,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[768]);}
else{
t9=t8;
f_33759(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33794,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[769]);}
else{
t10=t9;
f_33794(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33823,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_33823(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33821 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33823,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33838,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33836 in k33821 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33830(2,t2,C_SCHEME_UNDEFINED);}}

/* k33828 in k33821 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33419(t5,t4);}

/* k33792 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33798(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33796 in k33792 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33419(t7,t6);}

/* k33757 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33763(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33761 in k33757 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33419(t7,t6);}

/* k33722 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33728(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33726 in k33722 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33419(t7,t6);}

/* k33687 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33693(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33691 in k33687 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33419(t7,t6);}

/* k33652 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33658,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33658(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33656 in k33652 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33419(t7,t6);}

/* k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33419(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[56],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33419,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33422,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],a[9]=((C_word*)t0)[15],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33422(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33449,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[765]);}
else{
t6=t5;
f_33449(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33484,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[766]);}
else{
t7=t6;
f_33484(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33519,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[767]);}
else{
t8=t7;
f_33519(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[768]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33554,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[768]);}
else{
t9=t8;
f_33554(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[769]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33589,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[769]);}
else{
t10=t9;
f_33589(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33618,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[109],((C_word*)t0)[8]);}
else{
t10=t9;
f_33618(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33616 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33618,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33633,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33631 in k33616 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33625(2,t2,C_SCHEME_UNDEFINED);}}

/* k33623 in k33616 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33422(t5,t4);}

/* k33587 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33593(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33591 in k33587 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33422(t7,t6);}

/* k33552 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33558(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33556 in k33552 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33422(t7,t6);}

/* k33517 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33523,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33523(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33521 in k33517 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33422(t7,t6);}

/* k33482 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33488,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33488(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33486 in k33482 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33422(t7,t6);}

/* k33447 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33451 in k33447 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33422(t7,t6);}

/* k33420 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33422(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33422,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33425,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33425(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k33423 in k33420 in k33417 in k33414 in k33411 in k33408 in mp:midi in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a;
t2=((C_word*)t0)[7];
t3=((C_word*)((C_word*)t0)[6])[1];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=(C_word)C_i_foreign_flonum_argumentp(t7);
t13=t2;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub397(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12));}

/* mp:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33400(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33400,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7749,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7749(2,t4,C_SCHEME_FALSE);}}

/* k7747 in mp:open-output-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub387(C_SCHEME_UNDEFINED,t1));}

/* mp:open-input in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33247(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33247,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33254,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_33254(t9,(C_word)stub375(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_33254(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_33254(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_33254(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_33254(t4,C_SCHEME_FALSE);}}

/* k33252 in mp:open-input in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33254(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[761],((C_word*)t0)[2]);}}

/* mp:open-output in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33192(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33192,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33199,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_33199(t9,(C_word)stub371(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_33199(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_33199(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_33199(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_33199(t4,C_SCHEME_FALSE);}}

/* k33197 in mp:open-output in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_33199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[760],((C_word*)t0)[2]);}}

/* mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32945(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_32945r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32945r(t0,t1,t2);}}

static void C_ccall f_32945r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32949,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t1,a[8]=t6,a[9]=t4,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_32949(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[758]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33105,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[758]);}
else{
t19=t18;
f_33105(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[759]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33140,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[759]);}
else{
t20=t19;
f_33140(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33169,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[109],t2);}
else{
t20=t19;
f_33169(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k33167 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33169,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33176,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33184,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33182 in k33167 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33176(2,t2,C_SCHEME_UNDEFINED);}}

/* k33174 in k33167 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32949(t5,t4);}

/* k33138 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33142 in k33138 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32949(t7,t6);}

/* k33103 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33109,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33109(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33107 in k33103 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32949(t7,t6);}

/* k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32949,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32952,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_32952(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[758]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33005,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[758]);}
else{
t6=t5;
f_33005(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[759]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33040,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[759]);}
else{
t7=t6;
f_33040(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33069,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_33069(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k33067 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33069,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33084,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33082 in k33067 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33076(2,t2,C_SCHEME_UNDEFINED);}}

/* k33074 in k33067 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32952(t5,t4);}

/* k33038 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33042 in k33038 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32952(t7,t6);}

/* k33003 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_33009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33007 in k33003 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_33009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32952(t7,t6);}

/* k32950 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32952,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32955,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32955(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k32953 in k32950 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32955,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[4])[1])?((C_word*)((C_word*)t0)[3])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32968,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   mp:open-output");
f_33192(t3,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 88   mp:open-output");
f_33192(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 88   mp:open-input");
f_33247(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}}}

/* k32966 in k32953 in k32950 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32972,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 88   mp:open-input");
f_33247(t2,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]));}

/* k32970 in k32966 in k32953 in k32950 in k32947 in mp:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32972,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,2,((C_word*)t0)[2],t1));}

/* open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32874(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_32874r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32874r(t0,t1,t2,t3);}}

static void C_ccall f_32874r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32878,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 88   ffi_pathname_type");
f_7614(t4,t2);}

/* k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32878,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32881,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)stub288(C_SCHEME_UNDEFINED))){
C_trace("ChickenBridge.scm: 88   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[747],((C_word*)t0)[3]);}
else{
t5=t4;
f_32881(2,t5,C_SCHEME_UNDEFINED);}}

/* k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7669,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t3)){
t5=(C_word)C_i_foreign_string_argumentp(t3);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7669(2,t5,C_SCHEME_FALSE);}}

/* k7667 in k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)stub349(C_SCHEME_UNDEFINED,t1))){
t2=((C_word*)t0)[3];
f_32884(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 88   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[746],((C_word*)t0)[2]);}}

/* k32882 in k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32887,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_string_equal_p(((C_word*)t0)[3],lf[737]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32896,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[738],"mp:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t3,lf[739]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[740]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[741]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32906,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t4,C_retrieve2(lf[742],"snd:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t4=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t4,lf[743]))?C_SCHEME_TRUE:C_SCHEME_FALSE))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32916,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[744]),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 88   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[745],((C_word*)t0)[4]);}}}}

/* k32914 in k32882 in k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(3));
t3=((C_word*)t0)[2];
f_32887(2,t3,t2);}

/* k32904 in k32882 in k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(2));
t3=((C_word*)t0)[2];
f_32887(2,t3,t2);}

/* k32894 in k32882 in k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_32887(2,t3,t2);}

/* k32885 in k32882 in k32879 in k32876 in open-file in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=(C_word)stub293(C_SCHEME_UNDEFINED,t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}

/* ports in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32850,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t4=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,(C_word)stub367(t3),C_fix(0));}

/* k32848 in ports in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 88   read-from-string");
f_7031(((C_word*)t0)[2],t1);}

/* sal:open in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32822(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32822,2,t0,t1);}
C_trace("ChickenBridge.scm: 87   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[734]);}

/* sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32773(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32773,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32777,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=t2;
if(C_truep((C_word)C_i_stringp(t4))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7655,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}
else{
t6=t5;
f_7655(2,t6,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[732],t4);}}

/* k7653 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_32777(2,t2,(C_word)stub343(C_SCHEME_UNDEFINED,t1));}

/* k32775 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32780,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32796,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32820,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[728],((C_word*)t0)[2],lf[729]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32793,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   string-append");
t4=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[730],((C_word*)t0)[2],lf[731]);}}

/* k32791 in k32775 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32818 in k32775 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32794 in k32775 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pathname-type");
f_25093(t2,((C_word*)t0)[2]);}

/* k32814 in k32794 in k32775 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32816,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(lf[725],t1))){
C_trace("ChickenBridge.scm: 87   load-sal-file");
t2=C_retrieve(lf[726]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32812,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   full-pathname");
f_25135(t2,((C_word*)t0)[2]);}}

/* k32810 in k32814 in k32794 in k32775 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   load");
t2=C_retrieve(lf[727]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32778 in k32775 in sal:load in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32764(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32764,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32768,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   chdir");
t4=C_retrieve(lf[564]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k32766 in sal:chdir in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32611(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_32611r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32611r(t0,t1,t2);}}

static void C_ccall f_32611r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32614,a[2]=t4,a[3]=((C_word)li478),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32733,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32738,a[2]=t4,a[3]=t8,a[4]=((C_word)li479),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_32738(t10,t6,t2);}

/* do5560 in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32738(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32738,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 87   print-output");
t3=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[722]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32751,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_32614(t5,t3,t4,C_fix(0),C_SCHEME_FALSE);}}

/* k32749 in do5560 in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32738(t3,((C_word*)t0)[2],t2);}

/* k32731 in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32614(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32614,NULL,5,t0,t1,t2,t3,t4);}
t5=t2;
if(C_truep(t5)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 87   print-output");
t6=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[715]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32642,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   print-output");
t7=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[718]);}
else{
t6=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 87   print-output");
t7=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,lf[719]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32714,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   number->string");
C_number_to_string(3,0,t7,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 87   print-output");
t7=C_retrieve(lf[60]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t4);}
else{
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32730,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   format");
t8=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t8))(5,t8,t7,C_SCHEME_FALSE,lf[720],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 87   print-output");
t6=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[721]);}}

/* k32728 in printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32712 in printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32640 in printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32645,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32650,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li477),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_32650(t6,t2,((C_word*)t0)[2]);}

/* do5552 in k32640 in printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32650(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32650,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32660,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 87   printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_32614(t6,t3,t4,t5,C_SCHEME_TRUE);}}

/* k32658 in do5552 in k32640 in printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_32663(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 87   print-output");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[717]);}}

/* k32661 in k32658 in do5552 in k32640 in printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32650(t3,((C_word*)t0)[2],t2);}

/* k32643 in k32640 in printer in sal:print in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-output");
t2=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[716]);}

/* tokenize in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32452(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32452,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32456,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t3)[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32474,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)t3)[1];
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7701,a[2]=t5,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t9=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t10=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}
else{
t9=t8;
f_7701(2,t9,C_SCHEME_FALSE);}}
else{
t5=t4;
f_32456(t5,C_SCHEME_UNDEFINED);}}

/* k7699 in tokenize in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub361(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* k32472 in tokenize in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   read-from-string");
f_7031(t2,t1);}

/* k32476 in k32472 in tokenize in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32456(t3,t2);}

/* k32454 in tokenize in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32456(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[643],"list->token"),((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}}

/* sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31968(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+59)){
C_save_and_reclaim((void*)tr3r,(void*)f_31968r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31968r(t0,t1,t2,t3);}}

static void C_ccall f_31968r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word *a=C_alloc(59);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(36608);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=t3;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31972,a[2]=t15,a[3]=t13,a[4]=t19,a[5]=t11,a[6]=t3,a[7]=t17,a[8]=t9,a[9]=t7,a[10]=t2,a[11]=t5,a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t17)[1]))){
t21=t20;
f_31972(t21,C_SCHEME_UNDEFINED);}
else{
t21=(C_word)C_i_car(((C_word*)t17)[1]);
t22=(C_word)C_eqp(t21,lf[711]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32330,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[711]);}
else{
t24=t23;
f_32330(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t21,lf[712]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32365,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t25=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[118],lf[712]);}
else{
t25=t24;
f_32365(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(C_word)C_eqp(t21,lf[713]);
if(C_truep(t24)){
t25=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32400,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t15,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t26=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[118],lf[713]);}
else{
t26=t25;
f_32400(2,t26,C_SCHEME_UNDEFINED);}}
else{
t25=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32429,a[2]=t20,a[3]=t11,a[4]=t5,a[5]=t17,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t26=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[109],t3);}
else{
t26=t25;
f_32429(2,t26,C_SCHEME_UNDEFINED);}}}}}}

/* k32427 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32429,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32436,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32444,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32442 in k32427 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32436(2,t2,C_SCHEME_UNDEFINED);}}

/* k32434 in k32427 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31972(t5,t4);}

/* k32398 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32404,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32404(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32402 in k32398 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31972(t7,t6);}

/* k32363 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32369,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32369(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32367 in k32363 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31972(t7,t6);}

/* k32328 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32334(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32332 in k32328 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31972(t7,t6);}

/* k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31972(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31972,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31975(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[711]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32195,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[711]);}
else{
t6=t5;
f_32195(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[712]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32230,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[712]);}
else{
t7=t6;
f_32230(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[713]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32265,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[713]);}
else{
t8=t7;
f_32265(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32294,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_32294(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32292 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32294,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32309,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32307 in k32292 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32301(2,t2,C_SCHEME_UNDEFINED);}}

/* k32299 in k32292 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31975(t5,t4);}

/* k32263 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32269(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32267 in k32263 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31975(t7,t6);}

/* k32228 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32234,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32234(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32232 in k32228 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31975(t7,t6);}

/* k32193 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32199(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32197 in k32193 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31975(t7,t6);}

/* k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31975(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31975,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31978,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31978(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[711]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32060,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[711]);}
else{
t6=t5;
f_32060(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[712]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32095,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[712]);}
else{
t7=t6;
f_32095(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[713]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32130,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[713]);}
else{
t8=t7;
f_32130(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32159,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_32159(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32157 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32159,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32174,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32172 in k32157 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32166(2,t2,C_SCHEME_UNDEFINED);}}

/* k32164 in k32157 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31978(t5,t4);}

/* k32128 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32134(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32132 in k32128 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31978(t7,t6);}

/* k32093 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32099(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32097 in k32093 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31978(t7,t6);}

/* k32058 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_32064(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32062 in k32058 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31978(t7,t6);}

/* k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31978(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31978,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31981,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31981(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_not(((C_word*)((C_word*)t0)[5])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32032,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   tokenize");
f_32452(t5,((C_word*)t0)[4]);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32036,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   tokenize");
f_32452(t5,((C_word*)((C_word*)t0)[5])[1]);}}

/* k32034 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31984(t3,t2);}

/* k32030 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31984(t3,t2);}

/* k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31984,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31987,a[2]=((C_word*)t0)[6],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_31987(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31996,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29772,a[2]=t5,a[3]=t4,a[4]=((C_word)li474),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   call/cc");
t8=*((C_word*)lf[709]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t3,t7);}}

/* a29771 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29772(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29772,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29778,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li472),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29785,a[2]=t2,a[3]=((C_word)li473),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a29784 in a29771 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29785,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29792,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_29792(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_29792(t6,C_SCHEME_FALSE);}}

/* k29790 in a29784 in a29771 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29792,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   add-emit-info");
f_29372(t2,lf[706],lf[707],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 87   make-parse-error");
f_29198(((C_word*)t0)[4],lf[708],C_retrieve2(lf[683],"*maxtokpos*"));}}

/* k29797 in k29790 in a29784 in a29771 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29777 in a29771 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29778,2,t0,t1);}
t2=lf[683]=C_fix(0);;
C_trace("ChickenBridge.scm: 87   parser");
f_29810(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31996,2,t0,t1);}
t2=t1;
if(C_truep((C_word)C_i_structurep(t2,lf[658]))){
t3=((C_word*)t0)[4];
t4=t1;
t5=(C_word)C_i_string_length(t3);
t6=(C_word)C_i_check_structure(t4,lf[658]);
t7=(C_word)C_i_block_ref(t4,C_fix(2));
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32493,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=t7,a[7]=t12,a[8]=t10,tmp=(C_word)a,a+=9,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32580,a[2]=t3,a[3]=t15,a[4]=t10,a[5]=((C_word)li471),tmp=(C_word)a,a+=6,tmp));
t17=((C_word*)t15)[1];
f_32580(t17,t13,C_SCHEME_FALSE);}
else{
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 87   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[3],C_SCHEME_TRUE,lf[703],t1);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32018,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   interaction-environment");
t4=C_retrieve(lf[705]);
((C_proc2)C_retrieve_proc(t4))(2,t4,t3);}}}

/* k32016 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   eval");
t2=C_retrieve(lf[704]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do5524 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32580(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32580,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32590,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_32590(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_32590(t11,t10);}}}

/* k32588 in do5524 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32590(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_32580(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32493,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32501,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32550,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li470),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_32550(t9,t5,C_SCHEME_FALSE);}

/* do5531 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32550(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32550,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32560,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_32560(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_32560(t11,t10);}}}

/* k32558 in do5531 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_32560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_32550(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k32499 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32504,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32511,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_check_structure(((C_word*)t0)[6],lf[658]);
t5=(C_word)C_i_block_ref(((C_word*)t0)[6],C_fix(1));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=t3,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   make-string");
t7=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(1),C_make_character(10));}

/* k32517 in k32499 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32523,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   substring");
t3=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k32521 in k32517 in k32499 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32527,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   make-string");
t3=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k32525 in k32521 in k32517 in k32499 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32527,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32534,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 87   make-string");
t5=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k32532 in k32525 in k32521 in k32517 in k32499 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32534,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 87   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[702],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32509 in k32499 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   print-error");
t2=C_retrieve(lf[59]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32502 in k32499 in k32491 in k31994 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_32504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(2,0,((C_word*)t0)[2]);}

/* k31985 in k31982 in k31979 in k31976 in k31973 in k31970 in sal in k31964 in k31961 in k31958 in k31955 in k31952 in k31421 in k31418 in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}

/* sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30899,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30906,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_30912,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t33,t34,C_fix(23296));}

/* k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30912,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30916,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_30962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,t3,C_fix(10756));}}

/* k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30962,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30966,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_31059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,t3,C_fix(22784));}}

/* k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31059,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31063,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31127,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31127,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31134,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31384,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_31134(t8,t7);}}

/* k31382 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31134(t3,t2);}

/* k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31134(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31134,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31137,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31372,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k31370 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31137(t3,t2);}

/* k31321 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31323,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k31327 in k31321 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31329,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31353,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t3=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_31137(t4,t3);}}

/* k31351 in k31327 in k31321 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31353,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31337,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31349,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t6=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k31347 in k31351 in k31327 in k31321 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k31335 in k31351 in k31327 in k31321 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31137(t3,t2);}

/* k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31137,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_31140(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31299,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[700]);}}

/* k31297 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31303,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31301 in k31297 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31140(t4,t3);}

/* k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31140(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31140,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31143,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_31143(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31276,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[699]);}}

/* k31274 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31280,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31278 in k31274 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31143(t4,t3);}

/* k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31143(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31143,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_31146(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31253,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[698]);}}
else{
t3=t2;
f_31146(t3,C_SCHEME_UNDEFINED);}}

/* k31251 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31257,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31255 in k31251 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31146(t4,t3);}

/* k31144 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31146(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31146,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31149,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31178,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_31149(t7,t6);}}

/* k31176 in k31144 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31178,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[181],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31149(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k31194 in k31176 in k31144 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31196,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[182],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31149(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k31212 in k31194 in k31176 in k31144 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31214,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[175],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31149(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31232,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k31230 in k31212 in k31194 in k31176 in k31144 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31232,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[178],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[175],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31149(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_31149(t2,C_SCHEME_UNDEFINED);}}

/* k31147 in k31144 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_31149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31149,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31153,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k31151 in k31147 in k31144 in k31141 in k31138 in k31135 in k31132 in k31125 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30906(t3,t2);}

/* k31061 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31063,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31067,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k31065 in k31061 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31067,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[697]);}

/* k31069 in k31065 in k31061 in k31057 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_31071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31071,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[104],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[63],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30906(t12,t11);}

/* k30964 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30966,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30970,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k30968 in k30964 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30970,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 87   fifth");
t4=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k30972 in k30968 in k30964 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30974,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30977,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30993,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_30977(t6,t5);}}

/* k30991 in k30972 in k30968 in k30964 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30993,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[696]);}

/* k30995 in k30991 in k30972 in k30968 in k30964 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30997,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[216],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[119],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30977(t12,t11);}

/* k30975 in k30972 in k30968 in k30964 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30977,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30981,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 87   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k30979 in k30975 in k30972 in k30968 in k30964 in k30960 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30906(t3,t2);}

/* k30914 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30916,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[695]);}

/* k30918 in k30914 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30920,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[694]);}

/* k30922 in k30918 in k30914 in k30910 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30924,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[181],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_30906(t10,t9);}

/* k30904 in sal-parse-stepping in k30895 in k30892 in k30889 in k30886 in k30883 in k30880 in k30877 in k30874 in k30871 in k30868 in k30865 in k30862 in k30859 in k30856 in k30853 in k30850 in k30847 in k30844 in k30841 in k30838 in k30835 in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30906(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30721(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30721,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30733,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li467),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_30733(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30733(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30733,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30752,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   is-op?");
f_30700(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k30750 in do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30752,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30755,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30770,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li466),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_30770(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_30755(2,t5,t4);}}

/* do5090 in k30750 in do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30770(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30770,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30784,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30798,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   reverse");
t12=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30802,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 87   is-op?");
f_30700(t10,t11);}}

/* k30800 in do5090 in k30750 in do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30802,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30805,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_30805(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_30805(t10,t9);}}

/* k30803 in k30800 in do5090 in k30750 in do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_30770(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k30796 in do5090 in k30750 in do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   inf->pre");
f_30721(((C_word*)t0)[2],t1);}

/* k30782 in do5090 in k30750 in do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30784,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k30753 in k30750 in do5088 in inf->pre in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_30733(t2,((C_word*)t0)[2]);}

/* is-op? in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30700(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30700,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30707,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   token-unit?");
f_29312(t3,t2);}

/* k30705 in is-op? in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30707,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30710,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29267(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k30708 in k30705 in is-op? in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30716,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   SalOpType?");
f_30477(t2,t1);}

/* k30714 in k30708 in k30705 in is-op? in k30696 in k30693 in k30690 in k30687 in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
C_trace("ChickenBridge.scm: 87   logand");
t4=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(255));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30635(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30635,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30644,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li463),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_30644(t10,t1,t2);}

/* do5054 in remove-token-type in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30644(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30644,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30657,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30667,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   token-unit-type=?");
f_29328(t4,t5,((C_word*)t0)[2]);}}

/* k30665 in do5054 in remove-token-type in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30667,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30657(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_30657(t7,t6);}}

/* k30655 in do5054 in remove-token-type in k30631 in k30628 in k30625 in k30622 in k30619 in k30616 in k30613 in k30610 in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30644(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30591(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30591,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30599,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ash");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_fix(-8));}

/* k30597 in SalType=? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30603,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   ash");
t3=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(-8));}

/* k30601 in k30597 in SalType=? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* SalRuleType? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30579(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30579,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30477(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30477,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30429(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30429,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29810(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29810,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29814,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 87   format");
t10=C_retrieve(lf[431]);
((C_proc7)C_retrieve_proc(t10))(7,t10,t9,C_SCHEME_TRUE,lf[689],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_29814(2,t10,C_SCHEME_UNDEFINED);}}

/* k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   null-tokens?");
f_28944(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29820,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_29820(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30235,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30239,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30243,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   first-token");
f_28932(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k30241 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   token-position");
f_28900(((C_word*)t0)[2],t1);}

/* k30237 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   max");
t2=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[683],"*maxtokpos*"),t1);}

/* k30233 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[683],t1);
t3=((C_word*)t0)[2];
f_29820(t3,t2);}

/* k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29820(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29820,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29829,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   pattern-value");
t4=C_retrieve2(lf[352],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29943,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29080(t3,((C_word*)t0)[8]);}}

/* k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29943,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29125,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29080(t4,t3);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[688],((C_word*)t0)[2]);}}

/* k29123 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29949(t3,(C_word)C_eqp(t2,lf[245]));}
else{
t2=((C_word*)t0)[2];
f_29949(t2,C_SCHEME_FALSE);}}

/* k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29949,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29958,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 87   pattern-nsubs");
f_29098(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30037,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29141,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29080(t5,t4);}}

/* k29139 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30037(t3,(C_word)C_eqp(t2,lf[268]));}
else{
t2=((C_word*)t0)[2];
f_30037(t2,C_SCHEME_FALSE);}}

/* k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30037(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30037,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30043,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 87   pattern-nsubs");
f_29098(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   pattern-zero-or-more?");
f_29166(t2,((C_word*)t0)[2]);}}

/* k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_30110(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29157,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29080(t4,t3);}}

/* k29155 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30110(t3,(C_word)C_eqp(t2,lf[179]));}
else{
t2=((C_word*)t0)[2];
f_30110(t2,C_SCHEME_FALSE);}}

/* k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30110,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30116,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li455),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_30139(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29189,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29080(t4,t3);}}

/* k29187 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30188(t3,(C_word)C_eqp(t2,lf[687]));}
else{
t2=((C_word*)t0)[2];
f_30188(t2,C_SCHEME_FALSE);}}

/* k30186 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30188(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30188,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30197,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30208,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li456),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30214,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li457),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[686],t3);}}

/* a30213 in k30186 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30214,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30207 in k30186 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30208,2,t0,t1);}
C_trace("ChickenBridge.scm: 87   parser");
f_29810(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30195 in k30186 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4791 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30139(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30139,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_30149(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 87   null-tokens?");
f_28944(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k30147 in do4791 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30149,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30152,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li453),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30175,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li454),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a30174 in k30147 in do4791 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30175(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30175,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30168 in k30147 in do4791 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30169,2,t0,t1);}
C_trace("ChickenBridge.scm: 87   parser");
f_29810(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30150 in k30147 in do4791 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30155,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30162,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_30155(t3,C_SCHEME_UNDEFINED);}}

/* k30160 in k30150 in k30147 in do4791 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30162,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_30155(t6,t5);}

/* k30153 in k30150 in k30147 in do4791 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30155(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_30139(t2,((C_word*)t0)[2]);}

/* k30114 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30119,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30125,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   pattern-zero-or-more?");
f_29166(t3,((C_word*)t0)[2]);}

/* k30123 in k30114 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_30119(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_30119(t5,t4);}}

/* k30117 in k30114 in k30108 in k30105 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30119(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k30041 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30046,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_30061,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li452),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_30061(t6,t2,C_fix(0));}

/* do4771 in k30041 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_30061(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30061,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30071,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30080,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li450),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30094,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li451),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a30093 in do4771 in k30041 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30094(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30094,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30079 in do4771 in k30041 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30088,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   pattern-sub");
f_29108(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30086 in a30079 in do4771 in k30041 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30088,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 87   parser");
f_29810(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30069 in do4771 in k30041 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30071,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_30061(t3,((C_word*)t0)[2],t2);}

/* k30044 in k30041 in k30035 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29958,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29961,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29980,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li449),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_29980(t8,t4,C_fix(0));}

/* do4749 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29980(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29980,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29993,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30013,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li447),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30027,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li448),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a30026 in do4749 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30027(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30027,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30012 in do4749 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30021,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   pattern-sub");
f_29108(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30019 in a30012 in do4749 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_30021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30021,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 87   parser");
f_29810(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29991 in do4749 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29996,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_29996(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_29996(t5,t4);}}

/* k29994 in k29991 in do4749 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29996(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29996,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_29980(t3,((C_word*)t0)[2],t2);}

/* k29959 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29964,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_29964(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29978,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   reverse");
t5=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k29976 in k29959 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29964(t3,t2);}

/* k29962 in k29959 in k29956 in k29947 in k29941 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29964(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   SalTokenType?");
f_30429(t2,t1);}

/* k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29835,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29841,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   null-tokens?");
f_28944(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29893,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 87   SalRuleType?");
f_30579(t2,((C_word*)t0)[5]);}}

/* k29891 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29893,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 87   get-rule");
f_29059(t2,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[685],((C_word*)t0)[2]);}}

/* k29894 in k29891 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29896,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[649]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[649]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li445),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29917,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li446),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a29916 in k29894 in k29891 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29917(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29917,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29928,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 87   func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_29928(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k29926 in a29916 in k29894 in k29891 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29906 in k29894 in k29891 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29907,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 87   parser");
f_29810(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29839 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29841,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   first-token");
f_28932(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k29849 in k29839 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29857,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29887,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   token-type");
f_28864(t3,t1);}

/* k29885 in k29849 in k29839 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k29855 in k29849 in k29839 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29857,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29864,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29872,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   token-type");
f_28864(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k29870 in k29855 in k29849 in k29839 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29872,2,t0,t1);}
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[640]);
t4=(C_word)C_i_block_ref(t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29880,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-position");
f_28900(t5,((C_word*)t0)[3]);}

/* k29878 in k29870 in k29855 in k29849 in k29839 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29862 in k29855 in k29849 in k29839 in k29833 in k29827 in k29818 in k29815 in k29812 in parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 87   values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29706(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29706,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29708,a[2]=t2,a[3]=((C_word)li443),tmp=(C_word)a,a+=4,tmp));}

/* f_29708 in simple-unit-emitter in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29708(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29708,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29712,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29756,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t6,t2);}

/* k29754 */
static void C_ccall f_29756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k29710 */
static void C_ccall f_29712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29712,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29715,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_29715(t9,t8);}
else{
t6=t5;
f_29715(t6,C_SCHEME_UNDEFINED);}}

/* k29713 in k29710 */
static void C_fcall f_29715(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29715,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29720,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li442),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_29720(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do4706 in k29713 in k29710 */
static void C_fcall f_29720(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29720,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29741,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k29739 in do4706 in k29713 in k29710 */
static void C_ccall f_29741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_29720(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29698(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29698,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29700,a[2]=t2,a[3]=((C_word)li440),tmp=(C_word)a,a+=4,tmp));}

/* f_29700 in simple-unit-parser in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29700(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29700,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 87   make-parse-unit");
f_29246(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29521(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_29521r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29521r(t0,t1,t2);}}

static void C_ccall f_29521r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29529,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[231]+1),t2);}

/* k29527 in != in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29490(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29490,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29507,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 87   emit");
f_29457(t5,t6,t3,t4);}}

/* k29505 in emit-list in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29511,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 87   emit-list");
f_29490(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29509 in k29505 in emit-list in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29511,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29457(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29457,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29464,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   token-unit?");
f_29312(t5,t2);}

/* k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29464,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29535,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29267(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29351,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit?");
f_29252(t4,t3);}}

/* k29349 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29351,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29358,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29267(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_29473(2,t2,C_SCHEME_FALSE);}}

/* k29356 in k29349 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalRuleType?");
f_30579(((C_word*)t0)[2],t1);}

/* k29471 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29473,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29673,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29696,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29267(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 87   emit-list");
f_29490(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[678],((C_word*)t0)[4]);}}}

/* k29694 in k29471 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   get-rule");
f_29059(((C_word*)t0)[2],t1);}

/* k29671 in k29471 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29673,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[649]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 87   meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t4,((C_word*)t0)[4]);}}

/* k29687 in k29671 in k29471 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   emit");
f_29457(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-parsed");
f_29285(t2,((C_word*)t0)[2]);}

/* k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29538,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 87   string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 87   string->symbol");
t8=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalOpType?");
f_30477(t8,((C_word*)t0)[4]);}}}

/* k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29562,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29613,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29619,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k29617 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29619,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k29623 in k29617 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29625,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k29632 in k29623 in k29617 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29634,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29643,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k29641 in k29632 in k29623 in k29617 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29643,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k29650 in k29641 in k29632 in k29623 in k29617 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29652,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[674],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29661,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k29659 in k29650 in k29641 in k29632 in k29623 in k29617 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[675],((C_word*)t0)[2]);}}

/* k29611 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k29566 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29568,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[452]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29574,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k29572 in k29566 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29574,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[473]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29580,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k29578 in k29572 in k29566 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29580,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[17]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k29584 in k29578 in k29572 in k29566 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29586,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[245]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k29590 in k29584 in k29578 in k29572 in k29566 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29592,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[268]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k29596 in k29590 in k29584 in k29578 in k29572 in k29566 in k29560 in k29536 in k29533 in k29462 in emit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[211]);}
else{
C_trace("ChickenBridge.scm: 87   string->symbol");
t2=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29439(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29439,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29446,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_29446(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 87   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[672],t2);}}

/* k29444 in set-emit-info! in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29372(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29372,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29360(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29360,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29328(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29328,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29335,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 87   token-unit?");
f_29312(t4,t2);}

/* k29333 in token-unit-type=? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29335,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29267(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29340 in k29333 in token-unit-type=? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalType=?");
f_30591(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29312(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29312,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29319,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit?");
f_29252(t3,t2);}

/* k29317 in token-unit? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29319,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29326,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   parse-unit-type");
f_29267(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29324 in k29317 in token-unit? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 87   SalTokenType?");
f_30429(((C_word*)t0)[2],t1);}

/* parse-unit-position in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29303(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29303,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[660]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29285(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29285,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[660]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29267(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29267,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[660]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29252(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29252,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[660]));}

/* make-parse-unit in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29246(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29246,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[660],t2,t3,t4));}

/* make-parse-error in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29198(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29198,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[658],t2,t3));}

/* pattern-zero-or-more? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29166(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29166,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29173,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-clause?");
f_29080(t3,t2);}

/* k29171 in pattern-zero-or-more? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[411]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29108(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29108,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29116,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   pattern-subs");
f_29092(t4,t2);}

/* k29114 in pattern-sub in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29098(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29098,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29106,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 87   pattern-subs");
f_29092(t3,t2);}

/* k29104 in pattern-nsubs in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29092(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29092,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29080(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29080,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29077(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29077,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_29059(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29059,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29063,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 87   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[647],"*rules*"),t2);}

/* k29061 in get-rule in k29055 in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_29063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 87   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[651],((C_word*)t0)[2]);}}

/* make-rule in k28950 in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28954(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28954,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[649],t2,t3,t4,t5,t6));}

/* null-tokens? in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28944(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28944,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28932(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28932,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28909,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[644]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[639],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[639],"make-token"),t2);}}

/* token-position in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28900(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28900,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[640]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-type in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28864(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28864,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[640]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28843,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[640],t2,t3,t4));}

/* export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28647,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28651,a[2]=t3,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_28651(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_28651(t8,t7);}}

/* k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28651,NULL,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_length(((C_word*)((C_word*)t0)[4])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t4,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28800,a[2]=t7,a[3]=t3,a[4]=((C_word)li410),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_28800(t9,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* do4465 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28800(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28800,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28811,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28826,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t6=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k28824 in do4465 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_length(t1);
C_trace("ChickenBridge.scm: 86   max");
t3=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k28809 in do4465 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28800(t4,((C_word*)t0)[2],t3);}

/* k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28662,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word)li409),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   with-output-to-file");
t3=C_retrieve(lf[638]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   current-output-port");
t3=*((C_word*)lf[637]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28669,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,lf[636]);}

/* k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[6],lf[635]);}

/* k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[6],lf[634],((C_word*)((C_word*)t0)[2])[1]);}

/* k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28678,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[5],lf[633],((C_word*)t0)[2]);}

/* k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[4],lf[632]);}

/* k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28681,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28686,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li408),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28686(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28686(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28686,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28696,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28780,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   spectrum-time");
t7=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k28778 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28780,2,t0,t1);}
t2=(C_truep(t1)?t1:(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[630]));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28787,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t5=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k28785 in k28778 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   format");
t2=C_retrieve(lf[431]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[631],((C_word*)t0)[2],t1);}

/* k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28717,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t5=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k28715 in k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28721,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k28719 in k28715 in k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28725,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t4=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k28723 in k28719 in k28715 in k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28725,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28727,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word)li407),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28727(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do4477 in k28723 in k28719 in k28715 in k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28727(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28727,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_less_or_equalp(t4,C_fix(0)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28737,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(C_word)C_a_i_minus(&a,2,t4,C_fix(1));
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 86   format");
t9=C_retrieve(lf[431]);
((C_proc7)C_retrieve_proc(t9))(7,t9,t5,((C_word*)t0)[2],lf[629],t6,t7,t8);}}

/* k28735 in do4477 in k28723 in k28719 in k28715 in k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28737,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
t5=((C_word*)((C_word*)t0)[3])[1];
f_28727(t5,((C_word*)t0)[2],t2,t3,t4);}

/* k28697 in k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28699,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   format");
t3=C_retrieve(lf[431]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],lf[628]);}

/* k28700 in k28697 in k28694 in do4471 in k28679 in k28676 in k28673 in k28670 in k28667 in k28664 in a28661 in k28655 in k28649 in export-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28702,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_28686(t4,((C_word*)t0)[2],t2,t3);}

/* import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28521(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28521,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28527,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   with-input-from-file");
t4=C_retrieve(lf[626]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28531,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   current-input-port");
t3=*((C_word*)lf[625]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28532,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28549,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   rhdr");
f_28532(t5,t1);}

/* k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28549,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[623]))){
t4=t3;
f_28552(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[624],((C_word*)t0)[4]);}}

/* k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28556,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   rhdr");
f_28532(t2,((C_word*)t0)[4]);}

/* k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28556,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28559,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[621]))){
t4=t3;
f_28559(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[622],((C_word*)t0)[4]);}}

/* k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28562,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28611,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li404),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28611(t6,t2);}

/* do4442 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28611(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28611,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[620]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28622,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   rhdr");
f_28532(t2,((C_word*)t0)[2]);}}

/* k28620 in do4442 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28611(t3,((C_word*)t0)[2]);}

/* k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28562,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28572,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   read-line");
t6=C_retrieve(lf[617]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28572,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li403),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_28574(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28574(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28574,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28588,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28418,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   open-input-string");
t8=C_retrieve(lf[619]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28419,a[2]=((C_word*)t0)[3],a[3]=((C_word)li401),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28442,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t10=t2;
f_28419(t10,t9,t1);}

/* k28440 in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28442,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28446,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t4=((C_word*)t0)[3];
f_28419(t4,t3,((C_word*)t0)[2]);}

/* k28444 in k28440 in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28446,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28449,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li402),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_28472(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do4421 in k28444 in k28440 in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28472(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28472,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28482,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t8=((C_word*)t0)[3];
f_28419(t8,t7,((C_word*)t0)[2]);}}

/* k28480 in do4421 in k28444 in k28440 in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t3=((C_word*)t0)[3];
f_28419(t3,t2,((C_word*)t0)[2]);}

/* k28517 in k28480 in do4421 in k28444 in k28440 in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28519,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28511,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   rdat");
t7=((C_word*)t0)[3];
f_28419(t7,t6,((C_word*)t0)[2]);}

/* k28509 in k28517 in k28480 in do4421 in k28444 in k28440 in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28511,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_28472(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28447 in k28444 in k28440 in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_28588(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25180(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28419(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28419,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28423,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   read");
t4=*((C_word*)lf[26]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k28421 in rdat in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28426,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 86   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[618],((C_word*)t0)[2]);}
else{
t3=t2;
f_28426(2,t3,C_SCHEME_UNDEFINED);}}

/* k28424 in k28421 in rdat in k28416 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k28586 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28588,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28591,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_28591(t8,t7);}
else{
t4=t3;
f_28591(t4,C_SCHEME_UNDEFINED);}}

/* k28589 in k28586 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28591(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28591,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   read-line");
t3=C_retrieve(lf[617]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k28596 in k28589 in k28586 in do4452 in k28570 in k28560 in k28557 in k28554 in k28550 in k28547 in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_28574(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28532(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28532,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28536,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   read-line");
t4=C_retrieve(lf[617]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k28534 in rhdr in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28539,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 86   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[616],((C_word*)t0)[2]);}
else{
t3=t2;
f_28539(2,t3,C_SCHEME_UNDEFINED);}}

/* k28537 in k28534 in rhdr in k28529 in a28526 in import-spear-frames in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_28008r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28008r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28008r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28012,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 86   error");
t12=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[613]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28381,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28387,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_28387(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_28387(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_28012(2,t13,C_SCHEME_UNDEFINED);}}}

/* k28385 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_28381(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 86   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[614],t2);}}

/* k28379 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28012(2,t3,t2);}

/* k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28015,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28365,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k28363 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28365,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28015(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 86   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[612],((C_word*)((C_word*)t0)[3])[1]);}}

/* k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28018,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28347,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28351,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k28349 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28018(t3,t2);}

/* k28345 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28018(t3,t2);}

/* k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28018(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28018,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28336,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28340,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k28338 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_28021(t3,t2);}

/* k28334 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_28021(t3,t2);}

/* k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28021(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28021,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_28024(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_28024(t4,t3);}}

/* k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28024(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28024,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28027,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28038,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li390),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28038(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28068,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li391),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28068(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28088,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28324,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=*((C_word*)lf[611]+1);
t6=((C_word*)((C_word*)t0)[5])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8669,a[2]=t5,a[3]=t8,a[4]=((C_word)li398),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8669(t10,t4,t6,C_SCHEME_TRUE);}}

/* do720 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8669(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8669,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8682,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8692,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k8690 in do720 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_8682(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_8682(t3,t2);}}

/* k8680 in do720 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8682(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_8669(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28324,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_28088(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28308,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minamp");
t12=C_retrieve(lf[585]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28316,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minfreq");
t12=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k28314 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28316,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28320,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxfreq");
t4=C_retrieve(lf[584]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28318 in k28314 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28182(t3,t2);}

/* k28306 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28308,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28312,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxamp");
t4=C_retrieve(lf[587]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28310 in k28306 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28182(t3,t2);}

/* k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28182(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28182,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28185,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28289,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minamp");
t4=C_retrieve(lf[585]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28297,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minfreq");
t4=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k28295 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28297,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxfreq");
t4=C_retrieve(lf[584]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28299 in k28295 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28185(t3,t2);}

/* k28287 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28289,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxamp");
t4=C_retrieve(lf[587]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28291 in k28287 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28185(t3,t2);}

/* k28183 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28185(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28185,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k28187 in k28183 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28189,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li397),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_28194(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do4384 in k28187 in k28183 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28194(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28194,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28204,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_28204(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_28204(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k28202 in do4384 in k28187 in k28183 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28207,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[610],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_28207(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_28207(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_28207(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k28205 in k28202 in do4384 in k28187 in k28183 in k28180 in k28322 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28194(t3,((C_word*)t0)[2],t2);}

/* k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28091,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28113,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li395),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28113(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28151,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li396),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28151(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4398 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28151(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28151,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28172,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   interp");
t5=C_retrieve(lf[487]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28170 in do4398 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28151(t4,((C_word*)t0)[2],t3);}

/* do4393 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28113(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28113,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28142,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   interp");
t6=C_retrieve(lf[487]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28140 in do4393 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28142,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_28113(t5,((C_word*)t0)[2],t4);}

/* k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28108,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28106 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[177]+1),t1);}

/* k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28104,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_28027(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27474,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27546,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27554,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t6=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k27552 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27558,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27556 in k27552 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   map");
t2=*((C_word*)lf[609]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a27545 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27546(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27546,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k27472 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27474,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27532,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   sort!");
t6=C_retrieve(lf[590]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a27531 in k27472 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27532(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27532,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k27476 in k27472 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27478,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27486,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li392),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_27486(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do4269 in k27476 in k27472 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27486(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27486,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27496,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25228(t4,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_set_car(t2,t5);
t11=(C_word)C_i_cdr(t2);
t14=t1;
t15=t11;
t16=t3;
t1=t14;
t2=t15;
t3=t16;
goto loop;}}

/* k27494 in do4269 in k27476 in k27472 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27499,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps-set!");
f_25246(t2,((C_word*)t0)[3],t3);}

/* k27497 in k27494 in do4269 in k27476 in k27472 in k28102 in k28089 in k28086 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do4371 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28068(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28068,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do4366 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_28038(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_28038,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k28025 in k28022 in k28019 in k28016 in k28013 in k28010 in spectrum-rescale! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_28027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27951(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27951,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27959,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-maxfreq");
t4=C_retrieve(lf[584]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27957 in spectrum-flip! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27963,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-minfreq");
t3=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27961 in k27957 in spectrum-flip! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27967,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t3=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k27965 in k27961 in k27957 in spectrum-flip! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27967,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27973,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li388),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27973(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do4347 in k27965 in k27961 in k27957 in spectrum-flip! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27973(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27973,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27983,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25228(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k27981 in do4347 in k27965 in k27961 in k27957 in spectrum-flip! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27739(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27739,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27741,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27758,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27775,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27807,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 86   getfreqs");
f_27741(t7,t2);}

/* k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 86   getfreqs");
f_27741(t2,((C_word*)t0)[4]);}

/* k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27813,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 86   getamps");
f_27758(t2,((C_word*)t0)[2]);}

/* k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27816,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   getamps");
f_27758(t2,((C_word*)t0)[2]);}

/* k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25180(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27822,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27836,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li384),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27836(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27885,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li385),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27885(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27917,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li386),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27917(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27775(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do4340 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27917(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27917,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27927,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27775(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k27925 in do4340 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27917(t3,((C_word*)t0)[2],t2);}

/* do4335 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27885(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27885,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27895,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27775(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k27893 in do4335 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27885(t3,((C_word*)t0)[2],t2);}

/* do4325 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27836(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27836,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27846,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27855,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li383),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27855(t7,t3,((C_word*)t0)[2]);}}

/* do4328 in do4325 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27855(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27855,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27865,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 86   sums-and-diffs");
f_27775(t3,((C_word*)t0)[2],t4,t5);}}

/* k27863 in do4328 in do4325 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27855(t3,((C_word*)t0)[2],t2);}

/* k27844 in do4325 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27836(t3,((C_word*)t0)[2],t2);}

/* k27820 in k27817 in k27814 in k27811 in k27808 in k27805 in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27775(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27775,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27785,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 86   spectrum-add!");
t7=C_retrieve(lf[601]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[606]);}}

/* k27783 in sums-and-diffs in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27785,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 86   spectrum-add!");
t4=C_retrieve(lf[601]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[605]);}

/* getamps in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27758(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27758,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27765,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum?");
f_25186(t3,t2);}

/* k27763 in getamps in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t2=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[603]:lf[604]));}}

/* getfreqs in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27741(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27741,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27748,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum?");
f_25186(t3,t2);}

/* k27746 in getfreqs in rm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t2=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27560,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27568,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t6=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27572,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27572,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27574,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li378),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_27574(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27574(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27574,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27584,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_27584(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_27584(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27584,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27587,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27599,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25228(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27630,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t8=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_27587(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27664,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 86   spectrum-freqs-set!");
f_25228(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27715,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t11=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_27574(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k27713 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27715,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25210(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27662 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27667,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps-set!");
f_25246(t2,((C_word*)t0)[4],t3);}

/* k27665 in k27662 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27676 in k27665 in k27662 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27678,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25210(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27628 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27630,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25210(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27597 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27602,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 86   spectrum-amps-set!");
f_25246(t2,((C_word*)t0)[3],t3);}

/* k27600 in k27597 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   spectrum-size-set!");
f_25210(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k27585 in k27582 in do4285 in k27570 in k27566 in spectrum-add! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27154,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27468,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   round");
t7=*((C_word*)lf[472]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27468,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27167,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27397,a[2]=t9,a[3]=t8,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 86   -");
C_minus(3,0,t10,t3);}

/* k27395 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27397,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27399,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li376),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_27399(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4207 in k27395 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27399(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27399,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=t2;
t11=((C_word*)t0)[4];
t12=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t13=(C_word)C_i_foreign_fixnum_argumentp(t10);
t14=(C_word)C_i_foreign_flonum_argumentp(t11);
t15=(C_word)stub252(t12,t13,t14);
t16=C_set_block_item(t6,0,t15);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27421,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_nequalp(((C_word*)t6)[1],lf[599]);
t19=(C_truep(t18)?t18:(C_word)C_i_nequalp(((C_word*)t5)[1],lf[600]));
if(C_truep(t19)){
t20=t17;
f_27421(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_a_i_list(&a,2,((C_word*)t5)[1],((C_word*)t6)[1]);
t21=(C_word)C_a_i_list(&a,1,t20);
t22=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t21);
t23=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t24=C_mutate(((C_word *)((C_word*)t0)[2])+1,t23);
t25=t17;
f_27421(t25,t24);}}}

/* k27419 in do4207 in k27395 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27421(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27421,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27399(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27170,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27240,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li375),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27240(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4219 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27240(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27240,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27393,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   caar");
t7=*((C_word*)lf[598]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k27391 in do4219 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27393,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27377,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 86   -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k27375 in k27391 in do4219 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27377,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_27271(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27296,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27329,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li374),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_27329(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do4225 in k27375 in k27391 in do4219 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27329(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27329,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27343,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_27343(t14,t13);}
else{
t13=t12;
f_27343(t13,C_SCHEME_UNDEFINED);}}}

/* k27341 in do4225 in k27375 in k27391 in do4219 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27343(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27343,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27329(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27294 in k27375 in k27391 in do4219 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27296,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_27271(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_27271(t5,t4);}}

/* k27269 in k27375 in k27391 in do4219 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27271(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_27240(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27168 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27170,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27178,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li373),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_27178(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do4247 in k27168 in k27165 in k27466 in fm-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_27178(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27178,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25180(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t5);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_cadr(t5);
t9=(C_word)C_a_i_abs(&a,1,t8);
t10=(C_word)C_i_set_car(t7,t9);
t11=(C_word)C_i_cdr(t5);
t12=(C_word)C_i_set_cdr(t4,t11);
t13=(C_word)C_i_cdr(t4);
t14=t4=t13;
t15=(C_word)C_i_set_car(t2,t6);
t16=(C_word)C_i_cdr(t2);
t17=(C_word)C_a_i_plus(&a,2,t3,C_fix(1));
t20=t1;
t21=t16;
t22=t17;
t23=t4;
t1=t20;
t2=t21;
t3=t22;
t4=t23;
goto loop;}}

/* spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25681(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_25681r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_25681r(t0,t1,t2,t3);}}

static void C_ccall f_25681r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25685,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_25685(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[454]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26927,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[118],lf[454]);}
else{
t36=t35;
f_26927(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[594]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26962,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[118],lf[594]);}
else{
t37=t36;
f_26962(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[595]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26997,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[118],lf[595]);}
else{
t38=t37;
f_26997(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[596]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27032,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[118],lf[596]);}
else{
t39=t38;
f_27032(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[407]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27067,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[118],lf[407]);}
else{
t40=t39;
f_27067(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[408]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27102,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[118],lf[408]);}
else{
t41=t40;
f_27102(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27131,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[109],t3);}
else{
t41=t40;
f_27131(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k27129 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27131,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27138,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27146,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27144 in k27129 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27138(2,t2,C_SCHEME_UNDEFINED);}}

/* k27136 in k27129 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25685(t5,t4);}

/* k27100 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27106(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27104 in k27100 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25685(t7,t6);}

/* k27065 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27071(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27069 in k27065 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25685(t7,t6);}

/* k27030 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27036(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27034 in k27030 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25685(t7,t6);}

/* k26995 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_27001(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26999 in k26995 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_27001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25685(t7,t6);}

/* k26960 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26966(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26964 in k26960 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25685(t7,t6);}

/* k26925 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26931(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26929 in k26925 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25685(t7,t6);}

/* k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25685(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25685,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25688(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26687,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_26687(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26722,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[594]);}
else{
t7=t6;
f_26722(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26757,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[595]);}
else{
t8=t7;
f_26757(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[596]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26792,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[596]);}
else{
t9=t8;
f_26792(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26827,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26827(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26862,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26862(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26891,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26891(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26889 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26891,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26906,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26904 in k26889 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26898(2,t2,C_SCHEME_UNDEFINED);}}

/* k26896 in k26889 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25688(t5,t4);}

/* k26860 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26866(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26864 in k26860 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25688(t7,t6);}

/* k26825 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26831,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26831(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26829 in k26825 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25688(t7,t6);}

/* k26790 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26796(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26794 in k26790 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25688(t7,t6);}

/* k26755 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26759 in k26755 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25688(t7,t6);}

/* k26720 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26724 in k26720 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25688(t7,t6);}

/* k26685 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26691(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26689 in k26685 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25688(t7,t6);}

/* k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25688(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25688,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25691(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26447,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_26447(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26482,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[594]);}
else{
t7=t6;
f_26482(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26517,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[595]);}
else{
t8=t7;
f_26517(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[596]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26552,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[596]);}
else{
t9=t8;
f_26552(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26587,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26587(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26622,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26622(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26651,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26651(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26649 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26651,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26666,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26664 in k26649 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26658(2,t2,C_SCHEME_UNDEFINED);}}

/* k26656 in k26649 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25691(t5,t4);}

/* k26620 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26626,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26626(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26624 in k26620 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25691(t7,t6);}

/* k26585 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26591,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26591(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26589 in k26585 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25691(t7,t6);}

/* k26550 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26556,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26556(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26554 in k26550 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25691(t7,t6);}

/* k26515 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26521,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26521(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26519 in k26515 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25691(t7,t6);}

/* k26480 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26486,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26486(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26484 in k26480 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25691(t7,t6);}

/* k26445 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26451(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26449 in k26445 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25691(t7,t6);}

/* k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25691(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25691,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25694,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25694(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26207,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_26207(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26242,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[594]);}
else{
t7=t6;
f_26242(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26277,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[595]);}
else{
t8=t7;
f_26277(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[596]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26312,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[596]);}
else{
t9=t8;
f_26312(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26347,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26347(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26382,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26382(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26411,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26411(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26409 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26411,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26426,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26424 in k26409 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26418(2,t2,C_SCHEME_UNDEFINED);}}

/* k26416 in k26409 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25694(t5,t4);}

/* k26380 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26386(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26384 in k26380 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25694(t7,t6);}

/* k26345 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26351(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26349 in k26345 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25694(t7,t6);}

/* k26310 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26316(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26314 in k26310 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25694(t7,t6);}

/* k26275 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26281,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26281(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26279 in k26275 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25694(t7,t6);}

/* k26240 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26246(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26244 in k26240 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25694(t7,t6);}

/* k26205 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26211(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26209 in k26205 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25694(t7,t6);}

/* k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25694,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25697(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25967,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_25967(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26002,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[594]);}
else{
t7=t6;
f_26002(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26037,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[595]);}
else{
t8=t7;
f_26037(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[596]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26072,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[596]);}
else{
t9=t8;
f_26072(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26107,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_26107(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26142,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_26142(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26171,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_26171(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26169 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26171,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26186,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26184 in k26169 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26178(2,t2,C_SCHEME_UNDEFINED);}}

/* k26176 in k26169 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25697(t5,t4);}

/* k26140 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26142,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26146,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26146(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26144 in k26140 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25697(t7,t6);}

/* k26105 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26111(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26109 in k26105 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25697(t7,t6);}

/* k26070 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26076(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26074 in k26070 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25697(t7,t6);}

/* k26035 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26041(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26039 in k26035 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25697(t7,t6);}

/* k26000 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_26006(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26004 in k26000 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_26006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25697(t7,t6);}

/* k25965 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25971,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25971(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25969 in k25965 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25697(t7,t6);}

/* k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25697,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25700,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25700(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25727,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_25727(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25762,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[594]);}
else{
t7=t6;
f_25762(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[595]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25797,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[595]);}
else{
t8=t7;
f_25797(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[596]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25832,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[118],lf[596]);}
else{
t9=t8;
f_25832(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25867,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[118],lf[407]);}
else{
t10=t9;
f_25867(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25902,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[118],lf[408]);}
else{
t11=t10;
f_25902(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25931,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[109],((C_word*)t0)[9]);}
else{
t11=t10;
f_25931(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25929 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25931,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25938,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25946,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25944 in k25929 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25938(2,t2,C_SCHEME_UNDEFINED);}}

/* k25936 in k25929 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25700(t5,t4);}

/* k25900 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25906,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25906(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25904 in k25900 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25700(t7,t6);}

/* k25865 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25871(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25869 in k25865 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25700(t7,t6);}

/* k25830 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25836(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25834 in k25830 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25700(t7,t6);}

/* k25795 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25801(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25799 in k25795 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25700(t7,t6);}

/* k25760 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25766,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25766(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25764 in k25760 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25700(t7,t6);}

/* k25725 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_25731(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25729 in k25725 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25700(t7,t6);}

/* k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25700(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25700,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25703,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25703(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25703,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25449,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_25449(t14,t13);}
else{
t13=t11;
f_25449(t13,C_SCHEME_UNDEFINED);}}

/* k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25449(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25449,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=t6,a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t8=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25458,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25460,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word)li365),tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25534,a[2]=((C_word*)t0)[8],a[3]=((C_word)li366),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25548,a[2]=t2,a[3]=t3,a[4]=((C_word)li367),tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25558,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[7],a[5]=((C_word)li368),tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25582,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_not(((C_word*)t0)[4]);
t8=(C_truep(t7)?t7:(C_word)C_i_not(t1));
if(C_truep(t8)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t9=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t5,((C_word*)t0)[2]);}
else{
C_trace("for-each");
t9=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t4,((C_word*)t0)[2]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25647,a[2]=t5,a[3]=((C_word*)t0)[4],a[4]=((C_word)li370),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   for-each");
t10=*((C_word*)lf[593]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}
else{
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25662,a[2]=t4,a[3]=((C_word*)t0)[4],a[4]=((C_word)li371),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   for-each");
t10=*((C_word*)lf[593]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}}}

/* a25661 in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25662(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25662,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 86   addkey");
t4=((C_word*)t0)[2];
f_25548(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a25646 in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25647,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 86   adduniquekey");
t4=((C_word*)t0)[2];
f_25558(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k25580 in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25582,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
switch(((C_word*)t0)[4]){
case C_fix(0):
C_trace("ChickenBridge.scm: 86   shuffle!");
t3=C_retrieve(lf[505]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t2);
case C_fix(-1):
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 86   sort!");
t3=C_retrieve(lf[590]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[182]+1));}
else{
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8437,a[2]=t2,a[3]=t6,a[4]=((C_word)li369),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_8437(t8,((C_word*)t0)[3],C_fix(0),t4,t2);}
default:
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 86   sort!");
t3=C_retrieve(lf[590]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[178]+1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(1));
if(C_truep(t3)){
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 86   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[3],lf[591],C_retrieve(lf[592]));}}}}

/* do675 in k25580 in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8437(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8437,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* adduniquekey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25558(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25558,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25562,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   getkey");
t4=((C_word*)t0)[2];
f_25460(t4,t3,t2);}

/* k25560 in adduniquekey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   add");
t3=((C_word*)t0)[2];
f_25534(t3,((C_word*)t0)[3],t1);}}

/* addkey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25548(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25548,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25556,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   getkey");
t4=((C_word*)t0)[2];
f_25460(t4,t3,t2);}

/* k25554 in addkey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   add");
t2=((C_word*)t0)[3];
f_25534(t2,((C_word*)t0)[2],t1);}

/* add in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25534(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25534,NULL,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}

/* getkey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25460(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25460,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25464,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25529,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 86   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k25527 in getkey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   quantize");
t2=C_retrieve(lf[471]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k25462 in getkey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25464,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[5])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[5]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25475,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word)li363),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25475(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25501,a[2]=t7,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=((C_word)li364),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25501(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do3965 in k25462 in getkey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25501(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25501,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* do3960 in k25462 in getkey in k25456 in k25453 in k25447 in k25701 in k25698 in k25695 in k25692 in k25689 in k25686 in k25683 in spectrum-keys in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25475(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25475,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* spectrum-maxamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25420(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25420,3,t0,t1,t2);}
t3=lf[588];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25424,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t6=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k25422 in spectrum-maxamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25424,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25433,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25435,a[2]=((C_word*)t0)[2],a[3]=((C_word)li361),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a25434 in k25422 in spectrum-maxamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25435(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25435,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k25431 in k25422 in spectrum-maxamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25389(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25389,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25393,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t6=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k25391 in spectrum-minamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25393,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25404,a[2]=((C_word*)t0)[2],a[3]=((C_word)li359),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[586]);}}

/* a25403 in k25391 in spectrum-minamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25404(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25404,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k25400 in k25391 in spectrum-minamp in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25371(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25371,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25379,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25377 in spectrum-maxfreq in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25387,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25385 in k25377 in spectrum-maxfreq in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25387,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25361(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25361,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25369,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25367 in spectrum-minfreq in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25302(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25302,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25309,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t7=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k25307 in spectrum-pairs in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25309,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t3=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25310 in k25307 in spectrum-pairs in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25313 in k25310 in k25307 in spectrum-pairs in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25315,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25320,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li355),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_25320(t5,((C_word*)t0)[2],C_fix(0));}

/* do3922 in k25313 in k25310 in k25307 in spectrum-pairs in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25320(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25320,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[582]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25264(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25264,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25272,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-time");
t4=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25270 in spectrum-copy in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25276,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-size");
t3=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25274 in k25270 in spectrum-copy in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25280,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25296,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-freqs");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25294 in k25274 in k25270 in spectrum-copy in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k25278 in k25274 in k25270 in spectrum-copy in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25284,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25288,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   spectrum-amps");
t4=C_retrieve(lf[579]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25286 in k25278 in k25274 in k25270 in spectrum-copy in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k25282 in k25278 in k25274 in k25270 in spectrum-copy in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   make-spectrum");
f_25180(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25255(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25255,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[571]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25246(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25246,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[571]);
C_trace("ChickenBridge.scm: 86   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25237(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25237,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[571]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25228(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25228,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[571]);
C_trace("ChickenBridge.scm: 86   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25219(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25219,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[571]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25210(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25210,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[571]);
C_trace("ChickenBridge.scm: 86   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25201(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25201,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[571]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25186(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25186,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[571]));}

/* make-spectrum in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25180(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25180,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[571],t2,t3,t4,t5));}

/* full-pathname in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25135(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25135,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7641,a[2]=t3,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t7=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}
else{
t7=t6;
f_7641(2,t7,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[569],t2);}}

/* k7639 in full-pathname in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub336(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* pathname-type in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_25093(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25093,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25103,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   ffi_pathname_type");
f_7614(t3,t2);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[567],t2);}}

/* k25101 in pathname-type in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_25103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_string_equal_p(t1,lf[566]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_FALSE:t1));}

/* chdir in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24245(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24245,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7569,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7569(2,t4,C_SCHEME_FALSE);}}

/* k7567 in chdir in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub309(C_SCHEME_UNDEFINED,t1));}

/* cwd in k24223 in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24239,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub305(t2),C_fix(0));}

/* in-tempo in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24214,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_divide(&a,2,C_fix(60),t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_times(&a,2,t2,t4));}

/* rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23898(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_23898r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_23898r(t0,t1,t2,t3);}}

static void C_ccall f_23898r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(10);
t4=C_retrieve(lf[547]);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve(lf[549]);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23902,a[2]=t1,a[3]=t5,a[4]=t7,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(t3))){
t9=(C_word)C_i_car(t3);
t10=C_set_block_item(t5,0,t9);
t11=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(C_word)C_i_cadr(t3);
t13=C_set_block_item(t7,0,t12);
t14=t8;
f_23902(t14,t13);}
else{
t12=t8;
f_23902(t12,C_SCHEME_UNDEFINED);}}
else{
t9=t8;
f_23902(t9,C_SCHEME_UNDEFINED);}}

/* k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23902(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23902,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[5]))){
t2=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=(C_word)C_i_symbolp(((C_word*)t0)[5]);
t3=(C_truep(t2)?t2:(C_word)C_i_stringp(((C_word*)t0)[5]));
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23931,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t5=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,C_retrieve2(lf[551],"*rhythms*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23959,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word)li338),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,((C_word*)t0)[2],t4,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 85   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],lf[561],((C_word*)t0)[5]);}}}}

/* a23958 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23959(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23959,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   rhythm");
t3=C_retrieve(lf[553]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23931,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23996,a[2]=t2,a[3]=t3,a[4]=t4,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t3))){
C_trace("ChickenBridge.scm: 85   symbol->string");
t7=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t3);}
else{
t7=t6;
f_23996(2,t7,t3);}}}

/* k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23997,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_i_string_length(t1);
t4=C_fix(0);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t5,a[8]=t1,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 85   next-token-start");
f_23997(t6,t1,((C_word*)t5)[1],t3);}

/* k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24033,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24036,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[7])[1],((C_word*)t3)[1]))){
t5=t4;
f_24036(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[560],((C_word*)t0)[8]);}}

/* k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24043,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24196,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   substring");
t4=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k24194 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[551],"*rhythms*"),t1);}

/* k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t1)){
t3=t2;
f_24046(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[559],((C_word*)t0)[3]);}}

/* k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24046,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word)li337),tmp=(C_word)a,a+=12,tmp));
t5=((C_word*)t3)[1];
f_24048(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_24048(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24048,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]))){
t11=(C_word)C_i_string_ref(((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1]);
t12=C_set_block_item(t10,0,t11);
t13=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[10])[1],C_fix(1));
t14=C_mutate(((C_word *)((C_word*)t0)[7])+1,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24094,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=t10,a[5]=t9,a[6]=t8,a[7]=t7,a[8]=t1,a[9]=((C_word*)t0)[6],a[10]=t6,a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 85   next-token-start");
f_23997(t15,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[9]);}
else{
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=t7,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t12=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t12))(5,t12,t11,C_retrieve2(lf[551],"*rhythms*"),((C_word*)t0)[8],((C_word*)t7)[1]);}}

/* k24056 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24061,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],((C_word*)t0)[2]))){
t3=t2;
f_24061(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[551],"*rhythms*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);}}

/* k24059 in k24056 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24061,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,C_fix(1),((C_word*)t0)[5]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 85   *");
C_times(5,0,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2,t3);}

/* k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24094,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24182,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   substring");
t5=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]);}
else{
C_trace("ChickenBridge.scm: 85   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[558],((C_word*)t0)[3]);}}

/* k24180 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24097(2,t3,t2);}

/* k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24100,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
switch(((C_word*)((C_word*)t0)[3])[1]){
case C_make_character(43):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24114,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[551],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(45):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24134,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[551],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(42):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24154,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(47):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24168,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
default:
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[557],((C_word*)t0)[2]);}}

/* k24166 in k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24168,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24100(2,t5,t4);}

/* k24152 in k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24154,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_times(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24100(2,t5,t4);}

/* k24132 in k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_24137(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[556],((C_word*)t0)[2]);}}

/* k24135 in k24132 in k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24137,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24100(2,t5,t4);}

/* k24112 in k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_24117(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[555],((C_word*)t0)[2]);}}

/* k24115 in k24112 in k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24117,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24100(2,t5,t4);}

/* k24098 in k24095 in k24092 in do3641 in k24044 in k24041 in k24034 in k24031 in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_24100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24100,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_24048(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t2);}

/* next-token-start in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23997(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23997,NULL,4,t1,t2,t3,t4);}
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24003,a[2]=t2,a[3]=t6,a[4]=t4,a[5]=((C_word)li335),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_24003(t8,t1,lf[554],t3);}

/* do3631 in next-token-start in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_24003(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24003,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24013,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=t5;
f_24013(t6,t4);}
else{
t6=(C_word)C_i_string_ref(((C_word*)t0)[2],t3);
t7=t5;
f_24013(t7,(C_word)C_i_member(t6,t2));}}

/* k24011 in do3631 in next-token-start in k23994 in k23929 in k23900 in rhythm in k23894 in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_24013(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24013,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_24003(t3,((C_word*)t0)[5],((C_word*)t0)[2],t2);}}

/* addryth in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23882(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23882,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23886,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   hash-set!");
t5=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[551],"*rhythms*"),t2,t3);}

/* k23884 in addryth in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   string->symbol");
t3=*((C_word*)lf[552]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23891 in k23884 in addryth in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],C_retrieve2(lf[551],"*rhythms*"),t1,((C_word*)t0)[2]);}

/* rsym in k23874 in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23877(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23877,NULL,4,t1,t2,t3,t4);}
C_trace("ChickenBridge.scm: 85   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t2,t3,t4);}

/* scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23730(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_23730r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_23730r(t0,t1,t2,t3);}}

static void C_ccall f_23730r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23734,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_23734(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_23734(t8,t7);}}

/* k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23734(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23734,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23745,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   sort");
t3=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23803,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   sort");
t3=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 85   shuffle");
t2=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[546],((C_word*)((C_word*)t0)[4])[1]);}}

/* a23802 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23803,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23826,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23839,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23846,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k23844 in a23802 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23850,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t3=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23848 in k23844 in a23802 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k23837 in a23802 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k23824 in a23802 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a23744 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23745,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23768,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23781,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23788,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k23786 in a23744 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23792,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t3=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23790 in k23786 in a23744 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k23779 in a23744 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k23766 in a23744 in k23732 in scale-order in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23564,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 85   modulo");
t7=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23610,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23617,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23665,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_23665(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 85   key");
t6=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[543],t2);}}}

/* k23663 in transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23665,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23682,a[2]=t1,a[3]=((C_word)li328),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 85   transpkeys");
f_23617(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23710,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23714,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k23712 in k23663 in transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   transpkeys");
f_23617(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23708 in k23663 in transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   note");
t2=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a23681 in k23663 in transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23682(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23682,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23617(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23617,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23626,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li326),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23626(t8,t1,t2,t4);}

/* do3570 in transpkeys in transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23626(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_23626,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k23608 in transpose in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23610,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 85   note");
t3=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23429(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23429,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[540],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23459,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23529,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 85   invkeys");
f_23459(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23551,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23555,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   key");
t7=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[541],t2);}}}

/* k23553 in invert in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   invkeys");
f_23459(((C_word*)t0)[2],t1);}

/* k23549 in invert in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   note");
t2=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a23528 in invert in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23529(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23529,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 85   modulo");
t4=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23459(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23459,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23475,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li322),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_23475(t9,t1,t5,t4);}

/* do3555 in invkeys in invert in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23475(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_23475,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23384(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23384,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 85   modulo");
t3=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[538]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23416,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   key");
t5=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23427,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k23425 in pc in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   modulo");
t2=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k23414 in pc in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[538]),t1);}

/* hz in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23268(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23268,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23283,a[2]=t5,a[3]=t3,a[4]=((C_word)li319),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23283(t7,t1,t2,lf[537],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_keynum_to_hertz");
f_7354(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23382,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   note-aux");
f_22996(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k23380 in hz in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do3535 in hz in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23283(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23283,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23296,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23313,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_23313(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_23313(t14,(C_word)C_i_listp(t13));}}}

/* k23311 in do3535 in hz in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23313(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23313,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23317,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hz");
t4=C_retrieve(lf[536]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23332,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   note-aux");
f_22996(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k23330 in k23311 in do3535 in hz in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23332,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_23296(t9,t8);}

/* k23315 in k23311 in do3535 in hz in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23317,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23296(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23294 in do3535 in hz in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23283(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23146(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23146,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23161,a[2]=t5,a[3]=t3,a[4]=((C_word)li317),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23161(t7,t1,t2,lf[535],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub174(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23266,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   note-aux");
f_22996(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k23264 in key in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do3519 in key in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23161(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23161,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23174,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23191,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_23191(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_23191(t14,(C_word)C_i_numberp(t13));}}}

/* k23189 in do3519 in key in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23191(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23191,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23195,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23210,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   note-aux");
f_22996(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k23208 in k23189 in do3519 in key in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23210,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_23174(t9,t8);}

/* k23193 in k23189 in do3519 in key in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23195,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23174(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23172 in do3519 in key in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23174(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23161(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23049(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23049,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23064,a[2]=t5,a[3]=t3,a[4]=((C_word)li315),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23064(t7,t1,t2,lf[534],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23144,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   note-aux");
f_22996(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k23142 in note in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do3505 in note in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23064(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23064,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23077,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23095,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   note");
t13=C_retrieve(lf[533]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23110,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   note-aux");
f_22996(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k23108 in do3505 in note in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23110,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_23077(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k23093 in do3505 in note in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23095,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23077(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23075 in do3505 in note in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_23077(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23064(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22996(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22996,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22944,a[2]=t6,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t9=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,C_retrieve2(lf[521],"*notes*"),t6);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22994,a[2]=t7,a[3]=t5,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   floor");
t9=*((C_word*)lf[530]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23019,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   symbol->string");
t6=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 85   string->note-entry");
f_22897(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23034,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k23032 in note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23034,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   keyword->string");
t3=C_retrieve(lf[531]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[532],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k23039 in k23032 in note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string->note-entry");
f_22897(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23017 in note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_23019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string->note-entry");
f_22897(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22992 in note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22994,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22962,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22975,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[528]))){
t6=t5;
f_22975(t6,t2);}
else{
t6=(C_word)C_i_lessp(t3,lf[529]);
t7=t5;
f_22975(t7,(C_truep(t6)?(C_word)C_a_i_plus(&a,2,t2,C_fix(1000)):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k22973 in k22992 in note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22975(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[521],"*notes*"),t1);}

/* k22960 in k22992 in note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[527],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k22942 in note-aux in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[526],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* string->note-entry in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22897(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22897,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22901,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t6=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,C_retrieve2(lf[521],"*notes*"),t2);}

/* k22899 in string->note-entry in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22901,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22926,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   string-append");
t5=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[524],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k22924 in k22899 in string->note-entry in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[521],"*notes*"),t1);}

/* k22911 in k22899 in string->note-entry in k22893 in k22890 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[523],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* rangamma in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22869(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22869r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22869r(t0,t1,t2);}}

static void C_ccall f_22869r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_rangamma");
f_7452(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 85   ffi_rangamma");
f_7452(t1,t3);}}

/* ranpoisson in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22850(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22850r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22850r(t0,t1,t2);}}

static void C_ccall f_22850r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_ranpoisson");
f_7462(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 85   ffi_ranpoisson");
f_7462(t1,t3);}}

/* rangauss in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22809(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_22809r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22809r(t0,t1,t2);}}

static void C_ccall f_22809r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_rangauss");
f_7423(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   ffi_rangauss");
f_7423(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 85   ffi_rangauss");
f_7423(t1,t4,t5);}}}

/* ranexp in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22790(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22790r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22790r(t0,t1,t2);}}

static void C_ccall f_22790r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 85   ffi_ranexp");
f_7434(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 85   ffi_ranexp");
f_7434(t1,t3);}}

/* ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22562(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_22562r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22562r(t0,t1,t2);}}

static void C_ccall f_22562r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[511];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22566,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_22566(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[512]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22703,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[512]);}
else{
t19=t18;
f_22703(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[513]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22738,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[513]);}
else{
t20=t19;
f_22738(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22767,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[109],t2);}
else{
t20=t19;
f_22767(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k22765 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22767,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22782,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22780 in k22765 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22774(2,t2,C_SCHEME_UNDEFINED);}}

/* k22772 in k22765 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22566(t5,t4);}

/* k22736 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22742,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22742(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22740 in k22736 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22566(t7,t6);}

/* k22701 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22707(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22705 in k22701 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22566(t7,t6);}

/* k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22566(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22566,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22569,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_22569(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[512]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22603,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[512]);}
else{
t6=t5;
f_22603(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[513]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22638,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[513]);}
else{
t7=t6;
f_22638(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22667,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_22667(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22665 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22667,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22682,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22680 in k22665 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22674(2,t2,C_SCHEME_UNDEFINED);}}

/* k22672 in k22665 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22569(t5,t4);}

/* k22636 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22638,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22642(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22640 in k22636 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22569(t7,t6);}

/* k22601 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22603,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_22607(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22605 in k22601 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22569(t7,t6);}

/* k22567 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22569(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22569,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22572,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22572(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k22570 in k22567 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22575,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_22575(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_22575(t5,t4);}}

/* k22573 in k22570 in k22567 in k22564 in ranbeta in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22575(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22575,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub227(t5,t6,t7));}

/* shuffle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22520(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_22520r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22520r(t0,t1,t2);}}

static void C_ccall f_22520r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22534,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   append");
t6=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22549,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k22547 in shuffle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   shuffle!");
t2=C_retrieve(lf[505]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22532 in shuffle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   shuffle!");
t2=C_retrieve(lf[505]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22465(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22465,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22476,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7378(t4,t3);}

/* k22474 in shuffle! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22476,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22478,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li305),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_22478(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do3388 in k22474 in shuffle! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22478(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22478,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22506,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7378(t14,((C_word*)t0)[4]);}}

/* k22504 in do3388 in k22474 in shuffle! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_22478(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22366(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_22366r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_22366r(t0,t1,t2,t3,t4);}}

static void C_ccall f_22366r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22370,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_22370(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_22370(t9,t8);}}

/* k22368 in vary in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22370(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22370,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_22373(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[504],((C_word*)((C_word*)t0)[3])[1]);}}

/* k22371 in k22368 in vary in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22375,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li303),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 85   vary1");
f_22375(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a22437 in k22371 in k22368 in vary in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22438(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22438,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   vary1");
f_22375(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k22371 in k22368 in vary in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22375(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22375,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22391,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   ffi_ranfloat");
f_7385(t9,t8);}}

/* k22389 in vary1 in k22371 in k22368 in vary in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22391,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[503]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* pick in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22095(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_22095r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22095r(t0,t1,t2);}}

static void C_ccall f_22095r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22113,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7378(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22128,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7378(t4,t5);}}

/* k22126 in pick in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k22111 in pick in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22074,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub193(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub199(t9,t10,t11));}}

/* ran in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_22039(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_22039r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22039r(t0,t1,t2);}}

static void C_ccall f_22039r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22043,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_22043(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_22043(t7,t6);}}

/* k22041 in ran in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_22043(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 85   ffi_ranint");
f_7378(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 85   ffi_ranfloat");
f_7385(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 85   ffi_ranfloat");
f_7385(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21831(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_21831r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21831r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21831r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21844,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_21844(t13,t12);}
else{
t9=t8;
f_21844(t9,C_SCHEME_UNDEFINED);}}}

/* k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21844(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21844,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[35],"ffi_explseg"):C_retrieve2(lf[36],"ffi_geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21865,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 85   error");
t12=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[497],t7);}
else{
t12=t11;
f_21865(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[490]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_21926(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_21926(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[498],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21924 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21926(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21926,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k21927 in k21924 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21929,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21937,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li297),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_21937(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do3307 in k21927 in k21924 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21937(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21937,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21978,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li296),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_21949(t8,t1,((C_word*)t0)[3]);}}

/* do3311 in do3307 in k21927 in k21924 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21949(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21949,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21970,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7208(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k21968 in do3311 in do3307 in k21927 in k21924 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21949(t4,((C_word*)t0)[2],t3);}

/* k21976 in do3307 in k21927 in k21924 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21978,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_21937(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k21863 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21865,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li295),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_21870(t5,((C_word*)t0)[2],C_fix(0));}

/* do3295 in k21863 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21870(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21870,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21902,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k21900 in do3295 in k21863 in k21842 in segs in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21902,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_21870(t7,((C_word*)t0)[2],t6);}

/* scale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_21724r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21724r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21724r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21731,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_21731(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21811,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 85   error");
t15=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[495],((C_word*)t8)[1]);}
else{
t15=t14;
f_21811(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_21731(t11,C_SCHEME_UNDEFINED);}}

/* k21809 in scale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21731(t4,t3);}

/* k21729 in scale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21731(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21731,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li293),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_21740(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do3272 in k21729 in scale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21740(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21740,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21753,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21787,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   fit");
t10=C_retrieve(lf[491]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_21753(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k21785 in do3272 in k21729 in scale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21753(t3,t2);}

/* k21751 in do3272 in k21729 in scale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21753(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21753,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21779,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 85   modulo");
t7=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k21777 in k21751 in do3272 in k21729 in scale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21779,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_21740(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21591(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_21591r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_21591r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_21591r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21595,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_21595(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_21595(t12,t11);}}

/* k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21595(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21595,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_21598(t6,t5);}
else{
t3=t2;
f_21598(t3,C_SCHEME_UNDEFINED);}}

/* k21596 in k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21598,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21600,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li291),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 85   fit1");
f_21600(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21701 in k21596 in k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21702(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21702,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   fit1");
f_21600(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k21596 in k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21600(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21600,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21607,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 85   <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k21605 in fit1 in k21596 in k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21607,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21630,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 85   remainder");
t9=*((C_word*)lf[492]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21649,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 85   remainder");
t8=*((C_word*)lf[492]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[493],((C_word*)t0)[2]);}}}

/* k21647 in k21605 in fit1 in k21596 in k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21656,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[175]+1):*((C_word*)lf[179]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 85   -");
C_minus(3,0,t2,t1);}}

/* k21654 in k21647 in k21605 in fit1 in k21596 in k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21656,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k21628 in k21605 in fit1 in k21596 in k21593 in fit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21630,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21524(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_21524r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_21524r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_21524r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[490]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21528,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_21528(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_21528(t16,t15);}}

/* k21526 in tendency in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21528,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21574,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   interp1");
f_21392(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_21531(t3,C_SCHEME_UNDEFINED);}}

/* k21572 in k21526 in tendency in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21531(t3,t2);}

/* k21529 in k21526 in tendency in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21531(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21531,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21534,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21567,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   interp1");
f_21392(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_21534(t3,C_SCHEME_UNDEFINED);}}

/* k21565 in k21529 in k21526 in tendency in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21534(t3,t2);}

/* k21532 in k21529 in k21526 in tendency in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21534(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21534,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21547,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21545 in k21532 in k21529 in k21526 in tendency in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21547,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21478(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_21478r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21478r(t0,t1,t2,t3);}}

static void C_ccall f_21478r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21482,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[488]);}
else{
t5=t4;
f_21482(2,t5,C_SCHEME_UNDEFINED);}}

/* k21480 in interp in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 85   interp1");
f_21392(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 85   interp1");
f_21392(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21392(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21392,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21396,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 85   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[486],t3);}
else{
t6=t5;
f_21396(2,t6,(C_word)C_i_car(t3));}}

/* k21394 in interp1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21396,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21399,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 85   err");
t6=C_retrieve(lf[484]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[485],((C_word*)t0)[4]);}
else{
t6=t4;
f_21399(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k21397 in k21394 in interp1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21399,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21408,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li286),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_21408(t13,((C_word*)t0)[2],t9);}

/* do3223 in k21397 in k21394 in interp1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21408(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21408,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7208(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21430,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 85   error");
t11=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[483],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_21430(2,t13,t12);}}}

/* k21428 in do3223 in k21397 in k21394 in interp1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21408(t3,((C_word*)t0)[2],t2);}

/* cents->ratio in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21377(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21377,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[33],"ffi_cents_to_scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_cents_to_scaler");
t3=C_retrieve2(lf[33],"ffi_cents_to_scaler");
f_7295(3,t3,t1,t2);}}

/* ratio->cents in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21347(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21347,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[34],"ffi_scaler_to_cents"),t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_scaler_to_cents");
t3=C_retrieve2(lf[34],"ffi_scaler_to_cents");
f_7302(3,t3,t1,t2);}}

/* rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21111(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_21111r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21111r(t0,t1,t2,t3);}}

static void C_ccall f_21111r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[476];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[477];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21115,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_21115(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[478]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21260,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[478]);}
else{
t20=t19;
f_21260(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[479]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21295,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[118],lf[479]);}
else{
t21=t20;
f_21295(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21324,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[109],t3);}
else{
t21=t20;
f_21324(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21322 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21324,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21339,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21337 in k21322 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21331(2,t2,C_SCHEME_UNDEFINED);}}

/* k21329 in k21322 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21115(t5,t4);}

/* k21293 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21297 in k21293 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21115(t7,t6);}

/* k21258 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21264,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21264(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21262 in k21258 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21115(t7,t6);}

/* k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21115(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21115,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21118,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21118(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[478]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21160,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[478]);}
else{
t6=t5;
f_21160(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[479]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21195,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[479]);}
else{
t7=t6;
f_21195(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21224,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_21224(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21222 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21224,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21231,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21239,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21237 in k21222 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21231(2,t2,C_SCHEME_UNDEFINED);}}

/* k21229 in k21222 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21118(t5,t4);}

/* k21193 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21199(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21197 in k21193 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21118(t7,t6);}

/* k21158 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_21164(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21162 in k21158 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21118(t7,t6);}

/* k21116 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_21118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21118,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21121,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21121(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k21119 in k21116 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21121,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li282),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 85   ffi_rhythm_to_seconds");
f_7280(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21131 in k21119 in k21116 in k21113 in rhythm->seconds in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21132(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21132,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   ffi_rhythm_to_seconds");
f_7280(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21071,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21075,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   expt");
t5=*((C_word*)lf[473]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[474],t3);}

/* k21073 in decimals in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21075,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21086,a[2]=t1,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21105,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 85   round");
t4=*((C_word*)lf[472]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k21103 in k21073 in decimals in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21105,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a21085 in k21073 in decimals in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21086(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21086,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21094,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   round");
t5=*((C_word*)lf[472]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k21092 in a21085 in k21073 in decimals in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21094,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21050(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21050,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21062,a[2]=t3,a[3]=((C_word)li278),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_quantize");
f_7269(t1,t2,t3);}}

/* a21061 in quantize in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21062(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21062,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   ffi_quantize");
f_7269(t1,t2,((C_word*)t0)[2]);}

/* divide in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21007(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_21007r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21007r(t0,t1,t2,t3);}}

static void C_ccall f_21007r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[470]+1),t2);}
else{
C_trace("ChickenBridge.scm: 85   /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21037,a[2]=t3,a[3]=((C_word)li276),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[470]+1),t2,t3);}}}

/* a21036 in divide in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_21037(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21037,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20964(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_20964r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20964r(t0,t1,t2,t3);}}

static void C_ccall f_20964r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[175]+1),t2);}
else{
C_trace("ChickenBridge.scm: 85   -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20994,a[2]=t3,a[3]=((C_word)li274),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[175]+1),t2,t3);}}}

/* a20993 in minus in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20994,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20895(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20895r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20895r(t0,t1,t2);}}

static void C_ccall f_20895r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[411]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[411]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20939,a[2]=t2,a[3]=((C_word)li272),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[411]+1),t2);}}}}

/* a20938 in times in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20939(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20939,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20826(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20826r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20826r(t0,t1,t2);}}

static void C_ccall f_20826r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[179]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[179]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20870,a[2]=t2,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[179]+1),t2);}}}}

/* a20869 in plus in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20870(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20870,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* log2 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20820(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20820,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub263(t3,t4));}

/* log10 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20814(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20814,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub258(t3,t4));}

/* float in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20793(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20793,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20805,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[463]));}}

/* a20804 in float in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20805(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20805,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[462]));}

/* int in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20778(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20778,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[30],"ffi_float_to_fixnum"),t2);}
else{
C_trace("ChickenBridge.scm: 85   ffi_float_to_fixnum");
t3=C_retrieve2(lf[30],"ffi_float_to_fixnum");
f_7262(3,t3,t1,t2);}}

/* discrete in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20667(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_20667r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_20667r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_20667r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20671,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_20671(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20742,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 85   not?");
t20=C_retrieve(lf[459]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_20671(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_20671(t19,t18);}}}

/* k20740 in discrete in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20671(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_20671(t2,C_SCHEME_UNDEFINED);}}

/* k20669 in discrete in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20671(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20671,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20685,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li262),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20700,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t3=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20711,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li263),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t2=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a20710 in k20669 in discrete in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20711(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20711,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t3=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20698 in k20669 in discrete in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a20684 in k20669 in discrete in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20685(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20685,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20693,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   ffi_discrete");
t4=C_retrieve(lf[458]);
((C_proc8)C_retrieve_proc(t4))(8,t4,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20691 in a20684 in k20669 in discrete in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20633(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_20633r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_20633r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_20633r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20645,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li260),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7208(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 85   ffi_rescale");
f_7208(t1,t2,t3,t4,t5,t6,t8);}}}

/* a20644 in rescale in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20645(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20645,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[456]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19586(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_19586r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19586r(t0,t1,t2,t3);}}

static void C_ccall f_19586r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_19596,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_19596(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[454]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20546,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[118],lf[454]);}
else{
t31=t30;
f_20546(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[455]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20581,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[118],lf[455]);}
else{
t32=t31;
f_20581(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20610,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[109],t3);}
else{
t32=t31;
f_20610(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k20608 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20610,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20625,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20623 in k20608 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20617(2,t2,C_SCHEME_UNDEFINED);}}

/* k20615 in k20608 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19596(t5,t4);}

/* k20579 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20585(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20583 in k20579 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19596(t7,t6);}

/* k20544 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20550,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20550(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20548 in k20544 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19596(t7,t6);}

/* k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19596,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19599,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19599(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20446,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[454]);}
else{
t6=t5;
f_20446(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[455]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20481,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[455]);}
else{
t7=t6;
f_20481(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20510,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_20510(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20508 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20510,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20517,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20525,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20523 in k20508 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20517(2,t2,C_SCHEME_UNDEFINED);}}

/* k20515 in k20508 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19599(t5,t4);}

/* k20479 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20485(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20483 in k20479 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19599(t7,t6);}

/* k20444 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_20450(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20448 in k20444 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19599(t7,t6);}

/* k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19599(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19599,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19602,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19602(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19602,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19607,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_19607(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[453],((C_word*)((C_word*)t0)[9])[1]);}}

/* k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19609,a[2]=((C_word*)t0)[9],a[3]=((C_word)li238),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19691,a[2]=t4,a[3]=((C_word)li241),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19801,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20339,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li258),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_20339(t10,t6,C_fix(0));}

/* do2963 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20339(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20339,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20349,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20362,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li257),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_20362(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2966 in do2963 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20362(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20362,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20372,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20390,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t9=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20415,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 84   modulo");
t9=*((C_word*)lf[452]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k20413 in do2966 in do2963 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20415,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20397,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_20397(t7,t6);}
else{
t5=t4;
f_20397(t5,C_SCHEME_UNDEFINED);}}

/* k20395 in k20413 in do2966 in do2963 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20397(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20397,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_20362(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20388 in do2966 in do2963 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   add-outcome");
t2=((C_word*)t0)[4];
f_19609(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k20370 in do2966 in do2963 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20372,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k20347 in do2963 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20349,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20339(t3,((C_word*)t0)[2],t2);}

/* k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19804,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20295,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   sort");
t5=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[178]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20301,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_20301(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_20301(t5,C_SCHEME_FALSE);}}}

/* k20299 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20301(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20301,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20307,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   sort");
t4=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20321 in k20299 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19804(t3,t2);}

/* a20306 in k20299 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20307,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20315,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   format");
t5=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[451],t2);}

/* k20313 in a20306 in k20299 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20315,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20319,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   format");
t3=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[450],((C_word*)t0)[2]);}

/* k20317 in k20313 in a20306 in k20299 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   string-ci<?");
t2=*((C_word*)lf[449]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20303 in k20299 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19804(t3,t2);}

/* k20293 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19804(t3,t2);}

/* k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19804,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19807,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20172,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li255),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20172(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20172(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20172,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20183,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   max");
t6=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20196,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 84   max");
t10=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k20194 in do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20196,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20258,a[2]=t5,a[3]=((C_word)li254),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_20258(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2987 in k20194 in do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20258(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20258,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k20197 in k20194 in do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20199,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[447]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20215,a[2]=t3,a[3]=t8,a[4]=((C_word)li253),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_20215(t10,t6,((C_word*)t0)[2]);}

/* do2993 in k20197 in k20194 in do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20215(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20215,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20240,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 84   decimals");
t9=C_retrieve(lf[448]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k20238 in do2993 in k20197 in k20194 in do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20215(t4,((C_word*)t0)[2],t3);}

/* k20204 in k20197 in k20194 in do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_20172(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20181 in do2979 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19807,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19811,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20158,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li252),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   sort");
t4=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a20157 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20158,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 84   before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_19691(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19811,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19814,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[435];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19855,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   make-string");
t7=*((C_word*)lf[445]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_19814(2,t5,C_SCHEME_UNDEFINED);}}

/* k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20139,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li251),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20139(t6,t2,C_fix(0));}

/* do3006 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20139(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20139,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20149,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[437]+1));}}

/* k20147 in do3006 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20149,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20139(t3,((C_word*)t0)[2],t2);}

/* k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19864,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20077,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li250),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20077(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20077(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20077,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20087,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   display");
t4=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k20085 in do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[444],t3);}

/* k20088 in k20085 in do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20090,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20096,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20110,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 84   max");
t6=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k20108 in k20088 in k20085 in do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20110,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20112,a[2]=t3,a[3]=((C_word)li249),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20112(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3016 in k20108 in k20088 in k20085 in do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20112(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20112,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20122,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[437]+1));}}

/* k20120 in do3016 in k20108 in k20088 in k20085 in do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20122,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20112(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20094 in k20088 in k20085 in do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k20097 in k20094 in k20088 in k20085 in do3011 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20077(t3,((C_word*)t0)[2],t2);}

/* k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19867,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li248),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_19872(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19872(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19872,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19885,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 84   newline");
t5=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19888,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19888(2,t4,lf[440]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19759,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 84   format");
t6=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[443],t5);}}

/* k19757 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19759,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19768,a[2]=t6,a[3]=t3,a[4]=((C_word)li247),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_19768(t8,((C_word*)t0)[2],t4);}

/* do2958 in k19757 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19768(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19768,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19779,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19790,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   format");
t6=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[442],t5);}}

/* k19788 in do2958 in k19757 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   string-append");
t2=*((C_word*)lf[441]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19777 in do2958 in k19757 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19768(t4,((C_word*)t0)[2],t3);}

/* k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19888,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19894,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20048,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 84   max");
t6=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k20046 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20048,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20050,a[2]=t3,a[3]=((C_word)li246),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20050(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3032 in k20046 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20050(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20050,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20060,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[437]+1));}}

/* k20058 in do3032 in k20046 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20060,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20050(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19894,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19897,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20021,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   min");
t4=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k20019 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20021,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20023,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li245),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20023(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3038 in k20019 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_20023(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20023,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20033,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[437]+1));}}

/* k20031 in do3038 in k20019 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20033,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20023(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19900,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li244),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_19909(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19909(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19909,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19922,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19941,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 84   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19935,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   display");
t8=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k19933 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   display");
t2=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19941,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_string_length(((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19947,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   display");
t8=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[2])[1],C_fix(5)))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19989,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   position");
t4=C_retrieve(lf[100]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_make_character(46),((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=t2;
f_19950(t3,C_SCHEME_UNDEFINED);}}

/* k19987 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20001,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_plus(&a,2,t1,C_fix(4));
C_trace("ChickenBridge.scm: 84   min");
t5=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19999 in k19987 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_20001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   substring");
t2=*((C_word*)lf[438]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t1);}

/* k19991 in k19987 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_i_string_length(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19950(t5,t4);}

/* k19948 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19950(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19950,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19960,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 84   max");
t5=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k19958 in k19948 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19960,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19962,a[2]=t3,a[3]=((C_word)li243),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19962(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3054 in k19958 in k19948 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19962(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19962,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19972,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[436]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[437]+1));}}

/* k19970 in do3054 in k19958 in k19948 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19972,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19962(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19951 in k19948 in k19945 in k19939 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   display");
t2=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19920 in do3045 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19909(t3,((C_word*)t0)[2],t2);}

/* k19898 in k19895 in k19892 in k19886 in k19883 in do3026 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19872(t3,((C_word*)t0)[2],t2);}

/* k19865 in k19862 in k19859 in k19856 in k19853 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   newline");
t2=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k19812 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19814,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[433]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19837,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a19836 in k19812 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19837(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19837,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[117]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[434],t4);}

/* k19824 in k19812 in k19809 in k19805 in k19802 in k19799 in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 84   make-markov");
t2=C_retrieve(lf[410]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19691(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19691,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19701,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19739,a[2]=t2,a[3]=((C_word)li240),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   list-index");
f_8584(t5,t6,t4);}}

/* a19738 in before? in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19739(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19739,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k19699 in before? in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19729,a[2]=((C_word*)t0)[4],a[3]=((C_word)li239),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   list-index");
f_8584(t2,t3,((C_word*)t0)[2]);}

/* a19728 in k19699 in before? in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19729(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19729,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k19702 in k19699 in before? in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_19691(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19609(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19609,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19613,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19681,a[2]=t2,a[3]=((C_word)li236),tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8630,a[2]=t5,a[3]=t8,a[4]=((C_word)li237),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8630(t10,t4,t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do709 in add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8630(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8630,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8640,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8650,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   p");
t11=((C_word*)t0)[2];
f_19681(t11,t9,t10);}}

/* k8648 in do709 in add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8640(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8640(t2,C_SCHEME_UNDEFINED);}}

/* k8638 in do709 in add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8640(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_8630(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* a19680 in add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19681(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19681,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k19611 in add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19613,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19663,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 84   tail");
t7=C_retrieve(lf[81]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19631,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   format");
t4=C_retrieve(lf[431]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[432],((C_word*)t0)[3]);}}

/* k19629 in k19611 in add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19631,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k19661 in k19611 in add-outcome in k19605 in k19600 in k19597 in k19594 in markov-analyze in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19663,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19492(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19492,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19496,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t3,t2);}

/* k19494 in next-in-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19496,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19525,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[422]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   graph-node-datum");
f_18911(((C_word*)t0)[2],t6);}}

/* k19523 in k19494 in next-in-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19525,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19530,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li234),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_19530(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2881 in k19523 in k19494 in next-in-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19530(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19530,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19540,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_19540(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[429],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19555,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[422]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],t8))){
t9=(C_word)C_i_car(t2);
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t5;
f_19555(t11,t10);}
else{
t9=t5;
f_19555(t9,C_SCHEME_UNDEFINED);}}}

/* k19553 in do2881 in k19523 in k19494 in next-in-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19555(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19530(t3,((C_word*)t0)[2],t2);}

/* k19538 in do2881 in k19523 in k19494 in next-in-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   graph-node-datum");
f_18911(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18974(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_18974r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18974r(t0,t1,t2,t3);}}

static void C_ccall f_18974r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18978,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19236,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19245,a[2]=t9,a[3]=((C_word)li232),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[428],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19245(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19245,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19249,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_19249(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[427],t2);}}

/* k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19254,a[2]=((C_word*)t0)[4],a[3]=((C_word)li231),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19254(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_19254r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19254r(t0,t1,t2,t3);}}

static void C_ccall f_19254r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19258,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_19258(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[425]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19396,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[118],lf[425]);}
else{
t20=t19;
f_19396(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[426]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19431,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[118],lf[426]);}
else{
t21=t20;
f_19431(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19460,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[109],t3);}
else{
t21=t20;
f_19460(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k19458 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19460,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19475,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19473 in k19458 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19467(2,t2,C_SCHEME_UNDEFINED);}}

/* k19465 in k19458 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19258(t5,t4);}

/* k19429 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19433 in k19429 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19258(t7,t6);}

/* k19394 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19400(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19398 in k19394 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19258(t7,t6);}

/* k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19258,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19261,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19261(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[425]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19296,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[425]);}
else{
t6=t5;
f_19296(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[426]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19331,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[426]);}
else{
t7=t6;
f_19331(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19360,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_19360(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19358 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19360,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19375,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19373 in k19358 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19367(2,t2,C_SCHEME_UNDEFINED);}}

/* k19365 in k19358 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19261(t5,t4);}

/* k19329 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19333 in k19329 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19261(t7,t6);}

/* k19294 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19298 in k19294 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19261(t7,t6);}

/* k19259 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19261,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19264,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19264(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k19262 in k19259 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_19267(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_19267(t4,t3);}}

/* k19265 in k19262 in k19259 in k19256 in a19253 in k19247 in parse-graph-item in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_19267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19267,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[422],t5,t6,t7));}

/* k19234 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18978(2,t3,t2);}

/* k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18978,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18981,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18981(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19141,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_19141(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19176,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_19176(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19205,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_19205(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k19203 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19205,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19220,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19218 in k19203 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19212(2,t2,C_SCHEME_UNDEFINED);}}

/* k19210 in k19203 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18981(t5,t4);}

/* k19174 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19180(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19178 in k19174 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18981(t7,t6);}

/* k19139 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19145(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19143 in k19139 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18981(t7,t6);}

/* k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18981(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18981,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18984,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18984(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19041,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_19041(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19076,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_19076(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19105,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_19105(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19103 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19105,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19112,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19120,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19118 in k19103 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19112(2,t2,C_SCHEME_UNDEFINED);}}

/* k19110 in k19103 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18984(t5,t4);}

/* k19074 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19080(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19078 in k19074 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18984(t7,t6);}

/* k19039 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19045,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_19045(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19043 in k19039 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18984(t7,t6);}

/* k18982 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18984,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18987,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18987(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k18985 in k18982 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k18988 in k18985 in k18982 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18990,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18996,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19002,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[424],"next-in-graph"),t5);}

/* a19001 in k18988 in k18985 in k18982 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19002,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19008,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19020,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t5,t3);}

/* k19018 in a19001 in k18988 in k18985 in k18982 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a19007 in a19001 in k18988 in k18985 in k18982 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_19008(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19008,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 84   graph-node-datum");
f_18911(t1,t2);}

/* k18994 in k18988 in k18985 in k18982 in k18979 in k18976 in make-graph in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18911(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18911,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[422]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18571(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18571,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18574,a[2]=t4,a[3]=((C_word)li223),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18753,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t6,t2);}

/* k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18757,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13320(t2,((C_word*)t0)[4]);}

/* k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18757,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18759,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li226),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_18759(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18759(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18759,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18769,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_18769(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_18769(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18684,a[2]=t13,a[3]=((C_word)li225),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_18684(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2707 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18684(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18684,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18694,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_18694(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_18694(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k18692 in do2707 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18694(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18694,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[411]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18701,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_18701(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_18701(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_18701(t9,(C_word)C_eqp(t8,lf[411]));}}}}

/* k18699 in k18692 in do2707 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_18684(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k18767 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18769,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18772,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[420],((C_word*)t0)[6]);}
else{
t3=t2;
f_18772(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_18759(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k18770 in k18767 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18776,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 84   select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_18574(t7,t2,t4,t6);}

/* k18774 in k18770 in k18767 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18776,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18779,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_18779(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_18779(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18796,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li224),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18796(t8,t3,((C_word*)t0)[3]);}}}

/* do2731 in k18774 in k18770 in k18767 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18796(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_18796,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18812,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13311(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k18810 in do2731 in k18774 in k18770 in k18767 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k18777 in k18774 in k18770 in k18767 in do2722 in k18755 in k18751 in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18574(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18574,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18642,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranfloat");
f_7385(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18586,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li222),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_18586(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2691 in select-output in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18586(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18586,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 84   select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_18574(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18622,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_18622(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(t9,t11);}}}

/* k18620 in do2691 in select-output in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18622,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_18586(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k18640 in select-output in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18642,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18647,a[2]=t3,a[3]=t1,a[4]=((C_word)li221),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_18647(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2701 in k18640 in select-output in next-in-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18647(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18647,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18084(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_18084r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18084r(t0,t1,t2,t3);}}

static void C_ccall f_18084r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18088,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18565,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18011,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li219),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_18011(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[419],((C_word*)t4)[1]);}}

/* do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18011(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18011,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17856,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_17856(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t13=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[418],((C_word*)t11)[1]);}}}

/* k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17856,2,t0,t1);}
t2=(C_word)C_i_member(lf[414],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17862,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_17862(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[416],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_17862(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 84   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[417],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17862,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17874,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17947,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li218),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_17947(t17,t13);}

/* do2570 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17947(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17947,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t14=t1;
t1=t14;
goto loop;}}

/* k17872 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17890,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li217),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a17889 in k17872 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17890,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17894,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_17894(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_17894(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_17894(t13,t12);}}

/* k17892 in a17889 in k17872 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17894(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17894,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_17897(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_17897(t5,t4);}}

/* k17895 in k17892 in a17889 in k17872 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17897(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17897,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17875 in k17872 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17886 in k17875 in k17872 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17888,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18028,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_18028(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t9=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[415],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_18028(2,t10,t9);}}

/* k18026 in k17886 in k17875 in k17872 in k17860 in k17854 in do2592 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18028,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_18011(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k18563 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18088(2,t3,t2);}

/* k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18088,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18091,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18091(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[377]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18435,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[377]);}
else{
t22=t21;
f_18435(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[378]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18470,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[378]);}
else{
t23=t22;
f_18470(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[413]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18505,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[413]);}
else{
t24=t23;
f_18505(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18534,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)t0)[4]);}
else{
t24=t23;
f_18534(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18532 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18534,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18549,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18547 in k18532 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18541(2,t2,C_SCHEME_UNDEFINED);}}

/* k18539 in k18532 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18091(t5,t4);}

/* k18503 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18507 in k18503 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18091(t7,t6);}

/* k18468 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18472 in k18468 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18091(t7,t6);}

/* k18433 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18439,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18439(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18437 in k18433 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18091(t7,t6);}

/* k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18091,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18094,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18094(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18300,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_18300(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18335,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_18335(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[413]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18370,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[413]);}
else{
t8=t7;
f_18370(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18399,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_18399(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18397 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18399,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18414,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18412 in k18397 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18406(2,t2,C_SCHEME_UNDEFINED);}}

/* k18404 in k18397 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18094(t5,t4);}

/* k18368 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18374(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18372 in k18368 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18094(t7,t6);}

/* k18333 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18337 in k18333 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18094(t7,t6);}

/* k18298 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18304,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18304(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18302 in k18298 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18094(t7,t6);}

/* k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18094(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18094,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18097,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18097(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18165,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_18165(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18200,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_18200(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[413]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18235,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[413]);}
else{
t8=t7;
f_18235(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18264,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_18264(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18262 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18264,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18279,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18277 in k18262 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18271(2,t2,C_SCHEME_UNDEFINED);}}

/* k18269 in k18262 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18097(t5,t4);}

/* k18233 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18237 in k18233 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18097(t7,t6);}

/* k18198 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18204(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18202 in k18198 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18097(t7,t6);}

/* k18163 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18169,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_18169(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18167 in k18163 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18097(t7,t6);}

/* k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18097(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18097,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18100,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18100(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18103,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k18101 in k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18103,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18109,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18136,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[412],"next-in-markov"),t4);}

/* a18135 in k18101 in k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18136,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18144,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t3);}

/* k18142 in a18135 in k18101 in k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18107 in k18101 in k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18112,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18112(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18122,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 84   make-list");
t7=C_retrieve(lf[83]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[411]);}}

/* k18120 in k18107 in k18101 in k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18112(t3,t2);}

/* k18110 in k18107 in k18101 in k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_18112(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18112,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13311(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18113 in k18110 in k18107 in k18101 in k18098 in k18095 in k18092 in k18089 in k18086 in make-markov in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_18115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17651(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17651,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17655,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t3,t2);}

/* k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13158(t2,((C_word*)t0)[2]);}

/* k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17661,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13086(t2,((C_word*)t0)[2]);}

/* k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17661,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17830,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t5=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t1,C_fix(4));}

/* k17828 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17830,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17667(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_12936(t2,((C_word*)t0)[2]);}}

/* k17841 in k17828 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-length");
f_12954(t2,((C_word*)t0)[2]);}

/* k17845 in k17841 in k17828 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 84   recalc-weightings");
f_17551(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_17667(2,t2,C_SCHEME_UNDEFINED);}}

/* k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_17673(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17804,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17823,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-count");
f_16701(t4,((C_word*)t0)[4]);}}

/* k17821 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17823,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 84   random-item-count-set!");
f_16692(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17802 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17811,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-count");
f_16701(t2,((C_word*)t0)[2]);}

/* k17809 in k17802 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17815,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-min");
f_16665(t2,((C_word*)t0)[2]);}

/* k17813 in k17809 in k17802 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17673(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17673(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17673,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16611(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17679,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13320(t2,((C_word*)t0)[2]);}}

/* k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17679,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17683,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17721,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17763,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   pick");
f_17683(t7,t2,t1);}

/* k17761 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17763,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li214),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_17765(t5,((C_word*)t0)[2],t1);}

/* do2544 in k17761 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17765(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17765,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17784,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17787,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-max");
f_16683(t4,t2);}

/* k17785 in do2544 in k17761 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17787,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-count");
f_16701(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_17784(t2,C_SCHEME_FALSE);}}

/* k17792 in k17785 in do2544 in k17761 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17798,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-max");
f_16683(t2,((C_word*)t0)[2]);}

/* k17796 in k17792 in k17785 in do2544 in k17761 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17784(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k17782 in do2544 in k17761 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17784(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17784,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17780,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pick");
f_17683(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k17778 in k17782 in do2544 in k17761 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17765(t2,((C_word*)t0)[2],t1);}

/* k17719 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17724,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]))){
t3=t2;
f_17724(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17738,a[2]=t4,a[3]=((C_word)li213),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_17738(t6,t2,((C_word*)t0)[2]);}}

/* do2548 in k17719 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17738(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17738,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17748,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-count-set!");
f_16692(t3,t4,C_fix(0));}}

/* k17746 in do2548 in k17719 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17738(t3,((C_word*)t0)[2],t2);}

/* k17722 in k17719 in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16611(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17683(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17683,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17691,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranfloat");
f_7385(t4,t3);}

/* k17689 in pick in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17691,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17693,a[2]=t3,a[3]=((C_word)li211),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_17693(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2539 in k17689 in pick in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17693(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17693,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17714,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-index");
f_16629(t4,t5);}

/* k17712 in do2539 in k17689 in pick in k17677 in k17671 in k17665 in k17659 in k17656 in k17653 in next-in-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_17693(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17551(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17551,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17649,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t2);}

/* k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17649,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[409];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17558,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17608,a[2]=t7,a[3]=t4,a[4]=((C_word)li209),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_17608(t9,t5,t2);}

/* do2511 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17608(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17608,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17637,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17641,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-weight");
f_16647(t4,t5);}}

/* k17639 in do2511 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(((C_word*)t0)[2],t1);}

/* k17635 in do2511 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17637,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   random-item-index-set!");
f_16620(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k17620 in k17635 in do2511 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17608(t3,((C_word*)t0)[2],t2);}

/* k17556 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17558,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17566,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li208),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_17566(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13311(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2517 in k17556 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17566(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17566,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13311(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17599,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t6,a[6]=t5,a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   random-item-index");
f_16629(t7,t8);}}

/* k17597 in do2517 in k17556 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17599,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   random-item-index-set!");
f_16620(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k17581 in k17597 in do2517 in k17556 in k17647 in recalc-weightings in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17566(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16784(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_16784r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16784r(t0,t1,t2,t3);}}

static void C_ccall f_16784r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16788,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17101,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17101(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17101,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17108,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_17108(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_17108(t9,t8);}}

/* k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17108(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17108,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17111,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17111(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[406]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17414,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[406]);}
else{
t22=t21;
f_17414(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[407]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17449,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[407]);}
else{
t23=t22;
f_17449(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[408]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17484,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[408]);}
else{
t24=t23;
f_17484(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17513,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_17513(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17511 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17513,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17528,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17526 in k17511 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17520(2,t2,C_SCHEME_UNDEFINED);}}

/* k17518 in k17511 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17111(t5,t4);}

/* k17482 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17488,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17488(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17486 in k17482 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17111(t7,t6);}

/* k17447 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17453,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17453(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17451 in k17447 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17111(t7,t6);}

/* k17412 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17418(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17416 in k17412 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17111(t7,t6);}

/* k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17111(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17111,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17114(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17279,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[406]);}
else{
t6=t5;
f_17279(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17314,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[407]);}
else{
t7=t6;
f_17314(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17349,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[408]);}
else{
t8=t7;
f_17349(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17378,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_17378(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17376 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17378,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17385,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17393,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17391 in k17376 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17385(2,t2,C_SCHEME_UNDEFINED);}}

/* k17383 in k17376 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17114(t5,t4);}

/* k17347 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17353(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17351 in k17347 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17114(t7,t6);}

/* k17312 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17318(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17316 in k17312 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17114(t7,t6);}

/* k17277 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17283(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17281 in k17277 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17114(t7,t6);}

/* k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17114(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17114,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17117,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17117(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17144,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[406]);}
else{
t6=t5;
f_17144(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[407]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17179,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[407]);}
else{
t7=t6;
f_17179(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[408]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17214,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[408]);}
else{
t8=t7;
f_17214(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17243,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_17243(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17241 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17243,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17258,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17256 in k17241 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17250(2,t2,C_SCHEME_UNDEFINED);}}

/* k17248 in k17241 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17117(t5,t4);}

/* k17212 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17216 in k17212 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17117(t7,t6);}

/* k17177 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17179,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17183,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17183(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17181 in k17177 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17117(t7,t6);}

/* k17142 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17148(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17146 in k17142 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17117(t7,t6);}

/* k17115 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17117,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17120,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17120(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)((C_word*)t0)[2])[1]);}}

/* k17118 in k17115 in k17112 in k17109 in k17106 in %make-random-item in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17120,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[395],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16791,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16791,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16797,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17065,a[2]=t8,a[3]=t6,a[4]=((C_word)li205),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a17064 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17065(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17065,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17069,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-min");
f_16665(t3,t2);}

/* k17067 in a17064 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17069,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-max");
f_16683(t2,((C_word*)t0)[2]);}

/* k17070 in k17067 in a17064 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-weight");
f_16647(t2,((C_word*)t0)[2]);}

/* k17073 in k17070 in k17067 in a17064 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16611(t2,((C_word*)t0)[2]);}

/* k17076 in k17073 in k17070 in k17067 in a17064 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17081,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17091,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t3,t1);}

/* k17089 in k17076 in k17073 in k17070 in k17067 in a17064 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17091,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17081(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_17081(t2,C_SCHEME_UNDEFINED);}}

/* k17079 in k17076 in k17073 in k17070 in k17067 in a17064 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_17081(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16797,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16804,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17060,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t7=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(4));}
else{
t6=t5;
f_16804(t6,C_SCHEME_UNDEFINED);}}

/* k17058 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16804(t3,t2);}

/* k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16804,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_16807,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16807(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16971,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_16971(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17006,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_17006(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17035,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[9]);}
else{
t19=t18;
f_17035(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17033 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17035,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17042,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17050,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17048 in k17033 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17042(2,t2,C_SCHEME_UNDEFINED);}}

/* k17040 in k17033 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16807(t5,t4);}

/* k17004 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17010,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_17010(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17008 in k17004 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_17010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16807(t7,t6);}

/* k16969 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16971,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16975,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16975(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16973 in k16969 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16807(t7,t6);}

/* k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16807(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16807,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16810,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16810(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16871,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_16871(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16906,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_16906(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16935,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_16935(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16933 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16935,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16950,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16948 in k16933 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16942(2,t2,C_SCHEME_UNDEFINED);}}

/* k16940 in k16933 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16810(t5,t4);}

/* k16904 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16908 in k16904 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16810(t7,t6);}

/* k16869 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16875,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16875(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16873 in k16869 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16810(t7,t6);}

/* k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16810(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16810,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16813,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16813(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k16811 in k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16816,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16828,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[405],"next-in-weighting"),t4);}

/* a16827 in k16811 in k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16828,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16834,a[2]=t2,a[3]=((C_word)li203),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16850,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t5,t3);}

/* k16848 in a16827 in k16811 in k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a16833 in a16827 in k16811 in k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16834(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16834,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16842,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   random-item-datum");
f_16611(t3,t2);}

/* k16840 in a16833 in a16827 in k16811 in k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k16814 in k16811 in k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   recalc-weightings");
f_17551(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_16819(2,t3,C_SCHEME_UNDEFINED);}}

/* k16817 in k16814 in k16811 in k16808 in k16805 in k16802 in k16795 in k16789 in k16786 in make-weighting in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16701(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16701,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16692(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16692,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[395]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16683(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16683,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16665(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16665,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16647(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16647,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16629(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16629,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16620(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16620,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[395]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16611(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16611,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[395]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16389(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16389,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16392,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16439,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t2);}

/* k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16442,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16465,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16584,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13320(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_16442(t4,C_SCHEME_UNDEFINED);}}

/* k16582 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(((C_word*)t0)[2],t1);}

/* k16463 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16472,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16519,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13122(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16546,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13122(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16565,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13122(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16580,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13122(t3,((C_word*)t0)[2]);}}

/* k16578 in k16463 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16580,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   rotate-items");
t3=((C_word*)t0)[5];
f_16392(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k16563 in k16463 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16565,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   rotate-items");
t3=((C_word*)t0)[5];
f_16392(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k16544 in k16463 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16546,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   rotate-items");
t3=((C_word*)t0)[6];
f_16392(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k16517 in k16463 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16519,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 84   rotate-items");
t4=((C_word*)t0)[7];
f_16392(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k16470 in k16463 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16442(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k16440 in k16437 in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16392(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_16392,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16398,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li192),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_16398(t10,t1,t3);}

/* do2280 in rotate-items in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_16398(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16398,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16414,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   list-set!");
t7=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k16412 in do2280 in rotate-items in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16417,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   list-set!");
t4=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k16415 in k16412 in do2280 in rotate-items in next-in-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16417,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16398(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15915(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15915r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15915r(t0,t1,t2,t3);}}

static void C_ccall f_15915r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15919,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16379,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   append");
t7=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15919(t8,t7);}}

/* k16377 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15919(t3,t2);}

/* k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15919(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15919,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15922,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15922(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[377]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16252,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[377]);}
else{
t22=t21;
f_16252(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[378]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16287,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[378]);}
else{
t23=t22;
f_16287(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[393]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16322,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[393]);}
else{
t24=t23;
f_16322(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16351,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)t0)[4]);}
else{
t24=t23;
f_16351(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16349 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16351,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16366,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16364 in k16349 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16358(2,t2,C_SCHEME_UNDEFINED);}}

/* k16356 in k16349 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15922(t5,t4);}

/* k16320 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16322,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16326,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16326(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16324 in k16320 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15922(t7,t6);}

/* k16285 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16291(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16289 in k16285 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15922(t7,t6);}

/* k16250 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16256,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16256(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16254 in k16250 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15922(t7,t6);}

/* k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15922(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15922,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15925(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16117,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_16117(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16152,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_16152(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[393]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16187,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[393]);}
else{
t8=t7;
f_16187(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16216,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_16216(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16214 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16216,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16231,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16229 in k16214 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16223(2,t2,C_SCHEME_UNDEFINED);}}

/* k16221 in k16214 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15925(t5,t4);}

/* k16185 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16191,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16191(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16189 in k16185 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15925(t7,t6);}

/* k16150 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16156,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16156(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16154 in k16150 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15925(t7,t6);}

/* k16115 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16121,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16121(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16119 in k16115 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15925(t7,t6);}

/* k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15925(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15925,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15928,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15928(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15982,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_15982(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16017,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_16017(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[393]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16052,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[393]);}
else{
t8=t7;
f_16052(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16081,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_16081(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16079 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16081,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16088,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16096,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16094 in k16079 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16088(2,t2,C_SCHEME_UNDEFINED);}}

/* k16086 in k16079 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15928(t5,t4);}

/* k16050 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16052,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16056,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16056(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16054 in k16050 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15928(t7,t6);}

/* k16015 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_16021(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16019 in k16015 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_16021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15928(t7,t6);}

/* k15980 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15986,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15986(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15984 in k15980 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15928(t7,t6);}

/* k15926 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15928(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15928,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15931,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15931(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k15929 in k15926 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15934,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k15932 in k15929 in k15926 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15934,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15940,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15949,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[392],"next-in-rotation"),t5);}

/* a15948 in k15932 in k15929 in k15926 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15949,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15961,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t3);}

/* k15959 in a15948 in k15932 in k15929 in k15926 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15938 in k15932 in k15929 in k15926 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13311(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15941 in k15938 in k15932 in k15929 in k15926 in k15923 in k15920 in k15917 in make-rotation in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15839(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15839,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15843,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t3,t2);}

/* k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15846,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15862,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-length");
f_13122(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_15846(2,t4,C_SCHEME_UNDEFINED);}}

/* k15860 in k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15862,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15872,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranint");
f_7378(t3,t1);}

/* k15870 in k15860 in k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15872,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15874,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li188),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15874(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2180 in k15870 in k15860 in k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15874(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15874,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15891,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 84   list-set!");
t10=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k15889 in do2180 in k15870 in k15860 in k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15894,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   list-set!");
t3=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k15892 in k15889 in do2180 in k15870 in k15860 in k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15894,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15905,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   ffi_ranint");
f_7378(t3,((C_word*)t0)[2]);}

/* k15903 in k15892 in k15889 in do2180 in k15870 in k15860 in k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15874(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k15844 in k15841 in next-in-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15576(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15576r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15576r(t0,t1,t2,t3);}}

static void C_ccall f_15576r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15580,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15829,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   append");
t7=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15580(t8,t7);}}

/* k15827 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15580(t3,t2);}

/* k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15580(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15580,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15583,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15583(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15737,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_15737(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15772,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_15772(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15801,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_15801(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15799 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15801,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15808,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15816,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15814 in k15799 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15808(2,t2,C_SCHEME_UNDEFINED);}}

/* k15806 in k15799 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15583(t5,t4);}

/* k15770 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15776(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15774 in k15770 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15583(t7,t6);}

/* k15735 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15741(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15739 in k15735 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15583(t7,t6);}

/* k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15583(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15583,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15586,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15586(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15637,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_15637(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15672,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_15672(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15701,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_15701(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15699 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15701,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15708,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15716,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15714 in k15699 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15708(2,t2,C_SCHEME_UNDEFINED);}}

/* k15706 in k15699 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15586(t5,t4);}

/* k15670 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15676,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15676(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15674 in k15670 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15586(t7,t6);}

/* k15635 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15641(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15639 in k15635 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15586(t7,t6);}

/* k15584 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15586(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15586,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15589,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15589(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k15587 in k15584 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k15590 in k15587 in k15584 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15592,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15598,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15604,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[390],"next-in-heap"),t5);}

/* a15603 in k15590 in k15587 in k15584 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15604(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15604,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15616,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t3);}

/* k15614 in a15603 in k15590 in k15587 in k15584 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15596 in k15590 in k15587 in k15584 in k15581 in k15578 in make-heap in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15540(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15540,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15544,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t3,t2);}

/* k15542 in next-in-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15544,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15553,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15560,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13158(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15566,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 84   pattern-data-set!");
f_13095(t4,((C_word*)t0)[2],t5);}}

/* k15564 in k15542 in next-in-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k15558 in k15542 in next-in-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[2],t1,C_fix(1));}

/* k15551 in k15542 in next-in-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15293(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15293r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15293r(t0,t1,t2,t3);}}

static void C_ccall f_15293r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15297,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15297(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15297(t8,t7);}}

/* k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15297(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15297,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15300,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15300(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15446,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_15446(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15481,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_15481(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15510,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_15510(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15508 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15510,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15517,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15525,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15523 in k15508 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15517(2,t2,C_SCHEME_UNDEFINED);}}

/* k15515 in k15508 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15300(t5,t4);}

/* k15479 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15485(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15483 in k15479 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15300(t7,t6);}

/* k15444 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15450(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15448 in k15444 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15300(t7,t6);}

/* k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15300(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15300,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15303,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15303(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15346,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_15346(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15381,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_15381(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15410,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_15410(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15408 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15410,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15425,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15423 in k15408 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15417(2,t2,C_SCHEME_UNDEFINED);}}

/* k15415 in k15408 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15303(t5,t4);}

/* k15379 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15381,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15385,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15385(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15383 in k15379 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15303(t7,t6);}

/* k15344 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15350,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15350(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15348 in k15344 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15303(t7,t6);}

/* k15301 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15303(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15303,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15306,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15306(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k15304 in k15301 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15309,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k15307 in k15304 in k15301 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15309,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15315,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15317,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[388],"next-in-line"),t4);}

/* a15316 in k15307 in k15304 in k15301 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15317(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15317,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15325,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t3);}

/* k15323 in a15316 in k15307 in k15304 in k15301 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15313 in k15307 in k15304 in k15301 in k15298 in k15295 in make-line in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15078(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15078,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15082,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-cache");
f_13320(t3,t2);}

/* k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15082,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[380]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15088,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15112,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[380]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15291,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   palin-len");
f_14519(t8,t1);}}

/* k15289 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15291,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15244,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   palin-inc-set!");
f_14528(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_15088(2,t2,C_SCHEME_UNDEFINED);}}

/* k15242 in k15289 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15244,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[380]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15256,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_15256(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_15256(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_15256(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_15256(t7,C_SCHEME_FALSE);}}}

/* k15254 in k15242 in k15289 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15256(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15256,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15088(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15088(2,t4,t3);}}

/* k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15115,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   palin-len");
f_14519(t2,((C_word*)t0)[2]);}

/* k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15115,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15121,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[380]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t7=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k15119 in k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   palin-inc-set!");
f_14528(t2,((C_word*)t0)[2],C_fix(1));}

/* k15122 in k15119 in k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15212,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_15212(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_15212(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_15212(t5,C_SCHEME_FALSE);}}}

/* k15210 in k15122 in k15119 in k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15212(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_15127(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_15127(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_15127(t3,t2);}}

/* k15125 in k15122 in k15119 in k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_15127(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15127,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15206,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13086(t3,((C_word*)t0)[2]);}

/* k15204 in k15125 in k15122 in k15119 in k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logtest");
t2=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(2));}

/* k15131 in k15125 in k15122 in k15119 in k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15133,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13158(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_15088(2,t2,C_SCHEME_UNDEFINED);}}

/* k15134 in k15131 in k15125 in k15122 in k15119 in k15113 in k15110 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15136,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[385]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[386]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[3],t1,t2);}}}}

/* k15086 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[380]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[380]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t9=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k15089 in k15086 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t2,((C_word*)t0)[2]);}

/* k15096 in k15089 in k15086 in k15080 in next-in-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14608(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14608r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14608r(t0,t1,t2,t3);}}

static void C_ccall f_14608r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14612,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14612(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14612(t8,t7);}}

/* k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14612(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14612,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14615,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_14615(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[377]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14949,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t22=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[118],lf[377]);}
else{
t22=t21;
f_14949(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[378]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14984,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 84   error");
t23=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[118],lf[378]);}
else{
t23=t22;
f_14984(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[384]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15019,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[118],lf[384]);}
else{
t24=t23;
f_15019(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15048,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 84   error");
t24=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[109],((C_word*)t0)[4]);}
else{
t24=t23;
f_15048(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15046 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15048,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15063,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15061 in k15046 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15055(2,t2,C_SCHEME_UNDEFINED);}}

/* k15053 in k15046 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14615(t5,t4);}

/* k15017 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15019,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15023,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_15023(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15021 in k15017 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_15023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14615(t7,t6);}

/* k14982 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14988,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14988(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14986 in k14982 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14615(t7,t6);}

/* k14947 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14953(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14951 in k14947 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14615(t7,t6);}

/* k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14615(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14615,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14618,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14618(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14814,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_14814(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14849,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_14849(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[384]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14884,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[384]);}
else{
t8=t7;
f_14884(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14913,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_14913(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14911 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14913,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14920,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14928,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14926 in k14911 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14920(2,t2,C_SCHEME_UNDEFINED);}}

/* k14918 in k14911 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14618(t5,t4);}

/* k14882 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14888,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14888(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14886 in k14882 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14618(t7,t6);}

/* k14847 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14853,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14853(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14851 in k14847 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14618(t7,t6);}

/* k14812 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14818,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14818(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14816 in k14812 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14618(t7,t6);}

/* k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14618(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14618,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14621,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14621(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14679,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_14679(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14714,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_14714(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[384]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14749,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[118],lf[384]);}
else{
t8=t7;
f_14749(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14778,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[109],((C_word*)t0)[6]);}
else{
t8=t7;
f_14778(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14776 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14778,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14785,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14793,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14791 in k14776 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14785(2,t2,C_SCHEME_UNDEFINED);}}

/* k14783 in k14776 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14621(t5,t4);}

/* k14747 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14753(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14751 in k14747 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14621(t7,t6);}

/* k14712 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14718,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14718(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14716 in k14712 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14621(t7,t6);}

/* k14677 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14683,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14683(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14681 in k14677 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14621(t7,t6);}

/* k14619 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14621(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14621,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14624,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14624(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k14622 in k14619 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14627,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k14625 in k14622 in k14619 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14627,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14633,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14650,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[383],"next-in-palindrome"),t5);}

/* a14649 in k14625 in k14622 in k14619 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14650,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14658,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t3);}

/* k14656 in a14649 in k14625 in k14622 in k14619 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14631 in k14625 in k14622 in k14619 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14636,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[380],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 84   pattern-cache-set!");
f_13311(t2,((C_word*)t0)[4],t5);}

/* k14634 in k14631 in k14625 in k14622 in k14619 in k14616 in k14613 in k14610 in make-palindrome in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14528(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14528,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[380]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14519(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14519,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[380]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14447(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14447,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14451,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t3,t2);}

/* k14449 in next-in-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14454,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_14454(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_14454(t4,C_SCHEME_UNDEFINED);}}

/* k14452 in k14449 in next-in-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14192(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14192r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14192r(t0,t1,t2,t3);}}

static void C_ccall f_14192r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14196,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14196(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14196(t8,t7);}}

/* k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14196,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14199,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14199(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[377]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14353,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 84   error");
t18=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[118],lf[377]);}
else{
t18=t17;
f_14353(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[378]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14388,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[118],lf[378]);}
else{
t19=t18;
f_14388(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14417,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 84   error");
t19=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[109],((C_word*)t0)[4]);}
else{
t19=t18;
f_14417(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14415 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14417,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14432,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14430 in k14415 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14424(2,t2,C_SCHEME_UNDEFINED);}}

/* k14422 in k14415 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14199(t5,t4);}

/* k14386 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14392(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14390 in k14386 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14199(t7,t6);}

/* k14351 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14357(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14355 in k14351 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14199(t7,t6);}

/* k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14199,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14202,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14202(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[377]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14253,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 84   error");
t6=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],lf[377]);}
else{
t6=t5;
f_14253(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[378]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14288,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[118],lf[378]);}
else{
t7=t6;
f_14288(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14317,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[109],((C_word*)t0)[5]);}
else{
t7=t6;
f_14317(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14315 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14317,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14324,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14332,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   keyword?");
t6=C_retrieve(lf[112]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14330 in k14315 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[113],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14324(2,t2,C_SCHEME_UNDEFINED);}}

/* k14322 in k14315 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14202(t5,t4);}

/* k14286 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14292(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14290 in k14286 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14202(t7,t6);}

/* k14251 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[120],((C_word*)t0)[2]);}
else{
t4=t2;
f_14257(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14255 in k14251 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14202(t7,t6);}

/* k14200 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14202(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14202,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14205,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14205(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t3=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[105],((C_word*)t0)[2]);}}

/* k14203 in k14200 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14208,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   %alloc-pattern");
f_13379(t2);}

/* k14206 in k14203 in k14200 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14208,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14214,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14220,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   initialize-pattern");
f_13389(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[376],"next-in-cycle"),t5);}

/* a14219 in k14206 in k14203 in k14200 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14220,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14232,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data");
f_13104(t4,t3);}

/* k14230 in a14219 in k14206 in k14203 in k14200 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[375]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14212 in k14206 in k14203 in k14200 in k14197 in k14194 in make-cycle in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14077(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14077,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14190,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t3,t2);}

/* k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14190,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13158(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14087,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14090,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14175,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-stream");
f_12972(t7,t1);}

/* k14173 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14175,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14186,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   period-stream");
f_12972(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_14090(2,t2,C_SCHEME_UNDEFINED);}}

/* k14184 in k14173 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(((C_word*)t0)[2],t1);}

/* k14180 in k14173 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t4=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14172,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   period-length");
f_12954(t2,((C_word*)t0)[3]);}

/* k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14172,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14098,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[333]);
t7=t4;
f_14098(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 84   period-length");
f_12954(t4,((C_word*)t0)[3]);}}

/* k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14098,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14101,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14107,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14162,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13086(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_14107(2,t5,C_SCHEME_FALSE);}}

/* k14160 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logtest");
t2=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(8));}

/* k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14107,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14126,a[2]=t3,a[3]=((C_word)li173),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   map-pattern-data");
f_14031(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14101(t2,C_SCHEME_UNDEFINED);}}

/* a14125 in k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14126(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14126,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14155,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   reset-period");
f_14077(t3,t2);}

/* k14153 in a14125 in k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14155,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13158(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k14134 in k14153 in a14125 in k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14151,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-omit");
f_13008(t3,t1);}

/* k14149 in k14134 in k14153 in a14125 in k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14151,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-omit-set!");
f_12999(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14137 in k14134 in k14153 in a14125 in k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14139,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k14108 in k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14110,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 84   max");
t4=*((C_word*)lf[373]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_14101(t2,C_SCHEME_UNDEFINED);}}

/* k14118 in k14108 in k14105 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14101(t3,t2);}

/* k14099 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14101,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14104,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k14102 in k14099 in k14096 in k14170 in k14088 in k14085 in k14188 in reset-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14031(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14031,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[343]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_14022(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14022,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[343]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13730(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13730,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13737,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t3,t2);}

/* k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13737,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13158(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 84   obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}}

/* k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13740,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13743,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14011,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_12936(t5,t1);}

/* k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14011,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14003,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-reps");
f_13026(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_13743(2,t2,C_SCHEME_UNDEFINED);}}

/* k14001 in k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14003,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13995,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value-set!");
f_13167(t5,((C_word*)t0)[4],lf[369]);}
else{
t5=((C_word*)t0)[2];
f_13966(t5,C_SCHEME_UNDEFINED);}}

/* k13993 in k14001 in k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-state-set!");
f_13185(t2,((C_word*)t0)[2],lf[368]);}

/* k13996 in k13993 in k14001 in k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[369]);
t3=((C_word*)t0)[2];
f_13966(t3,t2);}

/* k13964 in k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13966(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13966,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_13972(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13989,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   reset-period");
f_14077(t4,((C_word*)t0)[2]);}}

/* k13987 in k13964 in k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13972(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k13970 in k13964 in k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13972(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13972,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[358]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value-set!");
f_13167(t3,((C_word*)t0)[2],lf[358]);}
else{
t2=((C_word*)t0)[3];
f_13743(2,t2,C_SCHEME_UNDEFINED);}}

/* k13974 in k13970 in k13964 in k14009 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-state-set!");
f_13185(((C_word*)t0)[3],((C_word*)t0)[2],lf[368]);}

/* k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13743,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13749,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-flags");
f_13086(t2,((C_word*)t0)[3]);}}

/* k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13749,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13755,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13841,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t11=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,t1,C_fix(1));}

/* k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13841,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13844,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13857,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   next-in-pattern");
f_14022(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13864,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13953,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t4=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],C_fix(8));}}

/* k13951 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13953,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13960,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   period-length");
f_12954(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13864(t2,C_SCHEME_FALSE);}}

/* k13958 in k13951 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13864(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13864,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13866,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li169),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13866(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13866(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13866,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13915,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li168),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_13915(t9,t5);}}

/* do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13915(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13915,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13140(t2,((C_word*)t0)[3]);}

/* k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13950,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(t1,lf[358]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13925,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13932,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13939,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   next-in-pattern");
f_14022(t4,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 84   next-in-pattern");
f_14022(t3,((C_word*)t0)[3]);}}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13937 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14075,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t2,t1);}

/* k14073 in k13937 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14075,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-period");
f_13158(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13932(2,t2,((C_word*)t0)[2]);}}

/* k14048 in k14073 in k13937 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14071,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-omit");
f_13008(t2,t1);}

/* k14069 in k14048 in k14073 in k13937 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14071,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14059,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14067,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-omit");
f_13008(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_13932(2,t2,((C_word*)t0)[2]);}}

/* k14065 in k14069 in k14048 in k14073 in k13937 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14067,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-omit-set!");
f_12999(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14057 in k14069 in k14048 in k14073 in k13937 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_14059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13932(2,t2,lf[358]);}

/* k13930 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13131(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13923 in k13948 in do1832 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13915(t2,((C_word*)t0)[2]);}

/* k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13913,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13140(t3,((C_word*)t0)[3]);}

/* k13911 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(((C_word*)t0)[2],t1);}

/* k13875 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13877,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13880,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13896,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13909,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13140(t5,((C_word*)t0)[3]);}

/* k13907 in k13875 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(((C_word*)t0)[2],t1);}

/* k13894 in k13875 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13896,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13900,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13904,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13140(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[368]);
t3=((C_word*)t0)[3];
f_13880(t3,t2);}}

/* k13902 in k13894 in k13875 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-state");
f_13194(((C_word*)t0)[2],t1);}

/* k13898 in k13894 in k13875 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13880(t3,t2);}

/* k13878 in k13875 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13880(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13880,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13883,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[3])[1],lf[358]))){
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13131(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_13883(2,t4,t3);}}

/* k13881 in k13878 in k13875 in k13871 in do1828 in k13862 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13866(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13855 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13131(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13842 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13848,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13853,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum");
f_13140(t3,((C_word*)t0)[2]);}

/* k13851 in k13842 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(((C_word*)t0)[2],t1);}

/* k13846 in k13842 in k13839 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[368]);
t4=((C_word*)t0)[2];
f_13755(2,t4,t3);}

/* k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13758,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],lf[368]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13800,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13812,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_12936(t4,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13815,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13835,a[2]=((C_word*)t0)[6],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t5=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],C_fix(64));}}

/* k13833 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13131(((C_word*)t0)[3],((C_word*)t0)[2],lf[358]);}
else{
t2=((C_word*)t0)[3];
f_13815(2,t2,C_SCHEME_UNDEFINED);}}

/* k13813 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t3=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(16));}

/* k13819 in k13813 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13821,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13832,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_12936(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13758(2,t2,C_SCHEME_UNDEFINED);}}

/* k13830 in k13819 in k13813 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13832,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13810 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13812,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 84   period-count-set!");
f_12927(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13798 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13803,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-datum-set!");
f_13131(t2,((C_word*)t0)[2],lf[358]);}

/* k13801 in k13798 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_13758(2,t3,t2);}

/* k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13794,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   period-count");
f_12936(t3,((C_word*)t0)[2]);}

/* k13792 in k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13794,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[368]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13789,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   period-reps");
f_13026(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_13761(2,t3,t2);}}

/* k13787 in k13792 in k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13789,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k13759 in k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13774,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_13764(t3,C_SCHEME_UNDEFINED);}}

/* k13772 in k13759 in k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13764(t3,t2);}

/* k13762 in k13759 in k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13764(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13764,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   pattern-state-set!");
f_13185(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13765 in k13762 in k13759 in k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13770,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value-set!");
f_13167(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13768 in k13765 in k13762 in k13759 in k13756 in k13753 in k13747 in k13741 in k13738 in k13735 in next-1 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13607(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_13607r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_13607r(t0,t1,t2,t3);}}

static void C_ccall f_13607r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13628,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li165),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_13628(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13666,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(t1,t2);}}

/* k13664 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13666,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13676,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k13674 in k13664 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13676,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13678,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li166),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13678(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1804 in k13674 in k13664 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13678(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13678,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_eqvp(((C_word*)t5)[1],lf[369]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13697,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13707,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   eop?");
t13=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k13705 in do1804 in k13674 in k13664 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13707,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_13697(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13712,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(t2,((C_word*)t0)[2]);}}

/* k13710 in k13705 in do1804 in k13674 in k13664 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13697(t3,t2);}

/* k13695 in do1804 in k13674 in k13664 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_13678(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1797 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13628(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13628,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13660,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   next-1");
f_13730(t4,((C_word*)t0)[2]);}}

/* k13658 in do1797 in next in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13660,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_13628(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13588(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13588,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13595,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t3,t2);}

/* k13593 in eod? in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13595,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13602,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value");
t3=C_retrieve2(lf[352],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[369]));}}

/* k13600 in k13593 in eod? in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   eod?");
t2=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13569(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13569,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13576,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t3,t2);}

/* k13574 in eop? in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13576,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13583,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-state");
f_13194(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[368]));}}

/* k13581 in k13574 in eop? in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   eop?");
t2=C_retrieve(lf[367]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13389(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13389,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13393,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 84   pattern-data-set!");
f_13095(t12,t2,t3);}

/* k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13396,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13399,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13402,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13405,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13559,a[2]=t3,a[3]=((C_word)li161),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   map-pattern-data");
f_14031(t4,t5,((C_word*)t0)[7]);}

/* a13558 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13559(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13559,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13566,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern?");
f_13071(t3,t2);}

/* k13564 in a13558 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13408,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13557,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t4=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t3=t2;
f_13408(t3,C_SCHEME_UNDEFINED);}}

/* k13555 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13408(t3,t2);}

/* k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13408(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13408,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13414,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13540,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t8=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}
else{
t7=(C_word)C_eqp(t4,lf[364]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13550,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t9=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}
else{
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[365],t4);}}}

/* k13548 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13414(2,t3,t2);}

/* k13538 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13414(2,t3,t2);}

/* k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13414,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[360]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13520,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t8=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(32));}
else{
t7=(C_word)C_eqp(t4,lf[362]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13530,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t9=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(64));}
else{
C_trace("ChickenBridge.scm: 84   error");
t8=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[363],t4);}}}

/* k13528 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13420(2,t3,t2);}

/* k13518 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13420(2,t3,t2);}

/* k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13483,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t4=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13483,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13491,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   lognot");
t4=*((C_word*)lf[3]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logtest");
t3=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k13495 in k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13497,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13501,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13505,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13509,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   lognot");
t5=*((C_word*)lf[3]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t3=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}}

/* k13511 in k13495 in k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13423(t3,t2);}

/* k13507 in k13495 in k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logand");
t2=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13503 in k13495 in k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(16));}

/* k13499 in k13495 in k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13423(t3,t2);}

/* k13489 in k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   logand");
t2=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13485 in k13481 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13423(t3,t2);}

/* k13421 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13423(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13423,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:*((C_word*)lf[10]+1));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t8=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k13424 in k13421 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13426,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13432,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_13432(t6,C_SCHEME_UNDEFINED);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13467,a[2]=t4,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   logior");
t7=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(2));}}

/* k13465 in k13424 in k13421 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13432(t3,t2);}

/* k13430 in k13424 in k13421 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13432(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13432,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13435,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13445,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 84   make-period");
f_12915(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 84   make-period");
f_12915(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k13443 in k13430 in k13424 in k13421 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t4=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k13433 in k13430 in k13424 in k13421 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13438,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t6=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k13436 in k13433 in k13430 in k13424 in k13421 in k13418 in k13412 in k13406 in k13403 in k13400 in k13397 in k13394 in k13391 in initialize-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13379(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13379,NULL,1,t1);}
t2=lf[358];
t3=lf[358];
t4=lf[358];
t5=*((C_word*)lf[10]+1);
t6=lf[359];
t7=lf[360];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[343],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13320(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13320,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13311(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13311,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13194(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13194,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13185(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13185,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_13176 in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_13176(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13176,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13167(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13167,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13158(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13158,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13140(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13140,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13131(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13131,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13122(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13122,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13104(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13104,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13095(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13095,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[343]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13086(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13086,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[343]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13071(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13071,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[343]));}

/* period-reps in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13026(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13026,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_13008(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13008,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12999(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12999,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12972(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12972,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12954(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12954,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12936(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12936,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[333]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12927(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12927,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[333]);
C_trace("ChickenBridge.scm: 84   ##sys#block-set!");
t5=*((C_word*)lf[335]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k12769 in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12915(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12915,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[333],t2,t3,t4,t5,t6,t7));}

/* parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12577(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12577,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12585,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12417,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_12417(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_12417(t12,(C_word)C_i_not(t11));}}

/* k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12417,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12424,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(t2,(C_word)C_a_i_list(&a,4,lf[138],lf[322],lf[143],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12425,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12450,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12452,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li136),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_12452(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12452(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12452,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[245]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_12462(t16,t13);}
else{
t13=t10;
f_12462(t13,C_SCHEME_UNDEFINED);}}}

/* k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12462(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12462,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t2,t3,((C_word*)t0)[3]);}

/* k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12466,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_12469(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[327],t5,lf[328]));}}

/* k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12521,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li134),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12530,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li135),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12529 in k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12530,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12520 in k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12521,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k12470 in k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12475,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   op-type?");
f_12425(t3,((C_word*)((C_word*)t0)[6])[1],lf[313]);}

/* k12489 in k12470 in k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12491,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_12475(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   op-type?");
f_12425(t2,((C_word*)((C_word*)t0)[6])[1],lf[326]);}}

/* k12496 in k12489 in k12470 in k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12498,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_12475(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[323],t2,lf[324],t3,lf[325]));}}
else{
t2=((C_word*)t0)[5];
f_12475(2,t2,C_SCHEME_UNDEFINED);}}

/* k12473 in k12470 in k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12475,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   append");
t6=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k12479 in k12473 in k12470 in k12467 in k12464 in k12460 in do1498 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_12452(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12448 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12585(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12425(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12425,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k12422 in k12415 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12424,2,t0,t1);}
t2=((C_word*)t0)[2];
f_12585(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k12583 in parse-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12585(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9512(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12163,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[316],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12185,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[319],t8,lf[320]));}
else{
t19=t17;
f_12185(2,t19,C_SCHEME_UNDEFINED);}}

/* k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12185,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[318]));}
else{
t9=t8;
f_12200(2,t9,C_SCHEME_UNDEFINED);}}

/* k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[106]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_12203(t6,t5);}
else{
t4=t2;
f_12203(t4,C_SCHEME_UNDEFINED);}}

/* k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12203(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12203,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12373,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li130),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12379,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li131),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12378 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12379,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12372 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12373,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   parse-then-else-dependents");
f_12032(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_12209(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12355,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9512(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k12353 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12209(t3,t2);}

/* k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12209,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   loop-operator-set!");
f_9259(t2,((C_word*)((C_word*)t0)[7])[1],lf[119]);}

/* k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12348,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t4=C_retrieve2(lf[132],"loop-looping");
f_9313(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k12346 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12348,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[216],t1);
C_trace("ChickenBridge.scm: 83   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12336,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[119],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12219,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_12232(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_12232(t7,(C_word)C_eqp(t6,lf[115]));}}

/* k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12232,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[317]));}
else{
t5=t4;
f_12239(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_12219(t2,C_SCHEME_UNDEFINED);}}

/* k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12242,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12295,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li128),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12309,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li129),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12308 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12309(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12309,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12294 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12303,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k12301 in a12294 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   parse-then-else-dependents");
f_12032(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k12240 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_12245(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12281,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9512(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k12279 in k12240 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12245(t3,t2);}

/* k12243 in k12240 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12245(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12245,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping");
t4=C_retrieve2(lf[132],"loop-looping");
f_9313(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k12272 in k12243 in k12240 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12274,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[216],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9319(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k12249 in k12272 in k12243 in k12240 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12254,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9319(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k12252 in k12249 in k12272 in k12243 in k12240 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12258,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 83   gather-clauses");
f_9512(t2,lf[119],t3);}

/* k12256 in k12252 in k12249 in k12272 in k12243 in k12240 in k12237 in k12230 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12219(t3,t2);}

/* k12217 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12219(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12219,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9319(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k12220 in k12217 in k12334 in k12210 in k12207 in k12204 in k12201 in k12198 in k12183 in parse-conditional in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12032(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12032,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12036,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12041,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li126),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_12041(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_12041(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12041,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11989,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t12,t10,t11);}}

/* k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11995,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_11995(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[313]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[314]);
t8=t2;
f_11995(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_11995(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_11995(t3,C_SCHEME_FALSE);}}

/* k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11995,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_12058(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[311],t6,lf[312]));}}

/* k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12061,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12131,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li124),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12144,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li125),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12143 in k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12144,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12130 in k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12139,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   append");
t3=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12137 in a12130 in k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k12059 in k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   append");
t4=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k12063 in k12059 in k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12065,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12070,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_12070(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[245]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[310]));}
else{
t10=t5;
f_12070(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[115]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_12070(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12108,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t10,t11,((C_word*)t0)[3]);}}}}

/* k12106 in k12063 in k12059 in k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_12070(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_12070(2,t2,C_SCHEME_UNDEFINED);}}

/* k12068 in k12063 in k12059 in k12056 in k11993 in k11987 in do1431 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_12041(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12034 in parse-then-else-dependents in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_12036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11931,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11938,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[307],t13,lf[308]));}
else{
t13=t11;
f_11938(2,t13,C_SCHEME_UNDEFINED);}}

/* k11936 in parse-return in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11938,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11969,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11967 in k11936 in parse-return in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11969,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11965,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k11963 in k11967 in k11936 in parse-return in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11965,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[138],lf[293],lf[143],t2));}

/* k11955 in k11967 in k11936 in parse-return in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11840,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11847,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[304],t15,lf[305]));}
else{
t15=t13;
f_11847(2,t15,C_SCHEME_UNDEFINED);}}

/* k11845 in parse-thereis in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11847,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11913 in k11845 in parse-thereis in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11915,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11858,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[301]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_11858(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[302]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_11858(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[303]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_11858(t9,t8);}
else{
t8=t4;
f_11858(t8,C_SCHEME_UNDEFINED);}}}}

/* k11856 in k11913 in k11845 in parse-thereis in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11858,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11869,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11885,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k11883 in k11856 in k11913 in k11845 in parse-thereis in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11885,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[138],lf[301],lf[143],t3,lf[146],t4));}

/* k11867 in k11856 in k11913 in k11845 in parse-thereis in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11774(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11774,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11785,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[298],t7,lf[299]));}
else{
t13=t12;
f_11785(2,t13,C_SCHEME_UNDEFINED);}}

/* k11783 in parse-while-until in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[296]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_11788(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[297]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[211],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_11788(t10,t9);}
else{
t5=t2;
f_11788(t5,C_SCHEME_UNDEFINED);}}}

/* k11786 in k11783 in parse-while-until in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11788(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11788,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11795,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[3])[1],lf[295]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(t2,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[143],t4));}

/* k11793 in k11786 in k11783 in parse-while-until in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11768(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11768,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[293],t2));}

/* parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11222,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11231,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11236,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11241,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11253,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[290],t7,lf[291]));}
else{
t30=t29;
f_11253(2,t30,C_SCHEME_UNDEFINED);}}

/* k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11253,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_11264(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[286]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11717,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[289]));}
else{
t11=t9;
f_11717(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_11264(2,t9,C_SCHEME_UNDEFINED);}}}

/* k11715 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11723,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 83   loop-variable?");
f_9589(t2,t3);}

/* k11721 in k11715 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11723,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_11264(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[287],t2,lf[288]));}}

/* k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11149,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li118),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11149(t9,t2,C_SCHEME_FALSE);}

/* do1253 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11149(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11149,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11163,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11174,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   loop-collectors");
t9=C_retrieve2(lf[129],"loop-collectors");
f_9277(3,t9,t7,t8);}}

/* k11172 in do1253 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11174,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11109,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li117),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_11109(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do1245 in k11172 in do1253 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11109(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11109,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11122,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_11122(t12,t11);}
else{
t10=t6;
f_11122(t10,C_SCHEME_UNDEFINED);}}}

/* k11120 in do1245 in k11172 in do1253 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_11109(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11161 in do1253 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_11149(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11268,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11271,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11701,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11705,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   collector-type");
f_11236(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_11271(2,t6,t5);}}

/* k11703 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[283];
t3=lf[284];
t4=lf[285];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_11701(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_11701(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_11701(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_11701(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k11699 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11701,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_11271(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11697,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   collector-type");
f_11236(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11695 in k11699 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11697,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[280],t1,lf[281],((C_word*)t0)[2],lf[282]));}

/* k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11274,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[263]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[264]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11317,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11355,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_11355(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 83   gensym");
t10=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[265]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11384,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   collector-acc");
f_11241(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[266]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[267]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t8=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[270]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[117]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_11491(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[274]);
t10=t8;
f_11491(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[279])));}}}}

/* k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11491(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11491,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11494,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11607,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11665,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t9,((C_word*)((C_word*)t0)[13])[1],lf[278]);}
else{
t9=t8;
f_11607(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11600,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   collector-acc");
f_11241(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_11274(t2,C_SCHEME_UNDEFINED);}}

/* k11598 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_11494(t6,t5);}

/* k11663 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11665,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11607(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k11605 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11607(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11607,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[277]);}

/* k11609 in k11605 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11611,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t4=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[276]);}

/* k11613 in k11609 in k11605 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11615,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,((C_word*)((C_word*)t0)[11])[1],lf[275]);}

/* k11655 in k11613 in k11609 in k11605 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11657,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11653,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k11651 in k11655 in k11613 in k11609 in k11605 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11653,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11631,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-collector");
f_11231(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k11629 in k11651 in k11655 in k11613 in k11609 in k11605 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11631,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11494(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_11494(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11492 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11494(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11494,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11497,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[117]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[271]);
t5=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[272],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[273],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_11497(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[274]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[271],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[272],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_11497(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[272],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[273],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_11497(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k11495 in k11492 in k11489 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11497(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11497,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_11274(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_11274(t2,C_SCHEME_UNDEFINED);}}

/* k11394 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11396,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[266]);
t3=(C_truep(t2)?lf[178]:lf[182]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11402,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11446,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_11446(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 83   gensym");
t9=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[269]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11479,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   collector-acc");
f_11241(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k11477 in k11394 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11402(t3,t2);}

/* k11444 in k11394 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11446,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k11470 in k11444 in k11394 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11472,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11454,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-collector");
f_11231(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k11452 in k11470 in k11444 in k11394 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11454,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11402(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[268],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_11402(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11400 in k11394 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11402,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k11440 in k11400 in k11394 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11442,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[211],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[268],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[119],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[216],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_11274(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k11382 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11317(t3,t2);}

/* k11353 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11355,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k11375 in k11353 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11377,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11363,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-collector");
f_11231(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k11361 in k11375 in k11353 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11363,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11317(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_11317(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11315 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11317(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11317,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[263]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11274(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_11274(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k11272 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11274,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11281,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k11283 in k11272 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11289,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11287 in k11283 in k11272 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11293,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11291 in k11287 in k11283 in k11272 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11297,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11295 in k11291 in k11287 in k11283 in k11272 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11297,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[138],((C_word*)t0)[5],lf[139],((C_word*)t0)[4],lf[141],((C_word*)t0)[3],lf[143],((C_word*)t0)[2],lf[146],t1,lf[140],t2,lf[142],C_SCHEME_END_OF_LIST));}

/* k11279 in k11272 in k11269 in k11266 in k11262 in k11251 in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11241(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11241,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11236(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11236,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_11231(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11231,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11063(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11063,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11074,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[260],t6,lf[261]));}
else{
t12=t11;
f_11074(2,t12,C_SCHEME_UNDEFINED);}}

/* k11072 in parse-initially in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11074,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11089,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(t6,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[141],t7));}

/* k11087 in k11072 in parse-initially in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11025,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11036,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[257],t6,lf[258]));}
else{
t12=t11;
f_11036(2,t12,C_SCHEME_UNDEFINED);}}

/* k11034 in parse-finally in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11036,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11051,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(t6,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[2],lf[145],t7));}

/* k11049 in k11034 in parse-finally in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10958(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10958,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10969,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10978,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li110),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_10978(t16,t12);}

/* do1202 in parse-do in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10978(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10978,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_10988(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t3,t4,((C_word*)t0)[5]);}}

/* k10986 in do1202 in parse-do in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10988,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[254],((C_word*)t0)[4],lf[255]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11001,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_10978(t7,((C_word*)t0)[7]);}}

/* k10999 in k10986 in do1202 in parse-do in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_11001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k10967 in parse-do in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10976,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(t2,(C_word)C_a_i_list(&a,4,lf[138],((C_word*)t0)[3],lf[143],((C_word*)((C_word*)t0)[2])[1]));}

/* k10974 in k10967 in parse-do in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10765,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10772,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10825,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li108),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_10825(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10825(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10825,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_10835(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t7,t8,((C_word*)t0)[5]);}}

/* k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10835,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10846,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10949,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   loop-variable?");
f_9589(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k10947 in k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10949,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10855,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[243],((C_word*)((C_word*)t0)[10])[1],lf[244]));}
else{
t4=t3;
f_10855(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[245]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10877,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[246]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10906,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10914,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[247]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[231]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[248]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_10846(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[249],((C_word*)((C_word*)t0)[10])[1],lf[250]));}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[251],((C_word*)((C_word*)t0)[10])[1],lf[252]));}}}}}

/* k10912 in k10947 in k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10914,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10877(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10904 in k10947 in k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10906,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10877(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10875 in k10947 in k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_10846(2,t6,t5);}

/* k10853 in k10947 in k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10858,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[241],((C_word*)((C_word*)t0)[8])[1],lf[242]));}
else{
t3=t2;
f_10858(2,t3,C_SCHEME_UNDEFINED);}}

/* k10856 in k10853 in k10947 in k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_10846(2,t6,t5);}

/* k10844 in k10833 in do1158 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10825(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k10770 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10775,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[240]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10815,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10823,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_10775(2,t3,C_SCHEME_UNDEFINED);}}}

/* k10821 in k10770 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10823,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10775(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10813 in k10770 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10815,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10775(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10773 in k10770 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10782,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10786,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10784 in k10773 in k10770 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10790,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10788 in k10784 in k10773 in k10770 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10790,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[138],lf[239],lf[139],((C_word*)t0)[2],lf[141],t1));}

/* k10780 in k10773 in k10770 in parse-with in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10623(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10623,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10633,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10671,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li106),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_10671(t22,t18,C_SCHEME_FALSE);}

/* do1120 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10671(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10671,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_10681(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t5,t6,((C_word*)t0)[5]);}}

/* k10679 in do1120 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10681,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10692,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[237]));}
else{
t7=t6;
f_10692(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10690 in k10679 in do1120 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10692,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10695,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[231]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10704,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[232]));}
else{
t6=t5;
f_10704(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[233]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10729,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[234]));}
else{
t7=t6;
f_10729(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[235],((C_word*)((C_word*)t0)[12])[1],lf[236]));}}}

/* k10727 in k10690 in k10679 in do1120 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10729,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_10695(2,t10,t9);}

/* k10702 in k10690 in k10679 in do1120 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10704,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_10695(2,t8,t7);}

/* k10693 in k10690 in k10679 in do1120 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10671(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10631 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10640,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10669,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k10667 in k10631 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10669,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[138],lf[171],lf[139],t2,lf[141],t3,lf[143],t4,lf[144],t5));}

/* k10638 in k10631 in parse-general-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10272,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10279,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t8=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[229]);}

/* k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10279,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10285,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10513,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li104),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_10513(t25,t21,C_SCHEME_FALSE);}

/* do1053 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10513(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10513,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_10523(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t5,t6,((C_word*)t0)[4]);}}

/* k10521 in do1053 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10523,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10534,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[228]));}
else{
t7=t6;
f_10534(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10532 in k10521 in do1053 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10534,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10537,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[218]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10546,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_10546(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[227]);
if(C_truep(t6)){
t7=t5;
f_10546(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[210]);
t8=t5;
f_10546(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[214])));}}}

/* k10544 in k10532 in k10521 in do1053 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10546(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10546,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10549,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[220],((C_word*)((C_word*)t0)[9])[1],lf[221],((C_word*)((C_word*)t0)[10])[1],lf[222]));}
else{
t3=t2;
f_10549(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[201]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[223]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[210]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[224]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_10537(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[225],((C_word*)((C_word*)t0)[9])[1],lf[226]));}}}

/* k10547 in k10544 in k10532 in k10521 in do1053 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_10537(2,t7,t6);}

/* k10535 in k10532 in k10521 in do1053 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10513(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10511,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10507,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10507,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10296,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10313,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t7=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[213]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[214]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10389,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[217],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_10389(t9,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[217],((C_word*)t0)[4]);
t9=t7;
f_10389(t9,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10453,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_10453(t10,(C_word)C_eqp(t9,lf[219]));}
else{
t9=t8;
f_10453(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_10418(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k10451 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10453(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10453,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10418(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10418(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k10416 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10418,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10434,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[218]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[63],((C_word*)t0)[6]);
t5=t2;
f_10434(t5,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_10434(t4,(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k10432 in k10416 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10434(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10434,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[104],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10296(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10387 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10389,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[215],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[216],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10296(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k10311 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[212]);}

/* k10314 in k10311 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10380,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t2,((C_word*)t0)[7],C_fix(0));}

/* k10378 in k10314 in k10311 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10380,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k10374 in k10378 in k10314 in k10311 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10376,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[93],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[179],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[92],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[178],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[211],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_10296(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k10294 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10296,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10303,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10305 in k10294 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10307,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[138],lf[171],lf[139],t1,lf[142],((C_word*)((C_word*)t0)[5])[1],lf[141],((C_word*)((C_word*)t0)[4])[1],lf[143],((C_word*)((C_word*)t0)[3])[1],lf[144],((C_word*)((C_word*)t0)[2])[1]));}

/* k10301 in k10294 in k10505 in k10509 in k10283 in k10277 in parse-sequence-iteration in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10225,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[207]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10240,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li101),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10258,a[2]=t2,a[3]=((C_word)li102),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a10257 in parse-repeat in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10258,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,t1,t2,t4);}

/* a10239 in parse-repeat in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10252,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[208]);}

/* k10250 in a10239 in parse-repeat in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10252,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[171],t1,lf[180],t2);
C_trace("ChickenBridge.scm: 83   parse-numerical-for");
t4=C_retrieve2(lf[170],"parse-numerical-for");
f_9843(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9843(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9843,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9853,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10052,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li99),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_10052(t31,t27,C_SCHEME_FALSE);}

/* do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10052(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10052,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_10062(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t5,t6,((C_word*)t0)[6]);}}

/* k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10062,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[205]));}
else{
t7=t6;
f_10073(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10073,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10076,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[184]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[174]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10088,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[185],((C_word*)((C_word*)t0)[12])[1],lf[186],((C_word*)((C_word*)t0)[9])[1],lf[187]));}
else{
t7=t6;
f_10088(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[180]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10109,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[188],((C_word*)((C_word*)t0)[12])[1],lf[189],((C_word*)((C_word*)t0)[3])[1],lf[190]));}
else{
t8=t7;
f_10109(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[191]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10130,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[192],((C_word*)((C_word*)t0)[12])[1],lf[193],((C_word*)((C_word*)t0)[3])[1],lf[194]));}
else{
t9=t8;
f_10130(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[176]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10151,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[195],((C_word*)((C_word*)t0)[12])[1],lf[196],((C_word*)((C_word*)t0)[3])[1],lf[197]));}
else{
t10=t9;
f_10151(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[183]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10172,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[198],((C_word*)((C_word*)t0)[12])[1],lf[199],((C_word*)((C_word*)t0)[3])[1],lf[200]));}
else{
t11=t10;
f_10172(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[201]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10193,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[202]));}
else{
t12=t11;
f_10193(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[203],((C_word*)((C_word*)t0)[12])[1],lf[204]));}}}}}}}

/* k10191 in k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_10076(2,t6,t5);}

/* k10170 in k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10076(2,t7,t6);}

/* k10149 in k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10076(2,t7,t6);}

/* k10128 in k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10076(2,t7,t6);}

/* k10107 in k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10076(2,t7,t6);}

/* k10086 in k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_10076(2,t7,t6);}

/* k10074 in k10071 in k10060 in do954 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10052(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_9856(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[184]);
t5=t2;
f_9856(t5,t4);}}

/* k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9856,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9859,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[174]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10019,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_10019(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[183]);
t6=t4;
f_10019(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[176])));}}

/* k10017 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_10019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[175]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[176]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[177]);
t5=((C_word*)t0)[2];
f_9859(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[178]);
t5=((C_word*)t0)[2];
f_9859(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[179]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[180]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[181]);
t5=((C_word*)t0)[2];
f_9859(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[182]);
t5=((C_word*)t0)[2];
f_9859(t5,t4);}}}

/* k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9859,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9862,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9990,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10010,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k10008 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_10010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10010,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9862(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9988 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9990,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9862(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9862(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9862,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9865,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_9865(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9955,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t5=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[173]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_9865(t5,t4);}}

/* k9953 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t2,t1,C_SCHEME_FALSE);}

/* k9970 in k9953 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9972,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_9865(t8,t7);}

/* k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9865,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9904,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   gensym");
t7=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[172]);}
else{
t6=t5;
f_9872(t6,C_SCHEME_UNDEFINED);}}

/* k9902 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9907,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9922,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9938,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   make-binding");
f_9595(t3,t1,C_SCHEME_FALSE);}}

/* k9936 in k9902 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9938,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9907(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9920 in k9902 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9922,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9907(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9905 in k9902 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9907,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9872(t4,t3);}

/* k9870 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9872,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9879,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9883,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t4=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9881 in k9870 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9887,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   reverse");
t3=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9885 in k9881 in k9870 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9887,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[138],lf[171],lf[139],((C_word*)t0)[2],lf[141],t1,lf[144],t2,lf[142],t4));}

/* k9877 in k9870 in k9863 in k9860 in k9857 in k9854 in k9851 in parse-numerical-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9761,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9765,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t5,t6,t4);}

/* k9763 in parse-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9765,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[163]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9783,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   loop-variable?");
f_9589(t4,t3);}}

/* k9781 in k9763 in parse-for in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9783,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[164]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[165],t6,lf[166],lf[167]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 83   loop-error");
f_9601(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[168],t2,lf[169]));}}

/* loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9601(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9601,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9657,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9609,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_9609(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do905 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9609(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9609,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9619,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_9619(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_9619(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   loop-op?");
f_9583(t6,t8,((C_word*)t0)[2]);}}}

/* k9617 in do905 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9619,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 83   reverse");
t2=*((C_word*)lf[161]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_9609(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9660,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[160]);}

/* k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9666,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9738,a[2]=t4,a[3]=((C_word)li95),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_9738(t6,t2,((C_word*)t0)[2]);}

/* do915 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9738(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9738,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9748,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   display");
t5=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k9746 in do915 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9738(t3,((C_word*)t0)[2],t2);}

/* k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9669,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[159]);}

/* k9670 in k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9675,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 83   display");
t3=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[155]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9692,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li94),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_9692(t6,t2,((C_word*)t0)[2]);}}

/* do920 in k9670 in k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9692(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9692,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9702,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 83   display");
t5=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[158]);}
else{
t5=t3;
f_9702(2,t5,C_SCHEME_UNDEFINED);}}}

/* k9700 in do920 in k9670 in k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9705,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 83   display");
t4=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k9703 in k9700 in do920 in k9670 in k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9708,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[156]:lf[157]);
C_trace("ChickenBridge.scm: 83   display");
t6=*((C_word*)lf[154]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k9706 in k9703 in k9700 in do920 in k9670 in k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9692(t3,((C_word*)t0)[2],t2);}

/* k9673 in k9670 in k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9678,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   newline");
t3=*((C_word*)lf[153]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9676 in k9673 in k9670 in k9667 in k9664 in k9661 in k9658 in k9655 in loop-error in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   error");
t2=*((C_word*)lf[84]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[152]);}

/* make-binding in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9595(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9595,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9589(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9589,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9583(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9583,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9512(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9512,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9514,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9553,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t5,t3,C_retrieve2(lf[128],"loop-bindings"));}

/* k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9557,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t2,((C_word*)t0)[2],C_retrieve2(lf[129],"loop-collectors"));}

/* k9555 in k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t2,((C_word*)t0)[2],C_retrieve2(lf[130],"loop-initially"));}

/* k9559 in k9555 in k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9565,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t2,((C_word*)t0)[2],C_retrieve2(lf[131],"loop-end-tests"));}

/* k9563 in k9559 in k9555 in k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9565,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t2,((C_word*)t0)[2],C_retrieve2(lf[132],"loop-looping"));}

/* k9567 in k9563 in k9559 in k9555 in k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t2,((C_word*)t0)[2],C_retrieve2(lf[134],"loop-stepping"));}

/* k9571 in k9567 in k9563 in k9559 in k9555 in k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t2,((C_word*)t0)[2],C_retrieve2(lf[135],"loop-finally"));}

/* k9575 in k9571 in k9567 in k9563 in k9559 in k9555 in k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9577,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9581,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 83   gather-clause");
f_9514(t2,((C_word*)t0)[2],C_retrieve2(lf[136],"loop-returning"));}

/* k9579 in k9575 in k9571 in k9567 in k9563 in k9559 in k9555 in k9551 in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9581,2,t0,t1);}
C_trace("ChickenBridge.scm: 83   make-loop-clause");
f_9361(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[138],((C_word*)t0)[9],lf[139],((C_word*)t0)[8],lf[140],((C_word*)t0)[7],lf[141],((C_word*)t0)[6],lf[142],((C_word*)t0)[5],lf[143],((C_word*)t0)[4],lf[144],((C_word*)t0)[3],lf[145],((C_word*)t0)[2],lf[146],t1));}

/* gather-clause in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9514(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9514,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9520,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li88),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_9520(t8,t1,C_SCHEME_END_OF_LIST);}

/* do888 in gather-clause in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9520(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9520,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9531,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9542,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 83   accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k9540 in do888 in gather-clause in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   append");
t2=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k9529 in do888 in gather-clause in gather-clauses in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_9520(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9361(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9361,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9376,a[2]=t5,a[3]=t3,a[4]=((C_word)li86),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9376(t7,t1,t2);}}

/* do876 in make-loop-clause in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9376(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9376,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9389,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[138]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 83   loop-operator-set!");
f_9259(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[139]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_9389(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[140]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_9389(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[141]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_9389(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[142]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_9389(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[143]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 83   loop-looping-set!");
f_9319(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[144]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_9389(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[145]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_9389(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[146]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_9389(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_9389(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k9387 in do876 in make-loop-clause in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9376(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9349(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9349,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9337(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9337,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9325(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9325,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9319(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9319,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9313(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9313,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9301,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9289(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9289,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9277(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9277,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9265(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9265,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k9249 in k9246 in k9243 in k9240 in k9237 in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_9259(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9259,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8950(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8950,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9111,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9203,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a9202 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9203(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9203,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9217,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9221,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   symbol->string");
t6=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9232,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9236,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   symbol->string");
t5=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k9234 in a9202 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   gensym");
t2=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9230 in a9202 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9232,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k9219 in a9202 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   gensym");
t2=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9215 in a9202 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9217,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9114,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[126]);}

/* k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9117,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 82   gensym");
t3=C_retrieve(lf[124]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[125]);}

/* k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9120,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9197,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li73),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a9196 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9197(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9197,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8963,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9022,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   symbol->string");
t10=*((C_word*)lf[123]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k9020 in a9196 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   string->keyword");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k8961 in a9196 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8963,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[84],lf[118],t1);
t4=(C_word)C_a_i_list(&a,3,lf[119],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[114],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[104],t5);
t7=(C_word)C_a_i_list(&a,3,lf[84],lf[120],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[65],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[119],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[121],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[111],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9127,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[114]+1),((C_word*)t0)[2]);}

/* k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9173,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9187,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a9186 in k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9187(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9187,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k9171 in k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9173,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 82   append");
t5=*((C_word*)lf[117]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k9137 in k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9143,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9147,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9165,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li71),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[116]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a9164 in k9137 in k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9165(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9165,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[104],t4);
t8=(C_word)C_a_i_list(&a,2,lf[63],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9100,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[84],lf[109],t5);
t13=(C_word)C_a_i_list(&a,3,lf[110],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[63],t4);
t15=(C_word)C_a_i_list(&a,3,lf[111],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[112],t11);
t17=(C_word)C_a_i_list(&a,3,lf[84],lf[113],t11);
t18=(C_word)C_a_i_list(&a,3,lf[110],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[111],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[114],t4);
t21=(C_word)C_a_i_list(&a,3,lf[111],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[115],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k9098 in a9164 in k9137 in k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9100,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[108],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[106],((C_word*)t0)[2],t3));}

/* k9145 in k9137 in k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9147,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[104],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[84],lf[105],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[106],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[107]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k9141 in k9137 in k9125 in k9118 in k9115 in k9112 in k9109 in expand-optkeys in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_9143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9143,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[102],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[103],((C_word*)t0)[2],t3));}

/* position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8906(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8906r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8906r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8906r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8914,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8940,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t7=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8938 in position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8944,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   start");
t3=C_retrieve(lf[98]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8942 in k8938 in position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8948,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   end");
t3=C_retrieve(lf[99]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8946 in k8942 in k8938 in position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8912 in position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8918,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[97]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8923,a[2]=((C_word*)t0)[3],a[3]=((C_word)li68),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8932,a[2]=((C_word*)t0)[3],a[3]=((C_word)li69),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 82   %mapseq");
f_8788(t2,t3,((C_word*)t0)[2],C_SCHEME_FALSE,C_retrieve(lf[98]),C_retrieve(lf[99]));}

/* f_8932 in k8912 in position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8932(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8932,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8923 in k8912 in position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8923(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8923,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8931,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8929 */
static void C_ccall f_8931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8916 in k8912 in position in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   with-optkeys");
t2=C_retrieve(lf[96]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8862r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8862r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8862r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8870,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8896,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t7=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8894 in find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8900,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   start");
t3=C_retrieve(lf[98]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8898 in k8894 in find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8904,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   end");
t3=C_retrieve(lf[99]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8902 in k8898 in k8894 in find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8868 in find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8874,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[97]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8879,a[2]=((C_word*)t0)[3],a[3]=((C_word)li65),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8888,a[2]=((C_word*)t0)[3],a[3]=((C_word)li66),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 82   %mapseq");
f_8788(t2,t3,((C_word*)t0)[2],C_SCHEME_TRUE,C_retrieve(lf[98]),C_retrieve(lf[99]));}

/* f_8888 in k8868 in find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8888(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8888,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8879 in k8868 in find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8879(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8879,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8887,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t4=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8885 */
static void C_ccall f_8887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8872 in k8868 in find in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   with-optkeys");
t2=C_retrieve(lf[96]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* %mapseq in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8788(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8788,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8792,a[2]=t8,a[3]=t5,a[4]=t1,a[5]=t3,a[6]=t10,a[7]=t2,a[8]=t4,a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_listp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[77]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[89]+1));
t14=t11;
f_8792(2,t14,t13);}
else{
if(C_truep((C_word)C_i_stringp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[90]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[91]+1));
t14=t11;
f_8792(2,t14,t13);}
else{
if(C_truep((C_word)C_i_vectorp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[92]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[93]+1));
t14=t11;
f_8792(2,t14,t13);}
else{
C_trace("ChickenBridge.scm: 82   error");
t12=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[94],t3);}}}}

/* k8790 in %mapseq in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8792,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_8799(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 82   seqlen");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[5]);}}

/* k8797 in k8790 in %mapseq in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8799,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8801,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t3,a[7]=((C_word)li63),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_8801(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do744 in k8797 in k8790 in %mapseq in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8801(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8801,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_i_greater_or_equalp(t2,t3);
t11=(C_truep(t10)?t10:((C_word*)t8)[1]);
if(C_truep(t11)){
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t9)[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8815,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t9,a[5]=t8,a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,a[10]=t7,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 82   getter");
t13=((C_word*)((C_word*)t0)[3])[1];
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,((C_word*)t0)[2],t2);}}

/* k8813 in do744 in k8797 in k8790 in %mapseq in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8815,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8818,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8828,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 82   func");
t5=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[10])[1]);}

/* k8826 in k8813 in do744 in k8797 in k8790 in %mapseq in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_truep(((C_word*)t0)[7])?((C_word*)((C_word*)t0)[6])[1]:((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t5=((C_word*)t0)[2];
f_8818(t5,t4);}
else{
t2=((C_word*)t0)[2];
f_8818(t2,C_SCHEME_UNDEFINED);}}

/* k8816 in k8813 in do744 in k8797 in k8790 in %mapseq in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8818(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8818,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_8801(t3,((C_word*)t0)[6],t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8702(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_8702r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8702r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8702r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_eqvp(t5,t3))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_cadr(t2));}
else{
t6=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[87],"list-prop"),t6,t3,t4);}}}

/* list-index in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8584(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8584,NULL,3,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8590,a[2]=t2,a[3]=t5,a[4]=((C_word)li60),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8590(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do698 in list-index in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8590(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8590,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8600,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8614,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k8612 in do698 in list-index in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_8600(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_8600(t2,C_SCHEME_UNDEFINED);}}

/* k8598 in do698 in list-index in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8600,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_8590(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8485(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8485r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8485r(t0,t1,t2,t3);}}

static void C_ccall f_8485r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8489,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 82   error");
t5=*((C_word*)lf[84]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[85],t2);}
else{
t5=t4;
f_8489(2,t5,C_SCHEME_UNDEFINED);}}

/* k8487 in make-list in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8489,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8491,a[2]=t3,a[3]=((C_word)li57),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8514,a[2]=t5,a[3]=((C_word)li58),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 82   l1");
t8=((C_word*)t3)[1];
f_8491(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 82   l2");
t9=((C_word*)t5)[1];
f_8514(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 82   l1");
t10=((C_word*)t3)[1];
f_8491(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k8487 in make-list in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8514(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8514,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8531,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k8529 in l2 in k8487 in make-list in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8535,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 82   l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_8514(t4,t2,t3,((C_word*)t0)[2]);}

/* k8533 in k8529 in l2 in k8487 in make-list in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8535,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k8487 in make-list in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8491(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8491,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8508,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 82   l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k8506 in l1 in k8487 in make-list in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8508,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* concat in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8323(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_8323r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8323r(t0,t1,t2);}}

static void C_ccall f_8323r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8332,a[2]=t5,a[3]=t7,a[4]=t3,a[5]=((C_word)li55),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8332(t9,t1,t2);}

/* do659 in concat in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8332(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8332,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_nullp(t3);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8348,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_8348(2,t6,t4);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_car(t2);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8370,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=((C_word)li54),tmp=(C_word)a,a+=5,tmp));
t11=((C_word*)t9)[1];
f_8370(t11,t5,t7);}
else{
t7=(C_word)C_i_car(t2);
t8=(C_word)C_a_i_list(&a,1,t7);
t9=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[2])+1,t10);
t12=t5;
f_8348(2,t12,t11);}}}}

/* do664 in do659 in concat in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8370(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8370,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t1=t10;
t2=t11;
goto loop;}}

/* k8346 in do659 in concat in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8332(t3,((C_word*)t0)[2],t2);}

/* tail in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8233(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8233,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   tail");
t5=C_retrieve(lf[81]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8185(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8185,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8219,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   butlast");
t8=C_retrieve(lf[80]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k8217 in butlast in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8219,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8162(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8162,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   last");
t5=C_retrieve(lf[79]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8156(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8156,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8141(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8141,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8127(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8127,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8117(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8117,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8107(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8107,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8097(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8097,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8087(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8087,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* shell in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8077(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8077,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7185,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7185(2,t4,C_SCHEME_FALSE);}}

/* k7183 in shell in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub68(C_SCHEME_UNDEFINED,t1));}

/* print-output in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8046(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_8046r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_8046r(t0,t1,t2,t3);}}

static void C_ccall f_8046r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
t4=(C_word)C_vemptyp(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8056,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t6=t5;
f_8056(t6,t4);}
else{
t6=(C_word)C_i_vector_ref(t3,C_fix(0));
t7=t5;
f_8056(t7,(C_word)C_i_not(t6));}}

/* k8054 in print-output in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_8056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 82   ffi_print_output");
f_7152(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 82   ffi_print_output");
f_7152(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_TRUE);}}

/* print-error in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8040(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8040,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7143,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7143(2,t4,C_SCHEME_FALSE);}}

/* k7141 in print-error in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub48(C_SCHEME_UNDEFINED,t1));}

/* quit in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_8034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8034,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub45(C_SCHEME_UNDEFINED));}

/* ffi_mp_send_data in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7781(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7781,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub409(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* ffi_pathname_type in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7614(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7614,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7623,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7623(2,t5,C_SCHEME_FALSE);}}

/* k7621 in ffi_pathname_type in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub329(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[56]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* ffi_sched_score_time in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7543,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub296(t2));}

/* ffi_sched_score_mode_p in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7533,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub290(C_SCHEME_UNDEFINED));}

/* ffi_sched_stop in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7523(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7523,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub285(C_SCHEME_UNDEFINED,t3));}

/* ffi_sched_sprout in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7503(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7503,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=(C_word)C_i_foreign_fixnum_argumentp(t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub273(C_SCHEME_UNDEFINED,t2,t5,t6));}

/* ffi_ranbrown in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7472,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub247(t2));}

/* ffi_ranpink in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7469,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub244(t2));}

/* ffi_ranpoisson in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7462(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7462,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub241(C_SCHEME_UNDEFINED,t3));}

/* ffi_rancauchy in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7459,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub237(t2));}

/* ffi_rangamma in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7452(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7452,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub233(t3,t4));}

/* ffi_ranexp in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7434(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7434,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub221(t3,t4));}

/* ffi_rangauss in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7423(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7423,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub215(t4,t5,t6));}

/* ffi_ranmiddle in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7420,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub210(t2));}

/* ffi_ranhigh in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7417,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub207(t2));}

/* ffi_ranlow in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7414,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub204(t2));}

/* ffi_ranfloat in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7385(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7385,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub187(t3,t4));}

/* ffi_ranint in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7378(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7378,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub183(C_SCHEME_UNDEFINED,t3));}

/* ffi_ranseed in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7375(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7375,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub179(C_SCHEME_UNDEFINED,t2));}

/* ffi_keynum_to_hertz in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7354(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7354,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub165(t3,t4));}

/* ffi_geoseg in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7335,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub157(t6,t7,t8,t9,t10));}

/* ffi_explseg in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7316,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub146(t6,t7,t8,t9,t10));}

/* ffi_scaler_to_cents in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7302(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7302,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub134(C_SCHEME_UNDEFINED,t3));}

/* ffi_cents_to_scaler in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7295(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7295,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub129(t3,t4));}

/* ffi_rhythm_to_seconds in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7280(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7280,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub122(t5,t6,t7,t8));}

/* ffi_quantize in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7269(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7269,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub114(t4,t5,t6));}

/* ffi_float_to_fixnum in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7262(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7262,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub109(C_SCHEME_UNDEFINED,t3));}

/* ffi_rescale in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7208(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7208,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub85(t8,t9,t10,t11,t12,t13,t14));}

/* ffi_print_output in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7152(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7152,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7157,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7157(2,t5,C_SCHEME_FALSE);}}

/* k7155 in ffi_print_output in k7131 in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub55(C_SCHEME_UNDEFINED,t1,((C_word*)t0)[2]));}

/* read-from-string in k6948 in k6945 in k6942 in k6939 */
static void C_fcall f_7031(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7031,NULL,2,t1,t2);}
C_trace("ChickenBridge.scm: 80   call-with-input-string");
t3=C_retrieve(lf[25]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,*((C_word*)lf[26]+1));}

/* hash-ref in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7025,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 80   hash-table-ref/default");
t4=C_retrieve(lf[23]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* make-eq-hash-table in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7018,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   make-hash-table");
t2=C_retrieve(lf[16]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[19]+1));}

/* make-equal-hash-table in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7012,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   make-hash-table");
t2=C_retrieve(lf[16]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[17]+1));}

/* list-set! in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_7002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7002,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* logtest in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6982,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6994,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   logand");
t5=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,t3);}

/* k6992 in logtest in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_zerop(t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_not(t2));}

/* logior in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6976(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6976r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6976r(t0,t1,t2);}}

static void C_ccall f_6976r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[8]+1),t2);}

/* logxor in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6970(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6970r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6970r(t0,t1,t2);}}

static void C_ccall f_6970r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[6]+1),t2);}

/* lognot in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6964(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6964r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6964r(t0,t1,t2);}}

static void C_ccall f_6964r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[4]+1),t2);}

/* logand in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6958(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6958r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6958r(t0,t1,t2);}}

static void C_ccall f_6958r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[2]+1),t2);}

/* ash in k6948 in k6945 in k6942 in k6939 */
static void C_ccall f_6952(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6952,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_arithmetic_shift(&a,2,t2,t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2986] = {
{"toplevelChickenBridge.scm",(void*)C_cm_toplevel},
{"f_6941ChickenBridge.scm",(void*)f_6941},
{"f_6944ChickenBridge.scm",(void*)f_6944},
{"f_6947ChickenBridge.scm",(void*)f_6947},
{"f_6950ChickenBridge.scm",(void*)f_6950},
{"f_7133ChickenBridge.scm",(void*)f_7133},
{"f_45881ChickenBridge.scm",(void*)f_45881},
{"f_9239ChickenBridge.scm",(void*)f_9239},
{"f_45875ChickenBridge.scm",(void*)f_45875},
{"f_12595ChickenBridge.scm",(void*)f_12595},
{"f_12598ChickenBridge.scm",(void*)f_12598},
{"f_12764ChickenBridge.scm",(void*)f_12764},
{"f_12760ChickenBridge.scm",(void*)f_12760},
{"f_12750ChickenBridge.scm",(void*)f_12750},
{"f_12605ChickenBridge.scm",(void*)f_12605},
{"f_12609ChickenBridge.scm",(void*)f_12609},
{"f_12612ChickenBridge.scm",(void*)f_12612},
{"f_12623ChickenBridge.scm",(void*)f_12623},
{"f_12631ChickenBridge.scm",(void*)f_12631},
{"f_12703ChickenBridge.scm",(void*)f_12703},
{"f_12711ChickenBridge.scm",(void*)f_12711},
{"f_12707ChickenBridge.scm",(void*)f_12707},
{"f_12699ChickenBridge.scm",(void*)f_12699},
{"f_12695ChickenBridge.scm",(void*)f_12695},
{"f_12667ChickenBridge.scm",(void*)f_12667},
{"f_12663ChickenBridge.scm",(void*)f_12663},
{"f_12627ChickenBridge.scm",(void*)f_12627},
{"f_9242ChickenBridge.scm",(void*)f_9242},
{"f_45861ChickenBridge.scm",(void*)f_45861},
{"f_9245ChickenBridge.scm",(void*)f_9245},
{"f_45832ChickenBridge.scm",(void*)f_45832},
{"f_45836ChickenBridge.scm",(void*)f_45836},
{"f_9248ChickenBridge.scm",(void*)f_9248},
{"f_45829ChickenBridge.scm",(void*)f_45829},
{"f_9251ChickenBridge.scm",(void*)f_9251},
{"f_45687ChickenBridge.scm",(void*)f_45687},
{"f_12777ChickenBridge.scm",(void*)f_12777},
{"f_12909ChickenBridge.scm",(void*)f_12909},
{"f_12780ChickenBridge.scm",(void*)f_12780},
{"f_12791ChickenBridge.scm",(void*)f_12791},
{"f_12799ChickenBridge.scm",(void*)f_12799},
{"f_12823ChickenBridge.scm",(void*)f_12823},
{"f_12826ChickenBridge.scm",(void*)f_12826},
{"f_12834ChickenBridge.scm",(void*)f_12834},
{"f_12842ChickenBridge.scm",(void*)f_12842},
{"f_12862ChickenBridge.scm",(void*)f_12862},
{"f_12858ChickenBridge.scm",(void*)f_12858},
{"f_12838ChickenBridge.scm",(void*)f_12838},
{"f_12830ChickenBridge.scm",(void*)f_12830},
{"f_12819ChickenBridge.scm",(void*)f_12819},
{"f_12795ChickenBridge.scm",(void*)f_12795},
{"f_12771ChickenBridge.scm",(void*)f_12771},
{"f_22892ChickenBridge.scm",(void*)f_22892},
{"f_45459ChickenBridge.scm",(void*)f_45459},
{"f_45685ChickenBridge.scm",(void*)f_45685},
{"f_45493ChickenBridge.scm",(void*)f_45493},
{"f_45505ChickenBridge.scm",(void*)f_45505},
{"f_45509ChickenBridge.scm",(void*)f_45509},
{"f_45513ChickenBridge.scm",(void*)f_45513},
{"f_45669ChickenBridge.scm",(void*)f_45669},
{"f_45519ChickenBridge.scm",(void*)f_45519},
{"f_45539ChickenBridge.scm",(void*)f_45539},
{"f_45542ChickenBridge.scm",(void*)f_45542},
{"f_45550ChickenBridge.scm",(void*)f_45550},
{"f_45557ChickenBridge.scm",(void*)f_45557},
{"f_45560ChickenBridge.scm",(void*)f_45560},
{"f_45564ChickenBridge.scm",(void*)f_45564},
{"f_45571ChickenBridge.scm",(void*)f_45571},
{"f_45574ChickenBridge.scm",(void*)f_45574},
{"f_45578ChickenBridge.scm",(void*)f_45578},
{"f_45585ChickenBridge.scm",(void*)f_45585},
{"f_45529ChickenBridge.scm",(void*)f_45529},
{"f_45482ChickenBridge.scm",(void*)f_45482},
{"f_45472ChickenBridge.scm",(void*)f_45472},
{"f_45475ChickenBridge.scm",(void*)f_45475},
{"f_22895ChickenBridge.scm",(void*)f_22895},
{"f_23876ChickenBridge.scm",(void*)f_23876},
{"f_45364ChickenBridge.scm",(void*)f_45364},
{"f_45377ChickenBridge.scm",(void*)f_45377},
{"f_45453ChickenBridge.scm",(void*)f_45453},
{"f_45380ChickenBridge.scm",(void*)f_45380},
{"f_45385ChickenBridge.scm",(void*)f_45385},
{"f_45437ChickenBridge.scm",(void*)f_45437},
{"f_45407ChickenBridge.scm",(void*)f_45407},
{"f_45421ChickenBridge.scm",(void*)f_45421},
{"f_45433ChickenBridge.scm",(void*)f_45433},
{"f_45410ChickenBridge.scm",(void*)f_45410},
{"f_23896ChickenBridge.scm",(void*)f_23896},
{"f_45358ChickenBridge.scm",(void*)f_45358},
{"f_24225ChickenBridge.scm",(void*)f_24225},
{"f_28952ChickenBridge.scm",(void*)f_28952},
{"f_45255ChickenBridge.scm",(void*)f_45255},
{"f_45318ChickenBridge.scm",(void*)f_45318},
{"f_45322ChickenBridge.scm",(void*)f_45322},
{"f_45336ChickenBridge.scm",(void*)f_45336},
{"f_45258ChickenBridge.scm",(void*)f_45258},
{"f_45278ChickenBridge.scm",(void*)f_45278},
{"f_45282ChickenBridge.scm",(void*)f_45282},
{"f_29057ChickenBridge.scm",(void*)f_29057},
{"f_45233ChickenBridge.scm",(void*)f_45233},
{"f_30612ChickenBridge.scm",(void*)f_30612},
{"f_45213ChickenBridge.scm",(void*)f_45213},
{"f_30615ChickenBridge.scm",(void*)f_30615},
{"f_45173ChickenBridge.scm",(void*)f_45173},
{"f_30618ChickenBridge.scm",(void*)f_30618},
{"f_45079ChickenBridge.scm",(void*)f_45079},
{"f_45083ChickenBridge.scm",(void*)f_45083},
{"f_45086ChickenBridge.scm",(void*)f_45086},
{"f_45104ChickenBridge.scm",(void*)f_45104},
{"f_45107ChickenBridge.scm",(void*)f_45107},
{"f_45138ChickenBridge.scm",(void*)f_45138},
{"f_45110ChickenBridge.scm",(void*)f_45110},
{"f_45116ChickenBridge.scm",(void*)f_45116},
{"f_45069ChickenBridge.scm",(void*)f_45069},
{"f_45063ChickenBridge.scm",(void*)f_45063},
{"f_30621ChickenBridge.scm",(void*)f_30621},
{"f_44967ChickenBridge.scm",(void*)f_44967},
{"f_44969ChickenBridge.scm",(void*)f_44969},
{"f_44973ChickenBridge.scm",(void*)f_44973},
{"f_44976ChickenBridge.scm",(void*)f_44976},
{"f_44979ChickenBridge.scm",(void*)f_44979},
{"f_45023ChickenBridge.scm",(void*)f_45023},
{"f_45015ChickenBridge.scm",(void*)f_45015},
{"f_44982ChickenBridge.scm",(void*)f_44982},
{"f_29391ChickenBridge.scm",(void*)f_29391},
{"f_29437ChickenBridge.scm",(void*)f_29437},
{"f_29404ChickenBridge.scm",(void*)f_29404},
{"f_45005ChickenBridge.scm",(void*)f_45005},
{"f_44985ChickenBridge.scm",(void*)f_44985},
{"f_44988ChickenBridge.scm",(void*)f_44988},
{"f_44959ChickenBridge.scm",(void*)f_44959},
{"f_30624ChickenBridge.scm",(void*)f_30624},
{"f_44931ChickenBridge.scm",(void*)f_44931},
{"f_30627ChickenBridge.scm",(void*)f_30627},
{"f_44895ChickenBridge.scm",(void*)f_44895},
{"f_44907ChickenBridge.scm",(void*)f_44907},
{"f_44903ChickenBridge.scm",(void*)f_44903},
{"f_44877ChickenBridge.scm",(void*)f_44877},
{"f_44871ChickenBridge.scm",(void*)f_44871},
{"f_30630ChickenBridge.scm",(void*)f_30630},
{"f_44785ChickenBridge.scm",(void*)f_44785},
{"f_44789ChickenBridge.scm",(void*)f_44789},
{"f_44792ChickenBridge.scm",(void*)f_44792},
{"f_44795ChickenBridge.scm",(void*)f_44795},
{"f_44808ChickenBridge.scm",(void*)f_44808},
{"f_44754ChickenBridge.scm",(void*)f_44754},
{"f_44758ChickenBridge.scm",(void*)f_44758},
{"f_44773ChickenBridge.scm",(void*)f_44773},
{"f_44748ChickenBridge.scm",(void*)f_44748},
{"f_30633ChickenBridge.scm",(void*)f_30633},
{"f_44634ChickenBridge.scm",(void*)f_44634},
{"f_44650ChickenBridge.scm",(void*)f_44650},
{"f_44661ChickenBridge.scm",(void*)f_44661},
{"f_44628ChickenBridge.scm",(void*)f_44628},
{"f_30689ChickenBridge.scm",(void*)f_30689},
{"f_44495ChickenBridge.scm",(void*)f_44495},
{"f_44518ChickenBridge.scm",(void*)f_44518},
{"f_44515ChickenBridge.scm",(void*)f_44515},
{"f_44489ChickenBridge.scm",(void*)f_44489},
{"f_30692ChickenBridge.scm",(void*)f_30692},
{"f_44343ChickenBridge.scm",(void*)f_44343},
{"f_44361ChickenBridge.scm",(void*)f_44361},
{"f_44370ChickenBridge.scm",(void*)f_44370},
{"f_44337ChickenBridge.scm",(void*)f_44337},
{"f_30695ChickenBridge.scm",(void*)f_30695},
{"f_44290ChickenBridge.scm",(void*)f_44290},
{"f_44294ChickenBridge.scm",(void*)f_44294},
{"f_44297ChickenBridge.scm",(void*)f_44297},
{"f_44313ChickenBridge.scm",(void*)f_44313},
{"f_44272ChickenBridge.scm",(void*)f_44272},
{"f_44266ChickenBridge.scm",(void*)f_44266},
{"f_30698ChickenBridge.scm",(void*)f_30698},
{"f_44190ChickenBridge.scm",(void*)f_44190},
{"f_30837ChickenBridge.scm",(void*)f_30837},
{"f_44116ChickenBridge.scm",(void*)f_44116},
{"f_44123ChickenBridge.scm",(void*)f_44123},
{"f_44110ChickenBridge.scm",(void*)f_44110},
{"f_30840ChickenBridge.scm",(void*)f_30840},
{"f_44006ChickenBridge.scm",(void*)f_44006},
{"f_44014ChickenBridge.scm",(void*)f_44014},
{"f_43980ChickenBridge.scm",(void*)f_43980},
{"f_43997ChickenBridge.scm",(void*)f_43997},
{"f_43988ChickenBridge.scm",(void*)f_43988},
{"f_43974ChickenBridge.scm",(void*)f_43974},
{"f_30843ChickenBridge.scm",(void*)f_30843},
{"f_43930ChickenBridge.scm",(void*)f_43930},
{"f_30846ChickenBridge.scm",(void*)f_30846},
{"f_43848ChickenBridge.scm",(void*)f_43848},
{"f_43859ChickenBridge.scm",(void*)f_43859},
{"f_43861ChickenBridge.scm",(void*)f_43861},
{"f_43890ChickenBridge.scm",(void*)f_43890},
{"f_43826ChickenBridge.scm",(void*)f_43826},
{"f_43842ChickenBridge.scm",(void*)f_43842},
{"f_43820ChickenBridge.scm",(void*)f_43820},
{"f_30849ChickenBridge.scm",(void*)f_30849},
{"f_43749ChickenBridge.scm",(void*)f_43749},
{"f_43753ChickenBridge.scm",(void*)f_43753},
{"f_43760ChickenBridge.scm",(void*)f_43760},
{"f_43715ChickenBridge.scm",(void*)f_43715},
{"f_43735ChickenBridge.scm",(void*)f_43735},
{"f_43739ChickenBridge.scm",(void*)f_43739},
{"f_43731ChickenBridge.scm",(void*)f_43731},
{"f_43709ChickenBridge.scm",(void*)f_43709},
{"f_30852ChickenBridge.scm",(void*)f_30852},
{"f_43581ChickenBridge.scm",(void*)f_43581},
{"f_43617ChickenBridge.scm",(void*)f_43617},
{"f_43585ChickenBridge.scm",(void*)f_43585},
{"f_43601ChickenBridge.scm",(void*)f_43601},
{"f_43613ChickenBridge.scm",(void*)f_43613},
{"f_43609ChickenBridge.scm",(void*)f_43609},
{"f_43506ChickenBridge.scm",(void*)f_43506},
{"f_43549ChickenBridge.scm",(void*)f_43549},
{"f_43553ChickenBridge.scm",(void*)f_43553},
{"f_43513ChickenBridge.scm",(void*)f_43513},
{"f_43524ChickenBridge.scm",(void*)f_43524},
{"f_43500ChickenBridge.scm",(void*)f_43500},
{"f_30855ChickenBridge.scm",(void*)f_30855},
{"f_43480ChickenBridge.scm",(void*)f_43480},
{"f_43474ChickenBridge.scm",(void*)f_43474},
{"f_30858ChickenBridge.scm",(void*)f_30858},
{"f_43454ChickenBridge.scm",(void*)f_43454},
{"f_43458ChickenBridge.scm",(void*)f_43458},
{"f_43446ChickenBridge.scm",(void*)f_43446},
{"f_30861ChickenBridge.scm",(void*)f_30861},
{"f_43426ChickenBridge.scm",(void*)f_43426},
{"f_43430ChickenBridge.scm",(void*)f_43430},
{"f_43418ChickenBridge.scm",(void*)f_43418},
{"f_30864ChickenBridge.scm",(void*)f_30864},
{"f_43398ChickenBridge.scm",(void*)f_43398},
{"f_43402ChickenBridge.scm",(void*)f_43402},
{"f_43390ChickenBridge.scm",(void*)f_43390},
{"f_30867ChickenBridge.scm",(void*)f_30867},
{"f_43370ChickenBridge.scm",(void*)f_43370},
{"f_43374ChickenBridge.scm",(void*)f_43374},
{"f_43362ChickenBridge.scm",(void*)f_43362},
{"f_30870ChickenBridge.scm",(void*)f_30870},
{"f_43261ChickenBridge.scm",(void*)f_43261},
{"f_43231ChickenBridge.scm",(void*)f_43231},
{"f_43255ChickenBridge.scm",(void*)f_43255},
{"f_43225ChickenBridge.scm",(void*)f_43225},
{"f_30873ChickenBridge.scm",(void*)f_30873},
{"f_43175ChickenBridge.scm",(void*)f_43175},
{"f_43177ChickenBridge.scm",(void*)f_43177},
{"f_43181ChickenBridge.scm",(void*)f_43181},
{"f_43209ChickenBridge.scm",(void*)f_43209},
{"f_43201ChickenBridge.scm",(void*)f_43201},
{"f_43197ChickenBridge.scm",(void*)f_43197},
{"f_43184ChickenBridge.scm",(void*)f_43184},
{"f_43167ChickenBridge.scm",(void*)f_43167},
{"f_30876ChickenBridge.scm",(void*)f_30876},
{"f_43114ChickenBridge.scm",(void*)f_43114},
{"f_43116ChickenBridge.scm",(void*)f_43116},
{"f_43120ChickenBridge.scm",(void*)f_43120},
{"f_43151ChickenBridge.scm",(void*)f_43151},
{"f_43143ChickenBridge.scm",(void*)f_43143},
{"f_43139ChickenBridge.scm",(void*)f_43139},
{"f_43123ChickenBridge.scm",(void*)f_43123},
{"f_43126ChickenBridge.scm",(void*)f_43126},
{"f_43106ChickenBridge.scm",(void*)f_43106},
{"f_30879ChickenBridge.scm",(void*)f_30879},
{"f_43056ChickenBridge.scm",(void*)f_43056},
{"f_43070ChickenBridge.scm",(void*)f_43070},
{"f_43062ChickenBridge.scm",(void*)f_43062},
{"f_43021ChickenBridge.scm",(void*)f_43021},
{"f_43054ChickenBridge.scm",(void*)f_43054},
{"f_43015ChickenBridge.scm",(void*)f_43015},
{"f_30882ChickenBridge.scm",(void*)f_30882},
{"f_42962ChickenBridge.scm",(void*)f_42962},
{"f_42966ChickenBridge.scm",(void*)f_42966},
{"f_42979ChickenBridge.scm",(void*)f_42979},
{"f_42971ChickenBridge.scm",(void*)f_42971},
{"f_42919ChickenBridge.scm",(void*)f_42919},
{"f_42952ChickenBridge.scm",(void*)f_42952},
{"f_42913ChickenBridge.scm",(void*)f_42913},
{"f_30885ChickenBridge.scm",(void*)f_30885},
{"f_42833ChickenBridge.scm",(void*)f_42833},
{"f_42827ChickenBridge.scm",(void*)f_42827},
{"f_30888ChickenBridge.scm",(void*)f_30888},
{"f_42596ChickenBridge.scm",(void*)f_42596},
{"f_42600ChickenBridge.scm",(void*)f_42600},
{"f_42608ChickenBridge.scm",(void*)f_42608},
{"f_42631ChickenBridge.scm",(void*)f_42631},
{"f_42634ChickenBridge.scm",(void*)f_42634},
{"f_42637ChickenBridge.scm",(void*)f_42637},
{"f_42640ChickenBridge.scm",(void*)f_42640},
{"f_42700ChickenBridge.scm",(void*)f_42700},
{"f_42707ChickenBridge.scm",(void*)f_42707},
{"f_42717ChickenBridge.scm",(void*)f_42717},
{"f_42727ChickenBridge.scm",(void*)f_42727},
{"f_42741ChickenBridge.scm",(void*)f_42741},
{"f_42751ChickenBridge.scm",(void*)f_42751},
{"f_42761ChickenBridge.scm",(void*)f_42761},
{"f_42771ChickenBridge.scm",(void*)f_42771},
{"f_42643ChickenBridge.scm",(void*)f_42643},
{"f_42667ChickenBridge.scm",(void*)f_42667},
{"f_42646ChickenBridge.scm",(void*)f_42646},
{"f_42553ChickenBridge.scm",(void*)f_42553},
{"f_42586ChickenBridge.scm",(void*)f_42586},
{"f_42547ChickenBridge.scm",(void*)f_42547},
{"f_30891ChickenBridge.scm",(void*)f_30891},
{"f_42465ChickenBridge.scm",(void*)f_42465},
{"f_42469ChickenBridge.scm",(void*)f_42469},
{"f_42475ChickenBridge.scm",(void*)f_42475},
{"f_42495ChickenBridge.scm",(void*)f_42495},
{"f_42439ChickenBridge.scm",(void*)f_42439},
{"f_42449ChickenBridge.scm",(void*)f_42449},
{"f_42433ChickenBridge.scm",(void*)f_42433},
{"f_30894ChickenBridge.scm",(void*)f_30894},
{"f_42248ChickenBridge.scm",(void*)f_42248},
{"f_42252ChickenBridge.scm",(void*)f_42252},
{"f_42258ChickenBridge.scm",(void*)f_42258},
{"f_42267ChickenBridge.scm",(void*)f_42267},
{"f_42305ChickenBridge.scm",(void*)f_42305},
{"f_42297ChickenBridge.scm",(void*)f_42297},
{"f_42274ChickenBridge.scm",(void*)f_42274},
{"f_42278ChickenBridge.scm",(void*)f_42278},
{"f_42180ChickenBridge.scm",(void*)f_42180},
{"f_42199ChickenBridge.scm",(void*)f_42199},
{"f_42234ChickenBridge.scm",(void*)f_42234},
{"f_42205ChickenBridge.scm",(void*)f_42205},
{"f_42209ChickenBridge.scm",(void*)f_42209},
{"f_42223ChickenBridge.scm",(void*)f_42223},
{"f_42212ChickenBridge.scm",(void*)f_42212},
{"f_42193ChickenBridge.scm",(void*)f_42193},
{"f_42174ChickenBridge.scm",(void*)f_42174},
{"f_30897ChickenBridge.scm",(void*)f_30897},
{"f_41902ChickenBridge.scm",(void*)f_41902},
{"f_31420ChickenBridge.scm",(void*)f_31420},
{"f_41854ChickenBridge.scm",(void*)f_41854},
{"f_41846ChickenBridge.scm",(void*)f_41846},
{"f_31423ChickenBridge.scm",(void*)f_31423},
{"f_41726ChickenBridge.scm",(void*)f_41726},
{"f_31429ChickenBridge.scm",(void*)f_31429},
{"f_31913ChickenBridge.scm",(void*)f_31913},
{"f_31947ChickenBridge.scm",(void*)f_31947},
{"f_31939ChickenBridge.scm",(void*)f_31939},
{"f_31935ChickenBridge.scm",(void*)f_31935},
{"f_31920ChickenBridge.scm",(void*)f_31920},
{"f_31924ChickenBridge.scm",(void*)f_31924},
{"f_31917ChickenBridge.scm",(void*)f_31917},
{"f_31453ChickenBridge.scm",(void*)f_31453},
{"f_31906ChickenBridge.scm",(void*)f_31906},
{"f_31902ChickenBridge.scm",(void*)f_31902},
{"f_31460ChickenBridge.scm",(void*)f_31460},
{"f_31777ChickenBridge.scm",(void*)f_31777},
{"f_31798ChickenBridge.scm",(void*)f_31798},
{"f_31800ChickenBridge.scm",(void*)f_31800},
{"f_31814ChickenBridge.scm",(void*)f_31814},
{"f_31867ChickenBridge.scm",(void*)f_31867},
{"f_31817ChickenBridge.scm",(void*)f_31817},
{"f_31852ChickenBridge.scm",(void*)f_31852},
{"f_31820ChickenBridge.scm",(void*)f_31820},
{"f_31833ChickenBridge.scm",(void*)f_31833},
{"f_31845ChickenBridge.scm",(void*)f_31845},
{"f_31837ChickenBridge.scm",(void*)f_31837},
{"f_31823ChickenBridge.scm",(void*)f_31823},
{"f_31787ChickenBridge.scm",(void*)f_31787},
{"f_31463ChickenBridge.scm",(void*)f_31463},
{"f_31741ChickenBridge.scm",(void*)f_31741},
{"f_31767ChickenBridge.scm",(void*)f_31767},
{"f_31752ChickenBridge.scm",(void*)f_31752},
{"f_31466ChickenBridge.scm",(void*)f_31466},
{"f_31681ChickenBridge.scm",(void*)f_31681},
{"f_31691ChickenBridge.scm",(void*)f_31691},
{"f_31694ChickenBridge.scm",(void*)f_31694},
{"f_31715ChickenBridge.scm",(void*)f_31715},
{"f_31697ChickenBridge.scm",(void*)f_31697},
{"f_31701ChickenBridge.scm",(void*)f_31701},
{"f_31649ChickenBridge.scm",(void*)f_31649},
{"f_31652ChickenBridge.scm",(void*)f_31652},
{"f_31469ChickenBridge.scm",(void*)f_31469},
{"f_31472ChickenBridge.scm",(void*)f_31472},
{"f_31606ChickenBridge.scm",(void*)f_31606},
{"f_31614ChickenBridge.scm",(void*)f_31614},
{"f_31610ChickenBridge.scm",(void*)f_31610},
{"f_31475ChickenBridge.scm",(void*)f_31475},
{"f_31569ChickenBridge.scm",(void*)f_31569},
{"f_31565ChickenBridge.scm",(void*)f_31565},
{"f_31561ChickenBridge.scm",(void*)f_31561},
{"f_31514ChickenBridge.scm",(void*)f_31514},
{"f_31510ChickenBridge.scm",(void*)f_31510},
{"f_31592ChickenBridge.scm",(void*)f_31592},
{"f_31576ChickenBridge.scm",(void*)f_31576},
{"f_41680ChickenBridge.scm",(void*)f_41680},
{"f_41696ChickenBridge.scm",(void*)f_41696},
{"f_41699ChickenBridge.scm",(void*)f_41699},
{"f_41702ChickenBridge.scm",(void*)f_41702},
{"f_41705ChickenBridge.scm",(void*)f_41705},
{"f_41716ChickenBridge.scm",(void*)f_41716},
{"f_41674ChickenBridge.scm",(void*)f_41674},
{"f_31954ChickenBridge.scm",(void*)f_31954},
{"f_41535ChickenBridge.scm",(void*)f_41535},
{"f_41574ChickenBridge.scm",(void*)f_41574},
{"f_41548ChickenBridge.scm",(void*)f_41548},
{"f_41529ChickenBridge.scm",(void*)f_41529},
{"f_31957ChickenBridge.scm",(void*)f_31957},
{"f_41117ChickenBridge.scm",(void*)f_41117},
{"f_41121ChickenBridge.scm",(void*)f_41121},
{"f_41133ChickenBridge.scm",(void*)f_41133},
{"f_41191ChickenBridge.scm",(void*)f_41191},
{"f_41194ChickenBridge.scm",(void*)f_41194},
{"f_41197ChickenBridge.scm",(void*)f_41197},
{"f_41409ChickenBridge.scm",(void*)f_41409},
{"f_41347ChickenBridge.scm",(void*)f_41347},
{"f_41381ChickenBridge.scm",(void*)f_41381},
{"f_41356ChickenBridge.scm",(void*)f_41356},
{"f_41367ChickenBridge.scm",(void*)f_41367},
{"f_41363ChickenBridge.scm",(void*)f_41363},
{"f_41206ChickenBridge.scm",(void*)f_41206},
{"f_41284ChickenBridge.scm",(void*)f_41284},
{"f_41325ChickenBridge.scm",(void*)f_41325},
{"f_41329ChickenBridge.scm",(void*)f_41329},
{"f_41333ChickenBridge.scm",(void*)f_41333},
{"f_41288ChickenBridge.scm",(void*)f_41288},
{"f_41292ChickenBridge.scm",(void*)f_41292},
{"f_41319ChickenBridge.scm",(void*)f_41319},
{"f_41295ChickenBridge.scm",(void*)f_41295},
{"f_41209ChickenBridge.scm",(void*)f_41209},
{"f_41281ChickenBridge.scm",(void*)f_41281},
{"f_41223ChickenBridge.scm",(void*)f_41223},
{"f_41225ChickenBridge.scm",(void*)f_41225},
{"f_41273ChickenBridge.scm",(void*)f_41273},
{"f_41244ChickenBridge.scm",(void*)f_41244},
{"f_41261ChickenBridge.scm",(void*)f_41261},
{"f_41247ChickenBridge.scm",(void*)f_41247},
{"f_41240ChickenBridge.scm",(void*)f_41240},
{"f_41212ChickenBridge.scm",(void*)f_41212},
{"f_41142ChickenBridge.scm",(void*)f_41142},
{"f_41152ChickenBridge.scm",(void*)f_41152},
{"f_41158ChickenBridge.scm",(void*)f_41158},
{"f_41130ChickenBridge.scm",(void*)f_41130},
{"f_41078ChickenBridge.scm",(void*)f_41078},
{"f_41095ChickenBridge.scm",(void*)f_41095},
{"f_41111ChickenBridge.scm",(void*)f_41111},
{"f_41089ChickenBridge.scm",(void*)f_41089},
{"f_41072ChickenBridge.scm",(void*)f_41072},
{"f_31960ChickenBridge.scm",(void*)f_31960},
{"f_40996ChickenBridge.scm",(void*)f_40996},
{"f_31963ChickenBridge.scm",(void*)f_31963},
{"f_40972ChickenBridge.scm",(void*)f_40972},
{"f_40984ChickenBridge.scm",(void*)f_40984},
{"f_40980ChickenBridge.scm",(void*)f_40980},
{"f_40958ChickenBridge.scm",(void*)f_40958},
{"f_40966ChickenBridge.scm",(void*)f_40966},
{"f_40952ChickenBridge.scm",(void*)f_40952},
{"f_31966ChickenBridge.scm",(void*)f_31966},
{"f_40944ChickenBridge.scm",(void*)f_40944},
{"f_39197ChickenBridge.scm",(void*)f_39197},
{"f_39201ChickenBridge.scm",(void*)f_39201},
{"f_40915ChickenBridge.scm",(void*)f_40915},
{"f_40919ChickenBridge.scm",(void*)f_40919},
{"f_39204ChickenBridge.scm",(void*)f_39204},
{"f_40913ChickenBridge.scm",(void*)f_40913},
{"f_39754ChickenBridge.scm",(void*)f_39754},
{"f_40905ChickenBridge.scm",(void*)f_40905},
{"f_39757ChickenBridge.scm",(void*)f_39757},
{"f_40897ChickenBridge.scm",(void*)f_40897},
{"f_39760ChickenBridge.scm",(void*)f_39760},
{"f_40889ChickenBridge.scm",(void*)f_40889},
{"f_39763ChickenBridge.scm",(void*)f_39763},
{"f_40881ChickenBridge.scm",(void*)f_40881},
{"f_39766ChickenBridge.scm",(void*)f_39766},
{"f_40873ChickenBridge.scm",(void*)f_40873},
{"f_39769ChickenBridge.scm",(void*)f_39769},
{"f_40865ChickenBridge.scm",(void*)f_40865},
{"f_39772ChickenBridge.scm",(void*)f_39772},
{"f_40857ChickenBridge.scm",(void*)f_40857},
{"f_39775ChickenBridge.scm",(void*)f_39775},
{"f_40849ChickenBridge.scm",(void*)f_40849},
{"f_39778ChickenBridge.scm",(void*)f_39778},
{"f_40841ChickenBridge.scm",(void*)f_40841},
{"f_39781ChickenBridge.scm",(void*)f_39781},
{"f_40833ChickenBridge.scm",(void*)f_40833},
{"f_39784ChickenBridge.scm",(void*)f_39784},
{"f_40825ChickenBridge.scm",(void*)f_40825},
{"f_39787ChickenBridge.scm",(void*)f_39787},
{"f_40817ChickenBridge.scm",(void*)f_40817},
{"f_39790ChickenBridge.scm",(void*)f_39790},
{"f_40809ChickenBridge.scm",(void*)f_40809},
{"f_39793ChickenBridge.scm",(void*)f_39793},
{"f_40801ChickenBridge.scm",(void*)f_40801},
{"f_39796ChickenBridge.scm",(void*)f_39796},
{"f_40793ChickenBridge.scm",(void*)f_40793},
{"f_39799ChickenBridge.scm",(void*)f_39799},
{"f_40785ChickenBridge.scm",(void*)f_40785},
{"f_39802ChickenBridge.scm",(void*)f_39802},
{"f_40777ChickenBridge.scm",(void*)f_40777},
{"f_39805ChickenBridge.scm",(void*)f_39805},
{"f_40769ChickenBridge.scm",(void*)f_40769},
{"f_39808ChickenBridge.scm",(void*)f_39808},
{"f_40761ChickenBridge.scm",(void*)f_40761},
{"f_39811ChickenBridge.scm",(void*)f_39811},
{"f_40753ChickenBridge.scm",(void*)f_40753},
{"f_39814ChickenBridge.scm",(void*)f_39814},
{"f_40745ChickenBridge.scm",(void*)f_40745},
{"f_39817ChickenBridge.scm",(void*)f_39817},
{"f_40676ChickenBridge.scm",(void*)f_40676},
{"f_40704ChickenBridge.scm",(void*)f_40704},
{"f_39891ChickenBridge.scm",(void*)f_39891},
{"f_40670ChickenBridge.scm",(void*)f_40670},
{"f_40169ChickenBridge.scm",(void*)f_40169},
{"f_40641ChickenBridge.scm",(void*)f_40641},
{"f_40655ChickenBridge.scm",(void*)f_40655},
{"f_40645ChickenBridge.scm",(void*)f_40645},
{"f_40172ChickenBridge.scm",(void*)f_40172},
{"f_40639ChickenBridge.scm",(void*)f_40639},
{"f_40626ChickenBridge.scm",(void*)f_40626},
{"f_40568ChickenBridge.scm",(void*)f_40568},
{"f_40586ChickenBridge.scm",(void*)f_40586},
{"f_40596ChickenBridge.scm",(void*)f_40596},
{"f_40572ChickenBridge.scm",(void*)f_40572},
{"f_40562ChickenBridge.scm",(void*)f_40562},
{"f_40556ChickenBridge.scm",(void*)f_40556},
{"f_40550ChickenBridge.scm",(void*)f_40550},
{"f_40544ChickenBridge.scm",(void*)f_40544},
{"f_40174ChickenBridge.scm",(void*)f_40174},
{"f_40511ChickenBridge.scm",(void*)f_40511},
{"f_40521ChickenBridge.scm",(void*)f_40521},
{"f_40497ChickenBridge.scm",(void*)f_40497},
{"f_40181ChickenBridge.scm",(void*)f_40181},
{"f_40435ChickenBridge.scm",(void*)f_40435},
{"f_40449ChickenBridge.scm",(void*)f_40449},
{"f_40184ChickenBridge.scm",(void*)f_40184},
{"f_40382ChickenBridge.scm",(void*)f_40382},
{"f_40405ChickenBridge.scm",(void*)f_40405},
{"f_40392ChickenBridge.scm",(void*)f_40392},
{"f_40368ChickenBridge.scm",(void*)f_40368},
{"f_40190ChickenBridge.scm",(void*)f_40190},
{"f_40330ChickenBridge.scm",(void*)f_40330},
{"f_40340ChickenBridge.scm",(void*)f_40340},
{"f_40316ChickenBridge.scm",(void*)f_40316},
{"f_40196ChickenBridge.scm",(void*)f_40196},
{"f_40313ChickenBridge.scm",(void*)f_40313},
{"f_40199ChickenBridge.scm",(void*)f_40199},
{"f_40305ChickenBridge.scm",(void*)f_40305},
{"f_40309ChickenBridge.scm",(void*)f_40309},
{"f_40269ChickenBridge.scm",(void*)f_40269},
{"f_40294ChickenBridge.scm",(void*)f_40294},
{"f_40298ChickenBridge.scm",(void*)f_40298},
{"f_40279ChickenBridge.scm",(void*)f_40279},
{"f_40258ChickenBridge.scm",(void*)f_40258},
{"f_40228ChickenBridge.scm",(void*)f_40228},
{"f_40200ChickenBridge.scm",(void*)f_40200},
{"f_39932ChickenBridge.scm",(void*)f_39932},
{"f_39936ChickenBridge.scm",(void*)f_39936},
{"f_39939ChickenBridge.scm",(void*)f_39939},
{"f_39942ChickenBridge.scm",(void*)f_39942},
{"f_39946ChickenBridge.scm",(void*)f_39946},
{"f_40160ChickenBridge.scm",(void*)f_40160},
{"f_40148ChickenBridge.scm",(void*)f_40148},
{"f_40144ChickenBridge.scm",(void*)f_40144},
{"f_39949ChickenBridge.scm",(void*)f_39949},
{"f_40093ChickenBridge.scm",(void*)f_40093},
{"f_40129ChickenBridge.scm",(void*)f_40129},
{"f_40122ChickenBridge.scm",(void*)f_40122},
{"f_39952ChickenBridge.scm",(void*)f_39952},
{"f_40023ChickenBridge.scm",(void*)f_40023},
{"f_40027ChickenBridge.scm",(void*)f_40027},
{"f_40019ChickenBridge.scm",(void*)f_40019},
{"f_7047ChickenBridge.scm",(void*)f_7047},
{"f_39999ChickenBridge.scm",(void*)f_39999},
{"f_39995ChickenBridge.scm",(void*)f_39995},
{"f_39962ChickenBridge.scm",(void*)f_39962},
{"f_39973ChickenBridge.scm",(void*)f_39973},
{"f_39981ChickenBridge.scm",(void*)f_39981},
{"f_39977ChickenBridge.scm",(void*)f_39977},
{"f_39893ChickenBridge.scm",(void*)f_39893},
{"f_39909ChickenBridge.scm",(void*)f_39909},
{"f_39820ChickenBridge.scm",(void*)f_39820},
{"f_39831ChickenBridge.scm",(void*)f_39831},
{"f_39834ChickenBridge.scm",(void*)f_39834},
{"f_39841ChickenBridge.scm",(void*)f_39841},
{"f_39280ChickenBridge.scm",(void*)f_39280},
{"f_39613ChickenBridge.scm",(void*)f_39613},
{"f_39633ChickenBridge.scm",(void*)f_39633},
{"f_39702ChickenBridge.scm",(void*)f_39702},
{"f_39698ChickenBridge.scm",(void*)f_39698},
{"f_39659ChickenBridge.scm",(void*)f_39659},
{"f_39671ChickenBridge.scm",(void*)f_39671},
{"f_39667ChickenBridge.scm",(void*)f_39667},
{"f_39623ChickenBridge.scm",(void*)f_39623},
{"f_39284ChickenBridge.scm",(void*)f_39284},
{"f_39288ChickenBridge.scm",(void*)f_39288},
{"f_39292ChickenBridge.scm",(void*)f_39292},
{"f_39296ChickenBridge.scm",(void*)f_39296},
{"f_39300ChickenBridge.scm",(void*)f_39300},
{"f_39301ChickenBridge.scm",(void*)f_39301},
{"f_39307ChickenBridge.scm",(void*)f_39307},
{"f_39311ChickenBridge.scm",(void*)f_39311},
{"f_39540ChickenBridge.scm",(void*)f_39540},
{"f_39587ChickenBridge.scm",(void*)f_39587},
{"f_39577ChickenBridge.scm",(void*)f_39577},
{"f_39584ChickenBridge.scm",(void*)f_39584},
{"f_39571ChickenBridge.scm",(void*)f_39571},
{"f_39550ChickenBridge.scm",(void*)f_39550},
{"f_39314ChickenBridge.scm",(void*)f_39314},
{"f_39495ChickenBridge.scm",(void*)f_39495},
{"f_39500ChickenBridge.scm",(void*)f_39500},
{"f_39510ChickenBridge.scm",(void*)f_39510},
{"f_39317ChickenBridge.scm",(void*)f_39317},
{"f_39449ChickenBridge.scm",(void*)f_39449},
{"f_39454ChickenBridge.scm",(void*)f_39454},
{"f_39464ChickenBridge.scm",(void*)f_39464},
{"f_39320ChickenBridge.scm",(void*)f_39320},
{"f_39346ChickenBridge.scm",(void*)f_39346},
{"f_39355ChickenBridge.scm",(void*)f_39355},
{"f_39371ChickenBridge.scm",(void*)f_39371},
{"f_39424ChickenBridge.scm",(void*)f_39424},
{"f_39405ChickenBridge.scm",(void*)f_39405},
{"f_39374ChickenBridge.scm",(void*)f_39374},
{"f_39395ChickenBridge.scm",(void*)f_39395},
{"f_39381ChickenBridge.scm",(void*)f_39381},
{"f_39365ChickenBridge.scm",(void*)f_39365},
{"f_39323ChickenBridge.scm",(void*)f_39323},
{"f_39336ChickenBridge.scm",(void*)f_39336},
{"f_39206ChickenBridge.scm",(void*)f_39206},
{"f_39210ChickenBridge.scm",(void*)f_39210},
{"f_39219ChickenBridge.scm",(void*)f_39219},
{"f_39232ChickenBridge.scm",(void*)f_39232},
{"f_39235ChickenBridge.scm",(void*)f_39235},
{"f_39251ChickenBridge.scm",(void*)f_39251},
{"f_39157ChickenBridge.scm",(void*)f_39157},
{"f_39151ChickenBridge.scm",(void*)f_39151},
{"f_38958ChickenBridge.scm",(void*)f_38958},
{"f_39131ChickenBridge.scm",(void*)f_39131},
{"f_38962ChickenBridge.scm",(void*)f_38962},
{"f_38965ChickenBridge.scm",(void*)f_38965},
{"f_38968ChickenBridge.scm",(void*)f_38968},
{"f_38973ChickenBridge.scm",(void*)f_38973},
{"f_39043ChickenBridge.scm",(void*)f_39043},
{"f_39039ChickenBridge.scm",(void*)f_39039},
{"f_39025ChickenBridge.scm",(void*)f_39025},
{"f_39011ChickenBridge.scm",(void*)f_39011},
{"f_39007ChickenBridge.scm",(void*)f_39007},
{"f_38993ChickenBridge.scm",(void*)f_38993},
{"f_7877ChickenBridge.scm",(void*)f_7877},
{"f_38786ChickenBridge.scm",(void*)f_38786},
{"f_38790ChickenBridge.scm",(void*)f_38790},
{"f_38793ChickenBridge.scm",(void*)f_38793},
{"f_38798ChickenBridge.scm",(void*)f_38798},
{"f_38919ChickenBridge.scm",(void*)f_38919},
{"f_38923ChickenBridge.scm",(void*)f_38923},
{"f_38892ChickenBridge.scm",(void*)f_38892},
{"f_38896ChickenBridge.scm",(void*)f_38896},
{"f_38865ChickenBridge.scm",(void*)f_38865},
{"f_38869ChickenBridge.scm",(void*)f_38869},
{"f_38849ChickenBridge.scm",(void*)f_38849},
{"f_38832ChickenBridge.scm",(void*)f_38832},
{"f_38818ChickenBridge.scm",(void*)f_38818},
{"f_7851ChickenBridge.scm",(void*)f_7851},
{"f_38673ChickenBridge.scm",(void*)f_38673},
{"f_38678ChickenBridge.scm",(void*)f_38678},
{"f_38682ChickenBridge.scm",(void*)f_38682},
{"f_38733ChickenBridge.scm",(void*)f_38733},
{"f_38729ChickenBridge.scm",(void*)f_38729},
{"f_38725ChickenBridge.scm",(void*)f_38725},
{"f_38685ChickenBridge.scm",(void*)f_38685},
{"f_38718ChickenBridge.scm",(void*)f_38718},
{"f_38714ChickenBridge.scm",(void*)f_38714},
{"f_38710ChickenBridge.scm",(void*)f_38710},
{"f_38688ChickenBridge.scm",(void*)f_38688},
{"f_38691ChickenBridge.scm",(void*)f_38691},
{"f_38703ChickenBridge.scm",(void*)f_38703},
{"f_38695ChickenBridge.scm",(void*)f_38695},
{"f_38497ChickenBridge.scm",(void*)f_38497},
{"f_38516ChickenBridge.scm",(void*)f_38516},
{"f_38523ChickenBridge.scm",(void*)f_38523},
{"f_38529ChickenBridge.scm",(void*)f_38529},
{"f_38549ChickenBridge.scm",(void*)f_38549},
{"f_38557ChickenBridge.scm",(void*)f_38557},
{"f_38553ChickenBridge.scm",(void*)f_38553},
{"f_38539ChickenBridge.scm",(void*)f_38539},
{"f_38501ChickenBridge.scm",(void*)f_38501},
{"f_38392ChickenBridge.scm",(void*)f_38392},
{"f_38411ChickenBridge.scm",(void*)f_38411},
{"f_38418ChickenBridge.scm",(void*)f_38418},
{"f_38424ChickenBridge.scm",(void*)f_38424},
{"f_38444ChickenBridge.scm",(void*)f_38444},
{"f_38452ChickenBridge.scm",(void*)f_38452},
{"f_38448ChickenBridge.scm",(void*)f_38448},
{"f_38434ChickenBridge.scm",(void*)f_38434},
{"f_38396ChickenBridge.scm",(void*)f_38396},
{"f_38373ChickenBridge.scm",(void*)f_38373},
{"f_7094ChickenBridge.scm",(void*)f_7094},
{"f_7100ChickenBridge.scm",(void*)f_7100},
{"f_7126ChickenBridge.scm",(void*)f_7126},
{"f_7130ChickenBridge.scm",(void*)f_7130},
{"f_7106ChickenBridge.scm",(void*)f_7106},
{"f_7124ChickenBridge.scm",(void*)f_7124},
{"f_7121ChickenBridge.scm",(void*)f_7121},
{"f_7117ChickenBridge.scm",(void*)f_7117},
{"f_7110ChickenBridge.scm",(void*)f_7110},
{"f_38358ChickenBridge.scm",(void*)f_38358},
{"f_38352ChickenBridge.scm",(void*)f_38352},
{"f_38346ChickenBridge.scm",(void*)f_38346},
{"f_38340ChickenBridge.scm",(void*)f_38340},
{"f_38334ChickenBridge.scm",(void*)f_38334},
{"f_38328ChickenBridge.scm",(void*)f_38328},
{"f_38298ChickenBridge.scm",(void*)f_38298},
{"f_38308ChickenBridge.scm",(void*)f_38308},
{"f_37869ChickenBridge.scm",(void*)f_37869},
{"f_38275ChickenBridge.scm",(void*)f_38275},
{"f_38290ChickenBridge.scm",(void*)f_38290},
{"f_38282ChickenBridge.scm",(void*)f_38282},
{"f_38246ChickenBridge.scm",(void*)f_38246},
{"f_38250ChickenBridge.scm",(void*)f_38250},
{"f_38211ChickenBridge.scm",(void*)f_38211},
{"f_38215ChickenBridge.scm",(void*)f_38215},
{"f_38176ChickenBridge.scm",(void*)f_38176},
{"f_38180ChickenBridge.scm",(void*)f_38180},
{"f_37873ChickenBridge.scm",(void*)f_37873},
{"f_38140ChickenBridge.scm",(void*)f_38140},
{"f_38155ChickenBridge.scm",(void*)f_38155},
{"f_38147ChickenBridge.scm",(void*)f_38147},
{"f_38111ChickenBridge.scm",(void*)f_38111},
{"f_38115ChickenBridge.scm",(void*)f_38115},
{"f_38076ChickenBridge.scm",(void*)f_38076},
{"f_38080ChickenBridge.scm",(void*)f_38080},
{"f_38041ChickenBridge.scm",(void*)f_38041},
{"f_38045ChickenBridge.scm",(void*)f_38045},
{"f_37876ChickenBridge.scm",(void*)f_37876},
{"f_38005ChickenBridge.scm",(void*)f_38005},
{"f_38020ChickenBridge.scm",(void*)f_38020},
{"f_38012ChickenBridge.scm",(void*)f_38012},
{"f_37976ChickenBridge.scm",(void*)f_37976},
{"f_37980ChickenBridge.scm",(void*)f_37980},
{"f_37941ChickenBridge.scm",(void*)f_37941},
{"f_37945ChickenBridge.scm",(void*)f_37945},
{"f_37906ChickenBridge.scm",(void*)f_37906},
{"f_37910ChickenBridge.scm",(void*)f_37910},
{"f_37879ChickenBridge.scm",(void*)f_37879},
{"f_37882ChickenBridge.scm",(void*)f_37882},
{"f_37440ChickenBridge.scm",(void*)f_37440},
{"f_37846ChickenBridge.scm",(void*)f_37846},
{"f_37861ChickenBridge.scm",(void*)f_37861},
{"f_37853ChickenBridge.scm",(void*)f_37853},
{"f_37817ChickenBridge.scm",(void*)f_37817},
{"f_37821ChickenBridge.scm",(void*)f_37821},
{"f_37782ChickenBridge.scm",(void*)f_37782},
{"f_37786ChickenBridge.scm",(void*)f_37786},
{"f_37747ChickenBridge.scm",(void*)f_37747},
{"f_37751ChickenBridge.scm",(void*)f_37751},
{"f_37444ChickenBridge.scm",(void*)f_37444},
{"f_37711ChickenBridge.scm",(void*)f_37711},
{"f_37726ChickenBridge.scm",(void*)f_37726},
{"f_37718ChickenBridge.scm",(void*)f_37718},
{"f_37682ChickenBridge.scm",(void*)f_37682},
{"f_37686ChickenBridge.scm",(void*)f_37686},
{"f_37647ChickenBridge.scm",(void*)f_37647},
{"f_37651ChickenBridge.scm",(void*)f_37651},
{"f_37612ChickenBridge.scm",(void*)f_37612},
{"f_37616ChickenBridge.scm",(void*)f_37616},
{"f_37447ChickenBridge.scm",(void*)f_37447},
{"f_37576ChickenBridge.scm",(void*)f_37576},
{"f_37591ChickenBridge.scm",(void*)f_37591},
{"f_37583ChickenBridge.scm",(void*)f_37583},
{"f_37547ChickenBridge.scm",(void*)f_37547},
{"f_37551ChickenBridge.scm",(void*)f_37551},
{"f_37512ChickenBridge.scm",(void*)f_37512},
{"f_37516ChickenBridge.scm",(void*)f_37516},
{"f_37477ChickenBridge.scm",(void*)f_37477},
{"f_37481ChickenBridge.scm",(void*)f_37481},
{"f_37450ChickenBridge.scm",(void*)f_37450},
{"f_37453ChickenBridge.scm",(void*)f_37453},
{"f_37011ChickenBridge.scm",(void*)f_37011},
{"f_37417ChickenBridge.scm",(void*)f_37417},
{"f_37432ChickenBridge.scm",(void*)f_37432},
{"f_37424ChickenBridge.scm",(void*)f_37424},
{"f_37388ChickenBridge.scm",(void*)f_37388},
{"f_37392ChickenBridge.scm",(void*)f_37392},
{"f_37353ChickenBridge.scm",(void*)f_37353},
{"f_37357ChickenBridge.scm",(void*)f_37357},
{"f_37318ChickenBridge.scm",(void*)f_37318},
{"f_37322ChickenBridge.scm",(void*)f_37322},
{"f_37015ChickenBridge.scm",(void*)f_37015},
{"f_37282ChickenBridge.scm",(void*)f_37282},
{"f_37297ChickenBridge.scm",(void*)f_37297},
{"f_37289ChickenBridge.scm",(void*)f_37289},
{"f_37253ChickenBridge.scm",(void*)f_37253},
{"f_37257ChickenBridge.scm",(void*)f_37257},
{"f_37218ChickenBridge.scm",(void*)f_37218},
{"f_37222ChickenBridge.scm",(void*)f_37222},
{"f_37183ChickenBridge.scm",(void*)f_37183},
{"f_37187ChickenBridge.scm",(void*)f_37187},
{"f_37018ChickenBridge.scm",(void*)f_37018},
{"f_37147ChickenBridge.scm",(void*)f_37147},
{"f_37162ChickenBridge.scm",(void*)f_37162},
{"f_37154ChickenBridge.scm",(void*)f_37154},
{"f_37118ChickenBridge.scm",(void*)f_37118},
{"f_37122ChickenBridge.scm",(void*)f_37122},
{"f_37083ChickenBridge.scm",(void*)f_37083},
{"f_37087ChickenBridge.scm",(void*)f_37087},
{"f_37048ChickenBridge.scm",(void*)f_37048},
{"f_37052ChickenBridge.scm",(void*)f_37052},
{"f_37021ChickenBridge.scm",(void*)f_37021},
{"f_37024ChickenBridge.scm",(void*)f_37024},
{"f_36304ChickenBridge.scm",(void*)f_36304},
{"f_36988ChickenBridge.scm",(void*)f_36988},
{"f_37003ChickenBridge.scm",(void*)f_37003},
{"f_36995ChickenBridge.scm",(void*)f_36995},
{"f_36959ChickenBridge.scm",(void*)f_36959},
{"f_36963ChickenBridge.scm",(void*)f_36963},
{"f_36924ChickenBridge.scm",(void*)f_36924},
{"f_36928ChickenBridge.scm",(void*)f_36928},
{"f_36889ChickenBridge.scm",(void*)f_36889},
{"f_36893ChickenBridge.scm",(void*)f_36893},
{"f_36854ChickenBridge.scm",(void*)f_36854},
{"f_36858ChickenBridge.scm",(void*)f_36858},
{"f_36308ChickenBridge.scm",(void*)f_36308},
{"f_36818ChickenBridge.scm",(void*)f_36818},
{"f_36833ChickenBridge.scm",(void*)f_36833},
{"f_36825ChickenBridge.scm",(void*)f_36825},
{"f_36789ChickenBridge.scm",(void*)f_36789},
{"f_36793ChickenBridge.scm",(void*)f_36793},
{"f_36754ChickenBridge.scm",(void*)f_36754},
{"f_36758ChickenBridge.scm",(void*)f_36758},
{"f_36719ChickenBridge.scm",(void*)f_36719},
{"f_36723ChickenBridge.scm",(void*)f_36723},
{"f_36684ChickenBridge.scm",(void*)f_36684},
{"f_36688ChickenBridge.scm",(void*)f_36688},
{"f_36311ChickenBridge.scm",(void*)f_36311},
{"f_36648ChickenBridge.scm",(void*)f_36648},
{"f_36663ChickenBridge.scm",(void*)f_36663},
{"f_36655ChickenBridge.scm",(void*)f_36655},
{"f_36619ChickenBridge.scm",(void*)f_36619},
{"f_36623ChickenBridge.scm",(void*)f_36623},
{"f_36584ChickenBridge.scm",(void*)f_36584},
{"f_36588ChickenBridge.scm",(void*)f_36588},
{"f_36549ChickenBridge.scm",(void*)f_36549},
{"f_36553ChickenBridge.scm",(void*)f_36553},
{"f_36514ChickenBridge.scm",(void*)f_36514},
{"f_36518ChickenBridge.scm",(void*)f_36518},
{"f_36314ChickenBridge.scm",(void*)f_36314},
{"f_36478ChickenBridge.scm",(void*)f_36478},
{"f_36493ChickenBridge.scm",(void*)f_36493},
{"f_36485ChickenBridge.scm",(void*)f_36485},
{"f_36449ChickenBridge.scm",(void*)f_36449},
{"f_36453ChickenBridge.scm",(void*)f_36453},
{"f_36414ChickenBridge.scm",(void*)f_36414},
{"f_36418ChickenBridge.scm",(void*)f_36418},
{"f_36379ChickenBridge.scm",(void*)f_36379},
{"f_36383ChickenBridge.scm",(void*)f_36383},
{"f_36344ChickenBridge.scm",(void*)f_36344},
{"f_36348ChickenBridge.scm",(void*)f_36348},
{"f_36317ChickenBridge.scm",(void*)f_36317},
{"f_36320ChickenBridge.scm",(void*)f_36320},
{"f_35597ChickenBridge.scm",(void*)f_35597},
{"f_36281ChickenBridge.scm",(void*)f_36281},
{"f_36296ChickenBridge.scm",(void*)f_36296},
{"f_36288ChickenBridge.scm",(void*)f_36288},
{"f_36252ChickenBridge.scm",(void*)f_36252},
{"f_36256ChickenBridge.scm",(void*)f_36256},
{"f_36217ChickenBridge.scm",(void*)f_36217},
{"f_36221ChickenBridge.scm",(void*)f_36221},
{"f_36182ChickenBridge.scm",(void*)f_36182},
{"f_36186ChickenBridge.scm",(void*)f_36186},
{"f_36147ChickenBridge.scm",(void*)f_36147},
{"f_36151ChickenBridge.scm",(void*)f_36151},
{"f_35601ChickenBridge.scm",(void*)f_35601},
{"f_36111ChickenBridge.scm",(void*)f_36111},
{"f_36126ChickenBridge.scm",(void*)f_36126},
{"f_36118ChickenBridge.scm",(void*)f_36118},
{"f_36082ChickenBridge.scm",(void*)f_36082},
{"f_36086ChickenBridge.scm",(void*)f_36086},
{"f_36047ChickenBridge.scm",(void*)f_36047},
{"f_36051ChickenBridge.scm",(void*)f_36051},
{"f_36012ChickenBridge.scm",(void*)f_36012},
{"f_36016ChickenBridge.scm",(void*)f_36016},
{"f_35977ChickenBridge.scm",(void*)f_35977},
{"f_35981ChickenBridge.scm",(void*)f_35981},
{"f_35604ChickenBridge.scm",(void*)f_35604},
{"f_35941ChickenBridge.scm",(void*)f_35941},
{"f_35956ChickenBridge.scm",(void*)f_35956},
{"f_35948ChickenBridge.scm",(void*)f_35948},
{"f_35912ChickenBridge.scm",(void*)f_35912},
{"f_35916ChickenBridge.scm",(void*)f_35916},
{"f_35877ChickenBridge.scm",(void*)f_35877},
{"f_35881ChickenBridge.scm",(void*)f_35881},
{"f_35842ChickenBridge.scm",(void*)f_35842},
{"f_35846ChickenBridge.scm",(void*)f_35846},
{"f_35807ChickenBridge.scm",(void*)f_35807},
{"f_35811ChickenBridge.scm",(void*)f_35811},
{"f_35607ChickenBridge.scm",(void*)f_35607},
{"f_35771ChickenBridge.scm",(void*)f_35771},
{"f_35786ChickenBridge.scm",(void*)f_35786},
{"f_35778ChickenBridge.scm",(void*)f_35778},
{"f_35742ChickenBridge.scm",(void*)f_35742},
{"f_35746ChickenBridge.scm",(void*)f_35746},
{"f_35707ChickenBridge.scm",(void*)f_35707},
{"f_35711ChickenBridge.scm",(void*)f_35711},
{"f_35672ChickenBridge.scm",(void*)f_35672},
{"f_35676ChickenBridge.scm",(void*)f_35676},
{"f_35637ChickenBridge.scm",(void*)f_35637},
{"f_35641ChickenBridge.scm",(void*)f_35641},
{"f_35610ChickenBridge.scm",(void*)f_35610},
{"f_35613ChickenBridge.scm",(void*)f_35613},
{"f_34890ChickenBridge.scm",(void*)f_34890},
{"f_35574ChickenBridge.scm",(void*)f_35574},
{"f_35589ChickenBridge.scm",(void*)f_35589},
{"f_35581ChickenBridge.scm",(void*)f_35581},
{"f_35545ChickenBridge.scm",(void*)f_35545},
{"f_35549ChickenBridge.scm",(void*)f_35549},
{"f_35510ChickenBridge.scm",(void*)f_35510},
{"f_35514ChickenBridge.scm",(void*)f_35514},
{"f_35475ChickenBridge.scm",(void*)f_35475},
{"f_35479ChickenBridge.scm",(void*)f_35479},
{"f_35440ChickenBridge.scm",(void*)f_35440},
{"f_35444ChickenBridge.scm",(void*)f_35444},
{"f_34894ChickenBridge.scm",(void*)f_34894},
{"f_35404ChickenBridge.scm",(void*)f_35404},
{"f_35419ChickenBridge.scm",(void*)f_35419},
{"f_35411ChickenBridge.scm",(void*)f_35411},
{"f_35375ChickenBridge.scm",(void*)f_35375},
{"f_35379ChickenBridge.scm",(void*)f_35379},
{"f_35340ChickenBridge.scm",(void*)f_35340},
{"f_35344ChickenBridge.scm",(void*)f_35344},
{"f_35305ChickenBridge.scm",(void*)f_35305},
{"f_35309ChickenBridge.scm",(void*)f_35309},
{"f_35270ChickenBridge.scm",(void*)f_35270},
{"f_35274ChickenBridge.scm",(void*)f_35274},
{"f_34897ChickenBridge.scm",(void*)f_34897},
{"f_35234ChickenBridge.scm",(void*)f_35234},
{"f_35249ChickenBridge.scm",(void*)f_35249},
{"f_35241ChickenBridge.scm",(void*)f_35241},
{"f_35205ChickenBridge.scm",(void*)f_35205},
{"f_35209ChickenBridge.scm",(void*)f_35209},
{"f_35170ChickenBridge.scm",(void*)f_35170},
{"f_35174ChickenBridge.scm",(void*)f_35174},
{"f_35135ChickenBridge.scm",(void*)f_35135},
{"f_35139ChickenBridge.scm",(void*)f_35139},
{"f_35100ChickenBridge.scm",(void*)f_35100},
{"f_35104ChickenBridge.scm",(void*)f_35104},
{"f_34900ChickenBridge.scm",(void*)f_34900},
{"f_35064ChickenBridge.scm",(void*)f_35064},
{"f_35079ChickenBridge.scm",(void*)f_35079},
{"f_35071ChickenBridge.scm",(void*)f_35071},
{"f_35035ChickenBridge.scm",(void*)f_35035},
{"f_35039ChickenBridge.scm",(void*)f_35039},
{"f_35000ChickenBridge.scm",(void*)f_35000},
{"f_35004ChickenBridge.scm",(void*)f_35004},
{"f_34965ChickenBridge.scm",(void*)f_34965},
{"f_34969ChickenBridge.scm",(void*)f_34969},
{"f_34930ChickenBridge.scm",(void*)f_34930},
{"f_34934ChickenBridge.scm",(void*)f_34934},
{"f_34903ChickenBridge.scm",(void*)f_34903},
{"f_34906ChickenBridge.scm",(void*)f_34906},
{"f_34461ChickenBridge.scm",(void*)f_34461},
{"f_34867ChickenBridge.scm",(void*)f_34867},
{"f_34882ChickenBridge.scm",(void*)f_34882},
{"f_34874ChickenBridge.scm",(void*)f_34874},
{"f_34838ChickenBridge.scm",(void*)f_34838},
{"f_34842ChickenBridge.scm",(void*)f_34842},
{"f_34803ChickenBridge.scm",(void*)f_34803},
{"f_34807ChickenBridge.scm",(void*)f_34807},
{"f_34768ChickenBridge.scm",(void*)f_34768},
{"f_34772ChickenBridge.scm",(void*)f_34772},
{"f_34465ChickenBridge.scm",(void*)f_34465},
{"f_34732ChickenBridge.scm",(void*)f_34732},
{"f_34747ChickenBridge.scm",(void*)f_34747},
{"f_34739ChickenBridge.scm",(void*)f_34739},
{"f_34703ChickenBridge.scm",(void*)f_34703},
{"f_34707ChickenBridge.scm",(void*)f_34707},
{"f_34668ChickenBridge.scm",(void*)f_34668},
{"f_34672ChickenBridge.scm",(void*)f_34672},
{"f_34633ChickenBridge.scm",(void*)f_34633},
{"f_34637ChickenBridge.scm",(void*)f_34637},
{"f_34468ChickenBridge.scm",(void*)f_34468},
{"f_34597ChickenBridge.scm",(void*)f_34597},
{"f_34612ChickenBridge.scm",(void*)f_34612},
{"f_34604ChickenBridge.scm",(void*)f_34604},
{"f_34568ChickenBridge.scm",(void*)f_34568},
{"f_34572ChickenBridge.scm",(void*)f_34572},
{"f_34533ChickenBridge.scm",(void*)f_34533},
{"f_34537ChickenBridge.scm",(void*)f_34537},
{"f_34498ChickenBridge.scm",(void*)f_34498},
{"f_34502ChickenBridge.scm",(void*)f_34502},
{"f_34471ChickenBridge.scm",(void*)f_34471},
{"f_34474ChickenBridge.scm",(void*)f_34474},
{"f_33406ChickenBridge.scm",(void*)f_33406},
{"f_34438ChickenBridge.scm",(void*)f_34438},
{"f_34453ChickenBridge.scm",(void*)f_34453},
{"f_34445ChickenBridge.scm",(void*)f_34445},
{"f_34409ChickenBridge.scm",(void*)f_34409},
{"f_34413ChickenBridge.scm",(void*)f_34413},
{"f_34374ChickenBridge.scm",(void*)f_34374},
{"f_34378ChickenBridge.scm",(void*)f_34378},
{"f_34339ChickenBridge.scm",(void*)f_34339},
{"f_34343ChickenBridge.scm",(void*)f_34343},
{"f_34304ChickenBridge.scm",(void*)f_34304},
{"f_34308ChickenBridge.scm",(void*)f_34308},
{"f_34269ChickenBridge.scm",(void*)f_34269},
{"f_34273ChickenBridge.scm",(void*)f_34273},
{"f_33410ChickenBridge.scm",(void*)f_33410},
{"f_34233ChickenBridge.scm",(void*)f_34233},
{"f_34248ChickenBridge.scm",(void*)f_34248},
{"f_34240ChickenBridge.scm",(void*)f_34240},
{"f_34204ChickenBridge.scm",(void*)f_34204},
{"f_34208ChickenBridge.scm",(void*)f_34208},
{"f_34169ChickenBridge.scm",(void*)f_34169},
{"f_34173ChickenBridge.scm",(void*)f_34173},
{"f_34134ChickenBridge.scm",(void*)f_34134},
{"f_34138ChickenBridge.scm",(void*)f_34138},
{"f_34099ChickenBridge.scm",(void*)f_34099},
{"f_34103ChickenBridge.scm",(void*)f_34103},
{"f_34064ChickenBridge.scm",(void*)f_34064},
{"f_34068ChickenBridge.scm",(void*)f_34068},
{"f_33413ChickenBridge.scm",(void*)f_33413},
{"f_34028ChickenBridge.scm",(void*)f_34028},
{"f_34043ChickenBridge.scm",(void*)f_34043},
{"f_34035ChickenBridge.scm",(void*)f_34035},
{"f_33999ChickenBridge.scm",(void*)f_33999},
{"f_34003ChickenBridge.scm",(void*)f_34003},
{"f_33964ChickenBridge.scm",(void*)f_33964},
{"f_33968ChickenBridge.scm",(void*)f_33968},
{"f_33929ChickenBridge.scm",(void*)f_33929},
{"f_33933ChickenBridge.scm",(void*)f_33933},
{"f_33894ChickenBridge.scm",(void*)f_33894},
{"f_33898ChickenBridge.scm",(void*)f_33898},
{"f_33859ChickenBridge.scm",(void*)f_33859},
{"f_33863ChickenBridge.scm",(void*)f_33863},
{"f_33416ChickenBridge.scm",(void*)f_33416},
{"f_33823ChickenBridge.scm",(void*)f_33823},
{"f_33838ChickenBridge.scm",(void*)f_33838},
{"f_33830ChickenBridge.scm",(void*)f_33830},
{"f_33794ChickenBridge.scm",(void*)f_33794},
{"f_33798ChickenBridge.scm",(void*)f_33798},
{"f_33759ChickenBridge.scm",(void*)f_33759},
{"f_33763ChickenBridge.scm",(void*)f_33763},
{"f_33724ChickenBridge.scm",(void*)f_33724},
{"f_33728ChickenBridge.scm",(void*)f_33728},
{"f_33689ChickenBridge.scm",(void*)f_33689},
{"f_33693ChickenBridge.scm",(void*)f_33693},
{"f_33654ChickenBridge.scm",(void*)f_33654},
{"f_33658ChickenBridge.scm",(void*)f_33658},
{"f_33419ChickenBridge.scm",(void*)f_33419},
{"f_33618ChickenBridge.scm",(void*)f_33618},
{"f_33633ChickenBridge.scm",(void*)f_33633},
{"f_33625ChickenBridge.scm",(void*)f_33625},
{"f_33589ChickenBridge.scm",(void*)f_33589},
{"f_33593ChickenBridge.scm",(void*)f_33593},
{"f_33554ChickenBridge.scm",(void*)f_33554},
{"f_33558ChickenBridge.scm",(void*)f_33558},
{"f_33519ChickenBridge.scm",(void*)f_33519},
{"f_33523ChickenBridge.scm",(void*)f_33523},
{"f_33484ChickenBridge.scm",(void*)f_33484},
{"f_33488ChickenBridge.scm",(void*)f_33488},
{"f_33449ChickenBridge.scm",(void*)f_33449},
{"f_33453ChickenBridge.scm",(void*)f_33453},
{"f_33422ChickenBridge.scm",(void*)f_33422},
{"f_33425ChickenBridge.scm",(void*)f_33425},
{"f_33400ChickenBridge.scm",(void*)f_33400},
{"f_7749ChickenBridge.scm",(void*)f_7749},
{"f_33247ChickenBridge.scm",(void*)f_33247},
{"f_33254ChickenBridge.scm",(void*)f_33254},
{"f_33192ChickenBridge.scm",(void*)f_33192},
{"f_33199ChickenBridge.scm",(void*)f_33199},
{"f_32945ChickenBridge.scm",(void*)f_32945},
{"f_33169ChickenBridge.scm",(void*)f_33169},
{"f_33184ChickenBridge.scm",(void*)f_33184},
{"f_33176ChickenBridge.scm",(void*)f_33176},
{"f_33140ChickenBridge.scm",(void*)f_33140},
{"f_33144ChickenBridge.scm",(void*)f_33144},
{"f_33105ChickenBridge.scm",(void*)f_33105},
{"f_33109ChickenBridge.scm",(void*)f_33109},
{"f_32949ChickenBridge.scm",(void*)f_32949},
{"f_33069ChickenBridge.scm",(void*)f_33069},
{"f_33084ChickenBridge.scm",(void*)f_33084},
{"f_33076ChickenBridge.scm",(void*)f_33076},
{"f_33040ChickenBridge.scm",(void*)f_33040},
{"f_33044ChickenBridge.scm",(void*)f_33044},
{"f_33005ChickenBridge.scm",(void*)f_33005},
{"f_33009ChickenBridge.scm",(void*)f_33009},
{"f_32952ChickenBridge.scm",(void*)f_32952},
{"f_32955ChickenBridge.scm",(void*)f_32955},
{"f_32968ChickenBridge.scm",(void*)f_32968},
{"f_32972ChickenBridge.scm",(void*)f_32972},
{"f_32874ChickenBridge.scm",(void*)f_32874},
{"f_32878ChickenBridge.scm",(void*)f_32878},
{"f_32881ChickenBridge.scm",(void*)f_32881},
{"f_7669ChickenBridge.scm",(void*)f_7669},
{"f_32884ChickenBridge.scm",(void*)f_32884},
{"f_32916ChickenBridge.scm",(void*)f_32916},
{"f_32906ChickenBridge.scm",(void*)f_32906},
{"f_32896ChickenBridge.scm",(void*)f_32896},
{"f_32887ChickenBridge.scm",(void*)f_32887},
{"f_32846ChickenBridge.scm",(void*)f_32846},
{"f_32850ChickenBridge.scm",(void*)f_32850},
{"f_32822ChickenBridge.scm",(void*)f_32822},
{"f_32773ChickenBridge.scm",(void*)f_32773},
{"f_7655ChickenBridge.scm",(void*)f_7655},
{"f_32777ChickenBridge.scm",(void*)f_32777},
{"f_32793ChickenBridge.scm",(void*)f_32793},
{"f_32820ChickenBridge.scm",(void*)f_32820},
{"f_32796ChickenBridge.scm",(void*)f_32796},
{"f_32816ChickenBridge.scm",(void*)f_32816},
{"f_32812ChickenBridge.scm",(void*)f_32812},
{"f_32780ChickenBridge.scm",(void*)f_32780},
{"f_32764ChickenBridge.scm",(void*)f_32764},
{"f_32768ChickenBridge.scm",(void*)f_32768},
{"f_32611ChickenBridge.scm",(void*)f_32611},
{"f_32738ChickenBridge.scm",(void*)f_32738},
{"f_32751ChickenBridge.scm",(void*)f_32751},
{"f_32733ChickenBridge.scm",(void*)f_32733},
{"f_32614ChickenBridge.scm",(void*)f_32614},
{"f_32730ChickenBridge.scm",(void*)f_32730},
{"f_32714ChickenBridge.scm",(void*)f_32714},
{"f_32642ChickenBridge.scm",(void*)f_32642},
{"f_32650ChickenBridge.scm",(void*)f_32650},
{"f_32660ChickenBridge.scm",(void*)f_32660},
{"f_32663ChickenBridge.scm",(void*)f_32663},
{"f_32645ChickenBridge.scm",(void*)f_32645},
{"f_32452ChickenBridge.scm",(void*)f_32452},
{"f_7701ChickenBridge.scm",(void*)f_7701},
{"f_32474ChickenBridge.scm",(void*)f_32474},
{"f_32478ChickenBridge.scm",(void*)f_32478},
{"f_32456ChickenBridge.scm",(void*)f_32456},
{"f_31968ChickenBridge.scm",(void*)f_31968},
{"f_32429ChickenBridge.scm",(void*)f_32429},
{"f_32444ChickenBridge.scm",(void*)f_32444},
{"f_32436ChickenBridge.scm",(void*)f_32436},
{"f_32400ChickenBridge.scm",(void*)f_32400},
{"f_32404ChickenBridge.scm",(void*)f_32404},
{"f_32365ChickenBridge.scm",(void*)f_32365},
{"f_32369ChickenBridge.scm",(void*)f_32369},
{"f_32330ChickenBridge.scm",(void*)f_32330},
{"f_32334ChickenBridge.scm",(void*)f_32334},
{"f_31972ChickenBridge.scm",(void*)f_31972},
{"f_32294ChickenBridge.scm",(void*)f_32294},
{"f_32309ChickenBridge.scm",(void*)f_32309},
{"f_32301ChickenBridge.scm",(void*)f_32301},
{"f_32265ChickenBridge.scm",(void*)f_32265},
{"f_32269ChickenBridge.scm",(void*)f_32269},
{"f_32230ChickenBridge.scm",(void*)f_32230},
{"f_32234ChickenBridge.scm",(void*)f_32234},
{"f_32195ChickenBridge.scm",(void*)f_32195},
{"f_32199ChickenBridge.scm",(void*)f_32199},
{"f_31975ChickenBridge.scm",(void*)f_31975},
{"f_32159ChickenBridge.scm",(void*)f_32159},
{"f_32174ChickenBridge.scm",(void*)f_32174},
{"f_32166ChickenBridge.scm",(void*)f_32166},
{"f_32130ChickenBridge.scm",(void*)f_32130},
{"f_32134ChickenBridge.scm",(void*)f_32134},
{"f_32095ChickenBridge.scm",(void*)f_32095},
{"f_32099ChickenBridge.scm",(void*)f_32099},
{"f_32060ChickenBridge.scm",(void*)f_32060},
{"f_32064ChickenBridge.scm",(void*)f_32064},
{"f_31978ChickenBridge.scm",(void*)f_31978},
{"f_31981ChickenBridge.scm",(void*)f_31981},
{"f_32036ChickenBridge.scm",(void*)f_32036},
{"f_32032ChickenBridge.scm",(void*)f_32032},
{"f_31984ChickenBridge.scm",(void*)f_31984},
{"f_29772ChickenBridge.scm",(void*)f_29772},
{"f_29785ChickenBridge.scm",(void*)f_29785},
{"f_29792ChickenBridge.scm",(void*)f_29792},
{"f_29799ChickenBridge.scm",(void*)f_29799},
{"f_29778ChickenBridge.scm",(void*)f_29778},
{"f_31996ChickenBridge.scm",(void*)f_31996},
{"f_32018ChickenBridge.scm",(void*)f_32018},
{"f_32580ChickenBridge.scm",(void*)f_32580},
{"f_32590ChickenBridge.scm",(void*)f_32590},
{"f_32493ChickenBridge.scm",(void*)f_32493},
{"f_32550ChickenBridge.scm",(void*)f_32550},
{"f_32560ChickenBridge.scm",(void*)f_32560},
{"f_32501ChickenBridge.scm",(void*)f_32501},
{"f_32519ChickenBridge.scm",(void*)f_32519},
{"f_32523ChickenBridge.scm",(void*)f_32523},
{"f_32527ChickenBridge.scm",(void*)f_32527},
{"f_32534ChickenBridge.scm",(void*)f_32534},
{"f_32511ChickenBridge.scm",(void*)f_32511},
{"f_32504ChickenBridge.scm",(void*)f_32504},
{"f_31987ChickenBridge.scm",(void*)f_31987},
{"f_30899ChickenBridge.scm",(void*)f_30899},
{"f_30912ChickenBridge.scm",(void*)f_30912},
{"f_30962ChickenBridge.scm",(void*)f_30962},
{"f_31059ChickenBridge.scm",(void*)f_31059},
{"f_31127ChickenBridge.scm",(void*)f_31127},
{"f_31384ChickenBridge.scm",(void*)f_31384},
{"f_31134ChickenBridge.scm",(void*)f_31134},
{"f_31372ChickenBridge.scm",(void*)f_31372},
{"f_31323ChickenBridge.scm",(void*)f_31323},
{"f_31329ChickenBridge.scm",(void*)f_31329},
{"f_31353ChickenBridge.scm",(void*)f_31353},
{"f_31349ChickenBridge.scm",(void*)f_31349},
{"f_31337ChickenBridge.scm",(void*)f_31337},
{"f_31137ChickenBridge.scm",(void*)f_31137},
{"f_31299ChickenBridge.scm",(void*)f_31299},
{"f_31303ChickenBridge.scm",(void*)f_31303},
{"f_31140ChickenBridge.scm",(void*)f_31140},
{"f_31276ChickenBridge.scm",(void*)f_31276},
{"f_31280ChickenBridge.scm",(void*)f_31280},
{"f_31143ChickenBridge.scm",(void*)f_31143},
{"f_31253ChickenBridge.scm",(void*)f_31253},
{"f_31257ChickenBridge.scm",(void*)f_31257},
{"f_31146ChickenBridge.scm",(void*)f_31146},
{"f_31178ChickenBridge.scm",(void*)f_31178},
{"f_31196ChickenBridge.scm",(void*)f_31196},
{"f_31214ChickenBridge.scm",(void*)f_31214},
{"f_31232ChickenBridge.scm",(void*)f_31232},
{"f_31149ChickenBridge.scm",(void*)f_31149},
{"f_31153ChickenBridge.scm",(void*)f_31153},
{"f_31063ChickenBridge.scm",(void*)f_31063},
{"f_31067ChickenBridge.scm",(void*)f_31067},
{"f_31071ChickenBridge.scm",(void*)f_31071},
{"f_30966ChickenBridge.scm",(void*)f_30966},
{"f_30970ChickenBridge.scm",(void*)f_30970},
{"f_30974ChickenBridge.scm",(void*)f_30974},
{"f_30993ChickenBridge.scm",(void*)f_30993},
{"f_30997ChickenBridge.scm",(void*)f_30997},
{"f_30977ChickenBridge.scm",(void*)f_30977},
{"f_30981ChickenBridge.scm",(void*)f_30981},
{"f_30916ChickenBridge.scm",(void*)f_30916},
{"f_30920ChickenBridge.scm",(void*)f_30920},
{"f_30924ChickenBridge.scm",(void*)f_30924},
{"f_30906ChickenBridge.scm",(void*)f_30906},
{"f_30721ChickenBridge.scm",(void*)f_30721},
{"f_30733ChickenBridge.scm",(void*)f_30733},
{"f_30752ChickenBridge.scm",(void*)f_30752},
{"f_30770ChickenBridge.scm",(void*)f_30770},
{"f_30802ChickenBridge.scm",(void*)f_30802},
{"f_30805ChickenBridge.scm",(void*)f_30805},
{"f_30798ChickenBridge.scm",(void*)f_30798},
{"f_30784ChickenBridge.scm",(void*)f_30784},
{"f_30755ChickenBridge.scm",(void*)f_30755},
{"f_30700ChickenBridge.scm",(void*)f_30700},
{"f_30707ChickenBridge.scm",(void*)f_30707},
{"f_30710ChickenBridge.scm",(void*)f_30710},
{"f_30716ChickenBridge.scm",(void*)f_30716},
{"f_30635ChickenBridge.scm",(void*)f_30635},
{"f_30644ChickenBridge.scm",(void*)f_30644},
{"f_30667ChickenBridge.scm",(void*)f_30667},
{"f_30657ChickenBridge.scm",(void*)f_30657},
{"f_30591ChickenBridge.scm",(void*)f_30591},
{"f_30599ChickenBridge.scm",(void*)f_30599},
{"f_30603ChickenBridge.scm",(void*)f_30603},
{"f_30579ChickenBridge.scm",(void*)f_30579},
{"f_30477ChickenBridge.scm",(void*)f_30477},
{"f_30429ChickenBridge.scm",(void*)f_30429},
{"f_29810ChickenBridge.scm",(void*)f_29810},
{"f_29814ChickenBridge.scm",(void*)f_29814},
{"f_29817ChickenBridge.scm",(void*)f_29817},
{"f_30243ChickenBridge.scm",(void*)f_30243},
{"f_30239ChickenBridge.scm",(void*)f_30239},
{"f_30235ChickenBridge.scm",(void*)f_30235},
{"f_29820ChickenBridge.scm",(void*)f_29820},
{"f_29943ChickenBridge.scm",(void*)f_29943},
{"f_29125ChickenBridge.scm",(void*)f_29125},
{"f_29949ChickenBridge.scm",(void*)f_29949},
{"f_29141ChickenBridge.scm",(void*)f_29141},
{"f_30037ChickenBridge.scm",(void*)f_30037},
{"f_30107ChickenBridge.scm",(void*)f_30107},
{"f_29157ChickenBridge.scm",(void*)f_29157},
{"f_30110ChickenBridge.scm",(void*)f_30110},
{"f_29189ChickenBridge.scm",(void*)f_29189},
{"f_30188ChickenBridge.scm",(void*)f_30188},
{"f_30214ChickenBridge.scm",(void*)f_30214},
{"f_30208ChickenBridge.scm",(void*)f_30208},
{"f_30197ChickenBridge.scm",(void*)f_30197},
{"f_30139ChickenBridge.scm",(void*)f_30139},
{"f_30149ChickenBridge.scm",(void*)f_30149},
{"f_30175ChickenBridge.scm",(void*)f_30175},
{"f_30169ChickenBridge.scm",(void*)f_30169},
{"f_30152ChickenBridge.scm",(void*)f_30152},
{"f_30162ChickenBridge.scm",(void*)f_30162},
{"f_30155ChickenBridge.scm",(void*)f_30155},
{"f_30116ChickenBridge.scm",(void*)f_30116},
{"f_30125ChickenBridge.scm",(void*)f_30125},
{"f_30119ChickenBridge.scm",(void*)f_30119},
{"f_30043ChickenBridge.scm",(void*)f_30043},
{"f_30061ChickenBridge.scm",(void*)f_30061},
{"f_30094ChickenBridge.scm",(void*)f_30094},
{"f_30080ChickenBridge.scm",(void*)f_30080},
{"f_30088ChickenBridge.scm",(void*)f_30088},
{"f_30071ChickenBridge.scm",(void*)f_30071},
{"f_30046ChickenBridge.scm",(void*)f_30046},
{"f_29958ChickenBridge.scm",(void*)f_29958},
{"f_29980ChickenBridge.scm",(void*)f_29980},
{"f_30027ChickenBridge.scm",(void*)f_30027},
{"f_30013ChickenBridge.scm",(void*)f_30013},
{"f_30021ChickenBridge.scm",(void*)f_30021},
{"f_29993ChickenBridge.scm",(void*)f_29993},
{"f_29996ChickenBridge.scm",(void*)f_29996},
{"f_29961ChickenBridge.scm",(void*)f_29961},
{"f_29978ChickenBridge.scm",(void*)f_29978},
{"f_29964ChickenBridge.scm",(void*)f_29964},
{"f_29829ChickenBridge.scm",(void*)f_29829},
{"f_29835ChickenBridge.scm",(void*)f_29835},
{"f_29893ChickenBridge.scm",(void*)f_29893},
{"f_29896ChickenBridge.scm",(void*)f_29896},
{"f_29917ChickenBridge.scm",(void*)f_29917},
{"f_29928ChickenBridge.scm",(void*)f_29928},
{"f_29907ChickenBridge.scm",(void*)f_29907},
{"f_29841ChickenBridge.scm",(void*)f_29841},
{"f_29851ChickenBridge.scm",(void*)f_29851},
{"f_29887ChickenBridge.scm",(void*)f_29887},
{"f_29857ChickenBridge.scm",(void*)f_29857},
{"f_29872ChickenBridge.scm",(void*)f_29872},
{"f_29880ChickenBridge.scm",(void*)f_29880},
{"f_29864ChickenBridge.scm",(void*)f_29864},
{"f_29706ChickenBridge.scm",(void*)f_29706},
{"f_29708ChickenBridge.scm",(void*)f_29708},
{"f_29756ChickenBridge.scm",(void*)f_29756},
{"f_29712ChickenBridge.scm",(void*)f_29712},
{"f_29715ChickenBridge.scm",(void*)f_29715},
{"f_29720ChickenBridge.scm",(void*)f_29720},
{"f_29741ChickenBridge.scm",(void*)f_29741},
{"f_29698ChickenBridge.scm",(void*)f_29698},
{"f_29700ChickenBridge.scm",(void*)f_29700},
{"f_29521ChickenBridge.scm",(void*)f_29521},
{"f_29529ChickenBridge.scm",(void*)f_29529},
{"f_29490ChickenBridge.scm",(void*)f_29490},
{"f_29507ChickenBridge.scm",(void*)f_29507},
{"f_29511ChickenBridge.scm",(void*)f_29511},
{"f_29457ChickenBridge.scm",(void*)f_29457},
{"f_29464ChickenBridge.scm",(void*)f_29464},
{"f_29351ChickenBridge.scm",(void*)f_29351},
{"f_29358ChickenBridge.scm",(void*)f_29358},
{"f_29473ChickenBridge.scm",(void*)f_29473},
{"f_29696ChickenBridge.scm",(void*)f_29696},
{"f_29673ChickenBridge.scm",(void*)f_29673},
{"f_29689ChickenBridge.scm",(void*)f_29689},
{"f_29535ChickenBridge.scm",(void*)f_29535},
{"f_29538ChickenBridge.scm",(void*)f_29538},
{"f_29562ChickenBridge.scm",(void*)f_29562},
{"f_29619ChickenBridge.scm",(void*)f_29619},
{"f_29625ChickenBridge.scm",(void*)f_29625},
{"f_29634ChickenBridge.scm",(void*)f_29634},
{"f_29643ChickenBridge.scm",(void*)f_29643},
{"f_29652ChickenBridge.scm",(void*)f_29652},
{"f_29661ChickenBridge.scm",(void*)f_29661},
{"f_29613ChickenBridge.scm",(void*)f_29613},
{"f_29568ChickenBridge.scm",(void*)f_29568},
{"f_29574ChickenBridge.scm",(void*)f_29574},
{"f_29580ChickenBridge.scm",(void*)f_29580},
{"f_29586ChickenBridge.scm",(void*)f_29586},
{"f_29592ChickenBridge.scm",(void*)f_29592},
{"f_29598ChickenBridge.scm",(void*)f_29598},
{"f_29439ChickenBridge.scm",(void*)f_29439},
{"f_29446ChickenBridge.scm",(void*)f_29446},
{"f_29372ChickenBridge.scm",(void*)f_29372},
{"f_29360ChickenBridge.scm",(void*)f_29360},
{"f_29328ChickenBridge.scm",(void*)f_29328},
{"f_29335ChickenBridge.scm",(void*)f_29335},
{"f_29342ChickenBridge.scm",(void*)f_29342},
{"f_29312ChickenBridge.scm",(void*)f_29312},
{"f_29319ChickenBridge.scm",(void*)f_29319},
{"f_29326ChickenBridge.scm",(void*)f_29326},
{"f_29303ChickenBridge.scm",(void*)f_29303},
{"f_29285ChickenBridge.scm",(void*)f_29285},
{"f_29267ChickenBridge.scm",(void*)f_29267},
{"f_29252ChickenBridge.scm",(void*)f_29252},
{"f_29246ChickenBridge.scm",(void*)f_29246},
{"f_29198ChickenBridge.scm",(void*)f_29198},
{"f_29166ChickenBridge.scm",(void*)f_29166},
{"f_29173ChickenBridge.scm",(void*)f_29173},
{"f_29108ChickenBridge.scm",(void*)f_29108},
{"f_29116ChickenBridge.scm",(void*)f_29116},
{"f_29098ChickenBridge.scm",(void*)f_29098},
{"f_29106ChickenBridge.scm",(void*)f_29106},
{"f_29092ChickenBridge.scm",(void*)f_29092},
{"f_29080ChickenBridge.scm",(void*)f_29080},
{"f_29077ChickenBridge.scm",(void*)f_29077},
{"f_29059ChickenBridge.scm",(void*)f_29059},
{"f_29063ChickenBridge.scm",(void*)f_29063},
{"f_28954ChickenBridge.scm",(void*)f_28954},
{"f_28944ChickenBridge.scm",(void*)f_28944},
{"f_28932ChickenBridge.scm",(void*)f_28932},
{"f_28909ChickenBridge.scm",(void*)f_28909},
{"f_28900ChickenBridge.scm",(void*)f_28900},
{"f_28864ChickenBridge.scm",(void*)f_28864},
{"f_28843ChickenBridge.scm",(void*)f_28843},
{"f_28647ChickenBridge.scm",(void*)f_28647},
{"f_28651ChickenBridge.scm",(void*)f_28651},
{"f_28800ChickenBridge.scm",(void*)f_28800},
{"f_28826ChickenBridge.scm",(void*)f_28826},
{"f_28811ChickenBridge.scm",(void*)f_28811},
{"f_28657ChickenBridge.scm",(void*)f_28657},
{"f_28662ChickenBridge.scm",(void*)f_28662},
{"f_28666ChickenBridge.scm",(void*)f_28666},
{"f_28669ChickenBridge.scm",(void*)f_28669},
{"f_28672ChickenBridge.scm",(void*)f_28672},
{"f_28675ChickenBridge.scm",(void*)f_28675},
{"f_28678ChickenBridge.scm",(void*)f_28678},
{"f_28681ChickenBridge.scm",(void*)f_28681},
{"f_28686ChickenBridge.scm",(void*)f_28686},
{"f_28780ChickenBridge.scm",(void*)f_28780},
{"f_28787ChickenBridge.scm",(void*)f_28787},
{"f_28696ChickenBridge.scm",(void*)f_28696},
{"f_28717ChickenBridge.scm",(void*)f_28717},
{"f_28721ChickenBridge.scm",(void*)f_28721},
{"f_28725ChickenBridge.scm",(void*)f_28725},
{"f_28727ChickenBridge.scm",(void*)f_28727},
{"f_28737ChickenBridge.scm",(void*)f_28737},
{"f_28699ChickenBridge.scm",(void*)f_28699},
{"f_28702ChickenBridge.scm",(void*)f_28702},
{"f_28521ChickenBridge.scm",(void*)f_28521},
{"f_28527ChickenBridge.scm",(void*)f_28527},
{"f_28531ChickenBridge.scm",(void*)f_28531},
{"f_28549ChickenBridge.scm",(void*)f_28549},
{"f_28552ChickenBridge.scm",(void*)f_28552},
{"f_28556ChickenBridge.scm",(void*)f_28556},
{"f_28559ChickenBridge.scm",(void*)f_28559},
{"f_28611ChickenBridge.scm",(void*)f_28611},
{"f_28622ChickenBridge.scm",(void*)f_28622},
{"f_28562ChickenBridge.scm",(void*)f_28562},
{"f_28572ChickenBridge.scm",(void*)f_28572},
{"f_28574ChickenBridge.scm",(void*)f_28574},
{"f_28418ChickenBridge.scm",(void*)f_28418},
{"f_28442ChickenBridge.scm",(void*)f_28442},
{"f_28446ChickenBridge.scm",(void*)f_28446},
{"f_28472ChickenBridge.scm",(void*)f_28472},
{"f_28482ChickenBridge.scm",(void*)f_28482},
{"f_28519ChickenBridge.scm",(void*)f_28519},
{"f_28511ChickenBridge.scm",(void*)f_28511},
{"f_28449ChickenBridge.scm",(void*)f_28449},
{"f_28419ChickenBridge.scm",(void*)f_28419},
{"f_28423ChickenBridge.scm",(void*)f_28423},
{"f_28426ChickenBridge.scm",(void*)f_28426},
{"f_28588ChickenBridge.scm",(void*)f_28588},
{"f_28591ChickenBridge.scm",(void*)f_28591},
{"f_28598ChickenBridge.scm",(void*)f_28598},
{"f_28532ChickenBridge.scm",(void*)f_28532},
{"f_28536ChickenBridge.scm",(void*)f_28536},
{"f_28539ChickenBridge.scm",(void*)f_28539},
{"f_28008ChickenBridge.scm",(void*)f_28008},
{"f_28387ChickenBridge.scm",(void*)f_28387},
{"f_28381ChickenBridge.scm",(void*)f_28381},
{"f_28012ChickenBridge.scm",(void*)f_28012},
{"f_28365ChickenBridge.scm",(void*)f_28365},
{"f_28015ChickenBridge.scm",(void*)f_28015},
{"f_28351ChickenBridge.scm",(void*)f_28351},
{"f_28347ChickenBridge.scm",(void*)f_28347},
{"f_28018ChickenBridge.scm",(void*)f_28018},
{"f_28340ChickenBridge.scm",(void*)f_28340},
{"f_28336ChickenBridge.scm",(void*)f_28336},
{"f_28021ChickenBridge.scm",(void*)f_28021},
{"f_28024ChickenBridge.scm",(void*)f_28024},
{"f_8669ChickenBridge.scm",(void*)f_8669},
{"f_8692ChickenBridge.scm",(void*)f_8692},
{"f_8682ChickenBridge.scm",(void*)f_8682},
{"f_28324ChickenBridge.scm",(void*)f_28324},
{"f_28316ChickenBridge.scm",(void*)f_28316},
{"f_28320ChickenBridge.scm",(void*)f_28320},
{"f_28308ChickenBridge.scm",(void*)f_28308},
{"f_28312ChickenBridge.scm",(void*)f_28312},
{"f_28182ChickenBridge.scm",(void*)f_28182},
{"f_28297ChickenBridge.scm",(void*)f_28297},
{"f_28301ChickenBridge.scm",(void*)f_28301},
{"f_28289ChickenBridge.scm",(void*)f_28289},
{"f_28293ChickenBridge.scm",(void*)f_28293},
{"f_28185ChickenBridge.scm",(void*)f_28185},
{"f_28189ChickenBridge.scm",(void*)f_28189},
{"f_28194ChickenBridge.scm",(void*)f_28194},
{"f_28204ChickenBridge.scm",(void*)f_28204},
{"f_28207ChickenBridge.scm",(void*)f_28207},
{"f_28088ChickenBridge.scm",(void*)f_28088},
{"f_28151ChickenBridge.scm",(void*)f_28151},
{"f_28172ChickenBridge.scm",(void*)f_28172},
{"f_28113ChickenBridge.scm",(void*)f_28113},
{"f_28142ChickenBridge.scm",(void*)f_28142},
{"f_28091ChickenBridge.scm",(void*)f_28091},
{"f_28108ChickenBridge.scm",(void*)f_28108},
{"f_28104ChickenBridge.scm",(void*)f_28104},
{"f_27554ChickenBridge.scm",(void*)f_27554},
{"f_27558ChickenBridge.scm",(void*)f_27558},
{"f_27546ChickenBridge.scm",(void*)f_27546},
{"f_27474ChickenBridge.scm",(void*)f_27474},
{"f_27532ChickenBridge.scm",(void*)f_27532},
{"f_27478ChickenBridge.scm",(void*)f_27478},
{"f_27486ChickenBridge.scm",(void*)f_27486},
{"f_27496ChickenBridge.scm",(void*)f_27496},
{"f_27499ChickenBridge.scm",(void*)f_27499},
{"f_28068ChickenBridge.scm",(void*)f_28068},
{"f_28038ChickenBridge.scm",(void*)f_28038},
{"f_28027ChickenBridge.scm",(void*)f_28027},
{"f_27951ChickenBridge.scm",(void*)f_27951},
{"f_27959ChickenBridge.scm",(void*)f_27959},
{"f_27963ChickenBridge.scm",(void*)f_27963},
{"f_27967ChickenBridge.scm",(void*)f_27967},
{"f_27973ChickenBridge.scm",(void*)f_27973},
{"f_27983ChickenBridge.scm",(void*)f_27983},
{"f_27739ChickenBridge.scm",(void*)f_27739},
{"f_27807ChickenBridge.scm",(void*)f_27807},
{"f_27810ChickenBridge.scm",(void*)f_27810},
{"f_27813ChickenBridge.scm",(void*)f_27813},
{"f_27816ChickenBridge.scm",(void*)f_27816},
{"f_27819ChickenBridge.scm",(void*)f_27819},
{"f_27917ChickenBridge.scm",(void*)f_27917},
{"f_27927ChickenBridge.scm",(void*)f_27927},
{"f_27885ChickenBridge.scm",(void*)f_27885},
{"f_27895ChickenBridge.scm",(void*)f_27895},
{"f_27836ChickenBridge.scm",(void*)f_27836},
{"f_27855ChickenBridge.scm",(void*)f_27855},
{"f_27865ChickenBridge.scm",(void*)f_27865},
{"f_27846ChickenBridge.scm",(void*)f_27846},
{"f_27822ChickenBridge.scm",(void*)f_27822},
{"f_27775ChickenBridge.scm",(void*)f_27775},
{"f_27785ChickenBridge.scm",(void*)f_27785},
{"f_27758ChickenBridge.scm",(void*)f_27758},
{"f_27765ChickenBridge.scm",(void*)f_27765},
{"f_27741ChickenBridge.scm",(void*)f_27741},
{"f_27748ChickenBridge.scm",(void*)f_27748},
{"f_27560ChickenBridge.scm",(void*)f_27560},
{"f_27568ChickenBridge.scm",(void*)f_27568},
{"f_27572ChickenBridge.scm",(void*)f_27572},
{"f_27574ChickenBridge.scm",(void*)f_27574},
{"f_27584ChickenBridge.scm",(void*)f_27584},
{"f_27715ChickenBridge.scm",(void*)f_27715},
{"f_27664ChickenBridge.scm",(void*)f_27664},
{"f_27667ChickenBridge.scm",(void*)f_27667},
{"f_27678ChickenBridge.scm",(void*)f_27678},
{"f_27630ChickenBridge.scm",(void*)f_27630},
{"f_27599ChickenBridge.scm",(void*)f_27599},
{"f_27602ChickenBridge.scm",(void*)f_27602},
{"f_27587ChickenBridge.scm",(void*)f_27587},
{"f_27154ChickenBridge.scm",(void*)f_27154},
{"f_27468ChickenBridge.scm",(void*)f_27468},
{"f_27397ChickenBridge.scm",(void*)f_27397},
{"f_27399ChickenBridge.scm",(void*)f_27399},
{"f_27421ChickenBridge.scm",(void*)f_27421},
{"f_27167ChickenBridge.scm",(void*)f_27167},
{"f_27240ChickenBridge.scm",(void*)f_27240},
{"f_27393ChickenBridge.scm",(void*)f_27393},
{"f_27377ChickenBridge.scm",(void*)f_27377},
{"f_27329ChickenBridge.scm",(void*)f_27329},
{"f_27343ChickenBridge.scm",(void*)f_27343},
{"f_27296ChickenBridge.scm",(void*)f_27296},
{"f_27271ChickenBridge.scm",(void*)f_27271},
{"f_27170ChickenBridge.scm",(void*)f_27170},
{"f_27178ChickenBridge.scm",(void*)f_27178},
{"f_25681ChickenBridge.scm",(void*)f_25681},
{"f_27131ChickenBridge.scm",(void*)f_27131},
{"f_27146ChickenBridge.scm",(void*)f_27146},
{"f_27138ChickenBridge.scm",(void*)f_27138},
{"f_27102ChickenBridge.scm",(void*)f_27102},
{"f_27106ChickenBridge.scm",(void*)f_27106},
{"f_27067ChickenBridge.scm",(void*)f_27067},
{"f_27071ChickenBridge.scm",(void*)f_27071},
{"f_27032ChickenBridge.scm",(void*)f_27032},
{"f_27036ChickenBridge.scm",(void*)f_27036},
{"f_26997ChickenBridge.scm",(void*)f_26997},
{"f_27001ChickenBridge.scm",(void*)f_27001},
{"f_26962ChickenBridge.scm",(void*)f_26962},
{"f_26966ChickenBridge.scm",(void*)f_26966},
{"f_26927ChickenBridge.scm",(void*)f_26927},
{"f_26931ChickenBridge.scm",(void*)f_26931},
{"f_25685ChickenBridge.scm",(void*)f_25685},
{"f_26891ChickenBridge.scm",(void*)f_26891},
{"f_26906ChickenBridge.scm",(void*)f_26906},
{"f_26898ChickenBridge.scm",(void*)f_26898},
{"f_26862ChickenBridge.scm",(void*)f_26862},
{"f_26866ChickenBridge.scm",(void*)f_26866},
{"f_26827ChickenBridge.scm",(void*)f_26827},
{"f_26831ChickenBridge.scm",(void*)f_26831},
{"f_26792ChickenBridge.scm",(void*)f_26792},
{"f_26796ChickenBridge.scm",(void*)f_26796},
{"f_26757ChickenBridge.scm",(void*)f_26757},
{"f_26761ChickenBridge.scm",(void*)f_26761},
{"f_26722ChickenBridge.scm",(void*)f_26722},
{"f_26726ChickenBridge.scm",(void*)f_26726},
{"f_26687ChickenBridge.scm",(void*)f_26687},
{"f_26691ChickenBridge.scm",(void*)f_26691},
{"f_25688ChickenBridge.scm",(void*)f_25688},
{"f_26651ChickenBridge.scm",(void*)f_26651},
{"f_26666ChickenBridge.scm",(void*)f_26666},
{"f_26658ChickenBridge.scm",(void*)f_26658},
{"f_26622ChickenBridge.scm",(void*)f_26622},
{"f_26626ChickenBridge.scm",(void*)f_26626},
{"f_26587ChickenBridge.scm",(void*)f_26587},
{"f_26591ChickenBridge.scm",(void*)f_26591},
{"f_26552ChickenBridge.scm",(void*)f_26552},
{"f_26556ChickenBridge.scm",(void*)f_26556},
{"f_26517ChickenBridge.scm",(void*)f_26517},
{"f_26521ChickenBridge.scm",(void*)f_26521},
{"f_26482ChickenBridge.scm",(void*)f_26482},
{"f_26486ChickenBridge.scm",(void*)f_26486},
{"f_26447ChickenBridge.scm",(void*)f_26447},
{"f_26451ChickenBridge.scm",(void*)f_26451},
{"f_25691ChickenBridge.scm",(void*)f_25691},
{"f_26411ChickenBridge.scm",(void*)f_26411},
{"f_26426ChickenBridge.scm",(void*)f_26426},
{"f_26418ChickenBridge.scm",(void*)f_26418},
{"f_26382ChickenBridge.scm",(void*)f_26382},
{"f_26386ChickenBridge.scm",(void*)f_26386},
{"f_26347ChickenBridge.scm",(void*)f_26347},
{"f_26351ChickenBridge.scm",(void*)f_26351},
{"f_26312ChickenBridge.scm",(void*)f_26312},
{"f_26316ChickenBridge.scm",(void*)f_26316},
{"f_26277ChickenBridge.scm",(void*)f_26277},
{"f_26281ChickenBridge.scm",(void*)f_26281},
{"f_26242ChickenBridge.scm",(void*)f_26242},
{"f_26246ChickenBridge.scm",(void*)f_26246},
{"f_26207ChickenBridge.scm",(void*)f_26207},
{"f_26211ChickenBridge.scm",(void*)f_26211},
{"f_25694ChickenBridge.scm",(void*)f_25694},
{"f_26171ChickenBridge.scm",(void*)f_26171},
{"f_26186ChickenBridge.scm",(void*)f_26186},
{"f_26178ChickenBridge.scm",(void*)f_26178},
{"f_26142ChickenBridge.scm",(void*)f_26142},
{"f_26146ChickenBridge.scm",(void*)f_26146},
{"f_26107ChickenBridge.scm",(void*)f_26107},
{"f_26111ChickenBridge.scm",(void*)f_26111},
{"f_26072ChickenBridge.scm",(void*)f_26072},
{"f_26076ChickenBridge.scm",(void*)f_26076},
{"f_26037ChickenBridge.scm",(void*)f_26037},
{"f_26041ChickenBridge.scm",(void*)f_26041},
{"f_26002ChickenBridge.scm",(void*)f_26002},
{"f_26006ChickenBridge.scm",(void*)f_26006},
{"f_25967ChickenBridge.scm",(void*)f_25967},
{"f_25971ChickenBridge.scm",(void*)f_25971},
{"f_25697ChickenBridge.scm",(void*)f_25697},
{"f_25931ChickenBridge.scm",(void*)f_25931},
{"f_25946ChickenBridge.scm",(void*)f_25946},
{"f_25938ChickenBridge.scm",(void*)f_25938},
{"f_25902ChickenBridge.scm",(void*)f_25902},
{"f_25906ChickenBridge.scm",(void*)f_25906},
{"f_25867ChickenBridge.scm",(void*)f_25867},
{"f_25871ChickenBridge.scm",(void*)f_25871},
{"f_25832ChickenBridge.scm",(void*)f_25832},
{"f_25836ChickenBridge.scm",(void*)f_25836},
{"f_25797ChickenBridge.scm",(void*)f_25797},
{"f_25801ChickenBridge.scm",(void*)f_25801},
{"f_25762ChickenBridge.scm",(void*)f_25762},
{"f_25766ChickenBridge.scm",(void*)f_25766},
{"f_25727ChickenBridge.scm",(void*)f_25727},
{"f_25731ChickenBridge.scm",(void*)f_25731},
{"f_25700ChickenBridge.scm",(void*)f_25700},
{"f_25703ChickenBridge.scm",(void*)f_25703},
{"f_25449ChickenBridge.scm",(void*)f_25449},
{"f_25455ChickenBridge.scm",(void*)f_25455},
{"f_25458ChickenBridge.scm",(void*)f_25458},
{"f_25662ChickenBridge.scm",(void*)f_25662},
{"f_25647ChickenBridge.scm",(void*)f_25647},
{"f_25582ChickenBridge.scm",(void*)f_25582},
{"f_8437ChickenBridge.scm",(void*)f_8437},
{"f_25558ChickenBridge.scm",(void*)f_25558},
{"f_25562ChickenBridge.scm",(void*)f_25562},
{"f_25548ChickenBridge.scm",(void*)f_25548},
{"f_25556ChickenBridge.scm",(void*)f_25556},
{"f_25534ChickenBridge.scm",(void*)f_25534},
{"f_25460ChickenBridge.scm",(void*)f_25460},
{"f_25529ChickenBridge.scm",(void*)f_25529},
{"f_25464ChickenBridge.scm",(void*)f_25464},
{"f_25501ChickenBridge.scm",(void*)f_25501},
{"f_25475ChickenBridge.scm",(void*)f_25475},
{"f_25420ChickenBridge.scm",(void*)f_25420},
{"f_25424ChickenBridge.scm",(void*)f_25424},
{"f_25435ChickenBridge.scm",(void*)f_25435},
{"f_25433ChickenBridge.scm",(void*)f_25433},
{"f_25389ChickenBridge.scm",(void*)f_25389},
{"f_25393ChickenBridge.scm",(void*)f_25393},
{"f_25404ChickenBridge.scm",(void*)f_25404},
{"f_25402ChickenBridge.scm",(void*)f_25402},
{"f_25371ChickenBridge.scm",(void*)f_25371},
{"f_25379ChickenBridge.scm",(void*)f_25379},
{"f_25387ChickenBridge.scm",(void*)f_25387},
{"f_25361ChickenBridge.scm",(void*)f_25361},
{"f_25369ChickenBridge.scm",(void*)f_25369},
{"f_25302ChickenBridge.scm",(void*)f_25302},
{"f_25309ChickenBridge.scm",(void*)f_25309},
{"f_25312ChickenBridge.scm",(void*)f_25312},
{"f_25315ChickenBridge.scm",(void*)f_25315},
{"f_25320ChickenBridge.scm",(void*)f_25320},
{"f_25264ChickenBridge.scm",(void*)f_25264},
{"f_25272ChickenBridge.scm",(void*)f_25272},
{"f_25276ChickenBridge.scm",(void*)f_25276},
{"f_25296ChickenBridge.scm",(void*)f_25296},
{"f_25280ChickenBridge.scm",(void*)f_25280},
{"f_25288ChickenBridge.scm",(void*)f_25288},
{"f_25284ChickenBridge.scm",(void*)f_25284},
{"f_25255ChickenBridge.scm",(void*)f_25255},
{"f_25246ChickenBridge.scm",(void*)f_25246},
{"f_25237ChickenBridge.scm",(void*)f_25237},
{"f_25228ChickenBridge.scm",(void*)f_25228},
{"f_25219ChickenBridge.scm",(void*)f_25219},
{"f_25210ChickenBridge.scm",(void*)f_25210},
{"f_25201ChickenBridge.scm",(void*)f_25201},
{"f_25186ChickenBridge.scm",(void*)f_25186},
{"f_25180ChickenBridge.scm",(void*)f_25180},
{"f_25135ChickenBridge.scm",(void*)f_25135},
{"f_7641ChickenBridge.scm",(void*)f_7641},
{"f_25093ChickenBridge.scm",(void*)f_25093},
{"f_25103ChickenBridge.scm",(void*)f_25103},
{"f_24245ChickenBridge.scm",(void*)f_24245},
{"f_7569ChickenBridge.scm",(void*)f_7569},
{"f_24239ChickenBridge.scm",(void*)f_24239},
{"f_24214ChickenBridge.scm",(void*)f_24214},
{"f_23898ChickenBridge.scm",(void*)f_23898},
{"f_23902ChickenBridge.scm",(void*)f_23902},
{"f_23959ChickenBridge.scm",(void*)f_23959},
{"f_23931ChickenBridge.scm",(void*)f_23931},
{"f_23996ChickenBridge.scm",(void*)f_23996},
{"f_24033ChickenBridge.scm",(void*)f_24033},
{"f_24036ChickenBridge.scm",(void*)f_24036},
{"f_24196ChickenBridge.scm",(void*)f_24196},
{"f_24043ChickenBridge.scm",(void*)f_24043},
{"f_24046ChickenBridge.scm",(void*)f_24046},
{"f_24048ChickenBridge.scm",(void*)f_24048},
{"f_24058ChickenBridge.scm",(void*)f_24058},
{"f_24061ChickenBridge.scm",(void*)f_24061},
{"f_24094ChickenBridge.scm",(void*)f_24094},
{"f_24182ChickenBridge.scm",(void*)f_24182},
{"f_24097ChickenBridge.scm",(void*)f_24097},
{"f_24168ChickenBridge.scm",(void*)f_24168},
{"f_24154ChickenBridge.scm",(void*)f_24154},
{"f_24134ChickenBridge.scm",(void*)f_24134},
{"f_24137ChickenBridge.scm",(void*)f_24137},
{"f_24114ChickenBridge.scm",(void*)f_24114},
{"f_24117ChickenBridge.scm",(void*)f_24117},
{"f_24100ChickenBridge.scm",(void*)f_24100},
{"f_23997ChickenBridge.scm",(void*)f_23997},
{"f_24003ChickenBridge.scm",(void*)f_24003},
{"f_24013ChickenBridge.scm",(void*)f_24013},
{"f_23882ChickenBridge.scm",(void*)f_23882},
{"f_23886ChickenBridge.scm",(void*)f_23886},
{"f_23893ChickenBridge.scm",(void*)f_23893},
{"f_23877ChickenBridge.scm",(void*)f_23877},
{"f_23730ChickenBridge.scm",(void*)f_23730},
{"f_23734ChickenBridge.scm",(void*)f_23734},
{"f_23803ChickenBridge.scm",(void*)f_23803},
{"f_23846ChickenBridge.scm",(void*)f_23846},
{"f_23850ChickenBridge.scm",(void*)f_23850},
{"f_23839ChickenBridge.scm",(void*)f_23839},
{"f_23826ChickenBridge.scm",(void*)f_23826},
{"f_23745ChickenBridge.scm",(void*)f_23745},
{"f_23788ChickenBridge.scm",(void*)f_23788},
{"f_23792ChickenBridge.scm",(void*)f_23792},
{"f_23781ChickenBridge.scm",(void*)f_23781},
{"f_23768ChickenBridge.scm",(void*)f_23768},
{"f_23564ChickenBridge.scm",(void*)f_23564},
{"f_23665ChickenBridge.scm",(void*)f_23665},
{"f_23714ChickenBridge.scm",(void*)f_23714},
{"f_23710ChickenBridge.scm",(void*)f_23710},
{"f_23682ChickenBridge.scm",(void*)f_23682},
{"f_23617ChickenBridge.scm",(void*)f_23617},
{"f_23626ChickenBridge.scm",(void*)f_23626},
{"f_23610ChickenBridge.scm",(void*)f_23610},
{"f_23429ChickenBridge.scm",(void*)f_23429},
{"f_23555ChickenBridge.scm",(void*)f_23555},
{"f_23551ChickenBridge.scm",(void*)f_23551},
{"f_23529ChickenBridge.scm",(void*)f_23529},
{"f_23459ChickenBridge.scm",(void*)f_23459},
{"f_23475ChickenBridge.scm",(void*)f_23475},
{"f_23384ChickenBridge.scm",(void*)f_23384},
{"f_23427ChickenBridge.scm",(void*)f_23427},
{"f_23416ChickenBridge.scm",(void*)f_23416},
{"f_23268ChickenBridge.scm",(void*)f_23268},
{"f_23382ChickenBridge.scm",(void*)f_23382},
{"f_23283ChickenBridge.scm",(void*)f_23283},
{"f_23313ChickenBridge.scm",(void*)f_23313},
{"f_23332ChickenBridge.scm",(void*)f_23332},
{"f_23317ChickenBridge.scm",(void*)f_23317},
{"f_23296ChickenBridge.scm",(void*)f_23296},
{"f_23146ChickenBridge.scm",(void*)f_23146},
{"f_23266ChickenBridge.scm",(void*)f_23266},
{"f_23161ChickenBridge.scm",(void*)f_23161},
{"f_23191ChickenBridge.scm",(void*)f_23191},
{"f_23210ChickenBridge.scm",(void*)f_23210},
{"f_23195ChickenBridge.scm",(void*)f_23195},
{"f_23174ChickenBridge.scm",(void*)f_23174},
{"f_23049ChickenBridge.scm",(void*)f_23049},
{"f_23144ChickenBridge.scm",(void*)f_23144},
{"f_23064ChickenBridge.scm",(void*)f_23064},
{"f_23110ChickenBridge.scm",(void*)f_23110},
{"f_23095ChickenBridge.scm",(void*)f_23095},
{"f_23077ChickenBridge.scm",(void*)f_23077},
{"f_22996ChickenBridge.scm",(void*)f_22996},
{"f_23034ChickenBridge.scm",(void*)f_23034},
{"f_23041ChickenBridge.scm",(void*)f_23041},
{"f_23019ChickenBridge.scm",(void*)f_23019},
{"f_22994ChickenBridge.scm",(void*)f_22994},
{"f_22975ChickenBridge.scm",(void*)f_22975},
{"f_22962ChickenBridge.scm",(void*)f_22962},
{"f_22944ChickenBridge.scm",(void*)f_22944},
{"f_22897ChickenBridge.scm",(void*)f_22897},
{"f_22901ChickenBridge.scm",(void*)f_22901},
{"f_22926ChickenBridge.scm",(void*)f_22926},
{"f_22913ChickenBridge.scm",(void*)f_22913},
{"f_22869ChickenBridge.scm",(void*)f_22869},
{"f_22850ChickenBridge.scm",(void*)f_22850},
{"f_22809ChickenBridge.scm",(void*)f_22809},
{"f_22790ChickenBridge.scm",(void*)f_22790},
{"f_22562ChickenBridge.scm",(void*)f_22562},
{"f_22767ChickenBridge.scm",(void*)f_22767},
{"f_22782ChickenBridge.scm",(void*)f_22782},
{"f_22774ChickenBridge.scm",(void*)f_22774},
{"f_22738ChickenBridge.scm",(void*)f_22738},
{"f_22742ChickenBridge.scm",(void*)f_22742},
{"f_22703ChickenBridge.scm",(void*)f_22703},
{"f_22707ChickenBridge.scm",(void*)f_22707},
{"f_22566ChickenBridge.scm",(void*)f_22566},
{"f_22667ChickenBridge.scm",(void*)f_22667},
{"f_22682ChickenBridge.scm",(void*)f_22682},
{"f_22674ChickenBridge.scm",(void*)f_22674},
{"f_22638ChickenBridge.scm",(void*)f_22638},
{"f_22642ChickenBridge.scm",(void*)f_22642},
{"f_22603ChickenBridge.scm",(void*)f_22603},
{"f_22607ChickenBridge.scm",(void*)f_22607},
{"f_22569ChickenBridge.scm",(void*)f_22569},
{"f_22572ChickenBridge.scm",(void*)f_22572},
{"f_22575ChickenBridge.scm",(void*)f_22575},
{"f_22520ChickenBridge.scm",(void*)f_22520},
{"f_22549ChickenBridge.scm",(void*)f_22549},
{"f_22534ChickenBridge.scm",(void*)f_22534},
{"f_22465ChickenBridge.scm",(void*)f_22465},
{"f_22476ChickenBridge.scm",(void*)f_22476},
{"f_22478ChickenBridge.scm",(void*)f_22478},
{"f_22506ChickenBridge.scm",(void*)f_22506},
{"f_22366ChickenBridge.scm",(void*)f_22366},
{"f_22370ChickenBridge.scm",(void*)f_22370},
{"f_22373ChickenBridge.scm",(void*)f_22373},
{"f_22438ChickenBridge.scm",(void*)f_22438},
{"f_22375ChickenBridge.scm",(void*)f_22375},
{"f_22391ChickenBridge.scm",(void*)f_22391},
{"f_22095ChickenBridge.scm",(void*)f_22095},
{"f_22128ChickenBridge.scm",(void*)f_22128},
{"f_22113ChickenBridge.scm",(void*)f_22113},
{"f_22074ChickenBridge.scm",(void*)f_22074},
{"f_22039ChickenBridge.scm",(void*)f_22039},
{"f_22043ChickenBridge.scm",(void*)f_22043},
{"f_21831ChickenBridge.scm",(void*)f_21831},
{"f_21844ChickenBridge.scm",(void*)f_21844},
{"f_21926ChickenBridge.scm",(void*)f_21926},
{"f_21929ChickenBridge.scm",(void*)f_21929},
{"f_21937ChickenBridge.scm",(void*)f_21937},
{"f_21949ChickenBridge.scm",(void*)f_21949},
{"f_21970ChickenBridge.scm",(void*)f_21970},
{"f_21978ChickenBridge.scm",(void*)f_21978},
{"f_21865ChickenBridge.scm",(void*)f_21865},
{"f_21870ChickenBridge.scm",(void*)f_21870},
{"f_21902ChickenBridge.scm",(void*)f_21902},
{"f_21724ChickenBridge.scm",(void*)f_21724},
{"f_21811ChickenBridge.scm",(void*)f_21811},
{"f_21731ChickenBridge.scm",(void*)f_21731},
{"f_21740ChickenBridge.scm",(void*)f_21740},
{"f_21787ChickenBridge.scm",(void*)f_21787},
{"f_21753ChickenBridge.scm",(void*)f_21753},
{"f_21779ChickenBridge.scm",(void*)f_21779},
{"f_21591ChickenBridge.scm",(void*)f_21591},
{"f_21595ChickenBridge.scm",(void*)f_21595},
{"f_21598ChickenBridge.scm",(void*)f_21598},
{"f_21702ChickenBridge.scm",(void*)f_21702},
{"f_21600ChickenBridge.scm",(void*)f_21600},
{"f_21607ChickenBridge.scm",(void*)f_21607},
{"f_21649ChickenBridge.scm",(void*)f_21649},
{"f_21656ChickenBridge.scm",(void*)f_21656},
{"f_21630ChickenBridge.scm",(void*)f_21630},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_21528ChickenBridge.scm",(void*)f_21528},
{"f_21574ChickenBridge.scm",(void*)f_21574},
{"f_21531ChickenBridge.scm",(void*)f_21531},
{"f_21567ChickenBridge.scm",(void*)f_21567},
{"f_21534ChickenBridge.scm",(void*)f_21534},
{"f_21547ChickenBridge.scm",(void*)f_21547},
{"f_21478ChickenBridge.scm",(void*)f_21478},
{"f_21482ChickenBridge.scm",(void*)f_21482},
{"f_21392ChickenBridge.scm",(void*)f_21392},
{"f_21396ChickenBridge.scm",(void*)f_21396},
{"f_21399ChickenBridge.scm",(void*)f_21399},
{"f_21408ChickenBridge.scm",(void*)f_21408},
{"f_21430ChickenBridge.scm",(void*)f_21430},
{"f_21377ChickenBridge.scm",(void*)f_21377},
{"f_21347ChickenBridge.scm",(void*)f_21347},
{"f_21111ChickenBridge.scm",(void*)f_21111},
{"f_21324ChickenBridge.scm",(void*)f_21324},
{"f_21339ChickenBridge.scm",(void*)f_21339},
{"f_21331ChickenBridge.scm",(void*)f_21331},
{"f_21295ChickenBridge.scm",(void*)f_21295},
{"f_21299ChickenBridge.scm",(void*)f_21299},
{"f_21260ChickenBridge.scm",(void*)f_21260},
{"f_21264ChickenBridge.scm",(void*)f_21264},
{"f_21115ChickenBridge.scm",(void*)f_21115},
{"f_21224ChickenBridge.scm",(void*)f_21224},
{"f_21239ChickenBridge.scm",(void*)f_21239},
{"f_21231ChickenBridge.scm",(void*)f_21231},
{"f_21195ChickenBridge.scm",(void*)f_21195},
{"f_21199ChickenBridge.scm",(void*)f_21199},
{"f_21160ChickenBridge.scm",(void*)f_21160},
{"f_21164ChickenBridge.scm",(void*)f_21164},
{"f_21118ChickenBridge.scm",(void*)f_21118},
{"f_21121ChickenBridge.scm",(void*)f_21121},
{"f_21132ChickenBridge.scm",(void*)f_21132},
{"f_21071ChickenBridge.scm",(void*)f_21071},
{"f_21075ChickenBridge.scm",(void*)f_21075},
{"f_21105ChickenBridge.scm",(void*)f_21105},
{"f_21086ChickenBridge.scm",(void*)f_21086},
{"f_21094ChickenBridge.scm",(void*)f_21094},
{"f_21050ChickenBridge.scm",(void*)f_21050},
{"f_21062ChickenBridge.scm",(void*)f_21062},
{"f_21007ChickenBridge.scm",(void*)f_21007},
{"f_21037ChickenBridge.scm",(void*)f_21037},
{"f_20964ChickenBridge.scm",(void*)f_20964},
{"f_20994ChickenBridge.scm",(void*)f_20994},
{"f_20895ChickenBridge.scm",(void*)f_20895},
{"f_20939ChickenBridge.scm",(void*)f_20939},
{"f_20826ChickenBridge.scm",(void*)f_20826},
{"f_20870ChickenBridge.scm",(void*)f_20870},
{"f_20820ChickenBridge.scm",(void*)f_20820},
{"f_20814ChickenBridge.scm",(void*)f_20814},
{"f_20793ChickenBridge.scm",(void*)f_20793},
{"f_20805ChickenBridge.scm",(void*)f_20805},
{"f_20778ChickenBridge.scm",(void*)f_20778},
{"f_20667ChickenBridge.scm",(void*)f_20667},
{"f_20742ChickenBridge.scm",(void*)f_20742},
{"f_20671ChickenBridge.scm",(void*)f_20671},
{"f_20711ChickenBridge.scm",(void*)f_20711},
{"f_20700ChickenBridge.scm",(void*)f_20700},
{"f_20685ChickenBridge.scm",(void*)f_20685},
{"f_20693ChickenBridge.scm",(void*)f_20693},
{"f_20633ChickenBridge.scm",(void*)f_20633},
{"f_20645ChickenBridge.scm",(void*)f_20645},
{"f_19586ChickenBridge.scm",(void*)f_19586},
{"f_20610ChickenBridge.scm",(void*)f_20610},
{"f_20625ChickenBridge.scm",(void*)f_20625},
{"f_20617ChickenBridge.scm",(void*)f_20617},
{"f_20581ChickenBridge.scm",(void*)f_20581},
{"f_20585ChickenBridge.scm",(void*)f_20585},
{"f_20546ChickenBridge.scm",(void*)f_20546},
{"f_20550ChickenBridge.scm",(void*)f_20550},
{"f_19596ChickenBridge.scm",(void*)f_19596},
{"f_20510ChickenBridge.scm",(void*)f_20510},
{"f_20525ChickenBridge.scm",(void*)f_20525},
{"f_20517ChickenBridge.scm",(void*)f_20517},
{"f_20481ChickenBridge.scm",(void*)f_20481},
{"f_20485ChickenBridge.scm",(void*)f_20485},
{"f_20446ChickenBridge.scm",(void*)f_20446},
{"f_20450ChickenBridge.scm",(void*)f_20450},
{"f_19599ChickenBridge.scm",(void*)f_19599},
{"f_19602ChickenBridge.scm",(void*)f_19602},
{"f_19607ChickenBridge.scm",(void*)f_19607},
{"f_20339ChickenBridge.scm",(void*)f_20339},
{"f_20362ChickenBridge.scm",(void*)f_20362},
{"f_20415ChickenBridge.scm",(void*)f_20415},
{"f_20397ChickenBridge.scm",(void*)f_20397},
{"f_20390ChickenBridge.scm",(void*)f_20390},
{"f_20372ChickenBridge.scm",(void*)f_20372},
{"f_20349ChickenBridge.scm",(void*)f_20349},
{"f_19801ChickenBridge.scm",(void*)f_19801},
{"f_20301ChickenBridge.scm",(void*)f_20301},
{"f_20323ChickenBridge.scm",(void*)f_20323},
{"f_20307ChickenBridge.scm",(void*)f_20307},
{"f_20315ChickenBridge.scm",(void*)f_20315},
{"f_20319ChickenBridge.scm",(void*)f_20319},
{"f_20305ChickenBridge.scm",(void*)f_20305},
{"f_20295ChickenBridge.scm",(void*)f_20295},
{"f_19804ChickenBridge.scm",(void*)f_19804},
{"f_20172ChickenBridge.scm",(void*)f_20172},
{"f_20196ChickenBridge.scm",(void*)f_20196},
{"f_20258ChickenBridge.scm",(void*)f_20258},
{"f_20199ChickenBridge.scm",(void*)f_20199},
{"f_20215ChickenBridge.scm",(void*)f_20215},
{"f_20240ChickenBridge.scm",(void*)f_20240},
{"f_20206ChickenBridge.scm",(void*)f_20206},
{"f_20183ChickenBridge.scm",(void*)f_20183},
{"f_19807ChickenBridge.scm",(void*)f_19807},
{"f_20158ChickenBridge.scm",(void*)f_20158},
{"f_19811ChickenBridge.scm",(void*)f_19811},
{"f_19855ChickenBridge.scm",(void*)f_19855},
{"f_19858ChickenBridge.scm",(void*)f_19858},
{"f_20139ChickenBridge.scm",(void*)f_20139},
{"f_20149ChickenBridge.scm",(void*)f_20149},
{"f_19861ChickenBridge.scm",(void*)f_19861},
{"f_20077ChickenBridge.scm",(void*)f_20077},
{"f_20087ChickenBridge.scm",(void*)f_20087},
{"f_20090ChickenBridge.scm",(void*)f_20090},
{"f_20110ChickenBridge.scm",(void*)f_20110},
{"f_20112ChickenBridge.scm",(void*)f_20112},
{"f_20122ChickenBridge.scm",(void*)f_20122},
{"f_20096ChickenBridge.scm",(void*)f_20096},
{"f_20099ChickenBridge.scm",(void*)f_20099},
{"f_19864ChickenBridge.scm",(void*)f_19864},
{"f_19872ChickenBridge.scm",(void*)f_19872},
{"f_19885ChickenBridge.scm",(void*)f_19885},
{"f_19759ChickenBridge.scm",(void*)f_19759},
{"f_19768ChickenBridge.scm",(void*)f_19768},
{"f_19790ChickenBridge.scm",(void*)f_19790},
{"f_19779ChickenBridge.scm",(void*)f_19779},
{"f_19888ChickenBridge.scm",(void*)f_19888},
{"f_20048ChickenBridge.scm",(void*)f_20048},
{"f_20050ChickenBridge.scm",(void*)f_20050},
{"f_20060ChickenBridge.scm",(void*)f_20060},
{"f_19894ChickenBridge.scm",(void*)f_19894},
{"f_20021ChickenBridge.scm",(void*)f_20021},
{"f_20023ChickenBridge.scm",(void*)f_20023},
{"f_20033ChickenBridge.scm",(void*)f_20033},
{"f_19897ChickenBridge.scm",(void*)f_19897},
{"f_19909ChickenBridge.scm",(void*)f_19909},
{"f_19935ChickenBridge.scm",(void*)f_19935},
{"f_19941ChickenBridge.scm",(void*)f_19941},
{"f_19947ChickenBridge.scm",(void*)f_19947},
{"f_19989ChickenBridge.scm",(void*)f_19989},
{"f_20001ChickenBridge.scm",(void*)f_20001},
{"f_19993ChickenBridge.scm",(void*)f_19993},
{"f_19950ChickenBridge.scm",(void*)f_19950},
{"f_19960ChickenBridge.scm",(void*)f_19960},
{"f_19962ChickenBridge.scm",(void*)f_19962},
{"f_19972ChickenBridge.scm",(void*)f_19972},
{"f_19953ChickenBridge.scm",(void*)f_19953},
{"f_19922ChickenBridge.scm",(void*)f_19922},
{"f_19900ChickenBridge.scm",(void*)f_19900},
{"f_19867ChickenBridge.scm",(void*)f_19867},
{"f_19814ChickenBridge.scm",(void*)f_19814},
{"f_19837ChickenBridge.scm",(void*)f_19837},
{"f_19826ChickenBridge.scm",(void*)f_19826},
{"f_19691ChickenBridge.scm",(void*)f_19691},
{"f_19739ChickenBridge.scm",(void*)f_19739},
{"f_19701ChickenBridge.scm",(void*)f_19701},
{"f_19729ChickenBridge.scm",(void*)f_19729},
{"f_19704ChickenBridge.scm",(void*)f_19704},
{"f_19609ChickenBridge.scm",(void*)f_19609},
{"f_8630ChickenBridge.scm",(void*)f_8630},
{"f_8650ChickenBridge.scm",(void*)f_8650},
{"f_8640ChickenBridge.scm",(void*)f_8640},
{"f_19681ChickenBridge.scm",(void*)f_19681},
{"f_19613ChickenBridge.scm",(void*)f_19613},
{"f_19631ChickenBridge.scm",(void*)f_19631},
{"f_19663ChickenBridge.scm",(void*)f_19663},
{"f_19492ChickenBridge.scm",(void*)f_19492},
{"f_19496ChickenBridge.scm",(void*)f_19496},
{"f_19525ChickenBridge.scm",(void*)f_19525},
{"f_19530ChickenBridge.scm",(void*)f_19530},
{"f_19555ChickenBridge.scm",(void*)f_19555},
{"f_19540ChickenBridge.scm",(void*)f_19540},
{"f_18974ChickenBridge.scm",(void*)f_18974},
{"f_19245ChickenBridge.scm",(void*)f_19245},
{"f_19249ChickenBridge.scm",(void*)f_19249},
{"f_19254ChickenBridge.scm",(void*)f_19254},
{"f_19460ChickenBridge.scm",(void*)f_19460},
{"f_19475ChickenBridge.scm",(void*)f_19475},
{"f_19467ChickenBridge.scm",(void*)f_19467},
{"f_19431ChickenBridge.scm",(void*)f_19431},
{"f_19435ChickenBridge.scm",(void*)f_19435},
{"f_19396ChickenBridge.scm",(void*)f_19396},
{"f_19400ChickenBridge.scm",(void*)f_19400},
{"f_19258ChickenBridge.scm",(void*)f_19258},
{"f_19360ChickenBridge.scm",(void*)f_19360},
{"f_19375ChickenBridge.scm",(void*)f_19375},
{"f_19367ChickenBridge.scm",(void*)f_19367},
{"f_19331ChickenBridge.scm",(void*)f_19331},
{"f_19335ChickenBridge.scm",(void*)f_19335},
{"f_19296ChickenBridge.scm",(void*)f_19296},
{"f_19300ChickenBridge.scm",(void*)f_19300},
{"f_19261ChickenBridge.scm",(void*)f_19261},
{"f_19264ChickenBridge.scm",(void*)f_19264},
{"f_19267ChickenBridge.scm",(void*)f_19267},
{"f_19236ChickenBridge.scm",(void*)f_19236},
{"f_18978ChickenBridge.scm",(void*)f_18978},
{"f_19205ChickenBridge.scm",(void*)f_19205},
{"f_19220ChickenBridge.scm",(void*)f_19220},
{"f_19212ChickenBridge.scm",(void*)f_19212},
{"f_19176ChickenBridge.scm",(void*)f_19176},
{"f_19180ChickenBridge.scm",(void*)f_19180},
{"f_19141ChickenBridge.scm",(void*)f_19141},
{"f_19145ChickenBridge.scm",(void*)f_19145},
{"f_18981ChickenBridge.scm",(void*)f_18981},
{"f_19105ChickenBridge.scm",(void*)f_19105},
{"f_19120ChickenBridge.scm",(void*)f_19120},
{"f_19112ChickenBridge.scm",(void*)f_19112},
{"f_19076ChickenBridge.scm",(void*)f_19076},
{"f_19080ChickenBridge.scm",(void*)f_19080},
{"f_19041ChickenBridge.scm",(void*)f_19041},
{"f_19045ChickenBridge.scm",(void*)f_19045},
{"f_18984ChickenBridge.scm",(void*)f_18984},
{"f_18987ChickenBridge.scm",(void*)f_18987},
{"f_18990ChickenBridge.scm",(void*)f_18990},
{"f_19002ChickenBridge.scm",(void*)f_19002},
{"f_19020ChickenBridge.scm",(void*)f_19020},
{"f_19008ChickenBridge.scm",(void*)f_19008},
{"f_18996ChickenBridge.scm",(void*)f_18996},
{"f_18911ChickenBridge.scm",(void*)f_18911},
{"f_18571ChickenBridge.scm",(void*)f_18571},
{"f_18753ChickenBridge.scm",(void*)f_18753},
{"f_18757ChickenBridge.scm",(void*)f_18757},
{"f_18759ChickenBridge.scm",(void*)f_18759},
{"f_18684ChickenBridge.scm",(void*)f_18684},
{"f_18694ChickenBridge.scm",(void*)f_18694},
{"f_18701ChickenBridge.scm",(void*)f_18701},
{"f_18769ChickenBridge.scm",(void*)f_18769},
{"f_18772ChickenBridge.scm",(void*)f_18772},
{"f_18776ChickenBridge.scm",(void*)f_18776},
{"f_18796ChickenBridge.scm",(void*)f_18796},
{"f_18812ChickenBridge.scm",(void*)f_18812},
{"f_18779ChickenBridge.scm",(void*)f_18779},
{"f_18574ChickenBridge.scm",(void*)f_18574},
{"f_18586ChickenBridge.scm",(void*)f_18586},
{"f_18622ChickenBridge.scm",(void*)f_18622},
{"f_18642ChickenBridge.scm",(void*)f_18642},
{"f_18647ChickenBridge.scm",(void*)f_18647},
{"f_18084ChickenBridge.scm",(void*)f_18084},
{"f_18011ChickenBridge.scm",(void*)f_18011},
{"f_17856ChickenBridge.scm",(void*)f_17856},
{"f_17862ChickenBridge.scm",(void*)f_17862},
{"f_17947ChickenBridge.scm",(void*)f_17947},
{"f_17874ChickenBridge.scm",(void*)f_17874},
{"f_17890ChickenBridge.scm",(void*)f_17890},
{"f_17894ChickenBridge.scm",(void*)f_17894},
{"f_17897ChickenBridge.scm",(void*)f_17897},
{"f_17877ChickenBridge.scm",(void*)f_17877},
{"f_17888ChickenBridge.scm",(void*)f_17888},
{"f_18028ChickenBridge.scm",(void*)f_18028},
{"f_18565ChickenBridge.scm",(void*)f_18565},
{"f_18088ChickenBridge.scm",(void*)f_18088},
{"f_18534ChickenBridge.scm",(void*)f_18534},
{"f_18549ChickenBridge.scm",(void*)f_18549},
{"f_18541ChickenBridge.scm",(void*)f_18541},
{"f_18505ChickenBridge.scm",(void*)f_18505},
{"f_18509ChickenBridge.scm",(void*)f_18509},
{"f_18470ChickenBridge.scm",(void*)f_18470},
{"f_18474ChickenBridge.scm",(void*)f_18474},
{"f_18435ChickenBridge.scm",(void*)f_18435},
{"f_18439ChickenBridge.scm",(void*)f_18439},
{"f_18091ChickenBridge.scm",(void*)f_18091},
{"f_18399ChickenBridge.scm",(void*)f_18399},
{"f_18414ChickenBridge.scm",(void*)f_18414},
{"f_18406ChickenBridge.scm",(void*)f_18406},
{"f_18370ChickenBridge.scm",(void*)f_18370},
{"f_18374ChickenBridge.scm",(void*)f_18374},
{"f_18335ChickenBridge.scm",(void*)f_18335},
{"f_18339ChickenBridge.scm",(void*)f_18339},
{"f_18300ChickenBridge.scm",(void*)f_18300},
{"f_18304ChickenBridge.scm",(void*)f_18304},
{"f_18094ChickenBridge.scm",(void*)f_18094},
{"f_18264ChickenBridge.scm",(void*)f_18264},
{"f_18279ChickenBridge.scm",(void*)f_18279},
{"f_18271ChickenBridge.scm",(void*)f_18271},
{"f_18235ChickenBridge.scm",(void*)f_18235},
{"f_18239ChickenBridge.scm",(void*)f_18239},
{"f_18200ChickenBridge.scm",(void*)f_18200},
{"f_18204ChickenBridge.scm",(void*)f_18204},
{"f_18165ChickenBridge.scm",(void*)f_18165},
{"f_18169ChickenBridge.scm",(void*)f_18169},
{"f_18097ChickenBridge.scm",(void*)f_18097},
{"f_18100ChickenBridge.scm",(void*)f_18100},
{"f_18103ChickenBridge.scm",(void*)f_18103},
{"f_18136ChickenBridge.scm",(void*)f_18136},
{"f_18144ChickenBridge.scm",(void*)f_18144},
{"f_18109ChickenBridge.scm",(void*)f_18109},
{"f_18122ChickenBridge.scm",(void*)f_18122},
{"f_18112ChickenBridge.scm",(void*)f_18112},
{"f_18115ChickenBridge.scm",(void*)f_18115},
{"f_17651ChickenBridge.scm",(void*)f_17651},
{"f_17655ChickenBridge.scm",(void*)f_17655},
{"f_17658ChickenBridge.scm",(void*)f_17658},
{"f_17661ChickenBridge.scm",(void*)f_17661},
{"f_17830ChickenBridge.scm",(void*)f_17830},
{"f_17843ChickenBridge.scm",(void*)f_17843},
{"f_17847ChickenBridge.scm",(void*)f_17847},
{"f_17667ChickenBridge.scm",(void*)f_17667},
{"f_17823ChickenBridge.scm",(void*)f_17823},
{"f_17804ChickenBridge.scm",(void*)f_17804},
{"f_17811ChickenBridge.scm",(void*)f_17811},
{"f_17815ChickenBridge.scm",(void*)f_17815},
{"f_17673ChickenBridge.scm",(void*)f_17673},
{"f_17679ChickenBridge.scm",(void*)f_17679},
{"f_17763ChickenBridge.scm",(void*)f_17763},
{"f_17765ChickenBridge.scm",(void*)f_17765},
{"f_17787ChickenBridge.scm",(void*)f_17787},
{"f_17794ChickenBridge.scm",(void*)f_17794},
{"f_17798ChickenBridge.scm",(void*)f_17798},
{"f_17784ChickenBridge.scm",(void*)f_17784},
{"f_17780ChickenBridge.scm",(void*)f_17780},
{"f_17721ChickenBridge.scm",(void*)f_17721},
{"f_17738ChickenBridge.scm",(void*)f_17738},
{"f_17748ChickenBridge.scm",(void*)f_17748},
{"f_17724ChickenBridge.scm",(void*)f_17724},
{"f_17683ChickenBridge.scm",(void*)f_17683},
{"f_17691ChickenBridge.scm",(void*)f_17691},
{"f_17693ChickenBridge.scm",(void*)f_17693},
{"f_17714ChickenBridge.scm",(void*)f_17714},
{"f_17551ChickenBridge.scm",(void*)f_17551},
{"f_17649ChickenBridge.scm",(void*)f_17649},
{"f_17608ChickenBridge.scm",(void*)f_17608},
{"f_17641ChickenBridge.scm",(void*)f_17641},
{"f_17637ChickenBridge.scm",(void*)f_17637},
{"f_17622ChickenBridge.scm",(void*)f_17622},
{"f_17558ChickenBridge.scm",(void*)f_17558},
{"f_17566ChickenBridge.scm",(void*)f_17566},
{"f_17599ChickenBridge.scm",(void*)f_17599},
{"f_17583ChickenBridge.scm",(void*)f_17583},
{"f_16784ChickenBridge.scm",(void*)f_16784},
{"f_17101ChickenBridge.scm",(void*)f_17101},
{"f_17108ChickenBridge.scm",(void*)f_17108},
{"f_17513ChickenBridge.scm",(void*)f_17513},
{"f_17528ChickenBridge.scm",(void*)f_17528},
{"f_17520ChickenBridge.scm",(void*)f_17520},
{"f_17484ChickenBridge.scm",(void*)f_17484},
{"f_17488ChickenBridge.scm",(void*)f_17488},
{"f_17449ChickenBridge.scm",(void*)f_17449},
{"f_17453ChickenBridge.scm",(void*)f_17453},
{"f_17414ChickenBridge.scm",(void*)f_17414},
{"f_17418ChickenBridge.scm",(void*)f_17418},
{"f_17111ChickenBridge.scm",(void*)f_17111},
{"f_17378ChickenBridge.scm",(void*)f_17378},
{"f_17393ChickenBridge.scm",(void*)f_17393},
{"f_17385ChickenBridge.scm",(void*)f_17385},
{"f_17349ChickenBridge.scm",(void*)f_17349},
{"f_17353ChickenBridge.scm",(void*)f_17353},
{"f_17314ChickenBridge.scm",(void*)f_17314},
{"f_17318ChickenBridge.scm",(void*)f_17318},
{"f_17279ChickenBridge.scm",(void*)f_17279},
{"f_17283ChickenBridge.scm",(void*)f_17283},
{"f_17114ChickenBridge.scm",(void*)f_17114},
{"f_17243ChickenBridge.scm",(void*)f_17243},
{"f_17258ChickenBridge.scm",(void*)f_17258},
{"f_17250ChickenBridge.scm",(void*)f_17250},
{"f_17214ChickenBridge.scm",(void*)f_17214},
{"f_17218ChickenBridge.scm",(void*)f_17218},
{"f_17179ChickenBridge.scm",(void*)f_17179},
{"f_17183ChickenBridge.scm",(void*)f_17183},
{"f_17144ChickenBridge.scm",(void*)f_17144},
{"f_17148ChickenBridge.scm",(void*)f_17148},
{"f_17117ChickenBridge.scm",(void*)f_17117},
{"f_17120ChickenBridge.scm",(void*)f_17120},
{"f_16788ChickenBridge.scm",(void*)f_16788},
{"f_16791ChickenBridge.scm",(void*)f_16791},
{"f_17065ChickenBridge.scm",(void*)f_17065},
{"f_17069ChickenBridge.scm",(void*)f_17069},
{"f_17072ChickenBridge.scm",(void*)f_17072},
{"f_17075ChickenBridge.scm",(void*)f_17075},
{"f_17078ChickenBridge.scm",(void*)f_17078},
{"f_17091ChickenBridge.scm",(void*)f_17091},
{"f_17081ChickenBridge.scm",(void*)f_17081},
{"f_16797ChickenBridge.scm",(void*)f_16797},
{"f_17060ChickenBridge.scm",(void*)f_17060},
{"f_16804ChickenBridge.scm",(void*)f_16804},
{"f_17035ChickenBridge.scm",(void*)f_17035},
{"f_17050ChickenBridge.scm",(void*)f_17050},
{"f_17042ChickenBridge.scm",(void*)f_17042},
{"f_17006ChickenBridge.scm",(void*)f_17006},
{"f_17010ChickenBridge.scm",(void*)f_17010},
{"f_16971ChickenBridge.scm",(void*)f_16971},
{"f_16975ChickenBridge.scm",(void*)f_16975},
{"f_16807ChickenBridge.scm",(void*)f_16807},
{"f_16935ChickenBridge.scm",(void*)f_16935},
{"f_16950ChickenBridge.scm",(void*)f_16950},
{"f_16942ChickenBridge.scm",(void*)f_16942},
{"f_16906ChickenBridge.scm",(void*)f_16906},
{"f_16910ChickenBridge.scm",(void*)f_16910},
{"f_16871ChickenBridge.scm",(void*)f_16871},
{"f_16875ChickenBridge.scm",(void*)f_16875},
{"f_16810ChickenBridge.scm",(void*)f_16810},
{"f_16813ChickenBridge.scm",(void*)f_16813},
{"f_16828ChickenBridge.scm",(void*)f_16828},
{"f_16850ChickenBridge.scm",(void*)f_16850},
{"f_16834ChickenBridge.scm",(void*)f_16834},
{"f_16842ChickenBridge.scm",(void*)f_16842},
{"f_16816ChickenBridge.scm",(void*)f_16816},
{"f_16819ChickenBridge.scm",(void*)f_16819},
{"f_16701ChickenBridge.scm",(void*)f_16701},
{"f_16692ChickenBridge.scm",(void*)f_16692},
{"f_16683ChickenBridge.scm",(void*)f_16683},
{"f_16665ChickenBridge.scm",(void*)f_16665},
{"f_16647ChickenBridge.scm",(void*)f_16647},
{"f_16629ChickenBridge.scm",(void*)f_16629},
{"f_16620ChickenBridge.scm",(void*)f_16620},
{"f_16611ChickenBridge.scm",(void*)f_16611},
{"f_16389ChickenBridge.scm",(void*)f_16389},
{"f_16439ChickenBridge.scm",(void*)f_16439},
{"f_16584ChickenBridge.scm",(void*)f_16584},
{"f_16465ChickenBridge.scm",(void*)f_16465},
{"f_16580ChickenBridge.scm",(void*)f_16580},
{"f_16565ChickenBridge.scm",(void*)f_16565},
{"f_16546ChickenBridge.scm",(void*)f_16546},
{"f_16519ChickenBridge.scm",(void*)f_16519},
{"f_16472ChickenBridge.scm",(void*)f_16472},
{"f_16442ChickenBridge.scm",(void*)f_16442},
{"f_16392ChickenBridge.scm",(void*)f_16392},
{"f_16398ChickenBridge.scm",(void*)f_16398},
{"f_16414ChickenBridge.scm",(void*)f_16414},
{"f_16417ChickenBridge.scm",(void*)f_16417},
{"f_15915ChickenBridge.scm",(void*)f_15915},
{"f_16379ChickenBridge.scm",(void*)f_16379},
{"f_15919ChickenBridge.scm",(void*)f_15919},
{"f_16351ChickenBridge.scm",(void*)f_16351},
{"f_16366ChickenBridge.scm",(void*)f_16366},
{"f_16358ChickenBridge.scm",(void*)f_16358},
{"f_16322ChickenBridge.scm",(void*)f_16322},
{"f_16326ChickenBridge.scm",(void*)f_16326},
{"f_16287ChickenBridge.scm",(void*)f_16287},
{"f_16291ChickenBridge.scm",(void*)f_16291},
{"f_16252ChickenBridge.scm",(void*)f_16252},
{"f_16256ChickenBridge.scm",(void*)f_16256},
{"f_15922ChickenBridge.scm",(void*)f_15922},
{"f_16216ChickenBridge.scm",(void*)f_16216},
{"f_16231ChickenBridge.scm",(void*)f_16231},
{"f_16223ChickenBridge.scm",(void*)f_16223},
{"f_16187ChickenBridge.scm",(void*)f_16187},
{"f_16191ChickenBridge.scm",(void*)f_16191},
{"f_16152ChickenBridge.scm",(void*)f_16152},
{"f_16156ChickenBridge.scm",(void*)f_16156},
{"f_16117ChickenBridge.scm",(void*)f_16117},
{"f_16121ChickenBridge.scm",(void*)f_16121},
{"f_15925ChickenBridge.scm",(void*)f_15925},
{"f_16081ChickenBridge.scm",(void*)f_16081},
{"f_16096ChickenBridge.scm",(void*)f_16096},
{"f_16088ChickenBridge.scm",(void*)f_16088},
{"f_16052ChickenBridge.scm",(void*)f_16052},
{"f_16056ChickenBridge.scm",(void*)f_16056},
{"f_16017ChickenBridge.scm",(void*)f_16017},
{"f_16021ChickenBridge.scm",(void*)f_16021},
{"f_15982ChickenBridge.scm",(void*)f_15982},
{"f_15986ChickenBridge.scm",(void*)f_15986},
{"f_15928ChickenBridge.scm",(void*)f_15928},
{"f_15931ChickenBridge.scm",(void*)f_15931},
{"f_15934ChickenBridge.scm",(void*)f_15934},
{"f_15949ChickenBridge.scm",(void*)f_15949},
{"f_15961ChickenBridge.scm",(void*)f_15961},
{"f_15940ChickenBridge.scm",(void*)f_15940},
{"f_15943ChickenBridge.scm",(void*)f_15943},
{"f_15839ChickenBridge.scm",(void*)f_15839},
{"f_15843ChickenBridge.scm",(void*)f_15843},
{"f_15862ChickenBridge.scm",(void*)f_15862},
{"f_15872ChickenBridge.scm",(void*)f_15872},
{"f_15874ChickenBridge.scm",(void*)f_15874},
{"f_15891ChickenBridge.scm",(void*)f_15891},
{"f_15894ChickenBridge.scm",(void*)f_15894},
{"f_15905ChickenBridge.scm",(void*)f_15905},
{"f_15846ChickenBridge.scm",(void*)f_15846},
{"f_15576ChickenBridge.scm",(void*)f_15576},
{"f_15829ChickenBridge.scm",(void*)f_15829},
{"f_15580ChickenBridge.scm",(void*)f_15580},
{"f_15801ChickenBridge.scm",(void*)f_15801},
{"f_15816ChickenBridge.scm",(void*)f_15816},
{"f_15808ChickenBridge.scm",(void*)f_15808},
{"f_15772ChickenBridge.scm",(void*)f_15772},
{"f_15776ChickenBridge.scm",(void*)f_15776},
{"f_15737ChickenBridge.scm",(void*)f_15737},
{"f_15741ChickenBridge.scm",(void*)f_15741},
{"f_15583ChickenBridge.scm",(void*)f_15583},
{"f_15701ChickenBridge.scm",(void*)f_15701},
{"f_15716ChickenBridge.scm",(void*)f_15716},
{"f_15708ChickenBridge.scm",(void*)f_15708},
{"f_15672ChickenBridge.scm",(void*)f_15672},
{"f_15676ChickenBridge.scm",(void*)f_15676},
{"f_15637ChickenBridge.scm",(void*)f_15637},
{"f_15641ChickenBridge.scm",(void*)f_15641},
{"f_15586ChickenBridge.scm",(void*)f_15586},
{"f_15589ChickenBridge.scm",(void*)f_15589},
{"f_15592ChickenBridge.scm",(void*)f_15592},
{"f_15604ChickenBridge.scm",(void*)f_15604},
{"f_15616ChickenBridge.scm",(void*)f_15616},
{"f_15598ChickenBridge.scm",(void*)f_15598},
{"f_15540ChickenBridge.scm",(void*)f_15540},
{"f_15544ChickenBridge.scm",(void*)f_15544},
{"f_15566ChickenBridge.scm",(void*)f_15566},
{"f_15560ChickenBridge.scm",(void*)f_15560},
{"f_15553ChickenBridge.scm",(void*)f_15553},
{"f_15293ChickenBridge.scm",(void*)f_15293},
{"f_15297ChickenBridge.scm",(void*)f_15297},
{"f_15510ChickenBridge.scm",(void*)f_15510},
{"f_15525ChickenBridge.scm",(void*)f_15525},
{"f_15517ChickenBridge.scm",(void*)f_15517},
{"f_15481ChickenBridge.scm",(void*)f_15481},
{"f_15485ChickenBridge.scm",(void*)f_15485},
{"f_15446ChickenBridge.scm",(void*)f_15446},
{"f_15450ChickenBridge.scm",(void*)f_15450},
{"f_15300ChickenBridge.scm",(void*)f_15300},
{"f_15410ChickenBridge.scm",(void*)f_15410},
{"f_15425ChickenBridge.scm",(void*)f_15425},
{"f_15417ChickenBridge.scm",(void*)f_15417},
{"f_15381ChickenBridge.scm",(void*)f_15381},
{"f_15385ChickenBridge.scm",(void*)f_15385},
{"f_15346ChickenBridge.scm",(void*)f_15346},
{"f_15350ChickenBridge.scm",(void*)f_15350},
{"f_15303ChickenBridge.scm",(void*)f_15303},
{"f_15306ChickenBridge.scm",(void*)f_15306},
{"f_15309ChickenBridge.scm",(void*)f_15309},
{"f_15317ChickenBridge.scm",(void*)f_15317},
{"f_15325ChickenBridge.scm",(void*)f_15325},
{"f_15315ChickenBridge.scm",(void*)f_15315},
{"f_15078ChickenBridge.scm",(void*)f_15078},
{"f_15082ChickenBridge.scm",(void*)f_15082},
{"f_15291ChickenBridge.scm",(void*)f_15291},
{"f_15244ChickenBridge.scm",(void*)f_15244},
{"f_15256ChickenBridge.scm",(void*)f_15256},
{"f_15112ChickenBridge.scm",(void*)f_15112},
{"f_15115ChickenBridge.scm",(void*)f_15115},
{"f_15121ChickenBridge.scm",(void*)f_15121},
{"f_15124ChickenBridge.scm",(void*)f_15124},
{"f_15212ChickenBridge.scm",(void*)f_15212},
{"f_15127ChickenBridge.scm",(void*)f_15127},
{"f_15206ChickenBridge.scm",(void*)f_15206},
{"f_15133ChickenBridge.scm",(void*)f_15133},
{"f_15136ChickenBridge.scm",(void*)f_15136},
{"f_15088ChickenBridge.scm",(void*)f_15088},
{"f_15091ChickenBridge.scm",(void*)f_15091},
{"f_15098ChickenBridge.scm",(void*)f_15098},
{"f_14608ChickenBridge.scm",(void*)f_14608},
{"f_14612ChickenBridge.scm",(void*)f_14612},
{"f_15048ChickenBridge.scm",(void*)f_15048},
{"f_15063ChickenBridge.scm",(void*)f_15063},
{"f_15055ChickenBridge.scm",(void*)f_15055},
{"f_15019ChickenBridge.scm",(void*)f_15019},
{"f_15023ChickenBridge.scm",(void*)f_15023},
{"f_14984ChickenBridge.scm",(void*)f_14984},
{"f_14988ChickenBridge.scm",(void*)f_14988},
{"f_14949ChickenBridge.scm",(void*)f_14949},
{"f_14953ChickenBridge.scm",(void*)f_14953},
{"f_14615ChickenBridge.scm",(void*)f_14615},
{"f_14913ChickenBridge.scm",(void*)f_14913},
{"f_14928ChickenBridge.scm",(void*)f_14928},
{"f_14920ChickenBridge.scm",(void*)f_14920},
{"f_14884ChickenBridge.scm",(void*)f_14884},
{"f_14888ChickenBridge.scm",(void*)f_14888},
{"f_14849ChickenBridge.scm",(void*)f_14849},
{"f_14853ChickenBridge.scm",(void*)f_14853},
{"f_14814ChickenBridge.scm",(void*)f_14814},
{"f_14818ChickenBridge.scm",(void*)f_14818},
{"f_14618ChickenBridge.scm",(void*)f_14618},
{"f_14778ChickenBridge.scm",(void*)f_14778},
{"f_14793ChickenBridge.scm",(void*)f_14793},
{"f_14785ChickenBridge.scm",(void*)f_14785},
{"f_14749ChickenBridge.scm",(void*)f_14749},
{"f_14753ChickenBridge.scm",(void*)f_14753},
{"f_14714ChickenBridge.scm",(void*)f_14714},
{"f_14718ChickenBridge.scm",(void*)f_14718},
{"f_14679ChickenBridge.scm",(void*)f_14679},
{"f_14683ChickenBridge.scm",(void*)f_14683},
{"f_14621ChickenBridge.scm",(void*)f_14621},
{"f_14624ChickenBridge.scm",(void*)f_14624},
{"f_14627ChickenBridge.scm",(void*)f_14627},
{"f_14650ChickenBridge.scm",(void*)f_14650},
{"f_14658ChickenBridge.scm",(void*)f_14658},
{"f_14633ChickenBridge.scm",(void*)f_14633},
{"f_14636ChickenBridge.scm",(void*)f_14636},
{"f_14528ChickenBridge.scm",(void*)f_14528},
{"f_14519ChickenBridge.scm",(void*)f_14519},
{"f_14447ChickenBridge.scm",(void*)f_14447},
{"f_14451ChickenBridge.scm",(void*)f_14451},
{"f_14454ChickenBridge.scm",(void*)f_14454},
{"f_14192ChickenBridge.scm",(void*)f_14192},
{"f_14196ChickenBridge.scm",(void*)f_14196},
{"f_14417ChickenBridge.scm",(void*)f_14417},
{"f_14432ChickenBridge.scm",(void*)f_14432},
{"f_14424ChickenBridge.scm",(void*)f_14424},
{"f_14388ChickenBridge.scm",(void*)f_14388},
{"f_14392ChickenBridge.scm",(void*)f_14392},
{"f_14353ChickenBridge.scm",(void*)f_14353},
{"f_14357ChickenBridge.scm",(void*)f_14357},
{"f_14199ChickenBridge.scm",(void*)f_14199},
{"f_14317ChickenBridge.scm",(void*)f_14317},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14324ChickenBridge.scm",(void*)f_14324},
{"f_14288ChickenBridge.scm",(void*)f_14288},
{"f_14292ChickenBridge.scm",(void*)f_14292},
{"f_14253ChickenBridge.scm",(void*)f_14253},
{"f_14257ChickenBridge.scm",(void*)f_14257},
{"f_14202ChickenBridge.scm",(void*)f_14202},
{"f_14205ChickenBridge.scm",(void*)f_14205},
{"f_14208ChickenBridge.scm",(void*)f_14208},
{"f_14220ChickenBridge.scm",(void*)f_14220},
{"f_14232ChickenBridge.scm",(void*)f_14232},
{"f_14214ChickenBridge.scm",(void*)f_14214},
{"f_14077ChickenBridge.scm",(void*)f_14077},
{"f_14190ChickenBridge.scm",(void*)f_14190},
{"f_14087ChickenBridge.scm",(void*)f_14087},
{"f_14175ChickenBridge.scm",(void*)f_14175},
{"f_14186ChickenBridge.scm",(void*)f_14186},
{"f_14182ChickenBridge.scm",(void*)f_14182},
{"f_14090ChickenBridge.scm",(void*)f_14090},
{"f_14172ChickenBridge.scm",(void*)f_14172},
{"f_14098ChickenBridge.scm",(void*)f_14098},
{"f_14162ChickenBridge.scm",(void*)f_14162},
{"f_14107ChickenBridge.scm",(void*)f_14107},
{"f_14126ChickenBridge.scm",(void*)f_14126},
{"f_14155ChickenBridge.scm",(void*)f_14155},
{"f_14136ChickenBridge.scm",(void*)f_14136},
{"f_14151ChickenBridge.scm",(void*)f_14151},
{"f_14139ChickenBridge.scm",(void*)f_14139},
{"f_14110ChickenBridge.scm",(void*)f_14110},
{"f_14120ChickenBridge.scm",(void*)f_14120},
{"f_14101ChickenBridge.scm",(void*)f_14101},
{"f_14104ChickenBridge.scm",(void*)f_14104},
{"f_14031ChickenBridge.scm",(void*)f_14031},
{"f_14022ChickenBridge.scm",(void*)f_14022},
{"f_13730ChickenBridge.scm",(void*)f_13730},
{"f_13737ChickenBridge.scm",(void*)f_13737},
{"f_13740ChickenBridge.scm",(void*)f_13740},
{"f_14011ChickenBridge.scm",(void*)f_14011},
{"f_14003ChickenBridge.scm",(void*)f_14003},
{"f_13995ChickenBridge.scm",(void*)f_13995},
{"f_13998ChickenBridge.scm",(void*)f_13998},
{"f_13966ChickenBridge.scm",(void*)f_13966},
{"f_13989ChickenBridge.scm",(void*)f_13989},
{"f_13972ChickenBridge.scm",(void*)f_13972},
{"f_13976ChickenBridge.scm",(void*)f_13976},
{"f_13743ChickenBridge.scm",(void*)f_13743},
{"f_13749ChickenBridge.scm",(void*)f_13749},
{"f_13841ChickenBridge.scm",(void*)f_13841},
{"f_13953ChickenBridge.scm",(void*)f_13953},
{"f_13960ChickenBridge.scm",(void*)f_13960},
{"f_13864ChickenBridge.scm",(void*)f_13864},
{"f_13866ChickenBridge.scm",(void*)f_13866},
{"f_13915ChickenBridge.scm",(void*)f_13915},
{"f_13950ChickenBridge.scm",(void*)f_13950},
{"f_13939ChickenBridge.scm",(void*)f_13939},
{"f_14075ChickenBridge.scm",(void*)f_14075},
{"f_14050ChickenBridge.scm",(void*)f_14050},
{"f_14071ChickenBridge.scm",(void*)f_14071},
{"f_14067ChickenBridge.scm",(void*)f_14067},
{"f_14059ChickenBridge.scm",(void*)f_14059},
{"f_13932ChickenBridge.scm",(void*)f_13932},
{"f_13925ChickenBridge.scm",(void*)f_13925},
{"f_13873ChickenBridge.scm",(void*)f_13873},
{"f_13913ChickenBridge.scm",(void*)f_13913},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13909ChickenBridge.scm",(void*)f_13909},
{"f_13896ChickenBridge.scm",(void*)f_13896},
{"f_13904ChickenBridge.scm",(void*)f_13904},
{"f_13900ChickenBridge.scm",(void*)f_13900},
{"f_13880ChickenBridge.scm",(void*)f_13880},
{"f_13883ChickenBridge.scm",(void*)f_13883},
{"f_13857ChickenBridge.scm",(void*)f_13857},
{"f_13844ChickenBridge.scm",(void*)f_13844},
{"f_13853ChickenBridge.scm",(void*)f_13853},
{"f_13848ChickenBridge.scm",(void*)f_13848},
{"f_13755ChickenBridge.scm",(void*)f_13755},
{"f_13835ChickenBridge.scm",(void*)f_13835},
{"f_13815ChickenBridge.scm",(void*)f_13815},
{"f_13821ChickenBridge.scm",(void*)f_13821},
{"f_13832ChickenBridge.scm",(void*)f_13832},
{"f_13812ChickenBridge.scm",(void*)f_13812},
{"f_13800ChickenBridge.scm",(void*)f_13800},
{"f_13803ChickenBridge.scm",(void*)f_13803},
{"f_13758ChickenBridge.scm",(void*)f_13758},
{"f_13794ChickenBridge.scm",(void*)f_13794},
{"f_13789ChickenBridge.scm",(void*)f_13789},
{"f_13761ChickenBridge.scm",(void*)f_13761},
{"f_13774ChickenBridge.scm",(void*)f_13774},
{"f_13764ChickenBridge.scm",(void*)f_13764},
{"f_13767ChickenBridge.scm",(void*)f_13767},
{"f_13770ChickenBridge.scm",(void*)f_13770},
{"f_13607ChickenBridge.scm",(void*)f_13607},
{"f_13666ChickenBridge.scm",(void*)f_13666},
{"f_13676ChickenBridge.scm",(void*)f_13676},
{"f_13678ChickenBridge.scm",(void*)f_13678},
{"f_13707ChickenBridge.scm",(void*)f_13707},
{"f_13712ChickenBridge.scm",(void*)f_13712},
{"f_13697ChickenBridge.scm",(void*)f_13697},
{"f_13628ChickenBridge.scm",(void*)f_13628},
{"f_13660ChickenBridge.scm",(void*)f_13660},
{"f_13588ChickenBridge.scm",(void*)f_13588},
{"f_13595ChickenBridge.scm",(void*)f_13595},
{"f_13602ChickenBridge.scm",(void*)f_13602},
{"f_13569ChickenBridge.scm",(void*)f_13569},
{"f_13576ChickenBridge.scm",(void*)f_13576},
{"f_13583ChickenBridge.scm",(void*)f_13583},
{"f_13389ChickenBridge.scm",(void*)f_13389},
{"f_13393ChickenBridge.scm",(void*)f_13393},
{"f_13396ChickenBridge.scm",(void*)f_13396},
{"f_13399ChickenBridge.scm",(void*)f_13399},
{"f_13402ChickenBridge.scm",(void*)f_13402},
{"f_13559ChickenBridge.scm",(void*)f_13559},
{"f_13566ChickenBridge.scm",(void*)f_13566},
{"f_13405ChickenBridge.scm",(void*)f_13405},
{"f_13557ChickenBridge.scm",(void*)f_13557},
{"f_13408ChickenBridge.scm",(void*)f_13408},
{"f_13550ChickenBridge.scm",(void*)f_13550},
{"f_13540ChickenBridge.scm",(void*)f_13540},
{"f_13414ChickenBridge.scm",(void*)f_13414},
{"f_13530ChickenBridge.scm",(void*)f_13530},
{"f_13520ChickenBridge.scm",(void*)f_13520},
{"f_13420ChickenBridge.scm",(void*)f_13420},
{"f_13483ChickenBridge.scm",(void*)f_13483},
{"f_13497ChickenBridge.scm",(void*)f_13497},
{"f_13513ChickenBridge.scm",(void*)f_13513},
{"f_13509ChickenBridge.scm",(void*)f_13509},
{"f_13505ChickenBridge.scm",(void*)f_13505},
{"f_13501ChickenBridge.scm",(void*)f_13501},
{"f_13491ChickenBridge.scm",(void*)f_13491},
{"f_13487ChickenBridge.scm",(void*)f_13487},
{"f_13423ChickenBridge.scm",(void*)f_13423},
{"f_13426ChickenBridge.scm",(void*)f_13426},
{"f_13467ChickenBridge.scm",(void*)f_13467},
{"f_13432ChickenBridge.scm",(void*)f_13432},
{"f_13445ChickenBridge.scm",(void*)f_13445},
{"f_13435ChickenBridge.scm",(void*)f_13435},
{"f_13438ChickenBridge.scm",(void*)f_13438},
{"f_13379ChickenBridge.scm",(void*)f_13379},
{"f_13320ChickenBridge.scm",(void*)f_13320},
{"f_13311ChickenBridge.scm",(void*)f_13311},
{"f_13194ChickenBridge.scm",(void*)f_13194},
{"f_13185ChickenBridge.scm",(void*)f_13185},
{"f_13176ChickenBridge.scm",(void*)f_13176},
{"f_13167ChickenBridge.scm",(void*)f_13167},
{"f_13158ChickenBridge.scm",(void*)f_13158},
{"f_13140ChickenBridge.scm",(void*)f_13140},
{"f_13131ChickenBridge.scm",(void*)f_13131},
{"f_13122ChickenBridge.scm",(void*)f_13122},
{"f_13104ChickenBridge.scm",(void*)f_13104},
{"f_13095ChickenBridge.scm",(void*)f_13095},
{"f_13086ChickenBridge.scm",(void*)f_13086},
{"f_13071ChickenBridge.scm",(void*)f_13071},
{"f_13026ChickenBridge.scm",(void*)f_13026},
{"f_13008ChickenBridge.scm",(void*)f_13008},
{"f_12999ChickenBridge.scm",(void*)f_12999},
{"f_12972ChickenBridge.scm",(void*)f_12972},
{"f_12954ChickenBridge.scm",(void*)f_12954},
{"f_12936ChickenBridge.scm",(void*)f_12936},
{"f_12927ChickenBridge.scm",(void*)f_12927},
{"f_12915ChickenBridge.scm",(void*)f_12915},
{"f_12577ChickenBridge.scm",(void*)f_12577},
{"f_12417ChickenBridge.scm",(void*)f_12417},
{"f_12452ChickenBridge.scm",(void*)f_12452},
{"f_12462ChickenBridge.scm",(void*)f_12462},
{"f_12466ChickenBridge.scm",(void*)f_12466},
{"f_12469ChickenBridge.scm",(void*)f_12469},
{"f_12530ChickenBridge.scm",(void*)f_12530},
{"f_12521ChickenBridge.scm",(void*)f_12521},
{"f_12472ChickenBridge.scm",(void*)f_12472},
{"f_12491ChickenBridge.scm",(void*)f_12491},
{"f_12498ChickenBridge.scm",(void*)f_12498},
{"f_12475ChickenBridge.scm",(void*)f_12475},
{"f_12481ChickenBridge.scm",(void*)f_12481},
{"f_12450ChickenBridge.scm",(void*)f_12450},
{"f_12425ChickenBridge.scm",(void*)f_12425},
{"f_12424ChickenBridge.scm",(void*)f_12424},
{"f_12585ChickenBridge.scm",(void*)f_12585},
{"f_12163ChickenBridge.scm",(void*)f_12163},
{"f_12185ChickenBridge.scm",(void*)f_12185},
{"f_12200ChickenBridge.scm",(void*)f_12200},
{"f_12203ChickenBridge.scm",(void*)f_12203},
{"f_12379ChickenBridge.scm",(void*)f_12379},
{"f_12373ChickenBridge.scm",(void*)f_12373},
{"f_12206ChickenBridge.scm",(void*)f_12206},
{"f_12355ChickenBridge.scm",(void*)f_12355},
{"f_12209ChickenBridge.scm",(void*)f_12209},
{"f_12212ChickenBridge.scm",(void*)f_12212},
{"f_12348ChickenBridge.scm",(void*)f_12348},
{"f_12336ChickenBridge.scm",(void*)f_12336},
{"f_12232ChickenBridge.scm",(void*)f_12232},
{"f_12239ChickenBridge.scm",(void*)f_12239},
{"f_12309ChickenBridge.scm",(void*)f_12309},
{"f_12295ChickenBridge.scm",(void*)f_12295},
{"f_12303ChickenBridge.scm",(void*)f_12303},
{"f_12242ChickenBridge.scm",(void*)f_12242},
{"f_12281ChickenBridge.scm",(void*)f_12281},
{"f_12245ChickenBridge.scm",(void*)f_12245},
{"f_12274ChickenBridge.scm",(void*)f_12274},
{"f_12251ChickenBridge.scm",(void*)f_12251},
{"f_12254ChickenBridge.scm",(void*)f_12254},
{"f_12258ChickenBridge.scm",(void*)f_12258},
{"f_12219ChickenBridge.scm",(void*)f_12219},
{"f_12222ChickenBridge.scm",(void*)f_12222},
{"f_12032ChickenBridge.scm",(void*)f_12032},
{"f_12041ChickenBridge.scm",(void*)f_12041},
{"f_11989ChickenBridge.scm",(void*)f_11989},
{"f_11995ChickenBridge.scm",(void*)f_11995},
{"f_12058ChickenBridge.scm",(void*)f_12058},
{"f_12144ChickenBridge.scm",(void*)f_12144},
{"f_12131ChickenBridge.scm",(void*)f_12131},
{"f_12139ChickenBridge.scm",(void*)f_12139},
{"f_12061ChickenBridge.scm",(void*)f_12061},
{"f_12065ChickenBridge.scm",(void*)f_12065},
{"f_12108ChickenBridge.scm",(void*)f_12108},
{"f_12070ChickenBridge.scm",(void*)f_12070},
{"f_12036ChickenBridge.scm",(void*)f_12036},
{"f_11931ChickenBridge.scm",(void*)f_11931},
{"f_11938ChickenBridge.scm",(void*)f_11938},
{"f_11969ChickenBridge.scm",(void*)f_11969},
{"f_11965ChickenBridge.scm",(void*)f_11965},
{"f_11957ChickenBridge.scm",(void*)f_11957},
{"f_11840ChickenBridge.scm",(void*)f_11840},
{"f_11847ChickenBridge.scm",(void*)f_11847},
{"f_11915ChickenBridge.scm",(void*)f_11915},
{"f_11858ChickenBridge.scm",(void*)f_11858},
{"f_11885ChickenBridge.scm",(void*)f_11885},
{"f_11869ChickenBridge.scm",(void*)f_11869},
{"f_11774ChickenBridge.scm",(void*)f_11774},
{"f_11785ChickenBridge.scm",(void*)f_11785},
{"f_11788ChickenBridge.scm",(void*)f_11788},
{"f_11795ChickenBridge.scm",(void*)f_11795},
{"f_11768ChickenBridge.scm",(void*)f_11768},
{"f_11222ChickenBridge.scm",(void*)f_11222},
{"f_11253ChickenBridge.scm",(void*)f_11253},
{"f_11717ChickenBridge.scm",(void*)f_11717},
{"f_11723ChickenBridge.scm",(void*)f_11723},
{"f_11264ChickenBridge.scm",(void*)f_11264},
{"f_11149ChickenBridge.scm",(void*)f_11149},
{"f_11174ChickenBridge.scm",(void*)f_11174},
{"f_11109ChickenBridge.scm",(void*)f_11109},
{"f_11122ChickenBridge.scm",(void*)f_11122},
{"f_11163ChickenBridge.scm",(void*)f_11163},
{"f_11268ChickenBridge.scm",(void*)f_11268},
{"f_11705ChickenBridge.scm",(void*)f_11705},
{"f_11701ChickenBridge.scm",(void*)f_11701},
{"f_11697ChickenBridge.scm",(void*)f_11697},
{"f_11271ChickenBridge.scm",(void*)f_11271},
{"f_11491ChickenBridge.scm",(void*)f_11491},
{"f_11600ChickenBridge.scm",(void*)f_11600},
{"f_11665ChickenBridge.scm",(void*)f_11665},
{"f_11607ChickenBridge.scm",(void*)f_11607},
{"f_11611ChickenBridge.scm",(void*)f_11611},
{"f_11615ChickenBridge.scm",(void*)f_11615},
{"f_11657ChickenBridge.scm",(void*)f_11657},
{"f_11653ChickenBridge.scm",(void*)f_11653},
{"f_11631ChickenBridge.scm",(void*)f_11631},
{"f_11494ChickenBridge.scm",(void*)f_11494},
{"f_11497ChickenBridge.scm",(void*)f_11497},
{"f_11396ChickenBridge.scm",(void*)f_11396},
{"f_11479ChickenBridge.scm",(void*)f_11479},
{"f_11446ChickenBridge.scm",(void*)f_11446},
{"f_11472ChickenBridge.scm",(void*)f_11472},
{"f_11454ChickenBridge.scm",(void*)f_11454},
{"f_11402ChickenBridge.scm",(void*)f_11402},
{"f_11442ChickenBridge.scm",(void*)f_11442},
{"f_11384ChickenBridge.scm",(void*)f_11384},
{"f_11355ChickenBridge.scm",(void*)f_11355},
{"f_11377ChickenBridge.scm",(void*)f_11377},
{"f_11363ChickenBridge.scm",(void*)f_11363},
{"f_11317ChickenBridge.scm",(void*)f_11317},
{"f_11274ChickenBridge.scm",(void*)f_11274},
{"f_11285ChickenBridge.scm",(void*)f_11285},
{"f_11289ChickenBridge.scm",(void*)f_11289},
{"f_11293ChickenBridge.scm",(void*)f_11293},
{"f_11297ChickenBridge.scm",(void*)f_11297},
{"f_11281ChickenBridge.scm",(void*)f_11281},
{"f_11241ChickenBridge.scm",(void*)f_11241},
{"f_11236ChickenBridge.scm",(void*)f_11236},
{"f_11231ChickenBridge.scm",(void*)f_11231},
{"f_11063ChickenBridge.scm",(void*)f_11063},
{"f_11074ChickenBridge.scm",(void*)f_11074},
{"f_11089ChickenBridge.scm",(void*)f_11089},
{"f_11025ChickenBridge.scm",(void*)f_11025},
{"f_11036ChickenBridge.scm",(void*)f_11036},
{"f_11051ChickenBridge.scm",(void*)f_11051},
{"f_10958ChickenBridge.scm",(void*)f_10958},
{"f_10978ChickenBridge.scm",(void*)f_10978},
{"f_10988ChickenBridge.scm",(void*)f_10988},
{"f_11001ChickenBridge.scm",(void*)f_11001},
{"f_10969ChickenBridge.scm",(void*)f_10969},
{"f_10976ChickenBridge.scm",(void*)f_10976},
{"f_10765ChickenBridge.scm",(void*)f_10765},
{"f_10825ChickenBridge.scm",(void*)f_10825},
{"f_10835ChickenBridge.scm",(void*)f_10835},
{"f_10949ChickenBridge.scm",(void*)f_10949},
{"f_10914ChickenBridge.scm",(void*)f_10914},
{"f_10906ChickenBridge.scm",(void*)f_10906},
{"f_10877ChickenBridge.scm",(void*)f_10877},
{"f_10855ChickenBridge.scm",(void*)f_10855},
{"f_10858ChickenBridge.scm",(void*)f_10858},
{"f_10846ChickenBridge.scm",(void*)f_10846},
{"f_10772ChickenBridge.scm",(void*)f_10772},
{"f_10823ChickenBridge.scm",(void*)f_10823},
{"f_10815ChickenBridge.scm",(void*)f_10815},
{"f_10775ChickenBridge.scm",(void*)f_10775},
{"f_10786ChickenBridge.scm",(void*)f_10786},
{"f_10790ChickenBridge.scm",(void*)f_10790},
{"f_10782ChickenBridge.scm",(void*)f_10782},
{"f_10623ChickenBridge.scm",(void*)f_10623},
{"f_10671ChickenBridge.scm",(void*)f_10671},
{"f_10681ChickenBridge.scm",(void*)f_10681},
{"f_10692ChickenBridge.scm",(void*)f_10692},
{"f_10729ChickenBridge.scm",(void*)f_10729},
{"f_10704ChickenBridge.scm",(void*)f_10704},
{"f_10695ChickenBridge.scm",(void*)f_10695},
{"f_10633ChickenBridge.scm",(void*)f_10633},
{"f_10669ChickenBridge.scm",(void*)f_10669},
{"f_10640ChickenBridge.scm",(void*)f_10640},
{"f_10272ChickenBridge.scm",(void*)f_10272},
{"f_10279ChickenBridge.scm",(void*)f_10279},
{"f_10513ChickenBridge.scm",(void*)f_10513},
{"f_10523ChickenBridge.scm",(void*)f_10523},
{"f_10534ChickenBridge.scm",(void*)f_10534},
{"f_10546ChickenBridge.scm",(void*)f_10546},
{"f_10549ChickenBridge.scm",(void*)f_10549},
{"f_10537ChickenBridge.scm",(void*)f_10537},
{"f_10285ChickenBridge.scm",(void*)f_10285},
{"f_10511ChickenBridge.scm",(void*)f_10511},
{"f_10507ChickenBridge.scm",(void*)f_10507},
{"f_10453ChickenBridge.scm",(void*)f_10453},
{"f_10418ChickenBridge.scm",(void*)f_10418},
{"f_10434ChickenBridge.scm",(void*)f_10434},
{"f_10389ChickenBridge.scm",(void*)f_10389},
{"f_10313ChickenBridge.scm",(void*)f_10313},
{"f_10316ChickenBridge.scm",(void*)f_10316},
{"f_10380ChickenBridge.scm",(void*)f_10380},
{"f_10376ChickenBridge.scm",(void*)f_10376},
{"f_10296ChickenBridge.scm",(void*)f_10296},
{"f_10307ChickenBridge.scm",(void*)f_10307},
{"f_10303ChickenBridge.scm",(void*)f_10303},
{"f_10225ChickenBridge.scm",(void*)f_10225},
{"f_10258ChickenBridge.scm",(void*)f_10258},
{"f_10240ChickenBridge.scm",(void*)f_10240},
{"f_10252ChickenBridge.scm",(void*)f_10252},
{"f_9843ChickenBridge.scm",(void*)f_9843},
{"f_10052ChickenBridge.scm",(void*)f_10052},
{"f_10062ChickenBridge.scm",(void*)f_10062},
{"f_10073ChickenBridge.scm",(void*)f_10073},
{"f_10193ChickenBridge.scm",(void*)f_10193},
{"f_10172ChickenBridge.scm",(void*)f_10172},
{"f_10151ChickenBridge.scm",(void*)f_10151},
{"f_10130ChickenBridge.scm",(void*)f_10130},
{"f_10109ChickenBridge.scm",(void*)f_10109},
{"f_10088ChickenBridge.scm",(void*)f_10088},
{"f_10076ChickenBridge.scm",(void*)f_10076},
{"f_9853ChickenBridge.scm",(void*)f_9853},
{"f_9856ChickenBridge.scm",(void*)f_9856},
{"f_10019ChickenBridge.scm",(void*)f_10019},
{"f_9859ChickenBridge.scm",(void*)f_9859},
{"f_10010ChickenBridge.scm",(void*)f_10010},
{"f_9990ChickenBridge.scm",(void*)f_9990},
{"f_9862ChickenBridge.scm",(void*)f_9862},
{"f_9955ChickenBridge.scm",(void*)f_9955},
{"f_9972ChickenBridge.scm",(void*)f_9972},
{"f_9865ChickenBridge.scm",(void*)f_9865},
{"f_9904ChickenBridge.scm",(void*)f_9904},
{"f_9938ChickenBridge.scm",(void*)f_9938},
{"f_9922ChickenBridge.scm",(void*)f_9922},
{"f_9907ChickenBridge.scm",(void*)f_9907},
{"f_9872ChickenBridge.scm",(void*)f_9872},
{"f_9883ChickenBridge.scm",(void*)f_9883},
{"f_9887ChickenBridge.scm",(void*)f_9887},
{"f_9879ChickenBridge.scm",(void*)f_9879},
{"f_9761ChickenBridge.scm",(void*)f_9761},
{"f_9765ChickenBridge.scm",(void*)f_9765},
{"f_9783ChickenBridge.scm",(void*)f_9783},
{"f_9601ChickenBridge.scm",(void*)f_9601},
{"f_9609ChickenBridge.scm",(void*)f_9609},
{"f_9619ChickenBridge.scm",(void*)f_9619},
{"f_9657ChickenBridge.scm",(void*)f_9657},
{"f_9660ChickenBridge.scm",(void*)f_9660},
{"f_9663ChickenBridge.scm",(void*)f_9663},
{"f_9738ChickenBridge.scm",(void*)f_9738},
{"f_9748ChickenBridge.scm",(void*)f_9748},
{"f_9666ChickenBridge.scm",(void*)f_9666},
{"f_9669ChickenBridge.scm",(void*)f_9669},
{"f_9672ChickenBridge.scm",(void*)f_9672},
{"f_9692ChickenBridge.scm",(void*)f_9692},
{"f_9702ChickenBridge.scm",(void*)f_9702},
{"f_9705ChickenBridge.scm",(void*)f_9705},
{"f_9708ChickenBridge.scm",(void*)f_9708},
{"f_9675ChickenBridge.scm",(void*)f_9675},
{"f_9678ChickenBridge.scm",(void*)f_9678},
{"f_9595ChickenBridge.scm",(void*)f_9595},
{"f_9589ChickenBridge.scm",(void*)f_9589},
{"f_9583ChickenBridge.scm",(void*)f_9583},
{"f_9512ChickenBridge.scm",(void*)f_9512},
{"f_9553ChickenBridge.scm",(void*)f_9553},
{"f_9557ChickenBridge.scm",(void*)f_9557},
{"f_9561ChickenBridge.scm",(void*)f_9561},
{"f_9565ChickenBridge.scm",(void*)f_9565},
{"f_9569ChickenBridge.scm",(void*)f_9569},
{"f_9573ChickenBridge.scm",(void*)f_9573},
{"f_9577ChickenBridge.scm",(void*)f_9577},
{"f_9581ChickenBridge.scm",(void*)f_9581},
{"f_9514ChickenBridge.scm",(void*)f_9514},
{"f_9520ChickenBridge.scm",(void*)f_9520},
{"f_9542ChickenBridge.scm",(void*)f_9542},
{"f_9531ChickenBridge.scm",(void*)f_9531},
{"f_9361ChickenBridge.scm",(void*)f_9361},
{"f_9376ChickenBridge.scm",(void*)f_9376},
{"f_9389ChickenBridge.scm",(void*)f_9389},
{"f_9349ChickenBridge.scm",(void*)f_9349},
{"f_9337ChickenBridge.scm",(void*)f_9337},
{"f_9325ChickenBridge.scm",(void*)f_9325},
{"f_9319ChickenBridge.scm",(void*)f_9319},
{"f_9313ChickenBridge.scm",(void*)f_9313},
{"f_9301ChickenBridge.scm",(void*)f_9301},
{"f_9289ChickenBridge.scm",(void*)f_9289},
{"f_9277ChickenBridge.scm",(void*)f_9277},
{"f_9265ChickenBridge.scm",(void*)f_9265},
{"f_9259ChickenBridge.scm",(void*)f_9259},
{"f_8950ChickenBridge.scm",(void*)f_8950},
{"f_9203ChickenBridge.scm",(void*)f_9203},
{"f_9236ChickenBridge.scm",(void*)f_9236},
{"f_9232ChickenBridge.scm",(void*)f_9232},
{"f_9221ChickenBridge.scm",(void*)f_9221},
{"f_9217ChickenBridge.scm",(void*)f_9217},
{"f_9111ChickenBridge.scm",(void*)f_9111},
{"f_9114ChickenBridge.scm",(void*)f_9114},
{"f_9117ChickenBridge.scm",(void*)f_9117},
{"f_9197ChickenBridge.scm",(void*)f_9197},
{"f_9022ChickenBridge.scm",(void*)f_9022},
{"f_8963ChickenBridge.scm",(void*)f_8963},
{"f_9120ChickenBridge.scm",(void*)f_9120},
{"f_9127ChickenBridge.scm",(void*)f_9127},
{"f_9187ChickenBridge.scm",(void*)f_9187},
{"f_9173ChickenBridge.scm",(void*)f_9173},
{"f_9139ChickenBridge.scm",(void*)f_9139},
{"f_9165ChickenBridge.scm",(void*)f_9165},
{"f_9100ChickenBridge.scm",(void*)f_9100},
{"f_9147ChickenBridge.scm",(void*)f_9147},
{"f_9143ChickenBridge.scm",(void*)f_9143},
{"f_8906ChickenBridge.scm",(void*)f_8906},
{"f_8940ChickenBridge.scm",(void*)f_8940},
{"f_8944ChickenBridge.scm",(void*)f_8944},
{"f_8948ChickenBridge.scm",(void*)f_8948},
{"f_8914ChickenBridge.scm",(void*)f_8914},
{"f_8932ChickenBridge.scm",(void*)f_8932},
{"f_8923ChickenBridge.scm",(void*)f_8923},
{"f_8931ChickenBridge.scm",(void*)f_8931},
{"f_8918ChickenBridge.scm",(void*)f_8918},
{"f_8862ChickenBridge.scm",(void*)f_8862},
{"f_8896ChickenBridge.scm",(void*)f_8896},
{"f_8900ChickenBridge.scm",(void*)f_8900},
{"f_8904ChickenBridge.scm",(void*)f_8904},
{"f_8870ChickenBridge.scm",(void*)f_8870},
{"f_8888ChickenBridge.scm",(void*)f_8888},
{"f_8879ChickenBridge.scm",(void*)f_8879},
{"f_8887ChickenBridge.scm",(void*)f_8887},
{"f_8874ChickenBridge.scm",(void*)f_8874},
{"f_8788ChickenBridge.scm",(void*)f_8788},
{"f_8792ChickenBridge.scm",(void*)f_8792},
{"f_8799ChickenBridge.scm",(void*)f_8799},
{"f_8801ChickenBridge.scm",(void*)f_8801},
{"f_8815ChickenBridge.scm",(void*)f_8815},
{"f_8828ChickenBridge.scm",(void*)f_8828},
{"f_8818ChickenBridge.scm",(void*)f_8818},
{"f_8702ChickenBridge.scm",(void*)f_8702},
{"f_8584ChickenBridge.scm",(void*)f_8584},
{"f_8590ChickenBridge.scm",(void*)f_8590},
{"f_8614ChickenBridge.scm",(void*)f_8614},
{"f_8600ChickenBridge.scm",(void*)f_8600},
{"f_8485ChickenBridge.scm",(void*)f_8485},
{"f_8489ChickenBridge.scm",(void*)f_8489},
{"f_8514ChickenBridge.scm",(void*)f_8514},
{"f_8531ChickenBridge.scm",(void*)f_8531},
{"f_8535ChickenBridge.scm",(void*)f_8535},
{"f_8491ChickenBridge.scm",(void*)f_8491},
{"f_8508ChickenBridge.scm",(void*)f_8508},
{"f_8323ChickenBridge.scm",(void*)f_8323},
{"f_8332ChickenBridge.scm",(void*)f_8332},
{"f_8370ChickenBridge.scm",(void*)f_8370},
{"f_8348ChickenBridge.scm",(void*)f_8348},
{"f_8233ChickenBridge.scm",(void*)f_8233},
{"f_8185ChickenBridge.scm",(void*)f_8185},
{"f_8219ChickenBridge.scm",(void*)f_8219},
{"f_8162ChickenBridge.scm",(void*)f_8162},
{"f_8156ChickenBridge.scm",(void*)f_8156},
{"f_8141ChickenBridge.scm",(void*)f_8141},
{"f_8127ChickenBridge.scm",(void*)f_8127},
{"f_8117ChickenBridge.scm",(void*)f_8117},
{"f_8107ChickenBridge.scm",(void*)f_8107},
{"f_8097ChickenBridge.scm",(void*)f_8097},
{"f_8087ChickenBridge.scm",(void*)f_8087},
{"f_8077ChickenBridge.scm",(void*)f_8077},
{"f_7185ChickenBridge.scm",(void*)f_7185},
{"f_8046ChickenBridge.scm",(void*)f_8046},
{"f_8056ChickenBridge.scm",(void*)f_8056},
{"f_8040ChickenBridge.scm",(void*)f_8040},
{"f_7143ChickenBridge.scm",(void*)f_7143},
{"f_8034ChickenBridge.scm",(void*)f_8034},
{"f_7781ChickenBridge.scm",(void*)f_7781},
{"f_7614ChickenBridge.scm",(void*)f_7614},
{"f_7623ChickenBridge.scm",(void*)f_7623},
{"f_7543ChickenBridge.scm",(void*)f_7543},
{"f_7533ChickenBridge.scm",(void*)f_7533},
{"f_7523ChickenBridge.scm",(void*)f_7523},
{"f_7503ChickenBridge.scm",(void*)f_7503},
{"f_7472ChickenBridge.scm",(void*)f_7472},
{"f_7469ChickenBridge.scm",(void*)f_7469},
{"f_7462ChickenBridge.scm",(void*)f_7462},
{"f_7459ChickenBridge.scm",(void*)f_7459},
{"f_7452ChickenBridge.scm",(void*)f_7452},
{"f_7434ChickenBridge.scm",(void*)f_7434},
{"f_7423ChickenBridge.scm",(void*)f_7423},
{"f_7420ChickenBridge.scm",(void*)f_7420},
{"f_7417ChickenBridge.scm",(void*)f_7417},
{"f_7414ChickenBridge.scm",(void*)f_7414},
{"f_7385ChickenBridge.scm",(void*)f_7385},
{"f_7378ChickenBridge.scm",(void*)f_7378},
{"f_7375ChickenBridge.scm",(void*)f_7375},
{"f_7354ChickenBridge.scm",(void*)f_7354},
{"f_7335ChickenBridge.scm",(void*)f_7335},
{"f_7316ChickenBridge.scm",(void*)f_7316},
{"f_7302ChickenBridge.scm",(void*)f_7302},
{"f_7295ChickenBridge.scm",(void*)f_7295},
{"f_7280ChickenBridge.scm",(void*)f_7280},
{"f_7269ChickenBridge.scm",(void*)f_7269},
{"f_7262ChickenBridge.scm",(void*)f_7262},
{"f_7208ChickenBridge.scm",(void*)f_7208},
{"f_7152ChickenBridge.scm",(void*)f_7152},
{"f_7157ChickenBridge.scm",(void*)f_7157},
{"f_7031ChickenBridge.scm",(void*)f_7031},
{"f_7025ChickenBridge.scm",(void*)f_7025},
{"f_7018ChickenBridge.scm",(void*)f_7018},
{"f_7012ChickenBridge.scm",(void*)f_7012},
{"f_7002ChickenBridge.scm",(void*)f_7002},
{"f_6982ChickenBridge.scm",(void*)f_6982},
{"f_6994ChickenBridge.scm",(void*)f_6994},
{"f_6976ChickenBridge.scm",(void*)f_6976},
{"f_6970ChickenBridge.scm",(void*)f_6970},
{"f_6964ChickenBridge.scm",(void*)f_6964},
{"f_6958ChickenBridge.scm",(void*)f_6958},
{"f_6952ChickenBridge.scm",(void*)f_6952},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
